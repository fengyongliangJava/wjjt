2019-05-24 08:32:09 -Starting BootdoApplication on PC-201905091110 with PID 13596 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-24 08:32:09 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-24 08:32:09 -The following profiles are active: dev
2019-05-24 08:32:09 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Fri May 24 08:32:09 CST 2019]; root of context hierarchy
2019-05-24 08:32:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-24 08:32:17 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$afb22388] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 08:32:17 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a20b522f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 08:32:19 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 08:32:19 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 08:32:19 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 08:32:19 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-24 08:32:19 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-24 08:32:19 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 08:32:19 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 08:32:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 08:32:20 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 08:32:21 -Tomcat initialized with port(s): 8081 (http)
2019-05-24 08:32:21 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-24 08:32:21 -Starting service [Tomcat]
2019-05-24 08:32:21 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-24 08:32:21 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-24 08:32:22 -Initializing Spring embedded WebApplicationContext
2019-05-24 08:32:22 -Root WebApplicationContext: initialization completed in 12626 ms
2019-05-24 08:32:22 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-24 08:32:22 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-24 08:32:22 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-24 08:32:22 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-24 08:32:22 -Filter xssFilter was not registered (disabled)
2019-05-24 08:32:22 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-24 08:32:22 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-24 08:32:22 -Servlet statViewServlet mapped to [/druid/*]
2019-05-24 08:32:22 -Servlet dispatcherServlet mapped to [/]
2019-05-24 08:32:27 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Fri May 24 08:32:09 CST 2019]; root of context hierarchy
2019-05-24 08:32:28 -Using default implementation for ThreadExecutor
2019-05-24 08:32:28 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-24 08:32:28 -Quartz Scheduler v.2.2.1 created.
2019-05-24 08:32:28 -RAMJobStore initialized.
2019-05-24 08:32:28 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-24 08:32:28 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-24 08:32:28 -Quartz scheduler version: 2.2.1
2019-05-24 08:32:28 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@22865072
2019-05-24 08:32:29 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-24 08:32:29 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-24 08:32:32 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-24 08:32:32 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 08:32:32 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-24 08:32:32 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 08:32:32 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-24 08:32:32 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-24 08:32:32 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-24 08:32:32 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 08:32:32 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-24 08:32:32 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 08:32:32 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 08:32:32 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-24 08:32:32 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-24 08:32:32 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 08:32:32 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 08:32:32 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-24 08:32:32 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-24 08:32:32 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 08:32:32 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-24 08:32:32 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 08:32:32 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 08:32:32 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-24 08:32:32 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 08:32:32 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-24 08:32:32 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-24 08:32:32 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-24 08:32:32 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-24 08:32:32 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-24 08:32:32 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-24 08:32:32 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-24 08:32:32 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-24 08:32:32 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-24 08:32:32 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-24 08:32:32 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-24 08:32:32 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-24 08:32:32 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-24 08:32:32 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-24 08:32:32 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-24 08:32:32 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-24 08:32:32 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 08:32:32 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-24 08:32:32 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 08:32:32 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-24 08:32:32 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-24 08:32:32 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-24 08:32:32 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-24 08:32:32 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-24 08:32:32 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-24 08:32:32 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-24 08:32:32 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-24 08:32:32 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-24 08:32:32 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-24 08:32:32 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-24 08:32:32 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-24 08:32:32 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 08:32:32 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 08:32:32 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-24 08:32:32 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-24 08:32:32 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-24 08:32:32 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 08:32:32 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-24 08:32:32 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-24 08:32:32 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-24 08:32:32 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-24 08:32:32 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-24 08:32:32 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-24 08:32:32 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-24 08:32:32 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-24 08:32:32 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-24 08:32:32 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-24 08:32:32 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-24 08:32:32 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-24 08:32:32 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-24 08:32:32 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-24 08:32:32 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 08:32:32 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-24 08:32:32 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-24 08:32:32 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 08:32:32 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 08:32:32 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-24 08:32:32 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-24 08:32:32 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-24 08:32:32 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 08:32:32 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 08:32:32 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-24 08:32:32 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 08:32:32 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-24 08:32:32 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-24 08:32:32 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-24 08:32:32 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-24 08:32:32 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-24 08:32:32 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-24 08:32:32 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-24 08:32:32 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-24 08:32:32 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 08:32:32 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-24 08:32:32 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-24 08:32:32 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-24 08:32:32 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-24 08:32:32 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-24 08:32:32 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-24 08:32:32 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-24 08:32:32 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-24 08:32:32 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-24 08:32:32 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-24 08:32:32 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-24 08:32:32 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-24 08:32:32 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-24 08:32:32 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-24 08:32:32 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-24 08:32:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-24 08:32:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-24 08:32:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-24 08:32:32 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-24 08:32:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-24 08:32:32 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-24 08:32:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-24 08:32:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-24 08:32:32 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 08:32:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-24 08:32:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-24 08:32:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-24 08:32:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-24 08:32:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-24 08:32:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-24 08:32:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-24 08:32:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-24 08:32:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-24 08:32:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-24 08:32:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-24 08:32:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-24 08:32:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-24 08:32:32 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-24 08:32:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-24 08:32:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-24 08:32:32 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-24 08:32:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-24 08:32:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 08:32:32 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-24 08:32:32 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 08:32:32 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 08:32:32 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-24 08:32:32 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-24 08:32:32 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-24 08:32:32 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-24 08:32:32 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-24 08:32:32 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-24 08:32:32 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 08:32:32 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-24 08:32:32 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-24 08:32:32 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-24 08:32:32 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-24 08:32:32 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 08:32:32 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 08:32:32 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 08:32:32 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 08:32:32 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-24 08:32:32 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 08:32:32 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-24 08:32:32 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-24 08:32:32 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 08:32:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 08:32:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-24 08:32:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-24 08:32:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-24 08:32:33 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-24 08:32:33 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-24 08:32:33 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-24 08:32:33 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 08:32:34 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Fri May 24 08:32:09 CST 2019]; root of context hierarchy
2019-05-24 08:32:34 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 08:32:34 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 08:32:34 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 08:32:34 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-24 08:32:35 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-24 08:32:39 -Registering beans for JMX exposure on startup
2019-05-24 08:32:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-24 08:32:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-24 08:32:39 -Starting beans in phase 2147483647
2019-05-24 08:32:39 -Context refreshed
2019-05-24 08:32:39 -Found 1 custom documentation plugin(s)
2019-05-24 08:32:39 -Scanning for api listing references
2019-05-24 08:32:39 -Generating unique operation named: getCountDUsingPOST_1
2019-05-24 08:32:39 -Generating unique operation named: removeUsingPOST_1
2019-05-24 08:32:39 -Generating unique operation named: addUsingGET_1
2019-05-24 08:32:39 -Generating unique operation named: editUsingGET_1
2019-05-24 08:32:39 -Generating unique operation named: listUsingGET_1
2019-05-24 08:32:39 -Generating unique operation named: removeUsingPOST_2
2019-05-24 08:32:39 -Generating unique operation named: removeUsingPOST_3
2019-05-24 08:32:39 -Generating unique operation named: saveUsingPOST_1
2019-05-24 08:32:39 -Generating unique operation named: updateUsingGET_1
2019-05-24 08:32:39 -Generating unique operation named: updateUsingHEAD_1
2019-05-24 08:32:39 -Generating unique operation named: updateUsingPOST_1
2019-05-24 08:32:39 -Generating unique operation named: updateUsingPUT_1
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPATCH_1
2019-05-24 08:32:40 -Generating unique operation named: updateUsingDELETE_1
2019-05-24 08:32:40 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-24 08:32:40 -Generating unique operation named: updateUsingTRACE_1
2019-05-24 08:32:40 -Generating unique operation named: addUsingGET_2
2019-05-24 08:32:40 -Generating unique operation named: editUsingGET_2
2019-05-24 08:32:40 -Generating unique operation named: listUsingGET_2
2019-05-24 08:32:40 -Generating unique operation named: removeUsingPOST_4
2019-05-24 08:32:40 -Generating unique operation named: removeUsingPOST_5
2019-05-24 08:32:40 -Generating unique operation named: saveUsingPOST_2
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPOST_2
2019-05-24 08:32:40 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-24 08:32:40 -Generating unique operation named: addUsingGET_3
2019-05-24 08:32:40 -Generating unique operation named: editUsingGET_3
2019-05-24 08:32:40 -Generating unique operation named: listUsingGET_3
2019-05-24 08:32:40 -Generating unique operation named: removeUsingPOST_6
2019-05-24 08:32:40 -Generating unique operation named: removeUsingPOST_7
2019-05-24 08:32:40 -Generating unique operation named: saveUsingPOST_3
2019-05-24 08:32:40 -Generating unique operation named: updateUsingGET_2
2019-05-24 08:32:40 -Generating unique operation named: updateUsingHEAD_2
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPOST_3
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPUT_2
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPATCH_2
2019-05-24 08:32:40 -Generating unique operation named: updateUsingDELETE_2
2019-05-24 08:32:40 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-24 08:32:40 -Generating unique operation named: updateUsingTRACE_2
2019-05-24 08:32:40 -Generating unique operation named: addUsingGET_4
2019-05-24 08:32:40 -Generating unique operation named: editUsingGET_4
2019-05-24 08:32:40 -Generating unique operation named: listUsingGET_4
2019-05-24 08:32:40 -Generating unique operation named: removeUsingPOST_8
2019-05-24 08:32:40 -Generating unique operation named: removeUsingPOST_9
2019-05-24 08:32:40 -Generating unique operation named: saveUsingPOST_4
2019-05-24 08:32:40 -Generating unique operation named: updateUsingGET_3
2019-05-24 08:32:40 -Generating unique operation named: updateUsingHEAD_3
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPOST_4
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPUT_3
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPATCH_3
2019-05-24 08:32:40 -Generating unique operation named: updateUsingDELETE_3
2019-05-24 08:32:40 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-24 08:32:40 -Generating unique operation named: updateUsingTRACE_3
2019-05-24 08:32:40 -Generating unique operation named: ElecUsingGET_1
2019-05-24 08:32:40 -Generating unique operation named: addUsingGET_5
2019-05-24 08:32:40 -Generating unique operation named: editUsingGET_5
2019-05-24 08:32:40 -Generating unique operation named: listUsingGET_5
2019-05-24 08:32:40 -Generating unique operation named: removeUsingPOST_10
2019-05-24 08:32:40 -Generating unique operation named: removeUsingPOST_11
2019-05-24 08:32:40 -Generating unique operation named: saveUsingPOST_5
2019-05-24 08:32:40 -Generating unique operation named: updateUsingGET_4
2019-05-24 08:32:40 -Generating unique operation named: updateUsingHEAD_4
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPOST_5
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPUT_4
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPATCH_4
2019-05-24 08:32:40 -Generating unique operation named: updateUsingDELETE_4
2019-05-24 08:32:40 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-24 08:32:40 -Generating unique operation named: updateUsingTRACE_4
2019-05-24 08:32:40 -Generating unique operation named: editUsingGET_6
2019-05-24 08:32:40 -Generating unique operation named: listUsingGET_6
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPOST_6
2019-05-24 08:32:40 -Generating unique operation named: addUsingGET_6
2019-05-24 08:32:40 -Generating unique operation named: editUsingGET_7
2019-05-24 08:32:40 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-24 08:32:40 -Generating unique operation named: listUsingGET_7
2019-05-24 08:32:40 -Generating unique operation named: removeUsingPOST_12
2019-05-24 08:32:40 -Generating unique operation named: removeUsingPOST_13
2019-05-24 08:32:40 -Generating unique operation named: saveUsingPOST_6
2019-05-24 08:32:40 -Generating unique operation named: updateUsingGET_5
2019-05-24 08:32:40 -Generating unique operation named: updateUsingHEAD_5
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPOST_7
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPUT_5
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPATCH_5
2019-05-24 08:32:40 -Generating unique operation named: updateUsingDELETE_5
2019-05-24 08:32:40 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-24 08:32:40 -Generating unique operation named: updateUsingTRACE_5
2019-05-24 08:32:40 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-24 08:32:40 -Generating unique operation named: addUsingGET_7
2019-05-24 08:32:40 -Generating unique operation named: editUsingGET_8
2019-05-24 08:32:40 -Generating unique operation named: listUsingGET_8
2019-05-24 08:32:40 -Generating unique operation named: removeUsingPOST_14
2019-05-24 08:32:40 -Generating unique operation named: removeUsingPOST_15
2019-05-24 08:32:40 -Generating unique operation named: saveUsingPOST_7
2019-05-24 08:32:40 -Generating unique operation named: updateUsingGET_6
2019-05-24 08:32:40 -Generating unique operation named: updateUsingHEAD_6
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPOST_8
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPUT_6
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPATCH_6
2019-05-24 08:32:40 -Generating unique operation named: updateUsingDELETE_6
2019-05-24 08:32:40 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-24 08:32:40 -Generating unique operation named: updateUsingTRACE_6
2019-05-24 08:32:40 -Generating unique operation named: addUsingGET_8
2019-05-24 08:32:40 -Generating unique operation named: editUsingGET_9
2019-05-24 08:32:40 -Generating unique operation named: listUsingGET_9
2019-05-24 08:32:40 -Generating unique operation named: removeUsingPOST_16
2019-05-24 08:32:40 -Generating unique operation named: removeUsingPOST_17
2019-05-24 08:32:40 -Generating unique operation named: saveUsingPOST_8
2019-05-24 08:32:40 -Generating unique operation named: updateUsingGET_7
2019-05-24 08:32:40 -Generating unique operation named: updateUsingHEAD_7
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPOST_9
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPUT_7
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPATCH_7
2019-05-24 08:32:40 -Generating unique operation named: updateUsingDELETE_7
2019-05-24 08:32:40 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-24 08:32:40 -Generating unique operation named: updateUsingTRACE_7
2019-05-24 08:32:40 -Generating unique operation named: addUsingGET_9
2019-05-24 08:32:40 -Generating unique operation named: editUsingGET_10
2019-05-24 08:32:40 -Generating unique operation named: infoUsingGET_1
2019-05-24 08:32:40 -Generating unique operation named: infoUsingHEAD_1
2019-05-24 08:32:40 -Generating unique operation named: infoUsingPOST_1
2019-05-24 08:32:40 -Generating unique operation named: infoUsingPUT_1
2019-05-24 08:32:40 -Generating unique operation named: infoUsingPATCH_1
2019-05-24 08:32:40 -Generating unique operation named: infoUsingDELETE_1
2019-05-24 08:32:40 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-24 08:32:40 -Generating unique operation named: infoUsingTRACE_1
2019-05-24 08:32:40 -Generating unique operation named: listUsingGET_10
2019-05-24 08:32:40 -Generating unique operation named: removeUsingPOST_18
2019-05-24 08:32:40 -Generating unique operation named: removeUsingPOST_19
2019-05-24 08:32:40 -Generating unique operation named: saveUsingPOST_9
2019-05-24 08:32:40 -Generating unique operation named: updateUsingPOST_10
2019-05-24 08:32:40 -Generating unique operation named: listUsingGET_11
2019-05-24 08:32:40 -Generating unique operation named: removeUsingPOST_20
2019-05-24 08:32:41 -Generating unique operation named: welcomeUsingGET_1
2019-05-24 08:32:41 -Generating unique operation named: addUsingGET_10
2019-05-24 08:32:41 -Generating unique operation named: editUsingGET_11
2019-05-24 08:32:41 -Generating unique operation named: listUsingGET_12
2019-05-24 08:32:41 -Generating unique operation named: removeUsingPOST_21
2019-05-24 08:32:41 -Generating unique operation named: saveUsingPOST_10
2019-05-24 08:32:41 -Generating unique operation named: treeUsingGET_1
2019-05-24 08:32:41 -Generating unique operation named: treeUsingGET_2
2019-05-24 08:32:41 -Generating unique operation named: updateUsingPOST_11
2019-05-24 08:32:41 -Generating unique operation named: addUsingGET_11
2019-05-24 08:32:41 -Generating unique operation named: editUsingGET_12
2019-05-24 08:32:41 -Generating unique operation named: listUsingGET_13
2019-05-24 08:32:41 -Generating unique operation named: removeUsingPOST_22
2019-05-24 08:32:41 -Generating unique operation named: removeUsingPOST_23
2019-05-24 08:32:41 -Generating unique operation named: saveUsingPOST_11
2019-05-24 08:32:41 -Generating unique operation named: updateUsingGET_8
2019-05-24 08:32:41 -Generating unique operation named: updateUsingHEAD_8
2019-05-24 08:32:41 -Generating unique operation named: updateUsingPOST_12
2019-05-24 08:32:41 -Generating unique operation named: updateUsingPUT_8
2019-05-24 08:32:41 -Generating unique operation named: updateUsingPATCH_8
2019-05-24 08:32:41 -Generating unique operation named: updateUsingDELETE_8
2019-05-24 08:32:41 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-24 08:32:41 -Generating unique operation named: updateUsingTRACE_8
2019-05-24 08:32:41 -Generating unique operation named: addUsingGET_12
2019-05-24 08:32:41 -Generating unique operation named: editUsingGET_13
2019-05-24 08:32:41 -Generating unique operation named: listUsingGET_14
2019-05-24 08:32:41 -Generating unique operation named: printEditUsingGET_1
2019-05-24 08:32:41 -Generating unique operation named: removeUsingPOST_24
2019-05-24 08:32:41 -Generating unique operation named: removeUsingPOST_25
2019-05-24 08:32:41 -Generating unique operation named: saveUsingPOST_12
2019-05-24 08:32:41 -Generating unique operation named: updateUsingGET_9
2019-05-24 08:32:41 -Generating unique operation named: updateUsingHEAD_9
2019-05-24 08:32:41 -Generating unique operation named: updateUsingPOST_13
2019-05-24 08:32:41 -Generating unique operation named: updateUsingPUT_9
2019-05-24 08:32:41 -Generating unique operation named: updateUsingPATCH_9
2019-05-24 08:32:41 -Generating unique operation named: updateUsingDELETE_9
2019-05-24 08:32:41 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-24 08:32:41 -Generating unique operation named: updateUsingTRACE_9
2019-05-24 08:32:41 -Generating unique operation named: addUsingGET_13
2019-05-24 08:32:41 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-24 08:32:41 -Generating unique operation named: editUsingGET_14
2019-05-24 08:32:41 -Generating unique operation named: listUsingGET_15
2019-05-24 08:32:41 -Generating unique operation named: saveUsingPOST_13
2019-05-24 08:32:41 -Generating unique operation named: saveUsingPOST_14
2019-05-24 08:32:41 -Generating unique operation named: updateUsingPOST_14
2019-05-24 08:32:41 -Generating unique operation named: listUsingGET_16
2019-05-24 08:32:41 -Generating unique operation named: listUsingHEAD_1
2019-05-24 08:32:41 -Generating unique operation named: listUsingPOST_1
2019-05-24 08:32:41 -Generating unique operation named: listUsingPUT_1
2019-05-24 08:32:41 -Generating unique operation named: listUsingPATCH_1
2019-05-24 08:32:41 -Generating unique operation named: listUsingDELETE_1
2019-05-24 08:32:41 -Generating unique operation named: listUsingOPTIONS_1
2019-05-24 08:32:41 -Generating unique operation named: listUsingTRACE_1
2019-05-24 08:32:41 -Generating unique operation named: countDDUsingGET_1
2019-05-24 08:32:41 -Generating unique operation named: exportDDUsingGET_1
2019-05-24 08:32:41 -Generating unique operation named: addUsingGET_14
2019-05-24 08:32:41 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-24 08:32:41 -Generating unique operation named: editUsingGET_15
2019-05-24 08:32:41 -Generating unique operation named: listUsingGET_17
2019-05-24 08:32:41 -Generating unique operation named: removeUsingPOST_26
2019-05-24 08:32:41 -Generating unique operation named: saveUsingPOST_15
2019-05-24 08:32:41 -Generating unique operation named: treeUsingGET_3
2019-05-24 08:32:41 -Generating unique operation named: treeViewUsingGET_1
2019-05-24 08:32:41 -Generating unique operation named: updateUsingPOST_15
2019-05-24 08:32:41 -Generating unique operation named: addUsingGET_15
2019-05-24 08:32:41 -Generating unique operation named: editUsingGET_16
2019-05-24 08:32:41 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-24 08:32:41 -Generating unique operation named: listUsingGET_18
2019-05-24 08:32:41 -Generating unique operation named: removeUsingPOST_27
2019-05-24 08:32:41 -Generating unique operation named: removeUsingPOST_28
2019-05-24 08:32:41 -Generating unique operation named: saveUsingPOST_16
2019-05-24 08:32:41 -Generating unique operation named: updateUsingGET_10
2019-05-24 08:32:41 -Generating unique operation named: updateUsingHEAD_10
2019-05-24 08:32:41 -Generating unique operation named: updateUsingPOST_16
2019-05-24 08:32:41 -Generating unique operation named: updateUsingPUT_10
2019-05-24 08:32:41 -Generating unique operation named: updateUsingPATCH_10
2019-05-24 08:32:41 -Generating unique operation named: updateUsingDELETE_10
2019-05-24 08:32:41 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-24 08:32:41 -Generating unique operation named: updateUsingTRACE_10
2019-05-24 08:32:41 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-24 08:32:41 -Generating unique operation named: addUsingGET_16
2019-05-24 08:32:41 -Generating unique operation named: editUsingGET_17
2019-05-24 08:32:41 -Generating unique operation named: listUsingGET_19
2019-05-24 08:32:41 -Generating unique operation named: removeUsingPOST_29
2019-05-24 08:32:41 -Generating unique operation named: removeUsingPOST_30
2019-05-24 08:32:41 -Generating unique operation named: saveUsingPOST_17
2019-05-24 08:32:41 -Generating unique operation named: updateUsingGET_11
2019-05-24 08:32:41 -Generating unique operation named: updateUsingHEAD_11
2019-05-24 08:32:41 -Generating unique operation named: updateUsingPOST_17
2019-05-24 08:32:41 -Generating unique operation named: updateUsingPUT_11
2019-05-24 08:32:41 -Generating unique operation named: updateUsingPATCH_11
2019-05-24 08:32:41 -Generating unique operation named: updateUsingDELETE_11
2019-05-24 08:32:41 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-24 08:32:41 -Generating unique operation named: updateUsingTRACE_11
2019-05-24 08:32:41 -Generating unique operation named: addUsingGET_17
2019-05-24 08:32:41 -Generating unique operation named: editUsingGET_18
2019-05-24 08:32:41 -Generating unique operation named: listUsingGET_20
2019-05-24 08:32:41 -Generating unique operation named: removeUsingPOST_31
2019-05-24 08:32:41 -Generating unique operation named: removeUsingPOST_32
2019-05-24 08:32:41 -Generating unique operation named: saveUsingPOST_18
2019-05-24 08:32:41 -Generating unique operation named: updateUsingGET_12
2019-05-24 08:32:41 -Generating unique operation named: updateUsingHEAD_12
2019-05-24 08:32:41 -Generating unique operation named: updateUsingPOST_18
2019-05-24 08:32:41 -Generating unique operation named: updateUsingPUT_12
2019-05-24 08:32:42 -Generating unique operation named: updateUsingPATCH_12
2019-05-24 08:32:42 -Generating unique operation named: updateUsingDELETE_12
2019-05-24 08:32:42 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-24 08:32:42 -Generating unique operation named: updateUsingTRACE_12
2019-05-24 08:32:42 -Starting Quartz Scheduler now
2019-05-24 08:32:42 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-24 08:32:42 -Starting...
2019-05-24 08:32:42 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-24 08:32:42 -Started.
2019-05-24 08:32:42 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-24 08:32:42 -Using a shared selector for servlet write/read
2019-05-24 08:32:42 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-24 08:32:42 -Started BootdoApplication in 34.425 seconds (JVM running for 35.307)
2019-05-24 08:32:42 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-24 08:32:42 -==> Parameters: 
2019-05-24 08:32:42 -<==      Total: 1
2019-05-24 08:33:33 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-24 08:35:32 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-24 08:35:32 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-24 08:35:33 -FrameworkServlet 'dispatcherServlet': initialization completed in 103 ms
2019-05-24 08:35:33 -Enabling session validation scheduler...
2019-05-24 08:35:34 -请求地址 : http://localhost:8081/login;JSESSIONID=6df5dc7d-df13-470a-b0cd-001b2de6c54f
2019-05-24 08:35:34 -HTTP METHOD : GET
2019-05-24 08:35:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 08:35:34 -参数 : [{}]
2019-05-24 08:35:34 -耗时 : 4
2019-05-24 08:35:34 -返回值 : login
2019-05-24 08:35:37 -请求地址 : http://localhost:8081/getVerify
2019-05-24 08:35:37 -HTTP METHOD : GET
2019-05-24 08:35:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 08:35:37 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@666c6375, org.apache.shiro.web.servlet.ShiroHttpServletResponse@68ab81c8]
2019-05-24 08:35:42 -3380
2019-05-24 08:35:42 -耗时 : 4859
2019-05-24 08:35:42 -返回值 : null
2019-05-24 08:43:08 -请求地址 : http://localhost:8081/login
2019-05-24 08:43:08 -HTTP METHOD : POST
2019-05-24 08:43:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 08:43:08 -参数 : [admin, 111111, 3380, org.apache.shiro.web.servlet.ShiroHttpServletRequest@35096e72]
2019-05-24 08:43:09 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-24 08:43:09 -==> Parameters: admin(String)
2019-05-24 08:43:09 -<==      Total: 1
2019-05-24 08:43:09 -耗时 : 187
2019-05-24 08:43:09 -返回值 : {msg=操作成功, code=0}
2019-05-24 08:43:09 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-24 08:43:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 08:43:09 -==> Parameters: 1(Long), admin(String), 登录(String), 187(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 08:43:09.235(Timestamp)
2019-05-24 08:43:09 -<==    Updates: 1
2019-05-24 08:43:09 -请求地址 : http://localhost:8081/index
2019-05-24 08:43:09 -HTTP METHOD : GET
2019-05-24 08:43:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 08:43:09 -参数 : [{}]
2019-05-24 08:43:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 08:43:09 -==> Parameters: 1(Long)
2019-05-24 08:43:09 -<==      Total: 49
2019-05-24 08:43:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 08:43:09 -==> Parameters: 138(Long)
2019-05-24 08:43:09 -<==      Total: 1
2019-05-24 08:43:09 -耗时 : 332
2019-05-24 08:43:09 -返回值 : index_v1
2019-05-24 08:43:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 08:43:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 333(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112"(String), 127.0.0.1(String), 2019-05-24 08:43:10.181(Timestamp)
2019-05-24 08:43:10 -<==    Updates: 1
2019-05-24 08:43:10 -请求地址 : http://localhost:8081/main
2019-05-24 08:43:10 -HTTP METHOD : GET
2019-05-24 08:43:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 08:43:10 -参数 : []
2019-05-24 08:43:10 -耗时 : 0
2019-05-24 08:43:10 -返回值 : main
2019-05-24 08:43:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 08:43:12 -HTTP METHOD : GET
2019-05-24 08:43:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 08:43:12 -参数 : []
2019-05-24 08:43:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 08:43:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 08:43:12 -<==      Total: 0
2019-05-24 08:43:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 08:43:12 -==> Parameters: 1(Long), 0(String)
2019-05-24 08:43:12 -<==      Total: 1
2019-05-24 08:43:12 -耗时 : 61
2019-05-24 08:43:12 -返回值 : com.bootdo.common.utils.PageUtils@2b2483af
2019-05-24 08:43:12 -请求地址 : http://localhost:8081/main
2019-05-24 08:43:12 -HTTP METHOD : GET
2019-05-24 08:43:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 08:43:12 -参数 : []
2019-05-24 08:43:12 -耗时 : 0
2019-05-24 08:43:12 -返回值 : main
2019-05-24 08:43:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 08:43:28 -==> Parameters: 1(Long)
2019-05-24 08:43:28 -<==      Total: 93
2019-05-24 08:43:28 -请求地址 : http://localhost:8081/sys/menu/
2019-05-24 08:43:28 -HTTP METHOD : GET
2019-05-24 08:43:28 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-05-24 08:43:28 -参数 : [{}]
2019-05-24 08:43:28 -耗时 : 0
2019-05-24 08:43:28 -返回值 : system/menu/menu
2019-05-24 08:43:30 -请求地址 : http://localhost:8081/sys/menu/list
2019-05-24 08:43:30 -HTTP METHOD : GET
2019-05-24 08:43:30 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-05-24 08:43:30 -参数 : [{sort=order_num}]
2019-05-24 08:43:30 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-05-24 08:43:30 -==> Parameters: 
2019-05-24 08:43:30 -<==      Total: 109
2019-05-24 08:43:30 -耗时 : 103
2019-05-24 08:43:30 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=161, parentId=97, name='日统计表格', url='charts/tableDD', perms='charts:tableDD', type=1, icon='fa fa-calendar', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=162, parentId=97, name='月统计表格', url='charts/tableElecMM', perms='charts:tableMM', type=1, icon='fa fa-building-o', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=163, parentId=97, name='年统计表格', url='charts/tableElecYY', perms='charts:tableYY', type=1, icon='fa fa-book', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-05-24 08:43:36 -请求地址 : http://localhost:8081/sys/menu/add/106
2019-05-24 08:43:36 -HTTP METHOD : GET
2019-05-24 08:43:36 -CLASS_METHOD : com.bootdo.system.controller.MenuController.add
2019-05-24 08:43:36 -参数 : [{}, 106]
2019-05-24 08:43:36 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-05-24 08:43:36 -==> Parameters: 106(Long)
2019-05-24 08:43:36 -<==      Total: 1
2019-05-24 08:43:36 -耗时 : 9
2019-05-24 08:43:36 -返回值 : system/menu/add
2019-05-24 08:43:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 08:43:36 -==> Parameters: 1(Long), admin(String), 添加菜单(String), 10(Integer), com.bootdo.system.controller.MenuController.add()(String), null, 127.0.0.1(String), 2019-05-24 08:43:36.136(Timestamp)
2019-05-24 08:43:36 -<==    Updates: 1
2019-05-24 08:43:44 -请求地址 : http://localhost:8081/sys/menu/edit/102
2019-05-24 08:43:44 -HTTP METHOD : GET
2019-05-24 08:43:44 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-05-24 08:43:44 -参数 : [{}, 102]
2019-05-24 08:43:44 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-05-24 08:43:44 -==> Parameters: 102(Long)
2019-05-24 08:43:44 -<==      Total: 1
2019-05-24 08:43:44 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-05-24 08:43:44 -==> Parameters: 106(Long)
2019-05-24 08:43:44 -<==      Total: 1
2019-05-24 08:43:44 -耗时 : 19
2019-05-24 08:43:44 -返回值 : system/menu/edit
2019-05-24 08:43:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 08:43:44 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 19(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-05-24 08:43:44.703(Timestamp)
2019-05-24 08:43:44 -<==    Updates: 1
2019-05-24 08:43:49 -请求地址 : http://localhost:8081/sys/menu/add/106
2019-05-24 08:43:49 -HTTP METHOD : GET
2019-05-24 08:43:49 -CLASS_METHOD : com.bootdo.system.controller.MenuController.add
2019-05-24 08:43:49 -参数 : [{}, 106]
2019-05-24 08:43:49 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-05-24 08:43:49 -==> Parameters: 106(Long)
2019-05-24 08:43:49 -<==      Total: 1
2019-05-24 08:43:49 -耗时 : 12
2019-05-24 08:43:49 -返回值 : system/menu/add
2019-05-24 08:43:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 08:43:49 -==> Parameters: 1(Long), admin(String), 添加菜单(String), 12(Integer), com.bootdo.system.controller.MenuController.add()(String), null, 127.0.0.1(String), 2019-05-24 08:43:49.121(Timestamp)
2019-05-24 08:43:49 -<==    Updates: 1
2019-05-24 08:44:46 -请求地址 : http://localhost:8081/sys/menu/save
2019-05-24 08:44:46 -HTTP METHOD : POST
2019-05-24 08:44:46 -CLASS_METHOD : com.bootdo.system.controller.MenuController.save
2019-05-24 08:44:46 -参数 : [MenuDO{menuId=null, parentId=106, name='乌镇管理', url='', perms='', type=1, icon='fa fa-image', orderNum=3, gmtCreate=null, gmtModified=null}]
2019-05-24 08:44:46 -==>  Preparing: insert into sys_menu ( `parent_id`, `name`, `url`, `perms`, `type`, `icon`, `order_num`, `gmt_create`, `gmt_modified` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 08:44:46 -==> Parameters: 106(Long), 乌镇管理(String), (String), (String), 1(Integer), fa fa-image(String), 3(Integer), null, null
2019-05-24 08:44:46 -<==    Updates: 1
2019-05-24 08:44:46 -耗时 : 192
2019-05-24 08:44:46 -返回值 : {msg=操作成功, code=0}
2019-05-24 08:44:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 08:44:46 -==> Parameters: 1(Long), admin(String), 保存菜单(String), 193(Integer), com.bootdo.system.controller.MenuController.save()(String), null, 127.0.0.1(String), 2019-05-24 08:44:46.967(Timestamp)
2019-05-24 08:44:47 -请求地址 : http://localhost:8081/sys/menu/list
2019-05-24 08:44:47 -HTTP METHOD : GET
2019-05-24 08:44:47 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-05-24 08:44:47 -参数 : [{sort=order_num}]
2019-05-24 08:44:47 -<==    Updates: 1
2019-05-24 08:44:47 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-05-24 08:44:47 -==> Parameters: 
2019-05-24 08:44:47 -<==      Total: 110
2019-05-24 08:44:47 -耗时 : 39
2019-05-24 08:44:47 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=161, parentId=97, name='日统计表格', url='charts/tableDD', perms='charts:tableDD', type=1, icon='fa fa-calendar', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=164, parentId=106, name='乌镇管理', url='', perms='', type=1, icon='fa fa-image', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=162, parentId=97, name='月统计表格', url='charts/tableElecMM', perms='charts:tableMM', type=1, icon='fa fa-building-o', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=163, parentId=97, name='年统计表格', url='charts/tableElecYY', perms='charts:tableYY', type=1, icon='fa fa-book', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-05-24 08:45:19 -请求地址 : http://localhost:8081/sys/menu/edit/107
2019-05-24 08:45:19 -HTTP METHOD : GET
2019-05-24 08:45:19 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-05-24 08:45:19 -参数 : [{}, 107]
2019-05-24 08:45:19 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-05-24 08:45:19 -==> Parameters: 107(Long)
2019-05-24 08:45:19 -<==      Total: 1
2019-05-24 08:45:19 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-05-24 08:45:19 -==> Parameters: 106(Long)
2019-05-24 08:45:19 -<==      Total: 1
2019-05-24 08:45:19 -耗时 : 41
2019-05-24 08:45:19 -返回值 : system/menu/edit
2019-05-24 08:45:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 08:45:19 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 41(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-05-24 08:45:19.231(Timestamp)
2019-05-24 08:45:19 -<==    Updates: 1
2019-05-24 08:45:23 -请求地址 : http://localhost:8081/sys/menu/edit/164
2019-05-24 08:45:23 -HTTP METHOD : GET
2019-05-24 08:45:23 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-05-24 08:45:23 -参数 : [{}, 164]
2019-05-24 08:45:23 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-05-24 08:45:23 -==> Parameters: 164(Long)
2019-05-24 08:45:23 -<==      Total: 1
2019-05-24 08:45:23 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-05-24 08:45:23 -==> Parameters: 106(Long)
2019-05-24 08:45:23 -<==      Total: 1
2019-05-24 08:45:23 -耗时 : 22
2019-05-24 08:45:23 -返回值 : system/menu/edit
2019-05-24 08:45:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 08:45:23 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 23(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-05-24 08:45:23.413(Timestamp)
2019-05-24 08:45:23 -<==    Updates: 1
2019-05-24 08:45:56 -请求地址 : http://localhost:8081/sys/menu/update
2019-05-24 08:45:56 -HTTP METHOD : POST
2019-05-24 08:45:56 -CLASS_METHOD : com.bootdo.system.controller.MenuController.update
2019-05-24 08:45:56 -参数 : [MenuDO{menuId=164, parentId=106, name='乌镇管理', url='moneyList/moneyWZ', perms='moneyList:moneyWZ', type=1, icon='fa fa-image', orderNum=3, gmtCreate=null, gmtModified=null}]
2019-05-24 08:45:56 -==>  Preparing: update sys_menu SET `parent_id` = ?, `name` = ?, `url` = ?, `perms` = ?, `type` = ?, `icon` = ?, `order_num` = ? where menu_id = ? 
2019-05-24 08:45:56 -==> Parameters: 106(Long), 乌镇管理(String), moneyList/moneyWZ(String), moneyList:moneyWZ(String), 1(Integer), fa fa-image(String), 3(Integer), 164(Long)
2019-05-24 08:45:56 -<==    Updates: 1
2019-05-24 08:45:56 -耗时 : 267
2019-05-24 08:45:56 -返回值 : {msg=操作成功, code=0}
2019-05-24 08:45:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 08:45:56 -==> Parameters: 1(Long), admin(String), 更新菜单(String), 267(Integer), com.bootdo.system.controller.MenuController.update()(String), null, 127.0.0.1(String), 2019-05-24 08:45:56.285(Timestamp)
2019-05-24 08:45:56 -<==    Updates: 1
2019-05-24 08:45:56 -请求地址 : http://localhost:8081/sys/menu/list
2019-05-24 08:45:56 -HTTP METHOD : GET
2019-05-24 08:45:56 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-05-24 08:45:56 -参数 : [{sort=order_num}]
2019-05-24 08:45:56 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-05-24 08:45:56 -==> Parameters: 
2019-05-24 08:45:56 -<==      Total: 110
2019-05-24 08:45:56 -耗时 : 27
2019-05-24 08:45:56 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=161, parentId=97, name='日统计表格', url='charts/tableDD', perms='charts:tableDD', type=1, icon='fa fa-calendar', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=164, parentId=106, name='乌镇管理', url='moneyList/moneyWZ', perms='moneyList:moneyWZ', type=1, icon='fa fa-image', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=162, parentId=97, name='月统计表格', url='charts/tableElecMM', perms='charts:tableMM', type=1, icon='fa fa-building-o', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=163, parentId=97, name='年统计表格', url='charts/tableElecYY', perms='charts:tableYY', type=1, icon='fa fa-book', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-05-24 08:46:28 -请求地址 : http://localhost:8081/sys/menu/edit/164
2019-05-24 08:46:28 -HTTP METHOD : GET
2019-05-24 08:46:28 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-05-24 08:46:28 -参数 : [{}, 164]
2019-05-24 08:46:28 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-05-24 08:46:28 -==> Parameters: 164(Long)
2019-05-24 08:46:28 -<==      Total: 1
2019-05-24 08:46:28 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-05-24 08:46:28 -==> Parameters: 106(Long)
2019-05-24 08:46:28 -<==      Total: 1
2019-05-24 08:46:28 -耗时 : 15
2019-05-24 08:46:28 -返回值 : system/menu/edit
2019-05-24 08:46:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 08:46:28 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 15(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-05-24 08:46:28.924(Timestamp)
2019-05-24 08:46:28 -<==    Updates: 1
2019-05-24 08:46:34 -请求地址 : http://localhost:8081/sys/menu/update
2019-05-24 08:46:34 -HTTP METHOD : POST
2019-05-24 08:46:34 -CLASS_METHOD : com.bootdo.system.controller.MenuController.update
2019-05-24 08:46:34 -参数 : [MenuDO{menuId=164, parentId=106, name='乌镇管理', url='/moneyList/moneyWZ', perms='moneyList:moneyWZ', type=1, icon='fa fa-image', orderNum=3, gmtCreate=null, gmtModified=null}]
2019-05-24 08:46:34 -==>  Preparing: update sys_menu SET `parent_id` = ?, `name` = ?, `url` = ?, `perms` = ?, `type` = ?, `icon` = ?, `order_num` = ? where menu_id = ? 
2019-05-24 08:46:34 -==> Parameters: 106(Long), 乌镇管理(String), /moneyList/moneyWZ(String), moneyList:moneyWZ(String), 1(Integer), fa fa-image(String), 3(Integer), 164(Long)
2019-05-24 08:46:34 -<==    Updates: 1
2019-05-24 08:46:34 -耗时 : 198
2019-05-24 08:46:34 -返回值 : {msg=操作成功, code=0}
2019-05-24 08:46:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 08:46:34 -==> Parameters: 1(Long), admin(String), 更新菜单(String), 198(Integer), com.bootdo.system.controller.MenuController.update()(String), null, 127.0.0.1(String), 2019-05-24 08:46:34.924(Timestamp)
2019-05-24 08:46:34 -请求地址 : http://localhost:8081/sys/menu/list
2019-05-24 08:46:34 -HTTP METHOD : GET
2019-05-24 08:46:34 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-05-24 08:46:34 -参数 : [{sort=order_num}]
2019-05-24 08:46:34 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-05-24 08:46:34 -==> Parameters: 
2019-05-24 08:46:34 -<==    Updates: 1
2019-05-24 08:46:34 -<==      Total: 110
2019-05-24 08:46:34 -耗时 : 24
2019-05-24 08:46:34 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=161, parentId=97, name='日统计表格', url='charts/tableDD', perms='charts:tableDD', type=1, icon='fa fa-calendar', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=164, parentId=106, name='乌镇管理', url='/moneyList/moneyWZ', perms='moneyList:moneyWZ', type=1, icon='fa fa-image', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=162, parentId=97, name='月统计表格', url='charts/tableElecMM', perms='charts:tableMM', type=1, icon='fa fa-building-o', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=6, gmtCreate=null, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=163, parentId=97, name='年统计表格', url='charts/tableElecYY', perms='charts:tableYY', type=1, icon='fa fa-book', orderNum=7, gmtCreate=null, gmtModified=null}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-05-24 08:47:00 -请求地址 : http://localhost:8081/sys/role
2019-05-24 08:47:00 -HTTP METHOD : GET
2019-05-24 08:47:00 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2019-05-24 08:47:00 -参数 : []
2019-05-24 08:47:00 -耗时 : 1
2019-05-24 08:47:00 -返回值 : system/role/role
2019-05-24 08:47:00 -请求地址 : http://localhost:8081/sys/role/list
2019-05-24 08:47:00 -HTTP METHOD : GET
2019-05-24 08:47:00 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-05-24 08:47:00 -参数 : []
2019-05-24 08:47:00 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-05-24 08:47:00 -==> Parameters: 
2019-05-24 08:47:00 -<==      Total: 10
2019-05-24 08:47:00 -耗时 : 43
2019-05-24 08:47:00 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-05-24 08:47:19 -请求地址 : http://localhost:8081/sys/role/edit/1
2019-05-24 08:47:19 -HTTP METHOD : GET
2019-05-24 08:47:19 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2019-05-24 08:47:19 -参数 : [1, {}]
2019-05-24 08:47:19 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2019-05-24 08:47:19 -==> Parameters: 1(Long)
2019-05-24 08:47:19 -<==      Total: 1
2019-05-24 08:47:19 -耗时 : 6
2019-05-24 08:47:19 -返回值 : system/role/edit
2019-05-24 08:47:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 08:47:19 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 6(Integer), com.bootdo.system.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2019-05-24 08:47:19.019(Timestamp)
2019-05-24 08:47:19 -<==    Updates: 1
2019-05-24 08:47:19 -请求地址 : http://localhost:8081/sys/menu/tree/1
2019-05-24 08:47:19 -HTTP METHOD : GET
2019-05-24 08:47:19 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2019-05-24 08:47:19 -参数 : [1]
2019-05-24 08:47:19 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2019-05-24 08:47:19 -==> Parameters: 
2019-05-24 08:47:19 -<==      Total: 110
2019-05-24 08:47:19 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2019-05-24 08:47:19 -==> Parameters: 1(Long)
2019-05-24 08:47:19 -<==      Total: 110
2019-05-24 08:47:19 -耗时 : 37
2019-05-24 08:47:19 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"153","parentId":"149","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"152","parentId":"149","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"151","parentId":"149","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"149","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"149","parentId":"108","state":{"selected":false},"text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","state":{"selected":false},"text":"票据管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","state":{"selected":false},"text":"乌镇管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"159","parentId":"107","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"158","parentId":"107","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"157","parentId":"107","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"156","parentId":"107","state":{"selected":true},"text":"添加"}],"hasChildren":true,"hasParent":true,"id":"107","parentId":"106","state":{"selected":false},"text":"缴费记录"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","state":{"selected":true},"text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"收费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"120","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"120","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"120","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"120","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"120","parentId":"105","state":{"selected":false},"text":"水价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","state":{"selected":true},"text":"水费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"145","parentId":"117","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"144","parentId":"117","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"143","parentId":"117","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"117","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"117","parentId":"105","state":{"selected":false},"text":"水费用户"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"水费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"116","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"116","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"116","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"116","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"104","state":{"selected":false},"text":"暖价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","state":{"selected":true},"text":"暖费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"113","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"113","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"146","parentId":"113","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"113","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"113","parentId":"104","state":{"selected":false},"text":"暖费用户"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","state":{"selected":false},"text":"暖费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"124","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"124","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"124","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"124","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"124","parentId":"103","state":{"selected":false},"text":"电价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","state":{"selected":true},"text":"电表上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"121","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"121","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"121","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"121","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"121","parentId":"103","state":{"selected":false},"text":"电费用户"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"电费管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","state":{"selected":true},"text":"年统计表格"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","state":{"selected":true},"text":"月统计表格"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","state":{"selected":true},"text":"日统计表格"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","state":{"selected":true},"text":"欠费报表图"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","state":{"selected":true},"text":"走势图报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","state":{"selected":true},"text":"年统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","state":{"selected":true},"text":"月统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","state":{"selected":true},"text":"日统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":true},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"统计管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":true},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":true},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":true},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":true},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":true},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"160","parentId":"77","state":{"selected":true},"text":"3D龙卷风"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"154","parentId":"77","state":{"selected":true},"text":"时钟"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":true},"text":"计算器"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":true},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"组织管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":true},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-05-24 08:47:25 -请求地址 : http://localhost:8081/sys/role/update
2019-05-24 08:47:25 -HTTP METHOD : POST
2019-05-24 08:47:25 -CLASS_METHOD : com.bootdo.system.controller.RoleController.update
2019-05-24 08:47:25 -参数 : [RoleDO{roleId=1, roleName='超级用户角色', roleSign='null', remark='拥有最高权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=[153, 152, 151, 150, 159, 158, 157, 156, 102, 141, 140, 139, 138, 119, 118, 145, 144, 143, 142, 136, 135, 134, 133, 115, 114, 148, 147, 146, 137, 128, 127, 126, 125, 123, 122, 132, 131, 130, 129, 163, 162, 161, 155, 112, 111, 110, 109, 98, 92, 57, 30, 29, 28, 90, 89, 88, 87, 86, 160, 154, 72, 76, 75, 74, 62, 56, 55, 15, 26, 25, 24, 14, 13, 12, 61, 22, 21, 20, 83, 81, 80, 79, 71, 149, 108, 107, 120, 117, 105, 116, 113, 104, 124, 121, 103, 97, 27, 91, 85, 84, 77, 73, 7, 6, 2, 3, 78, 1, 164, 106, -1]}]
2019-05-24 08:47:25 -==>  Preparing: update sys_role SET `role_name` = ?, `remark` = ? where role_id = ? 
2019-05-24 08:47:25 -==> Parameters: 超级用户角色(String), 拥有最高权限(String), 1(Long)
2019-05-24 08:47:25 -<==    Updates: 1
2019-05-24 08:47:25 -==>  Preparing: DELETE FROM sys_role_menu WHERE role_id=? 
2019-05-24 08:47:25 -==> Parameters: 1(Long)
2019-05-24 08:47:25 -<==    Updates: 110
2019-05-24 08:47:25 -==>  Preparing: INSERT INTO sys_role_menu(role_id, menu_id) values
2019-05-24 08:47:25 -==> Parameters: 1(Long), 153(Long), 1(Long), 152(Long), 1(Long), 151(Long), 1(Long), 150(Long), 1(Long), 159(Long), 1(Long), 158(Long), 1(Long), 157(Long), 1(Long), 156(Long), 1(Long), 102(Long), 1(Long), 141(Long), 1(Long), 140(Long), 1(Long), 139(Long), 1(Long), 138(Long), 1(Long), 119(Long), 1(Long), 118(Long), 1(Long), 145(Long), 1(Long), 144(Long), 1(Long), 143(Long), 1(Long), 142(Long), 1(Long), 136(Long), 1(Long), 135(Long), 1(Long), 134(Long), 1(Long), 133(Long), 1(Long), 115(Long), 1(Long), 114(Long), 1(Long), 148(Long), 1(Long), 147(Long), 1(Long), 146(Long), 1(Long), 137(Long), 1(Long), 128(Long), 1(Long), 127(Long), 1(Long), 126(Long), 1(Long), 125(Long), 1(Long), 123(Long), 1(Long), 122(Long), 1(Long), 132(Long), 1(Long), 131(Long), 1(Long), 130(Long), 1(Long), 129(Long), 1(Long), 163(Long), 1(Long), 162(Long), 1(Long), 161(Long), 1(Long), 155(Long), 1(Long), 112(Long), 1(Long), 111(Long), 1(Long), 110(Long), 1(Long), 109(Long), 1(Long), 98(Long), 1(Long), 92(Long), 1(Long), 57(Long), 1(Long), 30(Long), 1(Long), 29(Long), 1(Long), 28(Long), 1(Long), 90(Long), 1(Long), 89(Long), 1(Long), 88(Long), 1(Long), 87(Long), 1(Long), 86(Long), 1(Long), 160(Long), 1(Long), 154(Long), 1(Long), 72(Long), 1(Long), 76(Long), 1(Long), 75(Long), 1(Long), 74(Long), 1(Long), 62(Long), 1(Long), 56(Long), 1(Long), 55(Long), 1(Long), 15(Long), 1(Long), 26(Long), 1(Long), 25(Long), 1(Long), 24(Long), 1(Long), 14(Long), 1(Long), 13(Long), 1(Long), 12(Long), 1(Long), 61(Long), 1(Long), 22(Long), 1(Long), 21(Long), 1(Long), 20(Long), 1(Long), 83(Long), 1(Long), 81(Long), 1(Long), 80(Long), 1(Long), 79(Long), 1(Long), 71(Long), 1(Long), 149(Long), 1(Long), 108(Long), 1(Long), 107(Long), 1(Long), 120(Long), 1(Long), 117(Long), 1(Long), 105(Long), 1(Long), 116(Long), 1(Long), 113(Long), 1(Long), 104(Long), 1(Long), 124(Long), 1(Long), 121(Long), 1(Long), 103(Long), 1(Long), 97(Long), 1(Long), 27(Long), 1(Long), 91(Long), 1(Long), 85(Long), 1(Long), 84(Long), 1(Long), 77(Long), 1(Long), 73(Long), 1(Long), 7(Long), 1(Long), 6(Long), 1(Long), 2(Long), 1(Long), 3(Long), 1(Long), 78(Long), 1(Long), 1(Long), 1(Long), 164(Long), 1(Long), 106(Long), 1(Long), -1(Long)
2019-05-24 08:47:25 -<==    Updates: 111
2019-05-24 08:47:25 -耗时 : 377
2019-05-24 08:47:25 -返回值 : {msg=操作成功, code=0}
2019-05-24 08:47:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 08:47:25 -==> Parameters: 1(Long), admin(String), 更新角色(String), 377(Integer), com.bootdo.system.controller.RoleController.update()(String), null, 127.0.0.1(String), 2019-05-24 08:47:25.983(Timestamp)
2019-05-24 08:47:26 -请求地址 : http://localhost:8081/sys/role/list
2019-05-24 08:47:26 -HTTP METHOD : GET
2019-05-24 08:47:26 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-05-24 08:47:26 -参数 : []
2019-05-24 08:47:26 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-05-24 08:47:26 -==> Parameters: 
2019-05-24 08:47:26 -<==    Updates: 1
2019-05-24 08:47:26 -<==      Total: 10
2019-05-24 08:47:26 -耗时 : 122
2019-05-24 08:47:26 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-05-24 09:03:33 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 294]
2019-05-24 09:33:33 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 727]
2019-05-24 09:35:33 -Validating all active sessions...
2019-05-24 09:35:33 -Finished session validation.  [1] sessions were stopped.
2019-05-24 09:51:37 -Starting BootdoApplication on PC-201905091110 with PID 23264 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-24 09:51:37 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-24 09:51:37 -The following profiles are active: dev
2019-05-24 09:51:37 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 09:51:37 CST 2019]; root of context hierarchy
2019-05-24 09:51:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-24 09:51:43 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ca90b5a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 09:51:43 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$bce9e44b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 09:51:44 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 09:51:44 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 09:51:44 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 09:51:44 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-24 09:51:45 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-24 09:51:45 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 09:51:45 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 09:51:45 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 09:51:45 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 09:51:46 -Tomcat initialized with port(s): 8081 (http)
2019-05-24 09:51:46 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-24 09:51:46 -Starting service [Tomcat]
2019-05-24 09:51:46 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-24 09:51:46 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-24 09:51:46 -Initializing Spring embedded WebApplicationContext
2019-05-24 09:51:46 -Root WebApplicationContext: initialization completed in 8908 ms
2019-05-24 09:51:47 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-24 09:51:47 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-24 09:51:47 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-24 09:51:47 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-24 09:51:47 -Filter xssFilter was not registered (disabled)
2019-05-24 09:51:47 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-24 09:51:47 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-24 09:51:47 -Servlet statViewServlet mapped to [/druid/*]
2019-05-24 09:51:47 -Servlet dispatcherServlet mapped to [/]
2019-05-24 09:51:51 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 09:51:37 CST 2019]; root of context hierarchy
2019-05-24 09:51:52 -Using default implementation for ThreadExecutor
2019-05-24 09:51:52 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-24 09:51:52 -Quartz Scheduler v.2.2.1 created.
2019-05-24 09:51:52 -RAMJobStore initialized.
2019-05-24 09:51:52 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-24 09:51:52 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-24 09:51:52 -Quartz scheduler version: 2.2.1
2019-05-24 09:51:52 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4e5c8ef3
2019-05-24 09:51:52 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-24 09:51:52 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-24 09:51:55 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:55 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 09:51:55 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-24 09:51:55 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-24 09:51:55 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 09:51:55 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:55 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-24 09:51:55 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-24 09:51:55 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:55 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-24 09:51:55 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:55 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 09:51:55 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 09:51:55 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-24 09:51:55 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:55 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 09:51:55 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:55 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-24 09:51:55 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:55 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-24 09:51:55 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 09:51:55 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 09:51:55 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-24 09:51:55 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:55 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 09:51:55 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-24 09:51:55 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:55 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:55 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-24 09:51:55 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 09:51:55 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 09:51:55 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-24 09:51:55 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:55 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:55 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-24 09:51:55 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 09:51:55 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-24 09:51:55 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-24 09:51:55 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-24 09:51:55 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-24 09:51:55 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 09:51:55 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-24 09:51:55 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-24 09:51:55 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 09:51:55 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-24 09:51:55 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-24 09:51:55 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-24 09:51:55 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-24 09:51:55 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-24 09:51:55 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-24 09:51:55 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-24 09:51:55 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 09:51:55 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-24 09:51:56 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-24 09:51:56 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-24 09:51:56 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 09:51:56 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-24 09:51:56 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 09:51:56 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-24 09:51:56 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-24 09:51:56 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 09:51:56 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-24 09:51:56 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 09:51:56 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-24 09:51:56 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-24 09:51:56 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-24 09:51:56 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-24 09:51:56 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 09:51:56 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-24 09:51:56 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-24 09:51:56 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-24 09:51:56 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-24 09:51:56 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 09:51:56 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-24 09:51:56 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-24 09:51:56 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 09:51:56 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-24 09:51:56 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-24 09:51:56 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-24 09:51:56 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:56 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:56 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-24 09:51:56 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-24 09:51:56 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-24 09:51:56 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 09:51:56 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 09:51:56 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-24 09:51:56 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:56 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-24 09:51:56 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 09:51:56 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:56 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-24 09:51:56 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 09:51:56 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-24 09:51:56 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-24 09:51:56 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-24 09:51:56 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-24 09:51:56 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 09:51:56 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-24 09:51:56 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-24 09:51:56 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 09:51:56 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-24 09:51:56 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-24 09:51:56 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:56 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-24 09:51:56 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-24 09:51:56 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-24 09:51:56 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-24 09:51:56 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 09:51:56 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-24 09:51:56 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:56 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-24 09:51:56 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-24 09:51:56 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:56 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-24 09:51:56 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 09:51:56 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-24 09:51:56 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-24 09:51:56 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-24 09:51:56 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 09:51:56 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 09:51:56 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 09:51:56 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-24 09:51:56 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 09:51:56 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-24 09:51:56 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 09:51:56 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 09:51:56 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-24 09:51:56 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 09:51:56 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 09:51:56 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 09:51:56 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-24 09:51:56 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 09:51:56 -Mapped "{[/moneyList/moneyList/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-24 09:51:56 -Mapped "{[/moneyList/moneyList/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-24 09:51:56 -Mapped "{[/moneyList/moneyList/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-24 09:51:56 -Mapped "{[/moneyList/moneyList/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 09:51:56 -Mapped "{[/moneyList/moneyList/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 09:51:56 -Mapped "{[/moneyList/moneyList/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 09:51:56 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/D:/MavenRepository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/D:/MavenRepository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'moneyListWZController' method 
java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
to {[/moneyList/moneyList],methods=[GET]}: There is already 'moneyListController' bean method
java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList() mapped.
2019-05-24 09:51:56 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-05-24 09:51:56 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-05-24 09:51:56 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-05-24 09:51:56 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-05-24 09:51:56 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-05-24 09:51:56 -Shutting down Quartz Scheduler
2019-05-24 09:51:56 -Stopping service [Tomcat]
2019-05-24 09:51:56 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-05-24 09:51:56 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'documentationPluginsBootstrapper' defined in URL [jar:file:/D:/MavenRepository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/DocumentationPluginsBootstrapper.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/D:/MavenRepository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'moneyListWZController' method 
java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
to {[/moneyList/moneyList],methods=[GET]}: There is already 'moneyListController' bean method
java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList() mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1276)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1133)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:23)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webMvcRequestHandlerProvider' defined in URL [jar:file:/D:/MavenRepository/io/springfox/springfox-spring-web/2.6.1/springfox-spring-web-2.6.1.jar!/springfox/documentation/spring/web/plugins/WebMvcRequestHandlerProvider.class]: Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'moneyListWZController' method 
java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
to {[/moneyList/moneyList],methods=[GET]}: There is already 'moneyListController' bean method
java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList() mapped.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:197)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1276)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1133)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1291)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'requestMappingHandlerMapping' defined in class path resource [org/springframework/boot/autoconfigure/web/servlet/WebMvcAutoConfiguration$EnableWebMvcConfiguration.class]: Invocation of init method failed; nested exception is java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'moneyListWZController' method 
java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
to {[/moneyList/moneyList],methods=[GET]}: There is already 'moneyListController' bean method
java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList() mapped.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1708)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.addCandidateEntry(DefaultListableBeanFactory.java:1325)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.findAutowireCandidates(DefaultListableBeanFactory.java:1291)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveMultipleBeans(DefaultListableBeanFactory.java:1193)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1096)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 36 common frames omitted
Caused by: java.lang.IllegalStateException: Ambiguous mapping. Cannot map 'moneyListWZController' method 
java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
to {[/moneyList/moneyList],methods=[GET]}: There is already 'moneyListController' bean method
java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList() mapped.
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.assertUniqueMethodMapping(AbstractHandlerMethodMapping.java:580)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping$MappingRegistry.register(AbstractHandlerMethodMapping.java:544)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.registerHandlerMethod(AbstractHandlerMethodMapping.java:265)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lambda$detectHandlerMethods$1(AbstractHandlerMethodMapping.java:250)
	at java.util.LinkedHashMap.forEach(LinkedHashMap.java:684)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.detectHandlerMethods(AbstractHandlerMethodMapping.java:248)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.initHandlerMethods(AbstractHandlerMethodMapping.java:218)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.afterPropertiesSet(AbstractHandlerMethodMapping.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.afterPropertiesSet(RequestMappingHandlerMapping.java:129)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1767)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	... 50 common frames omitted
2019-05-24 10:03:10 -Starting BootdoApplication on PC-201905091110 with PID 32816 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-24 10:03:10 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-24 10:03:10 -The following profiles are active: dev
2019-05-24 10:03:10 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 10:03:10 CST 2019]; root of context hierarchy
2019-05-24 10:03:13 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-24 10:03:15 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$570235d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:03:15 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$495b647e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:03:16 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:03:16 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:03:16 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:03:16 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-24 10:03:16 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-24 10:03:16 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:03:16 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:03:16 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:03:17 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:03:17 -Tomcat initialized with port(s): 8081 (http)
2019-05-24 10:03:17 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-24 10:03:17 -Starting service [Tomcat]
2019-05-24 10:03:17 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-24 10:03:17 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-24 10:03:18 -Initializing Spring embedded WebApplicationContext
2019-05-24 10:03:18 -Root WebApplicationContext: initialization completed in 7635 ms
2019-05-24 10:03:18 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-24 10:03:18 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-24 10:03:18 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-24 10:03:18 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-24 10:03:18 -Filter xssFilter was not registered (disabled)
2019-05-24 10:03:18 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-24 10:03:18 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-24 10:03:18 -Servlet statViewServlet mapped to [/druid/*]
2019-05-24 10:03:18 -Servlet dispatcherServlet mapped to [/]
2019-05-24 10:03:22 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 10:03:10 CST 2019]; root of context hierarchy
2019-05-24 10:03:22 -Using default implementation for ThreadExecutor
2019-05-24 10:03:22 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-24 10:03:22 -Quartz Scheduler v.2.2.1 created.
2019-05-24 10:03:22 -RAMJobStore initialized.
2019-05-24 10:03:22 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-24 10:03:22 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-24 10:03:22 -Quartz scheduler version: 2.2.1
2019-05-24 10:03:22 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@55adcf9e
2019-05-24 10:03:23 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-24 10:03:23 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-24 10:03:26 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-24 10:03:26 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:03:26 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:03:26 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-24 10:03:26 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-24 10:03:26 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-24 10:03:26 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:03:26 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-24 10:03:26 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:03:26 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-24 10:03:26 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:03:26 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-24 10:03:26 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-24 10:03:26 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 10:03:26 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-24 10:03:26 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 10:03:26 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-24 10:03:26 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:03:26 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:03:26 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-24 10:03:26 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 10:03:26 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-24 10:03:26 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-24 10:03:26 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 10:03:26 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-24 10:03:26 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-24 10:03:26 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-24 10:03:26 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-24 10:03:26 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-24 10:03:26 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-24 10:03:26 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-24 10:03:26 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-24 10:03:26 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-24 10:03:26 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-24 10:03:26 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-24 10:03:26 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-24 10:03:26 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-24 10:03:26 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 10:03:26 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-24 10:03:26 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 10:03:26 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-24 10:03:26 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-24 10:03:26 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-24 10:03:26 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-24 10:03:26 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-24 10:03:26 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-24 10:03:26 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-24 10:03:26 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-24 10:03:26 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-24 10:03:26 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:03:26 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:03:26 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:03:26 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-24 10:03:26 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-24 10:03:26 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:03:26 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-24 10:03:26 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-24 10:03:26 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:03:26 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-24 10:03:26 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-24 10:03:26 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-24 10:03:26 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-24 10:03:26 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-24 10:03:26 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-24 10:03:26 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-24 10:03:26 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-24 10:03:26 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-24 10:03:26 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-24 10:03:26 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:03:26 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-24 10:03:26 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 10:03:26 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 10:03:26 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-24 10:03:26 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-24 10:03:26 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 10:03:26 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-24 10:03:26 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-24 10:03:26 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:03:26 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:03:26 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:03:26 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-24 10:03:26 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:03:26 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:03:26 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-24 10:03:26 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-24 10:03:26 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-24 10:03:26 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-24 10:03:26 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-24 10:03:26 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-24 10:03:26 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:03:26 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-24 10:03:26 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-24 10:03:26 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-24 10:03:26 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-24 10:03:26 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-24 10:03:26 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-24 10:03:26 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-24 10:03:26 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-24 10:03:26 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-24 10:03:26 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-24 10:03:26 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-24 10:03:26 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-24 10:03:26 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-24 10:03:26 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-24 10:03:26 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-24 10:03:26 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-24 10:03:26 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-24 10:03:26 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-24 10:03:26 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-24 10:03:26 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:03:26 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-24 10:03:26 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-24 10:03:26 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-24 10:03:26 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-24 10:03:26 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-24 10:03:26 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-24 10:03:26 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-24 10:03:26 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-24 10:03:26 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-24 10:03:26 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-24 10:03:26 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-24 10:03:26 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-24 10:03:26 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-24 10:03:26 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-24 10:03:26 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-24 10:03:26 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-24 10:03:26 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-24 10:03:26 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:03:26 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-24 10:03:26 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 10:03:26 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 10:03:26 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-24 10:03:26 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-24 10:03:26 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-24 10:03:26 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-24 10:03:26 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-24 10:03:26 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:03:26 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-24 10:03:26 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-24 10:03:26 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-24 10:03:26 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-24 10:03:26 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 10:03:26 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:03:26 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 10:03:26 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-24 10:03:26 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:03:26 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-24 10:03:26 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 10:03:26 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-24 10:03:26 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:03:26 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:03:26 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-24 10:03:26 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-24 10:03:26 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-24 10:03:27 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-24 10:03:27 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-24 10:03:27 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-24 10:03:28 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:03:28 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 10:03:10 CST 2019]; root of context hierarchy
2019-05-24 10:03:28 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:03:28 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:03:28 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:03:28 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-24 10:03:28 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-24 10:03:31 -Registering beans for JMX exposure on startup
2019-05-24 10:03:31 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-24 10:03:31 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-24 10:03:31 -Starting beans in phase 2147483647
2019-05-24 10:03:31 -Context refreshed
2019-05-24 10:03:31 -Found 1 custom documentation plugin(s)
2019-05-24 10:03:31 -Scanning for api listing references
2019-05-24 10:03:32 -Generating unique operation named: getCountDUsingPOST_1
2019-05-24 10:03:32 -Generating unique operation named: removeUsingPOST_1
2019-05-24 10:03:32 -Generating unique operation named: addUsingGET_1
2019-05-24 10:03:32 -Generating unique operation named: editUsingGET_1
2019-05-24 10:03:32 -Generating unique operation named: listUsingGET_1
2019-05-24 10:03:32 -Generating unique operation named: removeUsingPOST_2
2019-05-24 10:03:32 -Generating unique operation named: removeUsingPOST_3
2019-05-24 10:03:32 -Generating unique operation named: saveUsingPOST_1
2019-05-24 10:03:32 -Generating unique operation named: updateUsingGET_1
2019-05-24 10:03:32 -Generating unique operation named: updateUsingHEAD_1
2019-05-24 10:03:32 -Generating unique operation named: updateUsingPOST_1
2019-05-24 10:03:32 -Generating unique operation named: updateUsingPUT_1
2019-05-24 10:03:32 -Generating unique operation named: updateUsingPATCH_1
2019-05-24 10:03:32 -Generating unique operation named: updateUsingDELETE_1
2019-05-24 10:03:32 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-24 10:03:32 -Generating unique operation named: updateUsingTRACE_1
2019-05-24 10:03:32 -Generating unique operation named: addUsingGET_2
2019-05-24 10:03:32 -Generating unique operation named: editUsingGET_2
2019-05-24 10:03:32 -Generating unique operation named: listUsingGET_2
2019-05-24 10:03:32 -Generating unique operation named: removeUsingPOST_4
2019-05-24 10:03:33 -Generating unique operation named: removeUsingPOST_5
2019-05-24 10:03:33 -Generating unique operation named: saveUsingPOST_2
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPOST_2
2019-05-24 10:03:33 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-24 10:03:33 -Generating unique operation named: addUsingGET_3
2019-05-24 10:03:33 -Generating unique operation named: editUsingGET_3
2019-05-24 10:03:33 -Generating unique operation named: listUsingGET_3
2019-05-24 10:03:33 -Generating unique operation named: removeUsingPOST_6
2019-05-24 10:03:33 -Generating unique operation named: removeUsingPOST_7
2019-05-24 10:03:33 -Generating unique operation named: saveUsingPOST_3
2019-05-24 10:03:33 -Generating unique operation named: updateUsingGET_2
2019-05-24 10:03:33 -Generating unique operation named: updateUsingHEAD_2
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPOST_3
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPUT_2
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPATCH_2
2019-05-24 10:03:33 -Generating unique operation named: updateUsingDELETE_2
2019-05-24 10:03:33 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-24 10:03:33 -Generating unique operation named: updateUsingTRACE_2
2019-05-24 10:03:33 -Generating unique operation named: addUsingGET_4
2019-05-24 10:03:33 -Generating unique operation named: editUsingGET_4
2019-05-24 10:03:33 -Generating unique operation named: listUsingGET_4
2019-05-24 10:03:33 -Generating unique operation named: removeUsingPOST_8
2019-05-24 10:03:33 -Generating unique operation named: removeUsingPOST_9
2019-05-24 10:03:33 -Generating unique operation named: saveUsingPOST_4
2019-05-24 10:03:33 -Generating unique operation named: updateUsingGET_3
2019-05-24 10:03:33 -Generating unique operation named: updateUsingHEAD_3
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPOST_4
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPUT_3
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPATCH_3
2019-05-24 10:03:33 -Generating unique operation named: updateUsingDELETE_3
2019-05-24 10:03:33 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-24 10:03:33 -Generating unique operation named: updateUsingTRACE_3
2019-05-24 10:03:33 -Generating unique operation named: ElecUsingGET_1
2019-05-24 10:03:33 -Generating unique operation named: addUsingGET_5
2019-05-24 10:03:33 -Generating unique operation named: editUsingGET_5
2019-05-24 10:03:33 -Generating unique operation named: listUsingGET_5
2019-05-24 10:03:33 -Generating unique operation named: removeUsingPOST_10
2019-05-24 10:03:33 -Generating unique operation named: removeUsingPOST_11
2019-05-24 10:03:33 -Generating unique operation named: saveUsingPOST_5
2019-05-24 10:03:33 -Generating unique operation named: updateUsingGET_4
2019-05-24 10:03:33 -Generating unique operation named: updateUsingHEAD_4
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPOST_5
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPUT_4
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPATCH_4
2019-05-24 10:03:33 -Generating unique operation named: updateUsingDELETE_4
2019-05-24 10:03:33 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-24 10:03:33 -Generating unique operation named: updateUsingTRACE_4
2019-05-24 10:03:33 -Generating unique operation named: editUsingGET_6
2019-05-24 10:03:33 -Generating unique operation named: listUsingGET_6
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPOST_6
2019-05-24 10:03:33 -Generating unique operation named: addUsingGET_6
2019-05-24 10:03:33 -Generating unique operation named: editUsingGET_7
2019-05-24 10:03:33 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-24 10:03:33 -Generating unique operation named: listUsingGET_7
2019-05-24 10:03:33 -Generating unique operation named: removeUsingPOST_12
2019-05-24 10:03:33 -Generating unique operation named: removeUsingPOST_13
2019-05-24 10:03:33 -Generating unique operation named: saveUsingPOST_6
2019-05-24 10:03:33 -Generating unique operation named: updateUsingGET_5
2019-05-24 10:03:33 -Generating unique operation named: updateUsingHEAD_5
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPOST_7
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPUT_5
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPATCH_5
2019-05-24 10:03:33 -Generating unique operation named: updateUsingDELETE_5
2019-05-24 10:03:33 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-24 10:03:33 -Generating unique operation named: updateUsingTRACE_5
2019-05-24 10:03:33 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-24 10:03:33 -Generating unique operation named: addUsingGET_7
2019-05-24 10:03:33 -Generating unique operation named: editUsingGET_8
2019-05-24 10:03:33 -Generating unique operation named: listUsingGET_8
2019-05-24 10:03:33 -Generating unique operation named: removeUsingPOST_14
2019-05-24 10:03:33 -Generating unique operation named: removeUsingPOST_15
2019-05-24 10:03:33 -Generating unique operation named: saveUsingPOST_7
2019-05-24 10:03:33 -Generating unique operation named: updateUsingGET_6
2019-05-24 10:03:33 -Generating unique operation named: updateUsingHEAD_6
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPOST_8
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPUT_6
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPATCH_6
2019-05-24 10:03:33 -Generating unique operation named: updateUsingDELETE_6
2019-05-24 10:03:33 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-24 10:03:33 -Generating unique operation named: updateUsingTRACE_6
2019-05-24 10:03:33 -Generating unique operation named: addUsingGET_8
2019-05-24 10:03:33 -Generating unique operation named: editUsingGET_9
2019-05-24 10:03:33 -Generating unique operation named: listUsingGET_9
2019-05-24 10:03:33 -Generating unique operation named: removeUsingPOST_16
2019-05-24 10:03:33 -Generating unique operation named: removeUsingPOST_17
2019-05-24 10:03:33 -Generating unique operation named: saveUsingPOST_8
2019-05-24 10:03:33 -Generating unique operation named: updateUsingGET_7
2019-05-24 10:03:33 -Generating unique operation named: updateUsingHEAD_7
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPOST_9
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPUT_7
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPATCH_7
2019-05-24 10:03:33 -Generating unique operation named: updateUsingDELETE_7
2019-05-24 10:03:33 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-24 10:03:33 -Generating unique operation named: updateUsingTRACE_7
2019-05-24 10:03:33 -Generating unique operation named: addUsingGET_9
2019-05-24 10:03:33 -Generating unique operation named: editUsingGET_10
2019-05-24 10:03:33 -Generating unique operation named: infoUsingGET_1
2019-05-24 10:03:33 -Generating unique operation named: infoUsingHEAD_1
2019-05-24 10:03:33 -Generating unique operation named: infoUsingPOST_1
2019-05-24 10:03:33 -Generating unique operation named: infoUsingPUT_1
2019-05-24 10:03:33 -Generating unique operation named: infoUsingPATCH_1
2019-05-24 10:03:33 -Generating unique operation named: infoUsingDELETE_1
2019-05-24 10:03:33 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-24 10:03:33 -Generating unique operation named: infoUsingTRACE_1
2019-05-24 10:03:33 -Generating unique operation named: listUsingGET_10
2019-05-24 10:03:33 -Generating unique operation named: removeUsingPOST_18
2019-05-24 10:03:33 -Generating unique operation named: removeUsingPOST_19
2019-05-24 10:03:33 -Generating unique operation named: saveUsingPOST_9
2019-05-24 10:03:33 -Generating unique operation named: updateUsingPOST_10
2019-05-24 10:03:33 -Generating unique operation named: listUsingGET_11
2019-05-24 10:03:33 -Generating unique operation named: removeUsingPOST_20
2019-05-24 10:03:33 -Generating unique operation named: welcomeUsingGET_1
2019-05-24 10:03:34 -Generating unique operation named: addUsingGET_10
2019-05-24 10:03:34 -Generating unique operation named: editUsingGET_11
2019-05-24 10:03:34 -Generating unique operation named: listUsingGET_12
2019-05-24 10:03:34 -Generating unique operation named: removeUsingPOST_21
2019-05-24 10:03:34 -Generating unique operation named: saveUsingPOST_10
2019-05-24 10:03:34 -Generating unique operation named: treeUsingGET_1
2019-05-24 10:03:34 -Generating unique operation named: treeUsingGET_2
2019-05-24 10:03:34 -Generating unique operation named: updateUsingPOST_11
2019-05-24 10:03:34 -Generating unique operation named: addUsingGET_11
2019-05-24 10:03:34 -Generating unique operation named: editUsingGET_12
2019-05-24 10:03:34 -Generating unique operation named: listUsingGET_13
2019-05-24 10:03:34 -Generating unique operation named: removeUsingPOST_22
2019-05-24 10:03:34 -Generating unique operation named: removeUsingPOST_23
2019-05-24 10:03:34 -Generating unique operation named: updateUsingPOST_12
2019-05-24 10:03:34 -Generating unique operation named: addUsingGET_12
2019-05-24 10:03:34 -Generating unique operation named: editUsingGET_13
2019-05-24 10:03:34 -Generating unique operation named: listUsingGET_14
2019-05-24 10:03:34 -Generating unique operation named: removeUsingPOST_24
2019-05-24 10:03:34 -Generating unique operation named: removeUsingPOST_25
2019-05-24 10:03:34 -Generating unique operation named: saveUsingPOST_11
2019-05-24 10:03:34 -Generating unique operation named: updateUsingGET_8
2019-05-24 10:03:34 -Generating unique operation named: updateUsingHEAD_8
2019-05-24 10:03:34 -Generating unique operation named: updateUsingPOST_13
2019-05-24 10:03:34 -Generating unique operation named: updateUsingPUT_8
2019-05-24 10:03:34 -Generating unique operation named: updateUsingPATCH_8
2019-05-24 10:03:34 -Generating unique operation named: updateUsingDELETE_8
2019-05-24 10:03:34 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-24 10:03:34 -Generating unique operation named: updateUsingTRACE_8
2019-05-24 10:03:34 -Generating unique operation named: addUsingGET_13
2019-05-24 10:03:34 -Generating unique operation named: editUsingGET_14
2019-05-24 10:03:34 -Generating unique operation named: listUsingGET_15
2019-05-24 10:03:34 -Generating unique operation named: printEditUsingGET_1
2019-05-24 10:03:34 -Generating unique operation named: removeUsingPOST_26
2019-05-24 10:03:34 -Generating unique operation named: removeUsingPOST_27
2019-05-24 10:03:34 -Generating unique operation named: saveUsingPOST_12
2019-05-24 10:03:34 -Generating unique operation named: updateUsingGET_9
2019-05-24 10:03:34 -Generating unique operation named: updateUsingHEAD_9
2019-05-24 10:03:34 -Generating unique operation named: updateUsingPOST_14
2019-05-24 10:03:34 -Generating unique operation named: updateUsingPUT_9
2019-05-24 10:03:34 -Generating unique operation named: updateUsingPATCH_9
2019-05-24 10:03:34 -Generating unique operation named: updateUsingDELETE_9
2019-05-24 10:03:34 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-24 10:03:34 -Generating unique operation named: updateUsingTRACE_9
2019-05-24 10:03:34 -Generating unique operation named: addUsingGET_14
2019-05-24 10:03:34 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-24 10:03:34 -Generating unique operation named: editUsingGET_15
2019-05-24 10:03:34 -Generating unique operation named: listUsingGET_16
2019-05-24 10:03:34 -Generating unique operation named: saveUsingPOST_13
2019-05-24 10:03:34 -Generating unique operation named: saveUsingPOST_14
2019-05-24 10:03:34 -Generating unique operation named: updateUsingPOST_15
2019-05-24 10:03:34 -Generating unique operation named: listUsingGET_17
2019-05-24 10:03:34 -Generating unique operation named: listUsingHEAD_1
2019-05-24 10:03:34 -Generating unique operation named: listUsingPOST_1
2019-05-24 10:03:34 -Generating unique operation named: listUsingPUT_1
2019-05-24 10:03:34 -Generating unique operation named: listUsingPATCH_1
2019-05-24 10:03:34 -Generating unique operation named: listUsingDELETE_1
2019-05-24 10:03:34 -Generating unique operation named: listUsingOPTIONS_1
2019-05-24 10:03:34 -Generating unique operation named: listUsingTRACE_1
2019-05-24 10:03:34 -Generating unique operation named: countDDUsingGET_1
2019-05-24 10:03:34 -Generating unique operation named: exportDDUsingGET_1
2019-05-24 10:03:34 -Generating unique operation named: addUsingGET_15
2019-05-24 10:03:34 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-24 10:03:34 -Generating unique operation named: editUsingGET_16
2019-05-24 10:03:34 -Generating unique operation named: listUsingGET_18
2019-05-24 10:03:34 -Generating unique operation named: removeUsingPOST_28
2019-05-24 10:03:34 -Generating unique operation named: saveUsingPOST_15
2019-05-24 10:03:34 -Generating unique operation named: treeUsingGET_3
2019-05-24 10:03:34 -Generating unique operation named: treeViewUsingGET_1
2019-05-24 10:03:34 -Generating unique operation named: updateUsingPOST_16
2019-05-24 10:03:34 -Generating unique operation named: addUsingGET_16
2019-05-24 10:03:34 -Generating unique operation named: editUsingGET_17
2019-05-24 10:03:34 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-24 10:03:34 -Generating unique operation named: listUsingGET_19
2019-05-24 10:03:34 -Generating unique operation named: removeUsingPOST_29
2019-05-24 10:03:34 -Generating unique operation named: removeUsingPOST_30
2019-05-24 10:03:34 -Generating unique operation named: saveUsingPOST_16
2019-05-24 10:03:34 -Generating unique operation named: updateUsingGET_10
2019-05-24 10:03:34 -Generating unique operation named: updateUsingHEAD_10
2019-05-24 10:03:34 -Generating unique operation named: updateUsingPOST_17
2019-05-24 10:03:34 -Generating unique operation named: updateUsingPUT_10
2019-05-24 10:03:34 -Generating unique operation named: updateUsingPATCH_10
2019-05-24 10:03:34 -Generating unique operation named: updateUsingDELETE_10
2019-05-24 10:03:34 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-24 10:03:34 -Generating unique operation named: updateUsingTRACE_10
2019-05-24 10:03:34 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-24 10:03:34 -Generating unique operation named: addUsingGET_17
2019-05-24 10:03:34 -Generating unique operation named: editUsingGET_18
2019-05-24 10:03:34 -Generating unique operation named: listUsingGET_20
2019-05-24 10:03:34 -Generating unique operation named: removeUsingPOST_31
2019-05-24 10:03:34 -Generating unique operation named: removeUsingPOST_32
2019-05-24 10:03:34 -Generating unique operation named: saveUsingPOST_17
2019-05-24 10:03:34 -Generating unique operation named: updateUsingGET_11
2019-05-24 10:03:35 -Generating unique operation named: updateUsingHEAD_11
2019-05-24 10:03:35 -Generating unique operation named: updateUsingPOST_18
2019-05-24 10:03:35 -Generating unique operation named: updateUsingPUT_11
2019-05-24 10:03:35 -Generating unique operation named: updateUsingPATCH_11
2019-05-24 10:03:35 -Generating unique operation named: updateUsingDELETE_11
2019-05-24 10:03:35 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-24 10:03:35 -Generating unique operation named: updateUsingTRACE_11
2019-05-24 10:03:35 -Generating unique operation named: addUsingGET_18
2019-05-24 10:03:35 -Generating unique operation named: editUsingGET_19
2019-05-24 10:03:35 -Generating unique operation named: listUsingGET_21
2019-05-24 10:03:35 -Generating unique operation named: removeUsingPOST_33
2019-05-24 10:03:35 -Generating unique operation named: removeUsingPOST_34
2019-05-24 10:03:35 -Generating unique operation named: saveUsingPOST_18
2019-05-24 10:03:35 -Generating unique operation named: updateUsingGET_12
2019-05-24 10:03:35 -Generating unique operation named: updateUsingHEAD_12
2019-05-24 10:03:35 -Generating unique operation named: updateUsingPOST_19
2019-05-24 10:03:35 -Generating unique operation named: updateUsingPUT_12
2019-05-24 10:03:35 -Generating unique operation named: updateUsingPATCH_12
2019-05-24 10:03:35 -Generating unique operation named: updateUsingDELETE_12
2019-05-24 10:03:35 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-24 10:03:35 -Generating unique operation named: updateUsingTRACE_12
2019-05-24 10:03:35 -Starting Quartz Scheduler now
2019-05-24 10:03:35 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-24 10:03:35 -Starting...
2019-05-24 10:03:35 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-24 10:03:35 -Started.
2019-05-24 10:03:35 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-24 10:03:35 -Using a shared selector for servlet write/read
2019-05-24 10:03:35 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-24 10:03:35 -Started BootdoApplication in 26.419 seconds (JVM running for 27.136)
2019-05-24 10:03:35 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-24 10:03:36 -==> Parameters: 
2019-05-24 10:03:36 -<==      Total: 1
2019-05-24 10:04:04 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-24 10:04:04 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-24 10:04:04 -FrameworkServlet 'dispatcherServlet': initialization completed in 86 ms
2019-05-24 10:04:04 -Enabling session validation scheduler...
2019-05-24 10:04:04 -请求地址 : http://localhost:8081/login;JSESSIONID=875203d1-619b-4396-b4ba-c6076766c090
2019-05-24 10:04:04 -HTTP METHOD : GET
2019-05-24 10:04:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 10:04:04 -参数 : [{}]
2019-05-24 10:04:04 -耗时 : 9
2019-05-24 10:04:04 -返回值 : login
2019-05-24 10:04:06 -请求地址 : http://localhost:8081/getVerify
2019-05-24 10:04:06 -HTTP METHOD : GET
2019-05-24 10:04:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 10:04:06 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1b810ebb, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1546f3bb]
2019-05-24 10:04:15 -3837
2019-05-24 10:04:15 -耗时 : 9599
2019-05-24 10:04:15 -返回值 : null
2019-05-24 10:04:15 -请求地址 : http://localhost:8081/login
2019-05-24 10:04:15 -HTTP METHOD : GET
2019-05-24 10:04:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 10:04:15 -参数 : [{}]
2019-05-24 10:04:15 -耗时 : 0
2019-05-24 10:04:15 -返回值 : login
2019-05-24 10:04:20 -请求地址 : http://localhost:8081/login
2019-05-24 10:04:20 -HTTP METHOD : POST
2019-05-24 10:04:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 10:04:20 -参数 : [admin, 111111, 3837, org.apache.shiro.web.servlet.ShiroHttpServletRequest@269b0962]
2019-05-24 10:04:20 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-24 10:04:20 -==> Parameters: admin(String)
2019-05-24 10:04:21 -<==      Total: 1
2019-05-24 10:04:21 -耗时 : 229
2019-05-24 10:04:21 -返回值 : {msg=操作成功, code=0}
2019-05-24 10:04:21 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-24 10:04:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:04:21 -==> Parameters: 1(Long), admin(String), 登录(String), 229(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 10:04:21.197(Timestamp)
2019-05-24 10:04:21 -请求地址 : http://localhost:8081/index
2019-05-24 10:04:21 -HTTP METHOD : GET
2019-05-24 10:04:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 10:04:21 -参数 : [{}]
2019-05-24 10:04:21 -<==    Updates: 1
2019-05-24 10:04:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 10:04:21 -==> Parameters: 1(Long)
2019-05-24 10:04:21 -<==      Total: 50
2019-05-24 10:04:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 10:04:21 -==> Parameters: 138(Long)
2019-05-24 10:04:21 -<==      Total: 1
2019-05-24 10:04:21 -耗时 : 517
2019-05-24 10:04:21 -返回值 : index_v1
2019-05-24 10:04:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:04:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 518(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 10:04:21.909(Timestamp)
2019-05-24 10:04:22 -请求地址 : http://localhost:8081/main
2019-05-24 10:04:22 -HTTP METHOD : GET
2019-05-24 10:04:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:04:22 -参数 : []
2019-05-24 10:04:22 -耗时 : 0
2019-05-24 10:04:22 -返回值 : main
2019-05-24 10:04:22 -<==    Updates: 1
2019-05-24 10:04:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 10:04:22 -HTTP METHOD : GET
2019-05-24 10:04:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 10:04:22 -参数 : []
2019-05-24 10:04:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 10:04:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 10:04:22 -<==      Total: 0
2019-05-24 10:04:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 10:04:22 -==> Parameters: 1(Long), 0(String)
2019-05-24 10:04:22 -<==      Total: 1
2019-05-24 10:04:22 -耗时 : 105
2019-05-24 10:04:22 -返回值 : com.bootdo.common.utils.PageUtils@75dd2682
2019-05-24 10:04:22 -请求地址 : http://localhost:8081/main
2019-05-24 10:04:22 -HTTP METHOD : GET
2019-05-24 10:04:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:04:22 -参数 : []
2019-05-24 10:04:22 -耗时 : 0
2019-05-24 10:04:22 -返回值 : main
2019-05-24 10:04:27 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1]
2019-05-24 10:04:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 10:04:37 -==> Parameters: 1(Long)
2019-05-24 10:04:37 -<==      Total: 94
2019-05-24 10:04:37 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 10:04:37 -HTTP METHOD : GET
2019-05-24 10:04:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 10:04:37 -参数 : []
2019-05-24 10:04:37 -耗时 : 1
2019-05-24 10:04:37 -返回值 : /moneyList/moneyWZ
2019-05-24 10:04:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 10:04:38 -HTTP METHOD : GET
2019-05-24 10:04:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 10:04:38 -参数 : [userType]
2019-05-24 10:04:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 10:04:38 -==> Parameters: userType(String)
2019-05-24 10:04:38 -<==      Total: 4
2019-05-24 10:04:38 -耗时 : 170
2019-05-24 10:04:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 10:10:36 -请求地址 : http://localhost:8081/index
2019-05-24 10:10:36 -HTTP METHOD : GET
2019-05-24 10:10:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 10:10:36 -参数 : [{}]
2019-05-24 10:10:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 10:10:36 -==> Parameters: 1(Long)
2019-05-24 10:10:36 -<==      Total: 50
2019-05-24 10:10:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 10:10:36 -==> Parameters: 138(Long)
2019-05-24 10:10:36 -<==      Total: 1
2019-05-24 10:10:36 -耗时 : 31
2019-05-24 10:10:36 -返回值 : index_v1
2019-05-24 10:10:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:10:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 10:10:36.877(Timestamp)
2019-05-24 10:10:36 -请求地址 : http://localhost:8081/main
2019-05-24 10:10:36 -HTTP METHOD : GET
2019-05-24 10:10:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:10:36 -参数 : []
2019-05-24 10:10:36 -耗时 : 0
2019-05-24 10:10:36 -返回值 : main
2019-05-24 10:10:37 -<==    Updates: 1
2019-05-24 10:10:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 10:10:37 -HTTP METHOD : GET
2019-05-24 10:10:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 10:10:37 -参数 : []
2019-05-24 10:10:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 10:10:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 10:10:37 -<==      Total: 0
2019-05-24 10:10:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 10:10:37 -==> Parameters: 1(Long), 0(String)
2019-05-24 10:10:37 -<==      Total: 1
2019-05-24 10:10:37 -耗时 : 32
2019-05-24 10:10:37 -返回值 : com.bootdo.common.utils.PageUtils@c9f3718
2019-05-24 10:10:37 -请求地址 : http://localhost:8081/main
2019-05-24 10:10:37 -HTTP METHOD : GET
2019-05-24 10:10:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:10:37 -参数 : []
2019-05-24 10:10:37 -耗时 : 1
2019-05-24 10:10:37 -返回值 : main
2019-05-24 10:10:42 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 10:10:42 -HTTP METHOD : GET
2019-05-24 10:10:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 10:10:42 -参数 : []
2019-05-24 10:10:42 -耗时 : 0
2019-05-24 10:10:42 -返回值 : /moneyList/moneyWZ
2019-05-24 10:10:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 10:10:42 -HTTP METHOD : GET
2019-05-24 10:10:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 10:10:42 -参数 : [userType]
2019-05-24 10:10:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 10:10:42 -==> Parameters: userType(String)
2019-05-24 10:10:42 -<==      Total: 4
2019-05-24 10:10:42 -耗时 : 8
2019-05-24 10:10:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 10:12:05 -请求地址 : http://localhost:8081/index
2019-05-24 10:12:05 -HTTP METHOD : GET
2019-05-24 10:12:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 10:12:05 -参数 : [{}]
2019-05-24 10:12:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 10:12:05 -==> Parameters: 1(Long)
2019-05-24 10:12:05 -<==      Total: 50
2019-05-24 10:12:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 10:12:05 -==> Parameters: 138(Long)
2019-05-24 10:12:05 -<==      Total: 1
2019-05-24 10:12:05 -耗时 : 40
2019-05-24 10:12:05 -返回值 : index_v1
2019-05-24 10:12:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:12:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 10:12:05.693(Timestamp)
2019-05-24 10:12:05 -请求地址 : http://localhost:8081/main
2019-05-24 10:12:05 -HTTP METHOD : GET
2019-05-24 10:12:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:12:05 -参数 : []
2019-05-24 10:12:05 -耗时 : 0
2019-05-24 10:12:05 -返回值 : main
2019-05-24 10:12:05 -<==    Updates: 1
2019-05-24 10:12:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 10:12:05 -HTTP METHOD : GET
2019-05-24 10:12:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 10:12:05 -参数 : []
2019-05-24 10:12:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 10:12:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 10:12:05 -<==      Total: 0
2019-05-24 10:12:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 10:12:05 -==> Parameters: 1(Long), 0(String)
2019-05-24 10:12:05 -<==      Total: 1
2019-05-24 10:12:05 -耗时 : 14
2019-05-24 10:12:05 -返回值 : com.bootdo.common.utils.PageUtils@1bbe3e11
2019-05-24 10:12:06 -请求地址 : http://localhost:8081/main
2019-05-24 10:12:06 -HTTP METHOD : GET
2019-05-24 10:12:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:12:06 -参数 : []
2019-05-24 10:12:06 -耗时 : 0
2019-05-24 10:12:06 -返回值 : main
2019-05-24 10:12:08 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 10:12:08 -HTTP METHOD : GET
2019-05-24 10:12:08 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 10:12:08 -参数 : []
2019-05-24 10:12:08 -耗时 : 1
2019-05-24 10:12:08 -返回值 : /moneyList/moneyWZ
2019-05-24 10:12:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 10:12:08 -HTTP METHOD : GET
2019-05-24 10:12:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 10:12:08 -参数 : [userType]
2019-05-24 10:12:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 10:12:08 -==> Parameters: userType(String)
2019-05-24 10:12:08 -<==      Total: 4
2019-05-24 10:12:08 -耗时 : 5
2019-05-24 10:12:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 10:14:06 -请求地址 : http://localhost:8081/index
2019-05-24 10:14:06 -HTTP METHOD : GET
2019-05-24 10:14:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 10:14:06 -参数 : [{}]
2019-05-24 10:14:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 10:14:06 -==> Parameters: 1(Long)
2019-05-24 10:14:06 -<==      Total: 50
2019-05-24 10:14:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 10:14:06 -==> Parameters: 138(Long)
2019-05-24 10:14:06 -<==      Total: 1
2019-05-24 10:14:06 -耗时 : 27
2019-05-24 10:14:06 -返回值 : index_v1
2019-05-24 10:14:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:14:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 10:14:06.081(Timestamp)
2019-05-24 10:14:06 -请求地址 : http://localhost:8081/main
2019-05-24 10:14:06 -HTTP METHOD : GET
2019-05-24 10:14:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:14:06 -参数 : []
2019-05-24 10:14:06 -耗时 : 1
2019-05-24 10:14:06 -返回值 : main
2019-05-24 10:14:06 -<==    Updates: 1
2019-05-24 10:14:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 10:14:06 -HTTP METHOD : GET
2019-05-24 10:14:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 10:14:06 -参数 : []
2019-05-24 10:14:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 10:14:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 10:14:06 -<==      Total: 0
2019-05-24 10:14:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 10:14:06 -==> Parameters: 1(Long), 0(String)
2019-05-24 10:14:06 -<==      Total: 1
2019-05-24 10:14:06 -耗时 : 39
2019-05-24 10:14:06 -返回值 : com.bootdo.common.utils.PageUtils@2f35c21c
2019-05-24 10:14:06 -请求地址 : http://localhost:8081/main
2019-05-24 10:14:06 -HTTP METHOD : GET
2019-05-24 10:14:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:14:06 -参数 : []
2019-05-24 10:14:06 -耗时 : 1
2019-05-24 10:14:06 -返回值 : main
2019-05-24 10:14:08 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 10:14:08 -HTTP METHOD : GET
2019-05-24 10:14:08 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 10:14:08 -参数 : []
2019-05-24 10:14:08 -耗时 : 0
2019-05-24 10:14:08 -返回值 : /moneyList/moneyWZ
2019-05-24 10:14:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 10:14:08 -HTTP METHOD : GET
2019-05-24 10:14:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 10:14:08 -参数 : [userType]
2019-05-24 10:14:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 10:14:08 -==> Parameters: userType(String)
2019-05-24 10:14:08 -<==      Total: 4
2019-05-24 10:14:08 -耗时 : 9
2019-05-24 10:14:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 10:15:52 -Starting BootdoApplication on PC-201905091110 with PID 6188 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-24 10:15:52 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-24 10:15:52 -The following profiles are active: dev
2019-05-24 10:15:53 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Fri May 24 10:15:53 CST 2019]; root of context hierarchy
2019-05-24 10:15:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-24 10:15:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c597f059] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:15:59 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$b7f11f00] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:15:59 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:16:00 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:16:00 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:16:00 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-24 10:16:00 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-24 10:16:00 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:16:00 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:16:00 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:16:00 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:16:01 -Tomcat initialized with port(s): 8081 (http)
2019-05-24 10:16:01 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-24 10:16:01 -Starting service [Tomcat]
2019-05-24 10:16:01 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-24 10:16:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-24 10:16:01 -Initializing Spring embedded WebApplicationContext
2019-05-24 10:16:01 -Root WebApplicationContext: initialization completed in 8880 ms
2019-05-24 10:16:02 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-24 10:16:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-24 10:16:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-24 10:16:02 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-24 10:16:02 -Filter xssFilter was not registered (disabled)
2019-05-24 10:16:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-24 10:16:02 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-24 10:16:02 -Servlet statViewServlet mapped to [/druid/*]
2019-05-24 10:16:02 -Servlet dispatcherServlet mapped to [/]
2019-05-24 10:16:06 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Fri May 24 10:15:53 CST 2019]; root of context hierarchy
2019-05-24 10:16:07 -Using default implementation for ThreadExecutor
2019-05-24 10:16:07 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-24 10:16:07 -Quartz Scheduler v.2.2.1 created.
2019-05-24 10:16:07 -RAMJobStore initialized.
2019-05-24 10:16:07 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-24 10:16:07 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-24 10:16:07 -Quartz scheduler version: 2.2.1
2019-05-24 10:16:07 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7f5ce33e
2019-05-24 10:16:08 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-24 10:16:08 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-24 10:16:11 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-24 10:16:11 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:16:11 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:16:11 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-24 10:16:11 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-24 10:16:11 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-24 10:16:11 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-24 10:16:11 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:16:11 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:16:11 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-24 10:16:11 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:16:11 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-24 10:16:11 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 10:16:11 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-24 10:16:11 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 10:16:11 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-24 10:16:11 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:16:11 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-24 10:16:11 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:16:11 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-24 10:16:11 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-24 10:16:11 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 10:16:11 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-24 10:16:11 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 10:16:11 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-24 10:16:11 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-24 10:16:11 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-24 10:16:11 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-24 10:16:11 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-24 10:16:11 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-24 10:16:11 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-24 10:16:11 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-24 10:16:11 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-24 10:16:11 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-24 10:16:11 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-24 10:16:11 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-24 10:16:11 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-24 10:16:11 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 10:16:11 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-24 10:16:11 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 10:16:11 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-24 10:16:11 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-24 10:16:11 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-24 10:16:11 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-24 10:16:11 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-24 10:16:11 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-24 10:16:11 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-24 10:16:11 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-24 10:16:11 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-24 10:16:11 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:16:11 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:16:11 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:16:11 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-24 10:16:11 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:16:11 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-24 10:16:11 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-24 10:16:11 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-24 10:16:11 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:16:11 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-24 10:16:11 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-24 10:16:11 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-24 10:16:11 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-24 10:16:11 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-24 10:16:11 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-24 10:16:11 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-24 10:16:11 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-24 10:16:11 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-24 10:16:11 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:16:11 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-24 10:16:11 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-24 10:16:11 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 10:16:11 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 10:16:11 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-24 10:16:11 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 10:16:11 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-24 10:16:11 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-24 10:16:11 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-24 10:16:11 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:16:11 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:16:11 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:16:11 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-24 10:16:11 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:16:11 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:16:11 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-24 10:16:11 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-24 10:16:11 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 10:16:11 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 10:16:11 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-24 10:16:11 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:16:11 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-24 10:16:11 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 10:16:11 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 10:16:11 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-24 10:16:11 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:16:11 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-24 10:16:11 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 10:16:11 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 10:16:11 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-24 10:16:11 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:16:11 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-24 10:16:11 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-24 10:16:11 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-24 10:16:11 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-24 10:16:11 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-24 10:16:11 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-24 10:16:11 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-24 10:16:11 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-24 10:16:11 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-24 10:16:11 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-24 10:16:11 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-24 10:16:11 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-24 10:16:11 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-24 10:16:11 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-24 10:16:11 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-24 10:16:11 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-24 10:16:11 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-24 10:16:11 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-24 10:16:11 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-24 10:16:11 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:16:11 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-24 10:16:11 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-24 10:16:11 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-24 10:16:11 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-24 10:16:11 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-24 10:16:11 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-24 10:16:11 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-24 10:16:11 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-24 10:16:11 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-24 10:16:11 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-24 10:16:11 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-24 10:16:11 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-24 10:16:11 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-24 10:16:11 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-24 10:16:11 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-24 10:16:11 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-24 10:16:11 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-24 10:16:11 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 10:16:11 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 10:16:11 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:16:11 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-24 10:16:11 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-24 10:16:11 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-24 10:16:11 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-24 10:16:11 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-24 10:16:11 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-24 10:16:11 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:16:11 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-24 10:16:11 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-24 10:16:11 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-24 10:16:11 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 10:16:11 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:16:11 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 10:16:11 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-24 10:16:11 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:16:11 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 10:16:11 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:16:11 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-24 10:16:11 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-24 10:16:11 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:16:11 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-24 10:16:11 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-24 10:16:11 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-24 10:16:12 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-24 10:16:12 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-24 10:16:12 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-24 10:16:13 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:16:13 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Fri May 24 10:15:53 CST 2019]; root of context hierarchy
2019-05-24 10:16:13 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:16:13 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:16:13 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:16:13 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-24 10:16:13 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-24 10:16:15 -Registering beans for JMX exposure on startup
2019-05-24 10:16:15 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-24 10:16:16 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-24 10:16:16 -Starting beans in phase 2147483647
2019-05-24 10:16:16 -Context refreshed
2019-05-24 10:16:16 -Found 1 custom documentation plugin(s)
2019-05-24 10:16:16 -Scanning for api listing references
2019-05-24 10:16:16 -Generating unique operation named: getCountDUsingPOST_1
2019-05-24 10:16:16 -Generating unique operation named: removeUsingPOST_1
2019-05-24 10:16:16 -Generating unique operation named: addUsingGET_1
2019-05-24 10:16:16 -Generating unique operation named: editUsingGET_1
2019-05-24 10:16:16 -Generating unique operation named: listUsingGET_1
2019-05-24 10:16:16 -Generating unique operation named: removeUsingPOST_2
2019-05-24 10:16:16 -Generating unique operation named: removeUsingPOST_3
2019-05-24 10:16:16 -Generating unique operation named: saveUsingPOST_1
2019-05-24 10:16:16 -Generating unique operation named: updateUsingGET_1
2019-05-24 10:16:16 -Generating unique operation named: updateUsingHEAD_1
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPOST_1
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPUT_1
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPATCH_1
2019-05-24 10:16:17 -Generating unique operation named: updateUsingDELETE_1
2019-05-24 10:16:17 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-24 10:16:17 -Generating unique operation named: updateUsingTRACE_1
2019-05-24 10:16:17 -Generating unique operation named: addUsingGET_2
2019-05-24 10:16:17 -Generating unique operation named: editUsingGET_2
2019-05-24 10:16:17 -Generating unique operation named: listUsingGET_2
2019-05-24 10:16:17 -Generating unique operation named: removeUsingPOST_4
2019-05-24 10:16:17 -Generating unique operation named: removeUsingPOST_5
2019-05-24 10:16:17 -Generating unique operation named: saveUsingPOST_2
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPOST_2
2019-05-24 10:16:17 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-24 10:16:17 -Generating unique operation named: addUsingGET_3
2019-05-24 10:16:17 -Generating unique operation named: editUsingGET_3
2019-05-24 10:16:17 -Generating unique operation named: listUsingGET_3
2019-05-24 10:16:17 -Generating unique operation named: removeUsingPOST_6
2019-05-24 10:16:17 -Generating unique operation named: removeUsingPOST_7
2019-05-24 10:16:17 -Generating unique operation named: saveUsingPOST_3
2019-05-24 10:16:17 -Generating unique operation named: updateUsingGET_2
2019-05-24 10:16:17 -Generating unique operation named: updateUsingHEAD_2
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPOST_3
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPUT_2
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPATCH_2
2019-05-24 10:16:17 -Generating unique operation named: updateUsingDELETE_2
2019-05-24 10:16:17 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-24 10:16:17 -Generating unique operation named: updateUsingTRACE_2
2019-05-24 10:16:17 -Generating unique operation named: addUsingGET_4
2019-05-24 10:16:17 -Generating unique operation named: editUsingGET_4
2019-05-24 10:16:17 -Generating unique operation named: listUsingGET_4
2019-05-24 10:16:17 -Generating unique operation named: removeUsingPOST_8
2019-05-24 10:16:17 -Generating unique operation named: removeUsingPOST_9
2019-05-24 10:16:17 -Generating unique operation named: saveUsingPOST_4
2019-05-24 10:16:17 -Generating unique operation named: updateUsingGET_3
2019-05-24 10:16:17 -Generating unique operation named: updateUsingHEAD_3
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPOST_4
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPUT_3
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPATCH_3
2019-05-24 10:16:17 -Generating unique operation named: updateUsingDELETE_3
2019-05-24 10:16:17 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-24 10:16:17 -Generating unique operation named: updateUsingTRACE_3
2019-05-24 10:16:17 -Generating unique operation named: ElecUsingGET_1
2019-05-24 10:16:17 -Generating unique operation named: addUsingGET_5
2019-05-24 10:16:17 -Generating unique operation named: editUsingGET_5
2019-05-24 10:16:17 -Generating unique operation named: listUsingGET_5
2019-05-24 10:16:17 -Generating unique operation named: removeUsingPOST_10
2019-05-24 10:16:17 -Generating unique operation named: removeUsingPOST_11
2019-05-24 10:16:17 -Generating unique operation named: saveUsingPOST_5
2019-05-24 10:16:17 -Generating unique operation named: updateUsingGET_4
2019-05-24 10:16:17 -Generating unique operation named: updateUsingHEAD_4
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPOST_5
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPUT_4
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPATCH_4
2019-05-24 10:16:17 -Generating unique operation named: updateUsingDELETE_4
2019-05-24 10:16:17 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-24 10:16:17 -Generating unique operation named: updateUsingTRACE_4
2019-05-24 10:16:17 -Generating unique operation named: editUsingGET_6
2019-05-24 10:16:17 -Generating unique operation named: listUsingGET_6
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPOST_6
2019-05-24 10:16:17 -Generating unique operation named: addUsingGET_6
2019-05-24 10:16:17 -Generating unique operation named: editUsingGET_7
2019-05-24 10:16:17 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-24 10:16:17 -Generating unique operation named: listUsingGET_7
2019-05-24 10:16:17 -Generating unique operation named: removeUsingPOST_12
2019-05-24 10:16:17 -Generating unique operation named: removeUsingPOST_13
2019-05-24 10:16:17 -Generating unique operation named: saveUsingPOST_6
2019-05-24 10:16:17 -Generating unique operation named: updateUsingGET_5
2019-05-24 10:16:17 -Generating unique operation named: updateUsingHEAD_5
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPOST_7
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPUT_5
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPATCH_5
2019-05-24 10:16:17 -Generating unique operation named: updateUsingDELETE_5
2019-05-24 10:16:17 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-24 10:16:17 -Generating unique operation named: updateUsingTRACE_5
2019-05-24 10:16:17 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-24 10:16:17 -Generating unique operation named: addUsingGET_7
2019-05-24 10:16:17 -Generating unique operation named: editUsingGET_8
2019-05-24 10:16:17 -Generating unique operation named: listUsingGET_8
2019-05-24 10:16:17 -Generating unique operation named: removeUsingPOST_14
2019-05-24 10:16:17 -Generating unique operation named: removeUsingPOST_15
2019-05-24 10:16:17 -Generating unique operation named: saveUsingPOST_7
2019-05-24 10:16:17 -Generating unique operation named: updateUsingGET_6
2019-05-24 10:16:17 -Generating unique operation named: updateUsingHEAD_6
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPOST_8
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPUT_6
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPATCH_6
2019-05-24 10:16:17 -Generating unique operation named: updateUsingDELETE_6
2019-05-24 10:16:17 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-24 10:16:17 -Generating unique operation named: updateUsingTRACE_6
2019-05-24 10:16:17 -Generating unique operation named: addUsingGET_8
2019-05-24 10:16:17 -Generating unique operation named: editUsingGET_9
2019-05-24 10:16:17 -Generating unique operation named: listUsingGET_9
2019-05-24 10:16:17 -Generating unique operation named: removeUsingPOST_16
2019-05-24 10:16:17 -Generating unique operation named: removeUsingPOST_17
2019-05-24 10:16:17 -Generating unique operation named: saveUsingPOST_8
2019-05-24 10:16:17 -Generating unique operation named: updateUsingGET_7
2019-05-24 10:16:17 -Generating unique operation named: updateUsingHEAD_7
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPOST_9
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPUT_7
2019-05-24 10:16:17 -Generating unique operation named: updateUsingPATCH_7
2019-05-24 10:16:17 -Generating unique operation named: updateUsingDELETE_7
2019-05-24 10:16:17 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-24 10:16:17 -Generating unique operation named: updateUsingTRACE_7
2019-05-24 10:16:18 -Generating unique operation named: addUsingGET_9
2019-05-24 10:16:18 -Generating unique operation named: editUsingGET_10
2019-05-24 10:16:18 -Generating unique operation named: infoUsingGET_1
2019-05-24 10:16:18 -Generating unique operation named: infoUsingHEAD_1
2019-05-24 10:16:18 -Generating unique operation named: infoUsingPOST_1
2019-05-24 10:16:18 -Generating unique operation named: infoUsingPUT_1
2019-05-24 10:16:18 -Generating unique operation named: infoUsingPATCH_1
2019-05-24 10:16:18 -Generating unique operation named: infoUsingDELETE_1
2019-05-24 10:16:18 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-24 10:16:18 -Generating unique operation named: infoUsingTRACE_1
2019-05-24 10:16:18 -Generating unique operation named: listUsingGET_10
2019-05-24 10:16:18 -Generating unique operation named: removeUsingPOST_18
2019-05-24 10:16:18 -Generating unique operation named: removeUsingPOST_19
2019-05-24 10:16:18 -Generating unique operation named: saveUsingPOST_9
2019-05-24 10:16:18 -Generating unique operation named: updateUsingPOST_10
2019-05-24 10:16:18 -Generating unique operation named: listUsingGET_11
2019-05-24 10:16:18 -Generating unique operation named: removeUsingPOST_20
2019-05-24 10:16:18 -Generating unique operation named: welcomeUsingGET_1
2019-05-24 10:16:18 -Generating unique operation named: addUsingGET_10
2019-05-24 10:16:18 -Generating unique operation named: editUsingGET_11
2019-05-24 10:16:18 -Generating unique operation named: listUsingGET_12
2019-05-24 10:16:18 -Generating unique operation named: removeUsingPOST_21
2019-05-24 10:16:18 -Generating unique operation named: saveUsingPOST_10
2019-05-24 10:16:18 -Generating unique operation named: treeUsingGET_1
2019-05-24 10:16:18 -Generating unique operation named: treeUsingGET_2
2019-05-24 10:16:18 -Generating unique operation named: updateUsingPOST_11
2019-05-24 10:16:18 -Generating unique operation named: addUsingGET_11
2019-05-24 10:16:18 -Generating unique operation named: editUsingGET_12
2019-05-24 10:16:18 -Generating unique operation named: listUsingGET_13
2019-05-24 10:16:18 -Generating unique operation named: removeUsingPOST_22
2019-05-24 10:16:18 -Generating unique operation named: removeUsingPOST_23
2019-05-24 10:16:18 -Generating unique operation named: updateUsingPOST_12
2019-05-24 10:16:18 -Generating unique operation named: addUsingGET_12
2019-05-24 10:16:18 -Generating unique operation named: editUsingGET_13
2019-05-24 10:16:18 -Generating unique operation named: listUsingGET_14
2019-05-24 10:16:18 -Generating unique operation named: removeUsingPOST_24
2019-05-24 10:16:18 -Generating unique operation named: removeUsingPOST_25
2019-05-24 10:16:18 -Generating unique operation named: saveUsingPOST_11
2019-05-24 10:16:18 -Generating unique operation named: updateUsingGET_8
2019-05-24 10:16:18 -Generating unique operation named: updateUsingHEAD_8
2019-05-24 10:16:18 -Generating unique operation named: updateUsingPOST_13
2019-05-24 10:16:18 -Generating unique operation named: updateUsingPUT_8
2019-05-24 10:16:18 -Generating unique operation named: updateUsingPATCH_8
2019-05-24 10:16:18 -Generating unique operation named: updateUsingDELETE_8
2019-05-24 10:16:18 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-24 10:16:18 -Generating unique operation named: updateUsingTRACE_8
2019-05-24 10:16:18 -Generating unique operation named: addUsingGET_13
2019-05-24 10:16:18 -Generating unique operation named: editUsingGET_14
2019-05-24 10:16:18 -Generating unique operation named: listUsingGET_15
2019-05-24 10:16:18 -Generating unique operation named: printEditUsingGET_1
2019-05-24 10:16:18 -Generating unique operation named: removeUsingPOST_26
2019-05-24 10:16:18 -Generating unique operation named: removeUsingPOST_27
2019-05-24 10:16:18 -Generating unique operation named: saveUsingPOST_12
2019-05-24 10:16:18 -Generating unique operation named: updateUsingGET_9
2019-05-24 10:16:18 -Generating unique operation named: updateUsingHEAD_9
2019-05-24 10:16:18 -Generating unique operation named: updateUsingPOST_14
2019-05-24 10:16:18 -Generating unique operation named: updateUsingPUT_9
2019-05-24 10:16:18 -Generating unique operation named: updateUsingPATCH_9
2019-05-24 10:16:18 -Generating unique operation named: updateUsingDELETE_9
2019-05-24 10:16:18 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-24 10:16:18 -Generating unique operation named: updateUsingTRACE_9
2019-05-24 10:16:18 -Generating unique operation named: addUsingGET_14
2019-05-24 10:16:18 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-24 10:16:18 -Generating unique operation named: editUsingGET_15
2019-05-24 10:16:18 -Generating unique operation named: listUsingGET_16
2019-05-24 10:16:18 -Generating unique operation named: saveUsingPOST_13
2019-05-24 10:16:18 -Generating unique operation named: saveUsingPOST_14
2019-05-24 10:16:18 -Generating unique operation named: updateUsingPOST_15
2019-05-24 10:16:18 -Generating unique operation named: listUsingGET_17
2019-05-24 10:16:18 -Generating unique operation named: listUsingHEAD_1
2019-05-24 10:16:18 -Generating unique operation named: listUsingPOST_1
2019-05-24 10:16:18 -Generating unique operation named: listUsingPUT_1
2019-05-24 10:16:18 -Generating unique operation named: listUsingPATCH_1
2019-05-24 10:16:18 -Generating unique operation named: listUsingDELETE_1
2019-05-24 10:16:18 -Generating unique operation named: listUsingOPTIONS_1
2019-05-24 10:16:18 -Generating unique operation named: listUsingTRACE_1
2019-05-24 10:16:18 -Generating unique operation named: countDDUsingGET_1
2019-05-24 10:16:18 -Generating unique operation named: exportDDUsingGET_1
2019-05-24 10:16:19 -Generating unique operation named: addUsingGET_15
2019-05-24 10:16:19 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-24 10:16:19 -Generating unique operation named: editUsingGET_16
2019-05-24 10:16:19 -Generating unique operation named: listUsingGET_18
2019-05-24 10:16:19 -Generating unique operation named: removeUsingPOST_28
2019-05-24 10:16:19 -Generating unique operation named: saveUsingPOST_15
2019-05-24 10:16:19 -Generating unique operation named: treeUsingGET_3
2019-05-24 10:16:19 -Generating unique operation named: treeViewUsingGET_1
2019-05-24 10:16:19 -Generating unique operation named: updateUsingPOST_16
2019-05-24 10:16:19 -Generating unique operation named: addUsingGET_16
2019-05-24 10:16:19 -Generating unique operation named: editUsingGET_17
2019-05-24 10:16:19 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-24 10:16:19 -Generating unique operation named: listUsingGET_19
2019-05-24 10:16:19 -Generating unique operation named: removeUsingPOST_29
2019-05-24 10:16:19 -Generating unique operation named: removeUsingPOST_30
2019-05-24 10:16:19 -Generating unique operation named: saveUsingPOST_16
2019-05-24 10:16:19 -Generating unique operation named: updateUsingGET_10
2019-05-24 10:16:19 -Generating unique operation named: updateUsingHEAD_10
2019-05-24 10:16:19 -Generating unique operation named: updateUsingPOST_17
2019-05-24 10:16:19 -Generating unique operation named: updateUsingPUT_10
2019-05-24 10:16:19 -Generating unique operation named: updateUsingPATCH_10
2019-05-24 10:16:19 -Generating unique operation named: updateUsingDELETE_10
2019-05-24 10:16:19 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-24 10:16:19 -Generating unique operation named: updateUsingTRACE_10
2019-05-24 10:16:19 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-24 10:16:19 -Generating unique operation named: addUsingGET_17
2019-05-24 10:16:19 -Generating unique operation named: editUsingGET_18
2019-05-24 10:16:19 -Generating unique operation named: listUsingGET_20
2019-05-24 10:16:19 -Generating unique operation named: removeUsingPOST_31
2019-05-24 10:16:19 -Generating unique operation named: removeUsingPOST_32
2019-05-24 10:16:19 -Generating unique operation named: saveUsingPOST_17
2019-05-24 10:16:19 -Generating unique operation named: updateUsingGET_11
2019-05-24 10:16:19 -Generating unique operation named: updateUsingHEAD_11
2019-05-24 10:16:19 -Generating unique operation named: updateUsingPOST_18
2019-05-24 10:16:19 -Generating unique operation named: updateUsingPUT_11
2019-05-24 10:16:19 -Generating unique operation named: updateUsingPATCH_11
2019-05-24 10:16:19 -Generating unique operation named: updateUsingDELETE_11
2019-05-24 10:16:19 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-24 10:16:19 -Generating unique operation named: updateUsingTRACE_11
2019-05-24 10:16:19 -Generating unique operation named: addUsingGET_18
2019-05-24 10:16:19 -Generating unique operation named: editUsingGET_19
2019-05-24 10:16:19 -Generating unique operation named: listUsingGET_21
2019-05-24 10:16:19 -Generating unique operation named: removeUsingPOST_33
2019-05-24 10:16:19 -Generating unique operation named: removeUsingPOST_34
2019-05-24 10:16:19 -Generating unique operation named: saveUsingPOST_18
2019-05-24 10:16:19 -Generating unique operation named: updateUsingGET_12
2019-05-24 10:16:19 -Generating unique operation named: updateUsingHEAD_12
2019-05-24 10:16:19 -Generating unique operation named: updateUsingPOST_19
2019-05-24 10:16:19 -Generating unique operation named: updateUsingPUT_12
2019-05-24 10:16:19 -Generating unique operation named: updateUsingPATCH_12
2019-05-24 10:16:19 -Generating unique operation named: updateUsingDELETE_12
2019-05-24 10:16:19 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-24 10:16:19 -Generating unique operation named: updateUsingTRACE_12
2019-05-24 10:16:19 -Starting Quartz Scheduler now
2019-05-24 10:16:19 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-24 10:16:19 -Starting...
2019-05-24 10:16:19 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-24 10:16:19 -Started.
2019-05-24 10:16:19 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-24 10:16:19 -Using a shared selector for servlet write/read
2019-05-24 10:16:19 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-24 10:16:19 -Started BootdoApplication in 28.073 seconds (JVM running for 28.886)
2019-05-24 10:16:19 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-24 10:16:20 -==> Parameters: 
2019-05-24 10:16:20 -<==      Total: 1
2019-05-24 10:16:27 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-24 10:16:27 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-24 10:16:27 -FrameworkServlet 'dispatcherServlet': initialization completed in 112 ms
2019-05-24 10:16:27 -Enabling session validation scheduler...
2019-05-24 10:16:27 -请求地址 : http://localhost:8081/login;JSESSIONID=a641b1b5-2f7d-45d4-8851-2d592c2c5588
2019-05-24 10:16:27 -HTTP METHOD : GET
2019-05-24 10:16:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 10:16:27 -参数 : [{}]
2019-05-24 10:16:27 -耗时 : 6
2019-05-24 10:16:27 -返回值 : login
2019-05-24 10:16:29 -请求地址 : http://localhost:8081/getVerify
2019-05-24 10:16:29 -HTTP METHOD : GET
2019-05-24 10:16:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 10:16:29 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@15d998f3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4b37d12f]
2019-05-24 10:16:29 -6679
2019-05-24 10:16:29 -耗时 : 653
2019-05-24 10:16:29 -返回值 : null
2019-05-24 10:16:33 -请求地址 : http://localhost:8081/login
2019-05-24 10:16:33 -HTTP METHOD : POST
2019-05-24 10:16:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 10:16:33 -参数 : [admin, 111111, 6679, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1925f6fd]
2019-05-24 10:16:33 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-24 10:16:33 -==> Parameters: admin(String)
2019-05-24 10:16:33 -<==      Total: 1
2019-05-24 10:16:33 -耗时 : 149
2019-05-24 10:16:33 -返回值 : {msg=操作成功, code=0}
2019-05-24 10:16:33 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-24 10:16:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:16:33 -==> Parameters: 1(Long), admin(String), 登录(String), 150(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 10:16:33.346(Timestamp)
2019-05-24 10:16:33 -请求地址 : http://localhost:8081/index
2019-05-24 10:16:33 -HTTP METHOD : GET
2019-05-24 10:16:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 10:16:33 -参数 : [{}]
2019-05-24 10:16:33 -<==    Updates: 1
2019-05-24 10:16:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 10:16:33 -==> Parameters: 1(Long)
2019-05-24 10:16:33 -<==      Total: 50
2019-05-24 10:16:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 10:16:33 -==> Parameters: 138(Long)
2019-05-24 10:16:33 -<==      Total: 1
2019-05-24 10:16:33 -耗时 : 207
2019-05-24 10:16:33 -返回值 : index_v1
2019-05-24 10:16:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:16:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 207(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 10:16:33.662(Timestamp)
2019-05-24 10:16:33 -<==    Updates: 1
2019-05-24 10:16:33 -请求地址 : http://localhost:8081/main
2019-05-24 10:16:33 -HTTP METHOD : GET
2019-05-24 10:16:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:16:33 -参数 : []
2019-05-24 10:16:33 -耗时 : 0
2019-05-24 10:16:33 -返回值 : main
2019-05-24 10:16:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 10:16:34 -HTTP METHOD : GET
2019-05-24 10:16:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 10:16:34 -参数 : []
2019-05-24 10:16:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 10:16:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 10:16:34 -请求地址 : http://localhost:8081/main
2019-05-24 10:16:34 -HTTP METHOD : GET
2019-05-24 10:16:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:16:34 -参数 : []
2019-05-24 10:16:34 -耗时 : 0
2019-05-24 10:16:34 -返回值 : main
2019-05-24 10:16:34 -<==      Total: 0
2019-05-24 10:16:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 10:16:34 -==> Parameters: 1(Long), 0(String)
2019-05-24 10:16:34 -<==      Total: 1
2019-05-24 10:16:34 -耗时 : 257
2019-05-24 10:16:34 -返回值 : com.bootdo.common.utils.PageUtils@645bf246
2019-05-24 10:16:36 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 10:16:36 -==> Parameters: 1(Long)
2019-05-24 10:16:36 -<==      Total: 94
2019-05-24 10:16:36 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 10:16:36 -HTTP METHOD : GET
2019-05-24 10:16:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 10:16:36 -参数 : []
2019-05-24 10:16:36 -耗时 : 1
2019-05-24 10:16:36 -返回值 : /moneyList/moneyWZ
2019-05-24 10:16:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 10:16:36 -HTTP METHOD : GET
2019-05-24 10:16:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 10:16:36 -参数 : [userType]
2019-05-24 10:16:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 10:16:37 -==> Parameters: userType(String)
2019-05-24 10:16:37 -<==      Total: 4
2019-05-24 10:16:37 -耗时 : 60
2019-05-24 10:16:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 10:17:12 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 9]
2019-05-24 10:19:24 -请求地址 : http://localhost:8081/index
2019-05-24 10:19:24 -HTTP METHOD : GET
2019-05-24 10:19:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 10:19:24 -参数 : [{}]
2019-05-24 10:19:24 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 10:19:24 -==> Parameters: 1(Long)
2019-05-24 10:19:24 -<==      Total: 50
2019-05-24 10:19:24 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 10:19:24 -==> Parameters: 138(Long)
2019-05-24 10:19:24 -<==      Total: 1
2019-05-24 10:19:24 -耗时 : 208
2019-05-24 10:19:24 -返回值 : index_v1
2019-05-24 10:19:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:19:24 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 208(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 10:19:24.291(Timestamp)
2019-05-24 10:19:24 -<==    Updates: 1
2019-05-24 10:19:24 -请求地址 : http://localhost:8081/main
2019-05-24 10:19:24 -HTTP METHOD : GET
2019-05-24 10:19:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:19:24 -参数 : []
2019-05-24 10:19:24 -耗时 : 0
2019-05-24 10:19:24 -返回值 : main
2019-05-24 10:19:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 10:19:24 -HTTP METHOD : GET
2019-05-24 10:19:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 10:19:24 -参数 : []
2019-05-24 10:19:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 10:19:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 10:19:24 -<==      Total: 0
2019-05-24 10:19:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 10:19:24 -==> Parameters: 1(Long), 0(String)
2019-05-24 10:19:24 -<==      Total: 1
2019-05-24 10:19:24 -耗时 : 11
2019-05-24 10:19:24 -返回值 : com.bootdo.common.utils.PageUtils@7c1fdad1
2019-05-24 10:19:24 -请求地址 : http://localhost:8081/main
2019-05-24 10:19:24 -HTTP METHOD : GET
2019-05-24 10:19:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:19:24 -参数 : []
2019-05-24 10:19:24 -耗时 : 1
2019-05-24 10:19:24 -返回值 : main
2019-05-24 10:19:26 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 10:19:26 -HTTP METHOD : GET
2019-05-24 10:19:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 10:19:26 -参数 : []
2019-05-24 10:19:26 -耗时 : 0
2019-05-24 10:19:26 -返回值 : /moneyList/moneyWZ
2019-05-24 10:19:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 10:19:26 -HTTP METHOD : GET
2019-05-24 10:19:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 10:19:26 -参数 : [userType]
2019-05-24 10:19:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 10:19:26 -==> Parameters: userType(String)
2019-05-24 10:19:26 -<==      Total: 4
2019-05-24 10:19:26 -耗时 : 8
2019-05-24 10:19:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 10:23:50 -Starting BootdoApplication on PC-201905091110 with PID 18940 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-24 10:23:50 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-24 10:23:50 -The following profiles are active: dev
2019-05-24 10:23:50 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30bcf3c1: startup date [Fri May 24 10:23:50 CST 2019]; root of context hierarchy
2019-05-24 10:23:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-24 10:24:00 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$25208c42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:24:00 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1779bae9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:24:01 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:24:01 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:24:01 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:24:01 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-24 10:24:01 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-24 10:24:01 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:24:01 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:24:02 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:24:02 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:24:04 -Tomcat initialized with port(s): 8081 (http)
2019-05-24 10:24:04 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-24 10:24:04 -Starting service [Tomcat]
2019-05-24 10:24:04 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-24 10:24:04 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-24 10:24:04 -Initializing Spring embedded WebApplicationContext
2019-05-24 10:24:04 -Root WebApplicationContext: initialization completed in 13744 ms
2019-05-24 10:24:05 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-24 10:24:05 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-24 10:24:05 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-24 10:24:05 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-24 10:24:05 -Filter xssFilter was not registered (disabled)
2019-05-24 10:24:05 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-24 10:24:05 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-24 10:24:05 -Servlet statViewServlet mapped to [/druid/*]
2019-05-24 10:24:05 -Servlet dispatcherServlet mapped to [/]
2019-05-24 10:24:09 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30bcf3c1: startup date [Fri May 24 10:23:50 CST 2019]; root of context hierarchy
2019-05-24 10:24:10 -Using default implementation for ThreadExecutor
2019-05-24 10:24:10 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-24 10:24:10 -Quartz Scheduler v.2.2.1 created.
2019-05-24 10:24:10 -RAMJobStore initialized.
2019-05-24 10:24:10 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-24 10:24:10 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-24 10:24:10 -Quartz scheduler version: 2.2.1
2019-05-24 10:24:10 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5bccef9f
2019-05-24 10:24:11 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-24 10:24:11 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-24 10:24:15 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:24:15 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-24 10:24:15 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-24 10:24:15 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:24:15 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-24 10:24:15 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-24 10:24:15 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-24 10:24:15 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:24:15 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:24:15 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-24 10:24:15 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-24 10:24:15 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:24:15 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 10:24:15 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-24 10:24:15 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 10:24:15 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-24 10:24:15 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-24 10:24:15 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:24:15 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-24 10:24:15 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:24:15 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 10:24:15 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-24 10:24:15 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 10:24:15 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-24 10:24:15 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-24 10:24:15 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-24 10:24:15 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-24 10:24:15 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-24 10:24:15 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-24 10:24:15 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-24 10:24:15 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-24 10:24:15 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-24 10:24:15 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-24 10:24:15 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-24 10:24:15 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-24 10:24:15 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-24 10:24:15 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-24 10:24:15 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 10:24:15 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-24 10:24:15 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 10:24:15 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-24 10:24:15 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-24 10:24:15 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-24 10:24:15 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-24 10:24:15 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-24 10:24:15 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-24 10:24:15 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-24 10:24:15 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-24 10:24:15 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-24 10:24:15 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:24:15 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:24:15 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:24:15 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-24 10:24:15 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-24 10:24:15 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:24:15 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-24 10:24:15 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-24 10:24:15 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:24:15 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-24 10:24:15 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-24 10:24:15 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-24 10:24:15 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-24 10:24:15 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-24 10:24:15 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-24 10:24:15 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-24 10:24:15 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-24 10:24:15 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-24 10:24:15 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-24 10:24:15 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:24:15 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-24 10:24:15 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 10:24:15 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 10:24:15 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-24 10:24:15 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-24 10:24:15 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-24 10:24:15 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 10:24:15 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-24 10:24:15 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:24:15 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:24:15 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:24:15 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-24 10:24:15 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:24:15 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:24:15 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-24 10:24:15 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-24 10:24:15 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 10:24:15 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 10:24:15 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-24 10:24:15 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:24:15 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-24 10:24:15 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 10:24:15 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 10:24:15 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:24:15 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-24 10:24:15 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-24 10:24:15 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 10:24:15 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 10:24:15 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-24 10:24:15 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:24:15 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-24 10:24:15 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-24 10:24:15 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-24 10:24:15 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-24 10:24:15 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-24 10:24:15 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-24 10:24:15 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-24 10:24:15 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-24 10:24:15 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-24 10:24:15 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-24 10:24:15 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-24 10:24:15 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-24 10:24:15 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-24 10:24:15 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-24 10:24:15 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-24 10:24:15 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-24 10:24:15 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-24 10:24:15 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-24 10:24:15 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:24:15 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-24 10:24:15 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-24 10:24:15 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-24 10:24:15 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-24 10:24:15 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-24 10:24:15 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-24 10:24:15 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-24 10:24:15 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-24 10:24:15 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-24 10:24:15 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-24 10:24:15 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-24 10:24:15 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-24 10:24:15 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-24 10:24:15 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-24 10:24:15 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-24 10:24:15 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-24 10:24:15 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:24:15 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 10:24:15 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-24 10:24:15 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 10:24:15 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-24 10:24:15 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-24 10:24:15 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-24 10:24:15 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-24 10:24:15 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-24 10:24:15 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-24 10:24:15 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:24:15 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-24 10:24:15 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-24 10:24:15 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-24 10:24:15 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-24 10:24:15 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 10:24:15 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:24:15 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 10:24:15 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-24 10:24:15 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:24:15 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 10:24:15 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-24 10:24:15 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-24 10:24:15 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:24:15 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:24:15 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-24 10:24:15 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-24 10:24:15 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-24 10:24:16 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-24 10:24:16 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-24 10:24:16 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-24 10:24:17 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:24:17 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@30bcf3c1: startup date [Fri May 24 10:23:50 CST 2019]; root of context hierarchy
2019-05-24 10:24:17 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:24:17 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:24:17 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:24:17 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-24 10:24:18 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-24 10:24:20 -Registering beans for JMX exposure on startup
2019-05-24 10:24:20 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-24 10:24:20 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-24 10:24:20 -Starting beans in phase 2147483647
2019-05-24 10:24:20 -Context refreshed
2019-05-24 10:24:20 -Found 1 custom documentation plugin(s)
2019-05-24 10:24:20 -Scanning for api listing references
2019-05-24 10:24:21 -Generating unique operation named: getCountDUsingPOST_1
2019-05-24 10:24:21 -Generating unique operation named: removeUsingPOST_1
2019-05-24 10:24:21 -Generating unique operation named: addUsingGET_1
2019-05-24 10:24:21 -Generating unique operation named: editUsingGET_1
2019-05-24 10:24:21 -Generating unique operation named: listUsingGET_1
2019-05-24 10:24:21 -Generating unique operation named: removeUsingPOST_2
2019-05-24 10:24:21 -Generating unique operation named: removeUsingPOST_3
2019-05-24 10:24:21 -Generating unique operation named: saveUsingPOST_1
2019-05-24 10:24:21 -Generating unique operation named: updateUsingGET_1
2019-05-24 10:24:21 -Generating unique operation named: updateUsingHEAD_1
2019-05-24 10:24:21 -Generating unique operation named: updateUsingPOST_1
2019-05-24 10:24:21 -Generating unique operation named: updateUsingPUT_1
2019-05-24 10:24:21 -Generating unique operation named: updateUsingPATCH_1
2019-05-24 10:24:21 -Generating unique operation named: updateUsingDELETE_1
2019-05-24 10:24:21 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-24 10:24:21 -Generating unique operation named: updateUsingTRACE_1
2019-05-24 10:24:21 -Generating unique operation named: addUsingGET_2
2019-05-24 10:24:21 -Generating unique operation named: editUsingGET_2
2019-05-24 10:24:21 -Generating unique operation named: listUsingGET_2
2019-05-24 10:24:21 -Generating unique operation named: removeUsingPOST_4
2019-05-24 10:24:21 -Generating unique operation named: removeUsingPOST_5
2019-05-24 10:24:21 -Generating unique operation named: saveUsingPOST_2
2019-05-24 10:24:21 -Generating unique operation named: updateUsingPOST_2
2019-05-24 10:24:21 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-24 10:24:21 -Generating unique operation named: addUsingGET_3
2019-05-24 10:24:21 -Generating unique operation named: editUsingGET_3
2019-05-24 10:24:22 -Generating unique operation named: listUsingGET_3
2019-05-24 10:24:22 -Generating unique operation named: removeUsingPOST_6
2019-05-24 10:24:22 -Generating unique operation named: removeUsingPOST_7
2019-05-24 10:24:22 -Generating unique operation named: saveUsingPOST_3
2019-05-24 10:24:22 -Generating unique operation named: updateUsingGET_2
2019-05-24 10:24:22 -Generating unique operation named: updateUsingHEAD_2
2019-05-24 10:24:22 -Generating unique operation named: updateUsingPOST_3
2019-05-24 10:24:22 -Generating unique operation named: updateUsingPUT_2
2019-05-24 10:24:22 -Generating unique operation named: updateUsingPATCH_2
2019-05-24 10:24:22 -Generating unique operation named: updateUsingDELETE_2
2019-05-24 10:24:22 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-24 10:24:22 -Generating unique operation named: updateUsingTRACE_2
2019-05-24 10:24:22 -Generating unique operation named: addUsingGET_4
2019-05-24 10:24:22 -Generating unique operation named: editUsingGET_4
2019-05-24 10:24:22 -Generating unique operation named: listUsingGET_4
2019-05-24 10:24:22 -Generating unique operation named: removeUsingPOST_8
2019-05-24 10:24:22 -Generating unique operation named: removeUsingPOST_9
2019-05-24 10:24:22 -Generating unique operation named: saveUsingPOST_4
2019-05-24 10:24:22 -Generating unique operation named: updateUsingGET_3
2019-05-24 10:24:22 -Generating unique operation named: updateUsingHEAD_3
2019-05-24 10:24:22 -Generating unique operation named: updateUsingPOST_4
2019-05-24 10:24:22 -Generating unique operation named: updateUsingPUT_3
2019-05-24 10:24:22 -Generating unique operation named: updateUsingPATCH_3
2019-05-24 10:24:22 -Generating unique operation named: updateUsingDELETE_3
2019-05-24 10:24:22 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-24 10:24:22 -Generating unique operation named: updateUsingTRACE_3
2019-05-24 10:24:22 -Generating unique operation named: ElecUsingGET_1
2019-05-24 10:24:22 -Generating unique operation named: addUsingGET_5
2019-05-24 10:24:22 -Generating unique operation named: editUsingGET_5
2019-05-24 10:24:22 -Generating unique operation named: listUsingGET_5
2019-05-24 10:24:22 -Generating unique operation named: removeUsingPOST_10
2019-05-24 10:24:22 -Generating unique operation named: removeUsingPOST_11
2019-05-24 10:24:22 -Generating unique operation named: saveUsingPOST_5
2019-05-24 10:24:22 -Generating unique operation named: updateUsingGET_4
2019-05-24 10:24:22 -Generating unique operation named: updateUsingHEAD_4
2019-05-24 10:24:22 -Generating unique operation named: updateUsingPOST_5
2019-05-24 10:24:22 -Generating unique operation named: updateUsingPUT_4
2019-05-24 10:24:22 -Generating unique operation named: updateUsingPATCH_4
2019-05-24 10:24:22 -Generating unique operation named: updateUsingDELETE_4
2019-05-24 10:24:22 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-24 10:24:22 -Generating unique operation named: updateUsingTRACE_4
2019-05-24 10:24:22 -Generating unique operation named: editUsingGET_6
2019-05-24 10:24:22 -Generating unique operation named: listUsingGET_6
2019-05-24 10:24:22 -Generating unique operation named: updateUsingPOST_6
2019-05-24 10:24:22 -Generating unique operation named: addUsingGET_6
2019-05-24 10:24:22 -Generating unique operation named: editUsingGET_7
2019-05-24 10:24:22 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-24 10:24:22 -Generating unique operation named: listUsingGET_7
2019-05-24 10:24:22 -Generating unique operation named: removeUsingPOST_12
2019-05-24 10:24:22 -Generating unique operation named: removeUsingPOST_13
2019-05-24 10:24:22 -Generating unique operation named: saveUsingPOST_6
2019-05-24 10:24:22 -Generating unique operation named: updateUsingGET_5
2019-05-24 10:24:22 -Generating unique operation named: updateUsingHEAD_5
2019-05-24 10:24:22 -Generating unique operation named: updateUsingPOST_7
2019-05-24 10:24:22 -Generating unique operation named: updateUsingPUT_5
2019-05-24 10:24:22 -Generating unique operation named: updateUsingPATCH_5
2019-05-24 10:24:22 -Generating unique operation named: updateUsingDELETE_5
2019-05-24 10:24:22 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-24 10:24:22 -Generating unique operation named: updateUsingTRACE_5
2019-05-24 10:24:22 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-24 10:24:22 -Generating unique operation named: addUsingGET_7
2019-05-24 10:24:22 -Generating unique operation named: editUsingGET_8
2019-05-24 10:24:22 -Generating unique operation named: listUsingGET_8
2019-05-24 10:24:22 -Generating unique operation named: removeUsingPOST_14
2019-05-24 10:24:22 -Generating unique operation named: removeUsingPOST_15
2019-05-24 10:24:22 -Generating unique operation named: saveUsingPOST_7
2019-05-24 10:24:22 -Generating unique operation named: updateUsingGET_6
2019-05-24 10:24:22 -Generating unique operation named: updateUsingHEAD_6
2019-05-24 10:24:22 -Generating unique operation named: updateUsingPOST_8
2019-05-24 10:24:22 -Generating unique operation named: updateUsingPUT_6
2019-05-24 10:24:22 -Generating unique operation named: updateUsingPATCH_6
2019-05-24 10:24:22 -Generating unique operation named: updateUsingDELETE_6
2019-05-24 10:24:22 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-24 10:24:22 -Generating unique operation named: updateUsingTRACE_6
2019-05-24 10:24:22 -Generating unique operation named: addUsingGET_8
2019-05-24 10:24:22 -Generating unique operation named: editUsingGET_9
2019-05-24 10:24:22 -Generating unique operation named: listUsingGET_9
2019-05-24 10:24:22 -Generating unique operation named: removeUsingPOST_16
2019-05-24 10:24:22 -Generating unique operation named: removeUsingPOST_17
2019-05-24 10:24:23 -Generating unique operation named: saveUsingPOST_8
2019-05-24 10:24:23 -Generating unique operation named: updateUsingGET_7
2019-05-24 10:24:23 -Generating unique operation named: updateUsingHEAD_7
2019-05-24 10:24:23 -Generating unique operation named: updateUsingPOST_9
2019-05-24 10:24:23 -Generating unique operation named: updateUsingPUT_7
2019-05-24 10:24:23 -Generating unique operation named: updateUsingPATCH_7
2019-05-24 10:24:23 -Generating unique operation named: updateUsingDELETE_7
2019-05-24 10:24:23 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-24 10:24:23 -Generating unique operation named: updateUsingTRACE_7
2019-05-24 10:24:23 -Generating unique operation named: addUsingGET_9
2019-05-24 10:24:23 -Generating unique operation named: editUsingGET_10
2019-05-24 10:24:23 -Generating unique operation named: infoUsingGET_1
2019-05-24 10:24:23 -Generating unique operation named: infoUsingHEAD_1
2019-05-24 10:24:23 -Generating unique operation named: infoUsingPOST_1
2019-05-24 10:24:23 -Generating unique operation named: infoUsingPUT_1
2019-05-24 10:24:23 -Generating unique operation named: infoUsingPATCH_1
2019-05-24 10:24:23 -Generating unique operation named: infoUsingDELETE_1
2019-05-24 10:24:23 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-24 10:24:23 -Generating unique operation named: infoUsingTRACE_1
2019-05-24 10:24:23 -Generating unique operation named: listUsingGET_10
2019-05-24 10:24:23 -Generating unique operation named: removeUsingPOST_18
2019-05-24 10:24:23 -Generating unique operation named: removeUsingPOST_19
2019-05-24 10:24:23 -Generating unique operation named: saveUsingPOST_9
2019-05-24 10:24:23 -Generating unique operation named: updateUsingPOST_10
2019-05-24 10:24:23 -Generating unique operation named: listUsingGET_11
2019-05-24 10:24:23 -Generating unique operation named: removeUsingPOST_20
2019-05-24 10:24:23 -Generating unique operation named: welcomeUsingGET_1
2019-05-24 10:24:23 -Generating unique operation named: addUsingGET_10
2019-05-24 10:24:23 -Generating unique operation named: editUsingGET_11
2019-05-24 10:24:23 -Generating unique operation named: listUsingGET_12
2019-05-24 10:24:23 -Generating unique operation named: removeUsingPOST_21
2019-05-24 10:24:23 -Generating unique operation named: saveUsingPOST_10
2019-05-24 10:24:23 -Generating unique operation named: treeUsingGET_1
2019-05-24 10:24:23 -Generating unique operation named: treeUsingGET_2
2019-05-24 10:24:23 -Generating unique operation named: updateUsingPOST_11
2019-05-24 10:24:23 -Generating unique operation named: addUsingGET_11
2019-05-24 10:24:23 -Generating unique operation named: editUsingGET_12
2019-05-24 10:24:23 -Generating unique operation named: listUsingGET_13
2019-05-24 10:24:23 -Generating unique operation named: removeUsingPOST_22
2019-05-24 10:24:23 -Generating unique operation named: removeUsingPOST_23
2019-05-24 10:24:23 -Generating unique operation named: updateUsingPOST_12
2019-05-24 10:24:23 -Generating unique operation named: addUsingGET_12
2019-05-24 10:24:23 -Generating unique operation named: editUsingGET_13
2019-05-24 10:24:23 -Generating unique operation named: listUsingGET_14
2019-05-24 10:24:23 -Generating unique operation named: removeUsingPOST_24
2019-05-24 10:24:23 -Generating unique operation named: removeUsingPOST_25
2019-05-24 10:24:23 -Generating unique operation named: saveUsingPOST_11
2019-05-24 10:24:23 -Generating unique operation named: updateUsingGET_8
2019-05-24 10:24:23 -Generating unique operation named: updateUsingHEAD_8
2019-05-24 10:24:23 -Generating unique operation named: updateUsingPOST_13
2019-05-24 10:24:23 -Generating unique operation named: updateUsingPUT_8
2019-05-24 10:24:23 -Generating unique operation named: updateUsingPATCH_8
2019-05-24 10:24:23 -Generating unique operation named: updateUsingDELETE_8
2019-05-24 10:24:23 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-24 10:24:23 -Generating unique operation named: updateUsingTRACE_8
2019-05-24 10:24:23 -Generating unique operation named: addUsingGET_13
2019-05-24 10:24:23 -Generating unique operation named: editUsingGET_14
2019-05-24 10:24:23 -Generating unique operation named: listUsingGET_15
2019-05-24 10:24:23 -Generating unique operation named: printEditUsingGET_1
2019-05-24 10:24:23 -Generating unique operation named: removeUsingPOST_26
2019-05-24 10:24:23 -Generating unique operation named: removeUsingPOST_27
2019-05-24 10:24:23 -Generating unique operation named: saveUsingPOST_12
2019-05-24 10:24:23 -Generating unique operation named: updateUsingGET_9
2019-05-24 10:24:23 -Generating unique operation named: updateUsingHEAD_9
2019-05-24 10:24:23 -Generating unique operation named: updateUsingPOST_14
2019-05-24 10:24:23 -Generating unique operation named: updateUsingPUT_9
2019-05-24 10:24:23 -Generating unique operation named: updateUsingPATCH_9
2019-05-24 10:24:23 -Generating unique operation named: updateUsingDELETE_9
2019-05-24 10:24:23 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-24 10:24:23 -Generating unique operation named: updateUsingTRACE_9
2019-05-24 10:24:23 -Generating unique operation named: addUsingGET_14
2019-05-24 10:24:23 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-24 10:24:23 -Generating unique operation named: editUsingGET_15
2019-05-24 10:24:23 -Generating unique operation named: listUsingGET_16
2019-05-24 10:24:23 -Generating unique operation named: saveUsingPOST_13
2019-05-24 10:24:23 -Generating unique operation named: saveUsingPOST_14
2019-05-24 10:24:23 -Generating unique operation named: updateUsingPOST_15
2019-05-24 10:24:24 -Generating unique operation named: listUsingGET_17
2019-05-24 10:24:24 -Generating unique operation named: listUsingHEAD_1
2019-05-24 10:24:24 -Generating unique operation named: listUsingPOST_1
2019-05-24 10:24:24 -Generating unique operation named: listUsingPUT_1
2019-05-24 10:24:24 -Generating unique operation named: listUsingPATCH_1
2019-05-24 10:24:24 -Generating unique operation named: listUsingDELETE_1
2019-05-24 10:24:24 -Generating unique operation named: listUsingOPTIONS_1
2019-05-24 10:24:24 -Generating unique operation named: listUsingTRACE_1
2019-05-24 10:24:24 -Generating unique operation named: countDDUsingGET_1
2019-05-24 10:24:24 -Generating unique operation named: exportDDUsingGET_1
2019-05-24 10:24:24 -Generating unique operation named: addUsingGET_15
2019-05-24 10:24:24 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-24 10:24:24 -Generating unique operation named: editUsingGET_16
2019-05-24 10:24:24 -Generating unique operation named: listUsingGET_18
2019-05-24 10:24:24 -Generating unique operation named: removeUsingPOST_28
2019-05-24 10:24:24 -Generating unique operation named: saveUsingPOST_15
2019-05-24 10:24:24 -Generating unique operation named: treeUsingGET_3
2019-05-24 10:24:24 -Generating unique operation named: treeViewUsingGET_1
2019-05-24 10:24:24 -Generating unique operation named: updateUsingPOST_16
2019-05-24 10:24:24 -Generating unique operation named: addUsingGET_16
2019-05-24 10:24:24 -Generating unique operation named: editUsingGET_17
2019-05-24 10:24:24 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-24 10:24:24 -Generating unique operation named: listUsingGET_19
2019-05-24 10:24:24 -Generating unique operation named: removeUsingPOST_29
2019-05-24 10:24:24 -Generating unique operation named: removeUsingPOST_30
2019-05-24 10:24:24 -Generating unique operation named: saveUsingPOST_16
2019-05-24 10:24:24 -Generating unique operation named: updateUsingGET_10
2019-05-24 10:24:24 -Generating unique operation named: updateUsingHEAD_10
2019-05-24 10:24:24 -Generating unique operation named: updateUsingPOST_17
2019-05-24 10:24:24 -Generating unique operation named: updateUsingPUT_10
2019-05-24 10:24:24 -Generating unique operation named: updateUsingPATCH_10
2019-05-24 10:24:24 -Generating unique operation named: updateUsingDELETE_10
2019-05-24 10:24:24 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-24 10:24:24 -Generating unique operation named: updateUsingTRACE_10
2019-05-24 10:24:24 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-24 10:24:24 -Generating unique operation named: addUsingGET_17
2019-05-24 10:24:24 -Generating unique operation named: editUsingGET_18
2019-05-24 10:24:24 -Generating unique operation named: listUsingGET_20
2019-05-24 10:24:24 -Generating unique operation named: removeUsingPOST_31
2019-05-24 10:24:24 -Generating unique operation named: removeUsingPOST_32
2019-05-24 10:24:24 -Generating unique operation named: saveUsingPOST_17
2019-05-24 10:24:24 -Generating unique operation named: updateUsingGET_11
2019-05-24 10:24:24 -Generating unique operation named: updateUsingHEAD_11
2019-05-24 10:24:24 -Generating unique operation named: updateUsingPOST_18
2019-05-24 10:24:24 -Generating unique operation named: updateUsingPUT_11
2019-05-24 10:24:24 -Generating unique operation named: updateUsingPATCH_11
2019-05-24 10:24:24 -Generating unique operation named: updateUsingDELETE_11
2019-05-24 10:24:24 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-24 10:24:24 -Generating unique operation named: updateUsingTRACE_11
2019-05-24 10:24:24 -Generating unique operation named: addUsingGET_18
2019-05-24 10:24:24 -Generating unique operation named: editUsingGET_19
2019-05-24 10:24:24 -Generating unique operation named: listUsingGET_21
2019-05-24 10:24:24 -Generating unique operation named: removeUsingPOST_33
2019-05-24 10:24:24 -Generating unique operation named: removeUsingPOST_34
2019-05-24 10:24:24 -Generating unique operation named: saveUsingPOST_18
2019-05-24 10:24:24 -Generating unique operation named: updateUsingGET_12
2019-05-24 10:24:24 -Generating unique operation named: updateUsingHEAD_12
2019-05-24 10:24:24 -Generating unique operation named: updateUsingPOST_19
2019-05-24 10:24:24 -Generating unique operation named: updateUsingPUT_12
2019-05-24 10:24:24 -Generating unique operation named: updateUsingPATCH_12
2019-05-24 10:24:24 -Generating unique operation named: updateUsingDELETE_12
2019-05-24 10:24:24 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-24 10:24:24 -Generating unique operation named: updateUsingTRACE_12
2019-05-24 10:24:24 -Starting Quartz Scheduler now
2019-05-24 10:24:24 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-24 10:24:24 -Starting...
2019-05-24 10:24:24 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-24 10:24:24 -Started.
2019-05-24 10:24:24 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-24 10:24:24 -Using a shared selector for servlet write/read
2019-05-24 10:24:24 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-24 10:24:24 -Started BootdoApplication in 37.418 seconds (JVM running for 40.131)
2019-05-24 10:24:24 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-24 10:24:25 -==> Parameters: 
2019-05-24 10:24:26 -<==      Total: 1
2019-05-24 10:24:31 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-24 10:24:31 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-24 10:24:31 -FrameworkServlet 'dispatcherServlet': initialization completed in 69 ms
2019-05-24 10:24:31 -Enabling session validation scheduler...
2019-05-24 10:24:31 -请求地址 : http://localhost:8081/login;JSESSIONID=c2f7a9b0-0fb2-4245-9685-23ff29258bea
2019-05-24 10:24:31 -HTTP METHOD : GET
2019-05-24 10:24:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 10:24:31 -参数 : [{}]
2019-05-24 10:24:31 -耗时 : 4
2019-05-24 10:24:31 -返回值 : login
2019-05-24 10:24:33 -请求地址 : http://localhost:8081/getVerify
2019-05-24 10:24:33 -HTTP METHOD : GET
2019-05-24 10:24:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 10:24:33 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@44092950, org.apache.shiro.web.servlet.ShiroHttpServletResponse@50db790c]
2019-05-24 10:24:33 -0761
2019-05-24 10:24:34 -耗时 : 764
2019-05-24 10:24:34 -返回值 : null
2019-05-24 10:24:38 -请求地址 : http://localhost:8081/login
2019-05-24 10:24:38 -HTTP METHOD : POST
2019-05-24 10:24:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 10:24:38 -参数 : [admin, 111111, 0761, org.apache.shiro.web.servlet.ShiroHttpServletRequest@9918f68]
2019-05-24 10:24:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-24 10:24:38 -==> Parameters: admin(String)
2019-05-24 10:24:38 -<==      Total: 1
2019-05-24 10:24:38 -耗时 : 213
2019-05-24 10:24:38 -返回值 : {msg=操作成功, code=0}
2019-05-24 10:24:38 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-24 10:24:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:24:38 -==> Parameters: 1(Long), admin(String), 登录(String), 213(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 10:24:38.905(Timestamp)
2019-05-24 10:24:38 -<==    Updates: 1
2019-05-24 10:24:38 -请求地址 : http://localhost:8081/index
2019-05-24 10:24:38 -HTTP METHOD : GET
2019-05-24 10:24:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 10:24:38 -参数 : [{}]
2019-05-24 10:24:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 10:24:39 -==> Parameters: 1(Long)
2019-05-24 10:24:39 -<==      Total: 50
2019-05-24 10:24:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 10:24:39 -==> Parameters: 138(Long)
2019-05-24 10:24:39 -<==      Total: 1
2019-05-24 10:24:39 -耗时 : 175
2019-05-24 10:24:39 -返回值 : index_v1
2019-05-24 10:24:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:24:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 176(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 10:24:39.225(Timestamp)
2019-05-24 10:24:39 -<==    Updates: 1
2019-05-24 10:24:39 -请求地址 : http://localhost:8081/main
2019-05-24 10:24:39 -HTTP METHOD : GET
2019-05-24 10:24:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:24:39 -参数 : []
2019-05-24 10:24:39 -耗时 : 0
2019-05-24 10:24:39 -返回值 : main
2019-05-24 10:24:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 10:24:39 -HTTP METHOD : GET
2019-05-24 10:24:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 10:24:39 -参数 : []
2019-05-24 10:24:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 10:24:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 10:24:39 -<==      Total: 0
2019-05-24 10:24:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 10:24:39 -==> Parameters: 1(Long), 0(String)
2019-05-24 10:24:39 -<==      Total: 1
2019-05-24 10:24:39 -耗时 : 84
2019-05-24 10:24:39 -返回值 : com.bootdo.common.utils.PageUtils@76a3454e
2019-05-24 10:24:39 -请求地址 : http://localhost:8081/main
2019-05-24 10:24:39 -HTTP METHOD : GET
2019-05-24 10:24:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:24:39 -参数 : []
2019-05-24 10:24:39 -耗时 : 1
2019-05-24 10:24:39 -返回值 : main
2019-05-24 10:24:44 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 10:24:44 -==> Parameters: 1(Long)
2019-05-24 10:24:44 -<==      Total: 94
2019-05-24 10:24:44 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 10:24:44 -HTTP METHOD : GET
2019-05-24 10:24:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 10:24:44 -参数 : []
2019-05-24 10:24:44 -耗时 : 1
2019-05-24 10:24:44 -返回值 : /moneyList/moneyWZ
2019-05-24 10:24:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 10:24:44 -HTTP METHOD : GET
2019-05-24 10:24:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 10:24:44 -参数 : [userType]
2019-05-24 10:24:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 10:24:45 -==> Parameters: userType(String)
2019-05-24 10:24:45 -<==      Total: 4
2019-05-24 10:24:45 -耗时 : 69
2019-05-24 10:24:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 10:25:16 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 9]
2019-05-24 10:28:36 -请求地址 : http://localhost:8081/index
2019-05-24 10:28:36 -HTTP METHOD : GET
2019-05-24 10:28:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 10:28:36 -参数 : [{}]
2019-05-24 10:28:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 10:28:36 -==> Parameters: 1(Long)
2019-05-24 10:28:36 -<==      Total: 50
2019-05-24 10:28:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 10:28:36 -==> Parameters: 138(Long)
2019-05-24 10:28:36 -<==      Total: 1
2019-05-24 10:28:36 -耗时 : 122
2019-05-24 10:28:36 -返回值 : index_v1
2019-05-24 10:28:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:28:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 122(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 10:28:36.734(Timestamp)
2019-05-24 10:28:36 -<==    Updates: 1
2019-05-24 10:28:36 -请求地址 : http://localhost:8081/main
2019-05-24 10:28:36 -HTTP METHOD : GET
2019-05-24 10:28:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:28:36 -参数 : []
2019-05-24 10:28:36 -耗时 : 1
2019-05-24 10:28:36 -返回值 : main
2019-05-24 10:28:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 10:28:37 -HTTP METHOD : GET
2019-05-24 10:28:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 10:28:37 -参数 : []
2019-05-24 10:28:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 10:28:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 10:28:37 -<==      Total: 0
2019-05-24 10:28:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 10:28:37 -==> Parameters: 1(Long), 0(String)
2019-05-24 10:28:37 -<==      Total: 1
2019-05-24 10:28:37 -耗时 : 13
2019-05-24 10:28:37 -返回值 : com.bootdo.common.utils.PageUtils@14a357dd
2019-05-24 10:28:37 -请求地址 : http://localhost:8081/main
2019-05-24 10:28:37 -HTTP METHOD : GET
2019-05-24 10:28:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:28:37 -参数 : []
2019-05-24 10:28:37 -耗时 : 1
2019-05-24 10:28:37 -返回值 : main
2019-05-24 10:28:40 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 10:28:40 -HTTP METHOD : GET
2019-05-24 10:28:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 10:28:40 -参数 : []
2019-05-24 10:28:40 -耗时 : 2
2019-05-24 10:28:40 -返回值 : /moneyList/moneyWZ
2019-05-24 10:28:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 10:28:40 -HTTP METHOD : GET
2019-05-24 10:28:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 10:28:40 -参数 : [userType]
2019-05-24 10:28:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 10:28:40 -==> Parameters: userType(String)
2019-05-24 10:28:40 -<==      Total: 4
2019-05-24 10:28:40 -耗时 : 8
2019-05-24 10:28:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 10:28:40 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:28:40 -HTTP METHOD : GET
2019-05-24 10:28:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:28:40 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@557b9009]
2019-05-24 10:29:54 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$f2c2bad4.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:29:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:29:54 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:29:54.847(Timestamp)
2019-05-24 10:29:54 -<==    Updates: 1
2019-05-24 10:39:17 -Starting BootdoApplication on PC-201905091110 with PID 38536 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-24 10:39:17 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-24 10:39:17 -The following profiles are active: dev
2019-05-24 10:39:18 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 10:39:18 CST 2019]; root of context hierarchy
2019-05-24 10:39:21 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-24 10:39:23 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d980ca4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:39:23 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$cbd9f8f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:39:24 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:39:24 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:39:25 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:39:25 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-24 10:39:25 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-24 10:39:25 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:39:25 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:39:25 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:39:25 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:39:26 -Tomcat initialized with port(s): 8081 (http)
2019-05-24 10:39:26 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-24 10:39:26 -Starting service [Tomcat]
2019-05-24 10:39:26 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-24 10:39:26 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-24 10:39:26 -Initializing Spring embedded WebApplicationContext
2019-05-24 10:39:26 -Root WebApplicationContext: initialization completed in 8450 ms
2019-05-24 10:39:27 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-24 10:39:27 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-24 10:39:27 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-24 10:39:27 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-24 10:39:27 -Filter xssFilter was not registered (disabled)
2019-05-24 10:39:27 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-24 10:39:27 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-24 10:39:27 -Servlet statViewServlet mapped to [/druid/*]
2019-05-24 10:39:27 -Servlet dispatcherServlet mapped to [/]
2019-05-24 10:39:30 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 10:39:18 CST 2019]; root of context hierarchy
2019-05-24 10:39:31 -Using default implementation for ThreadExecutor
2019-05-24 10:39:31 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-24 10:39:31 -Quartz Scheduler v.2.2.1 created.
2019-05-24 10:39:31 -RAMJobStore initialized.
2019-05-24 10:39:31 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-24 10:39:31 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-24 10:39:31 -Quartz scheduler version: 2.2.1
2019-05-24 10:39:31 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@638afcaa
2019-05-24 10:39:31 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-24 10:39:31 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-24 10:39:34 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-24 10:39:34 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:39:34 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-24 10:39:34 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:39:34 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-24 10:39:34 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-24 10:39:34 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:39:34 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-24 10:39:34 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:39:34 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-24 10:39:34 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:39:34 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-24 10:39:34 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 10:39:34 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-24 10:39:34 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 10:39:34 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-24 10:39:34 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-24 10:39:34 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:39:34 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:39:34 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-24 10:39:34 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 10:39:34 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-24 10:39:34 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-24 10:39:34 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 10:39:34 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-24 10:39:34 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-24 10:39:34 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-24 10:39:34 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-24 10:39:34 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:34 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-24 10:39:34 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-24 10:39:34 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-24 10:39:34 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:34 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-24 10:39:34 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-24 10:39:34 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-24 10:39:34 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-24 10:39:34 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-24 10:39:34 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-24 10:39:34 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:34 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-24 10:39:34 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-24 10:39:34 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-24 10:39:34 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-24 10:39:34 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:34 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:34 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-24 10:39:34 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 10:39:34 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-24 10:39:34 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 10:39:34 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-24 10:39:34 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-24 10:39:34 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-24 10:39:34 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-24 10:39:34 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-24 10:39:34 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:34 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-24 10:39:34 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-24 10:39:34 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-24 10:39:34 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-24 10:39:34 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:34 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-24 10:39:34 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-24 10:39:34 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:34 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-24 10:39:34 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-24 10:39:34 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-24 10:39:34 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-24 10:39:34 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-24 10:39:34 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-24 10:39:34 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:39:34 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:39:34 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:39:34 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-24 10:39:34 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:34 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:39:34 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-24 10:39:34 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-24 10:39:34 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-24 10:39:34 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-24 10:39:34 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-24 10:39:34 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:34 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:39:34 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-24 10:39:34 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:34 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-24 10:39:34 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-24 10:39:34 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-24 10:39:34 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-24 10:39:34 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-24 10:39:34 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-24 10:39:34 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:34 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-24 10:39:34 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-24 10:39:34 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-24 10:39:34 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:39:34 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-24 10:39:34 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-24 10:39:34 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-24 10:39:34 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-24 10:39:34 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 10:39:34 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:34 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 10:39:34 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-24 10:39:34 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:34 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:34 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-24 10:39:34 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-24 10:39:34 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 10:39:34 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-24 10:39:34 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:39:34 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:39:34 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:39:34 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:34 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-24 10:39:34 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-24 10:39:34 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-24 10:39:34 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:39:34 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:39:34 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-24 10:39:34 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-24 10:39:34 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-24 10:39:34 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-24 10:39:34 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-24 10:39:34 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-24 10:39:34 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-24 10:39:34 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-24 10:39:34 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-24 10:39:34 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:39:34 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-24 10:39:34 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:34 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-24 10:39:34 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-24 10:39:34 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-24 10:39:34 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-24 10:39:34 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:34 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:34 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-24 10:39:34 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-24 10:39:34 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-24 10:39:34 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-24 10:39:34 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:34 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:34 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-24 10:39:35 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-24 10:39:35 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-24 10:39:35 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-24 10:39:35 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:35 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-24 10:39:35 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-24 10:39:35 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:35 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:35 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-24 10:39:35 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:35 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:35 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-24 10:39:35 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-24 10:39:35 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-24 10:39:35 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-24 10:39:35 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-24 10:39:35 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-24 10:39:35 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-24 10:39:35 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-24 10:39:35 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:35 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-24 10:39:35 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-24 10:39:35 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-24 10:39:35 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-24 10:39:35 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:39:35 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:35 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-24 10:39:35 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:39:35 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-24 10:39:35 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-24 10:39:35 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:35 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-24 10:39:35 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-24 10:39:35 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-24 10:39:35 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-24 10:39:35 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:39:35 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-24 10:39:35 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-24 10:39:35 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-24 10:39:35 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-24 10:39:35 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-24 10:39:35 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-24 10:39:35 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-24 10:39:35 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:35 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-24 10:39:35 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-24 10:39:35 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-24 10:39:35 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-24 10:39:35 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:35 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-24 10:39:35 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-24 10:39:35 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-24 10:39:35 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:35 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-24 10:39:35 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-24 10:39:35 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-24 10:39:35 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-24 10:39:35 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-24 10:39:35 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-24 10:39:35 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:39:35 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 10:39:35 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-24 10:39:35 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 10:39:35 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:35 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:39:35 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-24 10:39:35 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-24 10:39:35 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-24 10:39:35 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-24 10:39:35 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-24 10:39:35 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:35 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-24 10:39:35 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:35 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:35 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-24 10:39:35 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:39:35 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:35 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-24 10:39:35 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-24 10:39:35 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-24 10:39:35 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-24 10:39:35 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 10:39:35 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:39:35 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 10:39:35 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-24 10:39:35 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:39:35 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 10:39:35 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-24 10:39:35 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:39:35 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-24 10:39:35 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:39:35 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-24 10:39:35 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-24 10:39:35 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-24 10:39:35 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-24 10:39:35 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-24 10:39:35 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-24 10:39:36 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:39:36 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 10:39:18 CST 2019]; root of context hierarchy
2019-05-24 10:39:36 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:39:36 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:39:36 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:39:36 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-24 10:39:37 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-24 10:39:39 -Registering beans for JMX exposure on startup
2019-05-24 10:39:39 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-24 10:39:39 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-24 10:39:39 -Starting beans in phase 2147483647
2019-05-24 10:39:39 -Context refreshed
2019-05-24 10:39:39 -Found 1 custom documentation plugin(s)
2019-05-24 10:39:39 -Scanning for api listing references
2019-05-24 10:39:39 -Generating unique operation named: getCountDUsingPOST_1
2019-05-24 10:39:39 -Generating unique operation named: removeUsingPOST_1
2019-05-24 10:39:39 -Generating unique operation named: addUsingGET_1
2019-05-24 10:39:39 -Generating unique operation named: editUsingGET_1
2019-05-24 10:39:40 -Generating unique operation named: listUsingGET_1
2019-05-24 10:39:40 -Generating unique operation named: removeUsingPOST_2
2019-05-24 10:39:40 -Generating unique operation named: removeUsingPOST_3
2019-05-24 10:39:40 -Generating unique operation named: saveUsingPOST_1
2019-05-24 10:39:40 -Generating unique operation named: updateUsingGET_1
2019-05-24 10:39:40 -Generating unique operation named: updateUsingHEAD_1
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPOST_1
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPUT_1
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPATCH_1
2019-05-24 10:39:40 -Generating unique operation named: updateUsingDELETE_1
2019-05-24 10:39:40 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-24 10:39:40 -Generating unique operation named: updateUsingTRACE_1
2019-05-24 10:39:40 -Generating unique operation named: addUsingGET_2
2019-05-24 10:39:40 -Generating unique operation named: editUsingGET_2
2019-05-24 10:39:40 -Generating unique operation named: listUsingGET_2
2019-05-24 10:39:40 -Generating unique operation named: removeUsingPOST_4
2019-05-24 10:39:40 -Generating unique operation named: removeUsingPOST_5
2019-05-24 10:39:40 -Generating unique operation named: saveUsingPOST_2
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPOST_2
2019-05-24 10:39:40 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-24 10:39:40 -Generating unique operation named: addUsingGET_3
2019-05-24 10:39:40 -Generating unique operation named: editUsingGET_3
2019-05-24 10:39:40 -Generating unique operation named: listUsingGET_3
2019-05-24 10:39:40 -Generating unique operation named: removeUsingPOST_6
2019-05-24 10:39:40 -Generating unique operation named: removeUsingPOST_7
2019-05-24 10:39:40 -Generating unique operation named: saveUsingPOST_3
2019-05-24 10:39:40 -Generating unique operation named: updateUsingGET_2
2019-05-24 10:39:40 -Generating unique operation named: updateUsingHEAD_2
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPOST_3
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPUT_2
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPATCH_2
2019-05-24 10:39:40 -Generating unique operation named: updateUsingDELETE_2
2019-05-24 10:39:40 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-24 10:39:40 -Generating unique operation named: updateUsingTRACE_2
2019-05-24 10:39:40 -Generating unique operation named: addUsingGET_4
2019-05-24 10:39:40 -Generating unique operation named: editUsingGET_4
2019-05-24 10:39:40 -Generating unique operation named: listUsingGET_4
2019-05-24 10:39:40 -Generating unique operation named: removeUsingPOST_8
2019-05-24 10:39:40 -Generating unique operation named: removeUsingPOST_9
2019-05-24 10:39:40 -Generating unique operation named: saveUsingPOST_4
2019-05-24 10:39:40 -Generating unique operation named: updateUsingGET_3
2019-05-24 10:39:40 -Generating unique operation named: updateUsingHEAD_3
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPOST_4
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPUT_3
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPATCH_3
2019-05-24 10:39:40 -Generating unique operation named: updateUsingDELETE_3
2019-05-24 10:39:40 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-24 10:39:40 -Generating unique operation named: updateUsingTRACE_3
2019-05-24 10:39:40 -Generating unique operation named: ElecUsingGET_1
2019-05-24 10:39:40 -Generating unique operation named: addUsingGET_5
2019-05-24 10:39:40 -Generating unique operation named: editUsingGET_5
2019-05-24 10:39:40 -Generating unique operation named: listUsingGET_5
2019-05-24 10:39:40 -Generating unique operation named: removeUsingPOST_10
2019-05-24 10:39:40 -Generating unique operation named: removeUsingPOST_11
2019-05-24 10:39:40 -Generating unique operation named: saveUsingPOST_5
2019-05-24 10:39:40 -Generating unique operation named: updateUsingGET_4
2019-05-24 10:39:40 -Generating unique operation named: updateUsingHEAD_4
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPOST_5
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPUT_4
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPATCH_4
2019-05-24 10:39:40 -Generating unique operation named: updateUsingDELETE_4
2019-05-24 10:39:40 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-24 10:39:40 -Generating unique operation named: updateUsingTRACE_4
2019-05-24 10:39:40 -Generating unique operation named: editUsingGET_6
2019-05-24 10:39:40 -Generating unique operation named: listUsingGET_6
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPOST_6
2019-05-24 10:39:40 -Generating unique operation named: addUsingGET_6
2019-05-24 10:39:40 -Generating unique operation named: editUsingGET_7
2019-05-24 10:39:40 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-24 10:39:40 -Generating unique operation named: listUsingGET_7
2019-05-24 10:39:40 -Generating unique operation named: removeUsingPOST_12
2019-05-24 10:39:40 -Generating unique operation named: removeUsingPOST_13
2019-05-24 10:39:40 -Generating unique operation named: saveUsingPOST_6
2019-05-24 10:39:40 -Generating unique operation named: updateUsingGET_5
2019-05-24 10:39:40 -Generating unique operation named: updateUsingHEAD_5
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPOST_7
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPUT_5
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPATCH_5
2019-05-24 10:39:40 -Generating unique operation named: updateUsingDELETE_5
2019-05-24 10:39:40 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-24 10:39:40 -Generating unique operation named: updateUsingTRACE_5
2019-05-24 10:39:40 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-24 10:39:40 -Generating unique operation named: addUsingGET_7
2019-05-24 10:39:40 -Generating unique operation named: editUsingGET_8
2019-05-24 10:39:40 -Generating unique operation named: listUsingGET_8
2019-05-24 10:39:40 -Generating unique operation named: removeUsingPOST_14
2019-05-24 10:39:40 -Generating unique operation named: removeUsingPOST_15
2019-05-24 10:39:40 -Generating unique operation named: saveUsingPOST_7
2019-05-24 10:39:40 -Generating unique operation named: updateUsingGET_6
2019-05-24 10:39:40 -Generating unique operation named: updateUsingHEAD_6
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPOST_8
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPUT_6
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPATCH_6
2019-05-24 10:39:40 -Generating unique operation named: updateUsingDELETE_6
2019-05-24 10:39:40 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-24 10:39:40 -Generating unique operation named: updateUsingTRACE_6
2019-05-24 10:39:40 -Generating unique operation named: addUsingGET_8
2019-05-24 10:39:40 -Generating unique operation named: editUsingGET_9
2019-05-24 10:39:40 -Generating unique operation named: listUsingGET_9
2019-05-24 10:39:40 -Generating unique operation named: removeUsingPOST_16
2019-05-24 10:39:40 -Generating unique operation named: removeUsingPOST_17
2019-05-24 10:39:40 -Generating unique operation named: saveUsingPOST_8
2019-05-24 10:39:40 -Generating unique operation named: updateUsingGET_7
2019-05-24 10:39:40 -Generating unique operation named: updateUsingHEAD_7
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPOST_9
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPUT_7
2019-05-24 10:39:40 -Generating unique operation named: updateUsingPATCH_7
2019-05-24 10:39:40 -Generating unique operation named: updateUsingDELETE_7
2019-05-24 10:39:40 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-24 10:39:40 -Generating unique operation named: updateUsingTRACE_7
2019-05-24 10:39:40 -Generating unique operation named: addUsingGET_9
2019-05-24 10:39:40 -Generating unique operation named: editUsingGET_10
2019-05-24 10:39:40 -Generating unique operation named: infoUsingGET_1
2019-05-24 10:39:40 -Generating unique operation named: infoUsingHEAD_1
2019-05-24 10:39:40 -Generating unique operation named: infoUsingPOST_1
2019-05-24 10:39:41 -Generating unique operation named: infoUsingPUT_1
2019-05-24 10:39:41 -Generating unique operation named: infoUsingPATCH_1
2019-05-24 10:39:41 -Generating unique operation named: infoUsingDELETE_1
2019-05-24 10:39:41 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-24 10:39:41 -Generating unique operation named: infoUsingTRACE_1
2019-05-24 10:39:41 -Generating unique operation named: listUsingGET_10
2019-05-24 10:39:41 -Generating unique operation named: removeUsingPOST_18
2019-05-24 10:39:41 -Generating unique operation named: removeUsingPOST_19
2019-05-24 10:39:41 -Generating unique operation named: saveUsingPOST_9
2019-05-24 10:39:41 -Generating unique operation named: updateUsingPOST_10
2019-05-24 10:39:41 -Generating unique operation named: listUsingGET_11
2019-05-24 10:39:41 -Generating unique operation named: removeUsingPOST_20
2019-05-24 10:39:41 -Generating unique operation named: welcomeUsingGET_1
2019-05-24 10:39:41 -Generating unique operation named: addUsingGET_10
2019-05-24 10:39:41 -Generating unique operation named: editUsingGET_11
2019-05-24 10:39:41 -Generating unique operation named: listUsingGET_12
2019-05-24 10:39:41 -Generating unique operation named: removeUsingPOST_21
2019-05-24 10:39:41 -Generating unique operation named: saveUsingPOST_10
2019-05-24 10:39:41 -Generating unique operation named: treeUsingGET_1
2019-05-24 10:39:41 -Generating unique operation named: treeUsingGET_2
2019-05-24 10:39:41 -Generating unique operation named: updateUsingPOST_11
2019-05-24 10:39:41 -Generating unique operation named: addUsingGET_11
2019-05-24 10:39:41 -Generating unique operation named: editUsingGET_12
2019-05-24 10:39:41 -Generating unique operation named: listUsingGET_13
2019-05-24 10:39:41 -Generating unique operation named: removeUsingPOST_22
2019-05-24 10:39:41 -Generating unique operation named: removeUsingPOST_23
2019-05-24 10:39:41 -Generating unique operation named: updateUsingPOST_12
2019-05-24 10:39:41 -Generating unique operation named: addUsingGET_12
2019-05-24 10:39:41 -Generating unique operation named: editUsingGET_13
2019-05-24 10:39:41 -Generating unique operation named: listUsingGET_14
2019-05-24 10:39:41 -Generating unique operation named: removeUsingPOST_24
2019-05-24 10:39:41 -Generating unique operation named: removeUsingPOST_25
2019-05-24 10:39:41 -Generating unique operation named: saveUsingPOST_11
2019-05-24 10:39:41 -Generating unique operation named: updateUsingGET_8
2019-05-24 10:39:41 -Generating unique operation named: updateUsingHEAD_8
2019-05-24 10:39:41 -Generating unique operation named: updateUsingPOST_13
2019-05-24 10:39:41 -Generating unique operation named: updateUsingPUT_8
2019-05-24 10:39:41 -Generating unique operation named: updateUsingPATCH_8
2019-05-24 10:39:41 -Generating unique operation named: updateUsingDELETE_8
2019-05-24 10:39:41 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-24 10:39:41 -Generating unique operation named: updateUsingTRACE_8
2019-05-24 10:39:41 -Generating unique operation named: addUsingGET_13
2019-05-24 10:39:41 -Generating unique operation named: editUsingGET_14
2019-05-24 10:39:41 -Generating unique operation named: listUsingGET_15
2019-05-24 10:39:41 -Generating unique operation named: printEditUsingGET_1
2019-05-24 10:39:41 -Generating unique operation named: removeUsingPOST_26
2019-05-24 10:39:41 -Generating unique operation named: removeUsingPOST_27
2019-05-24 10:39:41 -Generating unique operation named: saveUsingPOST_12
2019-05-24 10:39:41 -Generating unique operation named: updateUsingGET_9
2019-05-24 10:39:41 -Generating unique operation named: updateUsingHEAD_9
2019-05-24 10:39:41 -Generating unique operation named: updateUsingPOST_14
2019-05-24 10:39:41 -Generating unique operation named: updateUsingPUT_9
2019-05-24 10:39:41 -Generating unique operation named: updateUsingPATCH_9
2019-05-24 10:39:41 -Generating unique operation named: updateUsingDELETE_9
2019-05-24 10:39:41 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-24 10:39:41 -Generating unique operation named: updateUsingTRACE_9
2019-05-24 10:39:41 -Generating unique operation named: addUsingGET_14
2019-05-24 10:39:41 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-24 10:39:41 -Generating unique operation named: editUsingGET_15
2019-05-24 10:39:41 -Generating unique operation named: listUsingGET_16
2019-05-24 10:39:41 -Generating unique operation named: saveUsingPOST_13
2019-05-24 10:39:41 -Generating unique operation named: saveUsingPOST_14
2019-05-24 10:39:41 -Generating unique operation named: updateUsingPOST_15
2019-05-24 10:39:41 -Generating unique operation named: listUsingGET_17
2019-05-24 10:39:41 -Generating unique operation named: listUsingHEAD_1
2019-05-24 10:39:41 -Generating unique operation named: listUsingPOST_1
2019-05-24 10:39:41 -Generating unique operation named: listUsingPUT_1
2019-05-24 10:39:41 -Generating unique operation named: listUsingPATCH_1
2019-05-24 10:39:41 -Generating unique operation named: listUsingDELETE_1
2019-05-24 10:39:41 -Generating unique operation named: listUsingOPTIONS_1
2019-05-24 10:39:41 -Generating unique operation named: listUsingTRACE_1
2019-05-24 10:39:41 -Generating unique operation named: countDDUsingGET_1
2019-05-24 10:39:41 -Generating unique operation named: exportDDUsingGET_1
2019-05-24 10:39:41 -Generating unique operation named: addUsingGET_15
2019-05-24 10:39:41 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-24 10:39:41 -Generating unique operation named: editUsingGET_16
2019-05-24 10:39:41 -Generating unique operation named: listUsingGET_18
2019-05-24 10:39:42 -Generating unique operation named: removeUsingPOST_28
2019-05-24 10:39:42 -Generating unique operation named: saveUsingPOST_15
2019-05-24 10:39:42 -Generating unique operation named: treeUsingGET_3
2019-05-24 10:39:42 -Generating unique operation named: treeViewUsingGET_1
2019-05-24 10:39:42 -Generating unique operation named: updateUsingPOST_16
2019-05-24 10:39:42 -Generating unique operation named: addUsingGET_16
2019-05-24 10:39:42 -Generating unique operation named: editUsingGET_17
2019-05-24 10:39:42 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-24 10:39:42 -Generating unique operation named: listUsingGET_19
2019-05-24 10:39:42 -Generating unique operation named: removeUsingPOST_29
2019-05-24 10:39:42 -Generating unique operation named: removeUsingPOST_30
2019-05-24 10:39:42 -Generating unique operation named: saveUsingPOST_16
2019-05-24 10:39:42 -Generating unique operation named: updateUsingGET_10
2019-05-24 10:39:42 -Generating unique operation named: updateUsingHEAD_10
2019-05-24 10:39:42 -Generating unique operation named: updateUsingPOST_17
2019-05-24 10:39:42 -Generating unique operation named: updateUsingPUT_10
2019-05-24 10:39:42 -Generating unique operation named: updateUsingPATCH_10
2019-05-24 10:39:42 -Generating unique operation named: updateUsingDELETE_10
2019-05-24 10:39:42 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-24 10:39:42 -Generating unique operation named: updateUsingTRACE_10
2019-05-24 10:39:42 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-24 10:39:42 -Generating unique operation named: addUsingGET_17
2019-05-24 10:39:42 -Generating unique operation named: editUsingGET_18
2019-05-24 10:39:42 -Generating unique operation named: listUsingGET_20
2019-05-24 10:39:42 -Generating unique operation named: removeUsingPOST_31
2019-05-24 10:39:42 -Generating unique operation named: removeUsingPOST_32
2019-05-24 10:39:42 -Generating unique operation named: saveUsingPOST_17
2019-05-24 10:39:42 -Generating unique operation named: updateUsingGET_11
2019-05-24 10:39:42 -Generating unique operation named: updateUsingHEAD_11
2019-05-24 10:39:42 -Generating unique operation named: updateUsingPOST_18
2019-05-24 10:39:42 -Generating unique operation named: updateUsingPUT_11
2019-05-24 10:39:42 -Generating unique operation named: updateUsingPATCH_11
2019-05-24 10:39:42 -Generating unique operation named: updateUsingDELETE_11
2019-05-24 10:39:42 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-24 10:39:42 -Generating unique operation named: updateUsingTRACE_11
2019-05-24 10:39:42 -Generating unique operation named: addUsingGET_18
2019-05-24 10:39:42 -Generating unique operation named: editUsingGET_19
2019-05-24 10:39:42 -Generating unique operation named: listUsingGET_21
2019-05-24 10:39:42 -Generating unique operation named: removeUsingPOST_33
2019-05-24 10:39:42 -Generating unique operation named: removeUsingPOST_34
2019-05-24 10:39:42 -Generating unique operation named: saveUsingPOST_18
2019-05-24 10:39:42 -Generating unique operation named: updateUsingGET_12
2019-05-24 10:39:42 -Generating unique operation named: updateUsingHEAD_12
2019-05-24 10:39:42 -Generating unique operation named: updateUsingPOST_19
2019-05-24 10:39:42 -Generating unique operation named: updateUsingPUT_12
2019-05-24 10:39:42 -Generating unique operation named: updateUsingPATCH_12
2019-05-24 10:39:42 -Generating unique operation named: updateUsingDELETE_12
2019-05-24 10:39:42 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-24 10:39:42 -Generating unique operation named: updateUsingTRACE_12
2019-05-24 10:39:42 -Starting Quartz Scheduler now
2019-05-24 10:39:42 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-24 10:39:42 -Starting...
2019-05-24 10:39:42 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-24 10:39:42 -Started.
2019-05-24 10:39:42 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-24 10:39:42 -Using a shared selector for servlet write/read
2019-05-24 10:39:42 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-24 10:39:42 -Started BootdoApplication in 25.557 seconds (JVM running for 26.308)
2019-05-24 10:39:42 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-24 10:39:42 -==> Parameters: 
2019-05-24 10:39:43 -<==      Total: 1
2019-05-24 10:40:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-24 10:40:06 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-24 10:40:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 74 ms
2019-05-24 10:40:06 -Enabling session validation scheduler...
2019-05-24 10:40:06 -请求地址 : http://localhost:8081/login;JSESSIONID=34cda446-66b1-4d33-ad59-d4ee38c7233c
2019-05-24 10:40:06 -HTTP METHOD : GET
2019-05-24 10:40:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 10:40:06 -参数 : [{}]
2019-05-24 10:40:06 -耗时 : 5
2019-05-24 10:40:06 -返回值 : login
2019-05-24 10:40:08 -请求地址 : http://localhost:8081/getVerify
2019-05-24 10:40:08 -HTTP METHOD : GET
2019-05-24 10:40:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 10:40:08 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3048036e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2af2c6eb]
2019-05-24 10:40:11 -5802
2019-05-24 10:40:11 -耗时 : 3227
2019-05-24 10:40:11 -返回值 : null
2019-05-24 10:40:20 -请求地址 : http://localhost:8081/login
2019-05-24 10:40:20 -HTTP METHOD : POST
2019-05-24 10:40:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 10:40:20 -参数 : [admin, 111111, 5802, org.apache.shiro.web.servlet.ShiroHttpServletRequest@9234525]
2019-05-24 10:40:20 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-24 10:40:20 -==> Parameters: admin(String)
2019-05-24 10:40:20 -<==      Total: 1
2019-05-24 10:40:20 -耗时 : 200
2019-05-24 10:40:20 -返回值 : {msg=操作成功, code=0}
2019-05-24 10:40:20 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-24 10:40:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:40:20 -==> Parameters: 1(Long), admin(String), 登录(String), 200(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 10:40:20.315(Timestamp)
2019-05-24 10:40:20 -<==    Updates: 1
2019-05-24 10:40:20 -请求地址 : http://localhost:8081/index
2019-05-24 10:40:20 -HTTP METHOD : GET
2019-05-24 10:40:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 10:40:20 -参数 : [{}]
2019-05-24 10:40:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 10:40:20 -==> Parameters: 1(Long)
2019-05-24 10:40:20 -<==      Total: 50
2019-05-24 10:40:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 10:40:20 -==> Parameters: 138(Long)
2019-05-24 10:40:20 -<==      Total: 1
2019-05-24 10:40:20 -耗时 : 237
2019-05-24 10:40:20 -返回值 : index_v1
2019-05-24 10:40:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:40:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 237(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 10:40:20.892(Timestamp)
2019-05-24 10:40:21 -<==    Updates: 1
2019-05-24 10:40:21 -请求地址 : http://localhost:8081/main
2019-05-24 10:40:21 -HTTP METHOD : GET
2019-05-24 10:40:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:40:21 -参数 : []
2019-05-24 10:40:21 -耗时 : 0
2019-05-24 10:40:21 -返回值 : main
2019-05-24 10:40:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 10:40:21 -HTTP METHOD : GET
2019-05-24 10:40:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 10:40:21 -参数 : []
2019-05-24 10:40:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 10:40:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 10:40:21 -<==      Total: 0
2019-05-24 10:40:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 10:40:21 -==> Parameters: 1(Long), 0(String)
2019-05-24 10:40:21 -<==      Total: 1
2019-05-24 10:40:21 -耗时 : 78
2019-05-24 10:40:21 -返回值 : com.bootdo.common.utils.PageUtils@7006aae
2019-05-24 10:40:21 -请求地址 : http://localhost:8081/main
2019-05-24 10:40:21 -HTTP METHOD : GET
2019-05-24 10:40:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:40:21 -参数 : []
2019-05-24 10:40:21 -耗时 : 1
2019-05-24 10:40:21 -返回值 : main
2019-05-24 10:40:35 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-05-24 10:41:27 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 10:41:27 -==> Parameters: 1(Long)
2019-05-24 10:41:27 -<==      Total: 94
2019-05-24 10:41:27 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 10:41:27 -HTTP METHOD : GET
2019-05-24 10:41:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 10:41:27 -参数 : []
2019-05-24 10:41:27 -耗时 : 0
2019-05-24 10:41:27 -返回值 : /moneyList/moneyWZ
2019-05-24 10:41:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 10:41:28 -HTTP METHOD : GET
2019-05-24 10:41:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 10:41:28 -参数 : [userType]
2019-05-24 10:41:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 10:41:28 -==> Parameters: userType(String)
2019-05-24 10:41:28 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:41:28 -HTTP METHOD : GET
2019-05-24 10:41:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:41:28 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@54436ae2]
2019-05-24 10:41:28 -<==      Total: 4
2019-05-24 10:41:28 -耗时 : 92
2019-05-24 10:41:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 10:41:28 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$1390309a.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:41:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:41:28 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:41:28.663(Timestamp)
2019-05-24 10:41:28 -<==    Updates: 1
2019-05-24 10:41:30 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:41:30 -HTTP METHOD : GET
2019-05-24 10:41:30 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:41:30 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@6fa18143]
2019-05-24 10:41:30 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$1390309a.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:41:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:41:30 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:41:30.21(Timestamp)
2019-05-24 10:41:30 -<==    Updates: 1
2019-05-24 10:41:31 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:41:31 -HTTP METHOD : GET
2019-05-24 10:41:31 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:41:31 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@30c2ce5b]
2019-05-24 10:41:31 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$1390309a.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:41:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:41:31 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:41:31.242(Timestamp)
2019-05-24 10:41:31 -<==    Updates: 1
2019-05-24 10:41:32 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:41:32 -HTTP METHOD : GET
2019-05-24 10:41:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:41:32 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@368b5be0]
2019-05-24 10:41:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:41:32 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$1390309a.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:41:32 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:41:32.067(Timestamp)
2019-05-24 10:41:32 -<==    Updates: 1
2019-05-24 10:41:32 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:41:32 -HTTP METHOD : GET
2019-05-24 10:41:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:41:32 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@3c5b84f5]
2019-05-24 10:41:32 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$1390309a.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:41:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:41:32 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:41:32.56(Timestamp)
2019-05-24 10:41:32 -<==    Updates: 1
2019-05-24 10:41:40 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:41:40 -HTTP METHOD : GET
2019-05-24 10:41:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:41:40 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@5d3f9081]
2019-05-24 10:41:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:41:40 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$1390309a.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:41:40 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:41:40.846(Timestamp)
2019-05-24 10:41:40 -<==    Updates: 1
2019-05-24 10:41:41 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:41:41 -HTTP METHOD : GET
2019-05-24 10:41:41 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:41:41 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@13d70eca]
2019-05-24 10:41:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:41:41 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$1390309a.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:41:41 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:41:41.362(Timestamp)
2019-05-24 10:41:41 -<==    Updates: 1
2019-05-24 10:41:41 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:41:41 -HTTP METHOD : GET
2019-05-24 10:41:41 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:41:41 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@1f3a91da]
2019-05-24 10:41:41 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$1390309a.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:41:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:41:41 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:41:41.625(Timestamp)
2019-05-24 10:41:41 -<==    Updates: 1
2019-05-24 10:43:03 -Starting BootdoApplication on PC-201905091110 with PID 8700 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-24 10:43:03 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-24 10:43:03 -The following profiles are active: dev
2019-05-24 10:43:04 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 10:43:04 CST 2019]; root of context hierarchy
2019-05-24 10:43:07 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-24 10:43:09 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49b1ca25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:43:09 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3c0af8cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:43:09 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:43:10 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:43:10 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:43:10 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-24 10:43:10 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-24 10:43:10 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:43:10 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:43:10 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:43:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:43:11 -Tomcat initialized with port(s): 8081 (http)
2019-05-24 10:43:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-24 10:43:11 -Starting service [Tomcat]
2019-05-24 10:43:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-24 10:43:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-24 10:43:11 -Initializing Spring embedded WebApplicationContext
2019-05-24 10:43:11 -Root WebApplicationContext: initialization completed in 7600 ms
2019-05-24 10:43:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-24 10:43:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-24 10:43:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-24 10:43:12 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-24 10:43:12 -Filter xssFilter was not registered (disabled)
2019-05-24 10:43:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-24 10:43:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-24 10:43:12 -Servlet statViewServlet mapped to [/druid/*]
2019-05-24 10:43:12 -Servlet dispatcherServlet mapped to [/]
2019-05-24 10:43:15 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 10:43:04 CST 2019]; root of context hierarchy
2019-05-24 10:43:16 -Using default implementation for ThreadExecutor
2019-05-24 10:43:16 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-24 10:43:16 -Quartz Scheduler v.2.2.1 created.
2019-05-24 10:43:16 -RAMJobStore initialized.
2019-05-24 10:43:16 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-24 10:43:16 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-24 10:43:16 -Quartz scheduler version: 2.2.1
2019-05-24 10:43:16 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@394a6d2b
2019-05-24 10:43:16 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-24 10:43:16 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-24 10:43:19 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:43:19 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-24 10:43:19 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-24 10:43:19 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:43:19 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-24 10:43:19 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-24 10:43:19 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-24 10:43:19 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:43:19 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:43:19 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-24 10:43:19 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:43:19 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-24 10:43:19 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 10:43:19 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-24 10:43:19 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 10:43:19 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-24 10:43:19 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:43:19 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-24 10:43:19 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-24 10:43:19 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:43:19 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 10:43:19 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-24 10:43:19 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 10:43:19 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-24 10:43:19 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-24 10:43:19 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-24 10:43:19 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-24 10:43:19 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-24 10:43:19 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-24 10:43:19 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-24 10:43:19 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-24 10:43:19 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-24 10:43:19 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-24 10:43:19 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-24 10:43:19 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-24 10:43:19 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-24 10:43:19 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-24 10:43:19 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 10:43:19 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-24 10:43:19 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 10:43:19 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-24 10:43:19 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-24 10:43:19 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-24 10:43:19 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-24 10:43:19 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-24 10:43:19 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-24 10:43:19 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-24 10:43:19 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-24 10:43:19 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-24 10:43:19 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:43:19 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:43:19 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:43:19 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-24 10:43:19 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-24 10:43:19 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:43:19 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-24 10:43:19 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-24 10:43:19 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:43:19 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-24 10:43:19 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-24 10:43:19 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-24 10:43:19 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-24 10:43:19 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-24 10:43:19 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-24 10:43:19 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-24 10:43:19 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-24 10:43:19 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-24 10:43:19 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-24 10:43:19 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:43:19 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-24 10:43:19 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 10:43:19 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 10:43:19 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-24 10:43:19 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-24 10:43:19 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-24 10:43:19 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 10:43:19 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:43:19 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:43:19 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-24 10:43:19 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:43:19 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-24 10:43:19 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:43:19 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:43:19 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-24 10:43:19 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-24 10:43:19 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-24 10:43:19 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-24 10:43:19 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-24 10:43:19 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-24 10:43:19 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-24 10:43:19 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:43:19 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-24 10:43:19 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-24 10:43:19 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-24 10:43:19 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-24 10:43:19 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-24 10:43:19 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-24 10:43:19 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-24 10:43:19 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-24 10:43:19 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-24 10:43:19 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-24 10:43:19 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-24 10:43:19 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-24 10:43:19 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-24 10:43:19 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-24 10:43:19 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-24 10:43:19 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-24 10:43:19 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-24 10:43:19 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-24 10:43:19 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-24 10:43:19 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:43:19 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-24 10:43:19 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-24 10:43:19 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-24 10:43:19 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-24 10:43:19 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-24 10:43:19 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-24 10:43:19 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-24 10:43:19 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-24 10:43:19 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-24 10:43:19 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-24 10:43:19 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-24 10:43:19 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-24 10:43:19 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-24 10:43:19 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-24 10:43:19 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-24 10:43:19 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-24 10:43:19 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-24 10:43:19 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 10:43:19 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 10:43:19 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:43:19 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-24 10:43:19 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-24 10:43:19 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-24 10:43:19 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-24 10:43:19 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-24 10:43:19 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-24 10:43:19 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:43:19 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-24 10:43:19 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-24 10:43:19 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-24 10:43:19 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 10:43:19 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:43:19 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 10:43:19 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-24 10:43:19 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:43:19 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 10:43:19 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-24 10:43:19 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:43:19 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-24 10:43:19 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:43:19 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-24 10:43:19 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-24 10:43:19 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-24 10:43:20 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-24 10:43:20 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-24 10:43:20 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-24 10:43:20 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:43:21 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 10:43:04 CST 2019]; root of context hierarchy
2019-05-24 10:43:21 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:43:21 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:43:21 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:43:21 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-24 10:43:21 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-24 10:43:23 -Registering beans for JMX exposure on startup
2019-05-24 10:43:23 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-24 10:43:23 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-24 10:43:23 -Starting beans in phase 2147483647
2019-05-24 10:43:23 -Context refreshed
2019-05-24 10:43:23 -Found 1 custom documentation plugin(s)
2019-05-24 10:43:23 -Scanning for api listing references
2019-05-24 10:43:24 -Generating unique operation named: getCountDUsingPOST_1
2019-05-24 10:43:24 -Generating unique operation named: removeUsingPOST_1
2019-05-24 10:43:24 -Generating unique operation named: addUsingGET_1
2019-05-24 10:43:24 -Generating unique operation named: editUsingGET_1
2019-05-24 10:43:24 -Generating unique operation named: listUsingGET_1
2019-05-24 10:43:24 -Generating unique operation named: removeUsingPOST_2
2019-05-24 10:43:24 -Generating unique operation named: removeUsingPOST_3
2019-05-24 10:43:24 -Generating unique operation named: saveUsingPOST_1
2019-05-24 10:43:24 -Generating unique operation named: updateUsingGET_1
2019-05-24 10:43:24 -Generating unique operation named: updateUsingHEAD_1
2019-05-24 10:43:24 -Generating unique operation named: updateUsingPOST_1
2019-05-24 10:43:24 -Generating unique operation named: updateUsingPUT_1
2019-05-24 10:43:24 -Generating unique operation named: updateUsingPATCH_1
2019-05-24 10:43:24 -Generating unique operation named: updateUsingDELETE_1
2019-05-24 10:43:24 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-24 10:43:24 -Generating unique operation named: updateUsingTRACE_1
2019-05-24 10:43:24 -Generating unique operation named: addUsingGET_2
2019-05-24 10:43:24 -Generating unique operation named: editUsingGET_2
2019-05-24 10:43:24 -Generating unique operation named: listUsingGET_2
2019-05-24 10:43:24 -Generating unique operation named: removeUsingPOST_4
2019-05-24 10:43:24 -Generating unique operation named: removeUsingPOST_5
2019-05-24 10:43:24 -Generating unique operation named: saveUsingPOST_2
2019-05-24 10:43:24 -Generating unique operation named: updateUsingPOST_2
2019-05-24 10:43:24 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-24 10:43:24 -Generating unique operation named: addUsingGET_3
2019-05-24 10:43:24 -Generating unique operation named: editUsingGET_3
2019-05-24 10:43:24 -Generating unique operation named: listUsingGET_3
2019-05-24 10:43:24 -Generating unique operation named: removeUsingPOST_6
2019-05-24 10:43:24 -Generating unique operation named: removeUsingPOST_7
2019-05-24 10:43:24 -Generating unique operation named: saveUsingPOST_3
2019-05-24 10:43:24 -Generating unique operation named: updateUsingGET_2
2019-05-24 10:43:24 -Generating unique operation named: updateUsingHEAD_2
2019-05-24 10:43:24 -Generating unique operation named: updateUsingPOST_3
2019-05-24 10:43:24 -Generating unique operation named: updateUsingPUT_2
2019-05-24 10:43:24 -Generating unique operation named: updateUsingPATCH_2
2019-05-24 10:43:24 -Generating unique operation named: updateUsingDELETE_2
2019-05-24 10:43:24 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-24 10:43:24 -Generating unique operation named: updateUsingTRACE_2
2019-05-24 10:43:24 -Generating unique operation named: addUsingGET_4
2019-05-24 10:43:24 -Generating unique operation named: editUsingGET_4
2019-05-24 10:43:24 -Generating unique operation named: listUsingGET_4
2019-05-24 10:43:24 -Generating unique operation named: removeUsingPOST_8
2019-05-24 10:43:24 -Generating unique operation named: removeUsingPOST_9
2019-05-24 10:43:24 -Generating unique operation named: saveUsingPOST_4
2019-05-24 10:43:24 -Generating unique operation named: updateUsingGET_3
2019-05-24 10:43:24 -Generating unique operation named: updateUsingHEAD_3
2019-05-24 10:43:24 -Generating unique operation named: updateUsingPOST_4
2019-05-24 10:43:24 -Generating unique operation named: updateUsingPUT_3
2019-05-24 10:43:24 -Generating unique operation named: updateUsingPATCH_3
2019-05-24 10:43:24 -Generating unique operation named: updateUsingDELETE_3
2019-05-24 10:43:24 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-24 10:43:24 -Generating unique operation named: updateUsingTRACE_3
2019-05-24 10:43:24 -Generating unique operation named: ElecUsingGET_1
2019-05-24 10:43:24 -Generating unique operation named: addUsingGET_5
2019-05-24 10:43:24 -Generating unique operation named: editUsingGET_5
2019-05-24 10:43:24 -Generating unique operation named: listUsingGET_5
2019-05-24 10:43:24 -Generating unique operation named: removeUsingPOST_10
2019-05-24 10:43:24 -Generating unique operation named: removeUsingPOST_11
2019-05-24 10:43:24 -Generating unique operation named: saveUsingPOST_5
2019-05-24 10:43:24 -Generating unique operation named: updateUsingGET_4
2019-05-24 10:43:24 -Generating unique operation named: updateUsingHEAD_4
2019-05-24 10:43:24 -Generating unique operation named: updateUsingPOST_5
2019-05-24 10:43:24 -Generating unique operation named: updateUsingPUT_4
2019-05-24 10:43:24 -Generating unique operation named: updateUsingPATCH_4
2019-05-24 10:43:25 -Generating unique operation named: updateUsingDELETE_4
2019-05-24 10:43:25 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-24 10:43:25 -Generating unique operation named: updateUsingTRACE_4
2019-05-24 10:43:25 -Generating unique operation named: editUsingGET_6
2019-05-24 10:43:25 -Generating unique operation named: listUsingGET_6
2019-05-24 10:43:25 -Generating unique operation named: updateUsingPOST_6
2019-05-24 10:43:25 -Generating unique operation named: addUsingGET_6
2019-05-24 10:43:25 -Generating unique operation named: editUsingGET_7
2019-05-24 10:43:25 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-24 10:43:25 -Generating unique operation named: listUsingGET_7
2019-05-24 10:43:25 -Generating unique operation named: removeUsingPOST_12
2019-05-24 10:43:25 -Generating unique operation named: removeUsingPOST_13
2019-05-24 10:43:25 -Generating unique operation named: saveUsingPOST_6
2019-05-24 10:43:25 -Generating unique operation named: updateUsingGET_5
2019-05-24 10:43:25 -Generating unique operation named: updateUsingHEAD_5
2019-05-24 10:43:25 -Generating unique operation named: updateUsingPOST_7
2019-05-24 10:43:25 -Generating unique operation named: updateUsingPUT_5
2019-05-24 10:43:25 -Generating unique operation named: updateUsingPATCH_5
2019-05-24 10:43:25 -Generating unique operation named: updateUsingDELETE_5
2019-05-24 10:43:25 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-24 10:43:25 -Generating unique operation named: updateUsingTRACE_5
2019-05-24 10:43:25 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-24 10:43:25 -Generating unique operation named: addUsingGET_7
2019-05-24 10:43:25 -Generating unique operation named: editUsingGET_8
2019-05-24 10:43:25 -Generating unique operation named: listUsingGET_8
2019-05-24 10:43:25 -Generating unique operation named: removeUsingPOST_14
2019-05-24 10:43:25 -Generating unique operation named: removeUsingPOST_15
2019-05-24 10:43:25 -Generating unique operation named: saveUsingPOST_7
2019-05-24 10:43:25 -Generating unique operation named: updateUsingGET_6
2019-05-24 10:43:25 -Generating unique operation named: updateUsingHEAD_6
2019-05-24 10:43:25 -Generating unique operation named: updateUsingPOST_8
2019-05-24 10:43:25 -Generating unique operation named: updateUsingPUT_6
2019-05-24 10:43:25 -Generating unique operation named: updateUsingPATCH_6
2019-05-24 10:43:25 -Generating unique operation named: updateUsingDELETE_6
2019-05-24 10:43:25 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-24 10:43:25 -Generating unique operation named: updateUsingTRACE_6
2019-05-24 10:43:25 -Generating unique operation named: addUsingGET_8
2019-05-24 10:43:25 -Generating unique operation named: editUsingGET_9
2019-05-24 10:43:25 -Generating unique operation named: listUsingGET_9
2019-05-24 10:43:25 -Generating unique operation named: removeUsingPOST_16
2019-05-24 10:43:25 -Generating unique operation named: removeUsingPOST_17
2019-05-24 10:43:25 -Generating unique operation named: saveUsingPOST_8
2019-05-24 10:43:25 -Generating unique operation named: updateUsingGET_7
2019-05-24 10:43:25 -Generating unique operation named: updateUsingHEAD_7
2019-05-24 10:43:25 -Generating unique operation named: updateUsingPOST_9
2019-05-24 10:43:25 -Generating unique operation named: updateUsingPUT_7
2019-05-24 10:43:25 -Generating unique operation named: updateUsingPATCH_7
2019-05-24 10:43:25 -Generating unique operation named: updateUsingDELETE_7
2019-05-24 10:43:25 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-24 10:43:25 -Generating unique operation named: updateUsingTRACE_7
2019-05-24 10:43:25 -Generating unique operation named: addUsingGET_9
2019-05-24 10:43:25 -Generating unique operation named: editUsingGET_10
2019-05-24 10:43:25 -Generating unique operation named: infoUsingGET_1
2019-05-24 10:43:25 -Generating unique operation named: infoUsingHEAD_1
2019-05-24 10:43:25 -Generating unique operation named: infoUsingPOST_1
2019-05-24 10:43:25 -Generating unique operation named: infoUsingPUT_1
2019-05-24 10:43:25 -Generating unique operation named: infoUsingPATCH_1
2019-05-24 10:43:25 -Generating unique operation named: infoUsingDELETE_1
2019-05-24 10:43:25 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-24 10:43:25 -Generating unique operation named: infoUsingTRACE_1
2019-05-24 10:43:25 -Generating unique operation named: listUsingGET_10
2019-05-24 10:43:25 -Generating unique operation named: removeUsingPOST_18
2019-05-24 10:43:25 -Generating unique operation named: removeUsingPOST_19
2019-05-24 10:43:25 -Generating unique operation named: saveUsingPOST_9
2019-05-24 10:43:25 -Generating unique operation named: updateUsingPOST_10
2019-05-24 10:43:25 -Generating unique operation named: listUsingGET_11
2019-05-24 10:43:25 -Generating unique operation named: removeUsingPOST_20
2019-05-24 10:43:25 -Generating unique operation named: welcomeUsingGET_1
2019-05-24 10:43:25 -Generating unique operation named: addUsingGET_10
2019-05-24 10:43:25 -Generating unique operation named: editUsingGET_11
2019-05-24 10:43:25 -Generating unique operation named: listUsingGET_12
2019-05-24 10:43:25 -Generating unique operation named: removeUsingPOST_21
2019-05-24 10:43:25 -Generating unique operation named: saveUsingPOST_10
2019-05-24 10:43:25 -Generating unique operation named: treeUsingGET_1
2019-05-24 10:43:25 -Generating unique operation named: treeUsingGET_2
2019-05-24 10:43:25 -Generating unique operation named: updateUsingPOST_11
2019-05-24 10:43:25 -Generating unique operation named: addUsingGET_11
2019-05-24 10:43:25 -Generating unique operation named: editUsingGET_12
2019-05-24 10:43:25 -Generating unique operation named: listUsingGET_13
2019-05-24 10:43:25 -Generating unique operation named: removeUsingPOST_22
2019-05-24 10:43:25 -Generating unique operation named: removeUsingPOST_23
2019-05-24 10:43:25 -Generating unique operation named: updateUsingPOST_12
2019-05-24 10:43:25 -Generating unique operation named: addUsingGET_12
2019-05-24 10:43:25 -Generating unique operation named: editUsingGET_13
2019-05-24 10:43:25 -Generating unique operation named: listUsingGET_14
2019-05-24 10:43:25 -Generating unique operation named: removeUsingPOST_24
2019-05-24 10:43:25 -Generating unique operation named: removeUsingPOST_25
2019-05-24 10:43:25 -Generating unique operation named: saveUsingPOST_11
2019-05-24 10:43:25 -Generating unique operation named: updateUsingGET_8
2019-05-24 10:43:25 -Generating unique operation named: updateUsingHEAD_8
2019-05-24 10:43:25 -Generating unique operation named: updateUsingPOST_13
2019-05-24 10:43:25 -Generating unique operation named: updateUsingPUT_8
2019-05-24 10:43:25 -Generating unique operation named: updateUsingPATCH_8
2019-05-24 10:43:25 -Generating unique operation named: updateUsingDELETE_8
2019-05-24 10:43:25 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-24 10:43:25 -Generating unique operation named: updateUsingTRACE_8
2019-05-24 10:43:25 -Generating unique operation named: addUsingGET_13
2019-05-24 10:43:25 -Generating unique operation named: editUsingGET_14
2019-05-24 10:43:25 -Generating unique operation named: listUsingGET_15
2019-05-24 10:43:25 -Generating unique operation named: printEditUsingGET_1
2019-05-24 10:43:26 -Generating unique operation named: removeUsingPOST_26
2019-05-24 10:43:26 -Generating unique operation named: removeUsingPOST_27
2019-05-24 10:43:26 -Generating unique operation named: saveUsingPOST_12
2019-05-24 10:43:26 -Generating unique operation named: updateUsingGET_9
2019-05-24 10:43:26 -Generating unique operation named: updateUsingHEAD_9
2019-05-24 10:43:26 -Generating unique operation named: updateUsingPOST_14
2019-05-24 10:43:26 -Generating unique operation named: updateUsingPUT_9
2019-05-24 10:43:26 -Generating unique operation named: updateUsingPATCH_9
2019-05-24 10:43:26 -Generating unique operation named: updateUsingDELETE_9
2019-05-24 10:43:26 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-24 10:43:26 -Generating unique operation named: updateUsingTRACE_9
2019-05-24 10:43:26 -Generating unique operation named: addUsingGET_14
2019-05-24 10:43:26 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-24 10:43:26 -Generating unique operation named: editUsingGET_15
2019-05-24 10:43:26 -Generating unique operation named: listUsingGET_16
2019-05-24 10:43:26 -Generating unique operation named: saveUsingPOST_13
2019-05-24 10:43:26 -Generating unique operation named: saveUsingPOST_14
2019-05-24 10:43:26 -Generating unique operation named: updateUsingPOST_15
2019-05-24 10:43:26 -Generating unique operation named: listUsingGET_17
2019-05-24 10:43:26 -Generating unique operation named: listUsingHEAD_1
2019-05-24 10:43:26 -Generating unique operation named: listUsingPOST_1
2019-05-24 10:43:26 -Generating unique operation named: listUsingPUT_1
2019-05-24 10:43:26 -Generating unique operation named: listUsingPATCH_1
2019-05-24 10:43:26 -Generating unique operation named: listUsingDELETE_1
2019-05-24 10:43:26 -Generating unique operation named: listUsingOPTIONS_1
2019-05-24 10:43:26 -Generating unique operation named: listUsingTRACE_1
2019-05-24 10:43:26 -Generating unique operation named: countDDUsingGET_1
2019-05-24 10:43:26 -Generating unique operation named: exportDDUsingGET_1
2019-05-24 10:43:26 -Generating unique operation named: addUsingGET_15
2019-05-24 10:43:26 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-24 10:43:26 -Generating unique operation named: editUsingGET_16
2019-05-24 10:43:26 -Generating unique operation named: listUsingGET_18
2019-05-24 10:43:26 -Generating unique operation named: removeUsingPOST_28
2019-05-24 10:43:26 -Generating unique operation named: saveUsingPOST_15
2019-05-24 10:43:26 -Generating unique operation named: treeUsingGET_3
2019-05-24 10:43:26 -Generating unique operation named: treeViewUsingGET_1
2019-05-24 10:43:26 -Generating unique operation named: updateUsingPOST_16
2019-05-24 10:43:26 -Generating unique operation named: addUsingGET_16
2019-05-24 10:43:26 -Generating unique operation named: editUsingGET_17
2019-05-24 10:43:26 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-24 10:43:26 -Generating unique operation named: listUsingGET_19
2019-05-24 10:43:26 -Generating unique operation named: removeUsingPOST_29
2019-05-24 10:43:26 -Generating unique operation named: removeUsingPOST_30
2019-05-24 10:43:26 -Generating unique operation named: saveUsingPOST_16
2019-05-24 10:43:26 -Generating unique operation named: updateUsingGET_10
2019-05-24 10:43:26 -Generating unique operation named: updateUsingHEAD_10
2019-05-24 10:43:26 -Generating unique operation named: updateUsingPOST_17
2019-05-24 10:43:26 -Generating unique operation named: updateUsingPUT_10
2019-05-24 10:43:26 -Generating unique operation named: updateUsingPATCH_10
2019-05-24 10:43:26 -Generating unique operation named: updateUsingDELETE_10
2019-05-24 10:43:26 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-24 10:43:26 -Generating unique operation named: updateUsingTRACE_10
2019-05-24 10:43:26 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-24 10:43:26 -Generating unique operation named: addUsingGET_17
2019-05-24 10:43:26 -Generating unique operation named: editUsingGET_18
2019-05-24 10:43:26 -Generating unique operation named: listUsingGET_20
2019-05-24 10:43:26 -Generating unique operation named: removeUsingPOST_31
2019-05-24 10:43:26 -Generating unique operation named: removeUsingPOST_32
2019-05-24 10:43:26 -Generating unique operation named: saveUsingPOST_17
2019-05-24 10:43:26 -Generating unique operation named: updateUsingGET_11
2019-05-24 10:43:26 -Generating unique operation named: updateUsingHEAD_11
2019-05-24 10:43:26 -Generating unique operation named: updateUsingPOST_18
2019-05-24 10:43:26 -Generating unique operation named: updateUsingPUT_11
2019-05-24 10:43:26 -Generating unique operation named: updateUsingPATCH_11
2019-05-24 10:43:26 -Generating unique operation named: updateUsingDELETE_11
2019-05-24 10:43:26 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-24 10:43:26 -Generating unique operation named: updateUsingTRACE_11
2019-05-24 10:43:26 -Generating unique operation named: addUsingGET_18
2019-05-24 10:43:26 -Generating unique operation named: editUsingGET_19
2019-05-24 10:43:26 -Generating unique operation named: listUsingGET_21
2019-05-24 10:43:26 -Generating unique operation named: removeUsingPOST_33
2019-05-24 10:43:26 -Generating unique operation named: removeUsingPOST_34
2019-05-24 10:43:26 -Generating unique operation named: saveUsingPOST_18
2019-05-24 10:43:26 -Generating unique operation named: updateUsingGET_12
2019-05-24 10:43:26 -Generating unique operation named: updateUsingHEAD_12
2019-05-24 10:43:26 -Generating unique operation named: updateUsingPOST_19
2019-05-24 10:43:26 -Generating unique operation named: updateUsingPUT_12
2019-05-24 10:43:26 -Generating unique operation named: updateUsingPATCH_12
2019-05-24 10:43:26 -Generating unique operation named: updateUsingDELETE_12
2019-05-24 10:43:26 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-24 10:43:26 -Generating unique operation named: updateUsingTRACE_12
2019-05-24 10:43:26 -Starting Quartz Scheduler now
2019-05-24 10:43:26 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-24 10:43:26 -Starting...
2019-05-24 10:43:26 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-24 10:43:26 -Started.
2019-05-24 10:43:26 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-24 10:43:26 -Using a shared selector for servlet write/read
2019-05-24 10:43:26 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-24 10:43:26 -Started BootdoApplication in 24.026 seconds (JVM running for 24.856)
2019-05-24 10:43:26 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-24 10:43:27 -==> Parameters: 
2019-05-24 10:43:27 -<==      Total: 1
2019-05-24 10:43:59 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-24 10:43:59 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-24 10:43:59 -FrameworkServlet 'dispatcherServlet': initialization completed in 111 ms
2019-05-24 10:44:00 -Enabling session validation scheduler...
2019-05-24 10:44:00 -请求地址 : http://localhost:8081/login;JSESSIONID=14b8c663-8385-4521-9caf-b7b4c82cd099
2019-05-24 10:44:00 -HTTP METHOD : GET
2019-05-24 10:44:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 10:44:00 -参数 : [{}]
2019-05-24 10:44:00 -耗时 : 4
2019-05-24 10:44:00 -返回值 : login
2019-05-24 10:44:01 -请求地址 : http://localhost:8081/getVerify
2019-05-24 10:44:01 -HTTP METHOD : GET
2019-05-24 10:44:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 10:44:01 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@41071b96, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4538876e]
2019-05-24 10:44:02 -0679
2019-05-24 10:44:02 -耗时 : 666
2019-05-24 10:44:02 -返回值 : null
2019-05-24 10:44:08 -请求地址 : http://localhost:8081/login
2019-05-24 10:44:08 -HTTP METHOD : POST
2019-05-24 10:44:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 10:44:08 -参数 : [admin, 111111, 0679, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5847aff9]
2019-05-24 10:44:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-24 10:44:08 -==> Parameters: admin(String)
2019-05-24 10:44:08 -<==      Total: 1
2019-05-24 10:44:08 -耗时 : 169
2019-05-24 10:44:08 -返回值 : {msg=操作成功, code=0}
2019-05-24 10:44:08 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-24 10:44:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:44:08 -==> Parameters: 1(Long), admin(String), 登录(String), 169(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 10:44:08.752(Timestamp)
2019-05-24 10:44:08 -请求地址 : http://localhost:8081/index
2019-05-24 10:44:08 -HTTP METHOD : GET
2019-05-24 10:44:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 10:44:08 -参数 : [{}]
2019-05-24 10:44:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 10:44:08 -==> Parameters: 1(Long)
2019-05-24 10:44:08 -<==    Updates: 1
2019-05-24 10:44:09 -<==      Total: 50
2019-05-24 10:44:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 10:44:09 -==> Parameters: 138(Long)
2019-05-24 10:44:09 -<==      Total: 1
2019-05-24 10:44:09 -耗时 : 256
2019-05-24 10:44:09 -返回值 : index_v1
2019-05-24 10:44:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:44:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 256(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 10:44:09.129(Timestamp)
2019-05-24 10:44:09 -<==    Updates: 1
2019-05-24 10:44:09 -请求地址 : http://localhost:8081/main
2019-05-24 10:44:09 -HTTP METHOD : GET
2019-05-24 10:44:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:44:09 -参数 : []
2019-05-24 10:44:09 -耗时 : 0
2019-05-24 10:44:09 -返回值 : main
2019-05-24 10:44:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 10:44:09 -HTTP METHOD : GET
2019-05-24 10:44:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 10:44:09 -参数 : []
2019-05-24 10:44:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 10:44:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 10:44:09 -请求地址 : http://localhost:8081/main
2019-05-24 10:44:09 -HTTP METHOD : GET
2019-05-24 10:44:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:44:09 -参数 : []
2019-05-24 10:44:09 -耗时 : 4
2019-05-24 10:44:09 -返回值 : main
2019-05-24 10:44:09 -<==      Total: 0
2019-05-24 10:44:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 10:44:09 -==> Parameters: 1(Long), 0(String)
2019-05-24 10:44:09 -<==      Total: 1
2019-05-24 10:44:09 -耗时 : 424
2019-05-24 10:44:09 -返回值 : com.bootdo.common.utils.PageUtils@576608cf
2019-05-24 10:44:14 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 10:44:14 -==> Parameters: 1(Long)
2019-05-24 10:44:14 -<==      Total: 94
2019-05-24 10:44:14 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 10:44:14 -HTTP METHOD : GET
2019-05-24 10:44:14 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 10:44:14 -参数 : []
2019-05-24 10:44:14 -耗时 : 1
2019-05-24 10:44:14 -返回值 : /moneyList/moneyWZ
2019-05-24 10:44:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 10:44:14 -HTTP METHOD : GET
2019-05-24 10:44:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 10:44:14 -参数 : [userType]
2019-05-24 10:44:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 10:44:14 -==> Parameters: userType(String)
2019-05-24 10:44:14 -<==      Total: 4
2019-05-24 10:44:14 -耗时 : 82
2019-05-24 10:44:14 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 10:44:14 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:44:14 -HTTP METHOD : GET
2019-05-24 10:44:14 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:44:14 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@674fbdd9]
2019-05-24 10:44:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:44:14 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:44:14.975(Timestamp)
2019-05-24 10:44:14 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:44:15 -<==    Updates: 1
2019-05-24 10:44:20 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-05-24 10:44:21 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:44:21 -HTTP METHOD : GET
2019-05-24 10:44:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:44:21 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@38d2f891]
2019-05-24 10:44:21 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:44:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:44:21 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:44:21.74(Timestamp)
2019-05-24 10:44:21 -<==    Updates: 1
2019-05-24 10:44:23 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:44:23 -HTTP METHOD : GET
2019-05-24 10:44:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:44:23 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@6b11fbd4]
2019-05-24 10:44:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:44:23 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:44:23 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:44:23.528(Timestamp)
2019-05-24 10:44:23 -<==    Updates: 1
2019-05-24 10:44:24 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:44:24 -HTTP METHOD : GET
2019-05-24 10:44:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:44:24 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@13316a3a]
2019-05-24 10:44:24 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:44:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:44:24 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:44:24.376(Timestamp)
2019-05-24 10:44:24 -<==    Updates: 1
2019-05-24 10:44:24 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:44:24 -HTTP METHOD : GET
2019-05-24 10:44:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:44:24 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@6a09f04f]
2019-05-24 10:44:24 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:44:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:44:24 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:44:24.943(Timestamp)
2019-05-24 10:44:25 -<==    Updates: 1
2019-05-24 10:44:25 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:44:25 -HTTP METHOD : GET
2019-05-24 10:44:25 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:44:25 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@356f3505]
2019-05-24 10:44:25 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:44:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:44:25 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:44:25.304(Timestamp)
2019-05-24 10:44:25 -<==    Updates: 1
2019-05-24 10:44:25 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:44:25 -HTTP METHOD : GET
2019-05-24 10:44:25 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:44:25 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@670d97ea]
2019-05-24 10:44:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:44:25 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:44:25 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:44:25.75(Timestamp)
2019-05-24 10:44:25 -<==    Updates: 1
2019-05-24 10:44:25 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:44:26 -HTTP METHOD : GET
2019-05-24 10:44:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:44:26 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@2d45e602]
2019-05-24 10:44:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:44:26 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:44:26 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:44:26.0(Timestamp)
2019-05-24 10:44:26 -<==    Updates: 1
2019-05-24 10:44:26 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:44:26 -HTTP METHOD : GET
2019-05-24 10:44:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:44:26 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@2b5ebd7b]
2019-05-24 10:44:26 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:44:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:44:26 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:44:26.197(Timestamp)
2019-05-24 10:44:26 -<==    Updates: 1
2019-05-24 10:46:01 -请求地址 : http://localhost:8081/login;JSESSIONID=538d8076-f245-4f23-bcd8-99128c4a28a5
2019-05-24 10:46:01 -HTTP METHOD : GET
2019-05-24 10:46:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 10:46:01 -参数 : [{}]
2019-05-24 10:46:01 -耗时 : 1
2019-05-24 10:46:01 -返回值 : login
2019-05-24 10:46:02 -请求地址 : http://localhost:8081/getVerify
2019-05-24 10:46:02 -HTTP METHOD : GET
2019-05-24 10:46:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 10:46:02 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@ff2758f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7e16d3fe]
2019-05-24 10:46:02 -4725
2019-05-24 10:46:02 -耗时 : 11
2019-05-24 10:46:02 -返回值 : null
2019-05-24 10:46:02 -请求地址 : http://localhost:8081/login
2019-05-24 10:46:02 -HTTP METHOD : GET
2019-05-24 10:46:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 10:46:02 -参数 : [{}]
2019-05-24 10:46:02 -耗时 : 0
2019-05-24 10:46:02 -返回值 : login
2019-05-24 10:46:07 -请求地址 : http://localhost:8081/login
2019-05-24 10:46:07 -HTTP METHOD : POST
2019-05-24 10:46:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 10:46:07 -参数 : [admin, 111111, 4725, org.apache.shiro.web.servlet.ShiroHttpServletRequest@55175853]
2019-05-24 10:46:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-24 10:46:07 -==> Parameters: admin(String)
2019-05-24 10:46:07 -<==      Total: 1
2019-05-24 10:46:07 -耗时 : 120
2019-05-24 10:46:07 -返回值 : {msg=操作成功, code=0}
2019-05-24 10:46:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:46:07 -==> Parameters: 1(Long), admin(String), 登录(String), 120(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 10:46:07.221(Timestamp)
2019-05-24 10:46:07 -请求地址 : http://localhost:8081/index
2019-05-24 10:46:07 -HTTP METHOD : GET
2019-05-24 10:46:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 10:46:07 -参数 : [{}]
2019-05-24 10:46:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 10:46:07 -==> Parameters: 1(Long)
2019-05-24 10:46:07 -<==    Updates: 1
2019-05-24 10:46:07 -<==      Total: 50
2019-05-24 10:46:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 10:46:07 -==> Parameters: 138(Long)
2019-05-24 10:46:07 -<==      Total: 1
2019-05-24 10:46:07 -耗时 : 278
2019-05-24 10:46:07 -返回值 : index_v1
2019-05-24 10:46:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:46:07 -请求地址 : http://localhost:8081/main
2019-05-24 10:46:07 -HTTP METHOD : GET
2019-05-24 10:46:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:46:07 -参数 : []
2019-05-24 10:46:07 -耗时 : 0
2019-05-24 10:46:07 -返回值 : main
2019-05-24 10:46:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 278(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 10:46:07.539(Timestamp)
2019-05-24 10:46:08 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 10:46:08 -HTTP METHOD : GET
2019-05-24 10:46:08 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 10:46:08 -参数 : []
2019-05-24 10:46:08 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 10:46:08 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 10:46:08 -请求地址 : http://localhost:8081/main
2019-05-24 10:46:08 -HTTP METHOD : GET
2019-05-24 10:46:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:46:08 -参数 : []
2019-05-24 10:46:08 -耗时 : 0
2019-05-24 10:46:08 -返回值 : main
2019-05-24 10:46:08 -<==      Total: 0
2019-05-24 10:46:08 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 10:46:08 -==> Parameters: 1(Long), 0(String)
2019-05-24 10:46:08 -<==      Total: 1
2019-05-24 10:46:08 -耗时 : 486
2019-05-24 10:46:08 -返回值 : com.bootdo.common.utils.PageUtils@ae28f12
2019-05-24 10:46:09 -<==    Updates: 1
2019-05-24 10:46:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 10:46:13 -==> Parameters: 1(Long)
2019-05-24 10:46:13 -<==      Total: 94
2019-05-24 10:46:13 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 10:46:13 -HTTP METHOD : GET
2019-05-24 10:46:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 10:46:13 -参数 : []
2019-05-24 10:46:13 -耗时 : 0
2019-05-24 10:46:13 -返回值 : /moneyList/moneyWZ
2019-05-24 10:46:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 10:46:15 -HTTP METHOD : GET
2019-05-24 10:46:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 10:46:15 -参数 : [userType]
2019-05-24 10:46:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 10:46:15 -==> Parameters: userType(String)
2019-05-24 10:46:15 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:46:15 -HTTP METHOD : GET
2019-05-24 10:46:15 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:46:15 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@f98fff6]
2019-05-24 10:46:15 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:46:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:46:15 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:46:15.064(Timestamp)
2019-05-24 10:46:15 -<==      Total: 4
2019-05-24 10:46:15 -耗时 : 60
2019-05-24 10:46:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 10:46:15 -<==    Updates: 1
2019-05-24 10:46:21 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:46:21 -HTTP METHOD : GET
2019-05-24 10:46:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:46:21 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@58dcab63]
2019-05-24 10:46:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:46:21 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:46:21 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:46:21.026(Timestamp)
2019-05-24 10:46:21 -<==    Updates: 1
2019-05-24 10:46:21 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:46:21 -HTTP METHOD : GET
2019-05-24 10:46:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:46:21 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@436dd85]
2019-05-24 10:46:21 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:46:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:46:21 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:46:21.869(Timestamp)
2019-05-24 10:46:22 -<==    Updates: 1
2019-05-24 10:46:22 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:46:22 -HTTP METHOD : GET
2019-05-24 10:46:22 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:46:22 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@147709de]
2019-05-24 10:46:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:46:22 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:46:22 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:46:22.468(Timestamp)
2019-05-24 10:46:22 -<==    Updates: 1
2019-05-24 10:46:22 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:46:22 -HTTP METHOD : GET
2019-05-24 10:46:22 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:46:22 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@52d27d45]
2019-05-24 10:46:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:46:22 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:46:22 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:46:22.659(Timestamp)
2019-05-24 10:46:22 -<==    Updates: 1
2019-05-24 10:46:23 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:46:23 -HTTP METHOD : GET
2019-05-24 10:46:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:46:23 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@6295f279]
2019-05-24 10:46:23 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:46:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:46:23 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:46:23.004(Timestamp)
2019-05-24 10:46:23 -<==    Updates: 1
2019-05-24 10:46:23 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:46:23 -HTTP METHOD : GET
2019-05-24 10:46:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:46:23 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@a0f7afb]
2019-05-24 10:46:23 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:46:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:46:23 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:46:23.223(Timestamp)
2019-05-24 10:46:23 -<==    Updates: 1
2019-05-24 10:46:23 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:46:23 -HTTP METHOD : GET
2019-05-24 10:46:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:46:23 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@6c8984e1]
2019-05-24 10:46:23 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor154.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:46:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:46:23 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:46:23.445(Timestamp)
2019-05-24 10:46:23 -<==    Updates: 1
2019-05-24 10:46:23 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:46:23 -HTTP METHOD : GET
2019-05-24 10:46:23 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:46:23 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@44fbb445]
2019-05-24 10:46:23 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor154.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:46:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:46:23 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:46:23.763(Timestamp)
2019-05-24 10:46:23 -<==    Updates: 1
2019-05-24 10:50:31 -Starting BootdoApplication on PC-201905091110 with PID 10960 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-24 10:50:31 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-24 10:50:31 -The following profiles are active: dev
2019-05-24 10:50:31 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 10:50:31 CST 2019]; root of context hierarchy
2019-05-24 10:50:36 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-24 10:50:39 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49b1ca25] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:50:39 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3c0af8cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:50:40 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:50:41 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:50:41 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:50:41 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-24 10:50:41 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-24 10:50:41 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:50:41 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:50:41 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:50:41 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:50:43 -Tomcat initialized with port(s): 8081 (http)
2019-05-24 10:50:43 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-24 10:50:43 -Starting service [Tomcat]
2019-05-24 10:50:43 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-24 10:50:43 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-24 10:50:43 -Initializing Spring embedded WebApplicationContext
2019-05-24 10:50:43 -Root WebApplicationContext: initialization completed in 11776 ms
2019-05-24 10:50:44 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-24 10:50:44 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-24 10:50:44 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-24 10:50:44 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-24 10:50:44 -Filter xssFilter was not registered (disabled)
2019-05-24 10:50:44 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-24 10:50:44 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-24 10:50:44 -Servlet statViewServlet mapped to [/druid/*]
2019-05-24 10:50:44 -Servlet dispatcherServlet mapped to [/]
2019-05-24 10:50:50 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 10:50:31 CST 2019]; root of context hierarchy
2019-05-24 10:50:50 -Using default implementation for ThreadExecutor
2019-05-24 10:50:50 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-24 10:50:50 -Quartz Scheduler v.2.2.1 created.
2019-05-24 10:50:50 -RAMJobStore initialized.
2019-05-24 10:50:50 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-24 10:50:50 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-24 10:50:50 -Quartz scheduler version: 2.2.1
2019-05-24 10:50:50 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@394a6d2b
2019-05-24 10:50:52 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-24 10:50:52 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-24 10:50:56 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-24 10:50:56 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:50:56 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:50:56 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-24 10:50:56 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-24 10:50:56 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-24 10:50:56 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-24 10:50:56 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:50:56 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-24 10:50:56 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:50:56 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:50:56 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-24 10:50:56 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 10:50:56 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-24 10:50:56 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-24 10:50:56 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 10:50:56 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:50:56 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-24 10:50:56 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:50:56 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-24 10:50:56 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 10:50:56 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-24 10:50:56 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-24 10:50:56 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 10:50:56 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-24 10:50:56 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-24 10:50:56 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-24 10:50:56 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-24 10:50:56 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:56 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-24 10:50:56 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-24 10:50:56 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-24 10:50:56 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-24 10:50:56 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-24 10:50:56 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-24 10:50:56 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-24 10:50:56 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-24 10:50:56 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-24 10:50:56 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:56 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-24 10:50:56 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-24 10:50:56 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-24 10:50:56 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:56 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-24 10:50:56 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 10:50:56 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-24 10:50:56 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 10:50:56 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-24 10:50:56 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-24 10:50:56 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-24 10:50:56 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-24 10:50:56 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:56 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-24 10:50:56 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-24 10:50:56 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-24 10:50:56 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-24 10:50:56 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-24 10:50:56 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-24 10:50:56 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:56 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-24 10:50:56 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-24 10:50:56 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-24 10:50:56 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-24 10:50:56 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-24 10:50:56 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-24 10:50:56 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:50:56 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:50:56 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:50:56 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-24 10:50:56 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-24 10:50:56 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:50:56 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-24 10:50:56 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-24 10:50:56 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-24 10:50:56 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-24 10:50:56 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:56 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:50:56 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-24 10:50:56 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-24 10:50:56 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-24 10:50:56 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-24 10:50:56 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-24 10:50:56 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-24 10:50:56 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-24 10:50:56 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:56 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-24 10:50:56 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-24 10:50:56 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-24 10:50:56 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:50:56 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-24 10:50:56 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-24 10:50:56 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-24 10:50:56 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 10:50:56 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:56 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 10:50:56 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-24 10:50:56 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-24 10:50:56 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 10:50:56 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-24 10:50:56 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:50:56 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-24 10:50:56 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:50:56 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:50:56 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-24 10:50:56 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-24 10:50:56 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-24 10:50:56 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:50:56 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:50:56 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-24 10:50:56 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-24 10:50:56 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-24 10:50:56 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-24 10:50:56 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 10:50:56 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:56 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 10:50:56 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-24 10:50:56 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:50:56 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-24 10:50:56 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-24 10:50:56 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-24 10:50:56 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 10:50:56 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:56 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 10:50:56 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-24 10:50:56 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:50:56 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-24 10:50:56 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-24 10:50:56 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-24 10:50:56 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 10:50:56 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:56 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 10:50:56 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-24 10:50:56 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:50:56 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-24 10:50:56 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-24 10:50:56 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-24 10:50:56 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-24 10:50:56 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:56 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-24 10:50:56 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-24 10:50:56 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-24 10:50:56 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-24 10:50:56 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:56 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-24 10:50:56 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-24 10:50:56 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-24 10:50:56 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-24 10:50:56 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:56 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-24 10:50:56 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-24 10:50:56 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-24 10:50:56 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-24 10:50:56 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-24 10:50:56 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-24 10:50:56 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-24 10:50:56 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-24 10:50:56 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-24 10:50:56 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-24 10:50:56 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-24 10:50:56 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-24 10:50:56 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-24 10:50:56 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-24 10:50:56 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:50:56 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:56 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:50:56 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-24 10:50:56 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-24 10:50:56 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:56 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-24 10:50:56 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-24 10:50:57 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-24 10:50:57 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:50:57 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-24 10:50:57 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-24 10:50:57 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-24 10:50:57 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-24 10:50:57 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-24 10:50:57 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-24 10:50:57 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-24 10:50:57 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-24 10:50:57 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:57 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-24 10:50:57 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-24 10:50:57 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-24 10:50:57 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-24 10:50:57 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:57 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-24 10:50:57 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-24 10:50:57 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-24 10:50:57 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:57 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-24 10:50:57 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-24 10:50:57 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-24 10:50:57 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:50:57 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-24 10:50:57 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-24 10:50:57 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-24 10:50:57 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 10:50:57 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-24 10:50:57 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:57 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 10:50:57 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:50:57 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-24 10:50:57 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-24 10:50:57 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-24 10:50:57 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-24 10:50:57 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-24 10:50:57 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:57 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-24 10:50:57 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:57 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:57 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-24 10:50:57 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:57 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-24 10:50:57 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:50:57 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-24 10:50:57 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-24 10:50:57 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-24 10:50:57 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 10:50:57 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:50:57 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 10:50:57 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:50:57 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-24 10:50:57 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-24 10:50:57 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 10:50:57 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:50:57 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-24 10:50:57 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:50:57 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-24 10:50:57 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-24 10:50:57 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-24 10:50:57 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-24 10:50:57 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-24 10:50:58 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-24 10:50:58 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:50:59 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 10:50:31 CST 2019]; root of context hierarchy
2019-05-24 10:50:59 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:50:59 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:50:59 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:50:59 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-24 10:50:59 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-24 10:51:01 -Registering beans for JMX exposure on startup
2019-05-24 10:51:01 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-24 10:51:01 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-24 10:51:01 -Starting beans in phase 2147483647
2019-05-24 10:51:01 -Context refreshed
2019-05-24 10:51:01 -Found 1 custom documentation plugin(s)
2019-05-24 10:51:01 -Scanning for api listing references
2019-05-24 10:51:02 -Generating unique operation named: getCountDUsingPOST_1
2019-05-24 10:51:02 -Generating unique operation named: removeUsingPOST_1
2019-05-24 10:51:02 -Generating unique operation named: addUsingGET_1
2019-05-24 10:51:02 -Generating unique operation named: editUsingGET_1
2019-05-24 10:51:02 -Generating unique operation named: listUsingGET_1
2019-05-24 10:51:02 -Generating unique operation named: removeUsingPOST_2
2019-05-24 10:51:02 -Generating unique operation named: removeUsingPOST_3
2019-05-24 10:51:02 -Generating unique operation named: saveUsingPOST_1
2019-05-24 10:51:02 -Generating unique operation named: updateUsingGET_1
2019-05-24 10:51:02 -Generating unique operation named: updateUsingHEAD_1
2019-05-24 10:51:02 -Generating unique operation named: updateUsingPOST_1
2019-05-24 10:51:02 -Generating unique operation named: updateUsingPUT_1
2019-05-24 10:51:02 -Generating unique operation named: updateUsingPATCH_1
2019-05-24 10:51:02 -Generating unique operation named: updateUsingDELETE_1
2019-05-24 10:51:02 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-24 10:51:02 -Generating unique operation named: updateUsingTRACE_1
2019-05-24 10:51:03 -Generating unique operation named: addUsingGET_2
2019-05-24 10:51:03 -Generating unique operation named: editUsingGET_2
2019-05-24 10:51:03 -Generating unique operation named: listUsingGET_2
2019-05-24 10:51:03 -Generating unique operation named: removeUsingPOST_4
2019-05-24 10:51:03 -Generating unique operation named: removeUsingPOST_5
2019-05-24 10:51:03 -Generating unique operation named: saveUsingPOST_2
2019-05-24 10:51:03 -Generating unique operation named: updateUsingPOST_2
2019-05-24 10:51:03 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-24 10:51:03 -Generating unique operation named: addUsingGET_3
2019-05-24 10:51:03 -Generating unique operation named: editUsingGET_3
2019-05-24 10:51:03 -Generating unique operation named: listUsingGET_3
2019-05-24 10:51:03 -Generating unique operation named: removeUsingPOST_6
2019-05-24 10:51:03 -Generating unique operation named: removeUsingPOST_7
2019-05-24 10:51:03 -Generating unique operation named: saveUsingPOST_3
2019-05-24 10:51:03 -Generating unique operation named: updateUsingGET_2
2019-05-24 10:51:03 -Generating unique operation named: updateUsingHEAD_2
2019-05-24 10:51:03 -Generating unique operation named: updateUsingPOST_3
2019-05-24 10:51:03 -Generating unique operation named: updateUsingPUT_2
2019-05-24 10:51:03 -Generating unique operation named: updateUsingPATCH_2
2019-05-24 10:51:03 -Generating unique operation named: updateUsingDELETE_2
2019-05-24 10:51:03 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-24 10:51:03 -Generating unique operation named: updateUsingTRACE_2
2019-05-24 10:51:03 -Generating unique operation named: addUsingGET_4
2019-05-24 10:51:03 -Generating unique operation named: editUsingGET_4
2019-05-24 10:51:03 -Generating unique operation named: listUsingGET_4
2019-05-24 10:51:03 -Generating unique operation named: removeUsingPOST_8
2019-05-24 10:51:03 -Generating unique operation named: removeUsingPOST_9
2019-05-24 10:51:03 -Generating unique operation named: saveUsingPOST_4
2019-05-24 10:51:03 -Generating unique operation named: updateUsingGET_3
2019-05-24 10:51:03 -Generating unique operation named: updateUsingHEAD_3
2019-05-24 10:51:03 -Generating unique operation named: updateUsingPOST_4
2019-05-24 10:51:03 -Generating unique operation named: updateUsingPUT_3
2019-05-24 10:51:03 -Generating unique operation named: updateUsingPATCH_3
2019-05-24 10:51:03 -Generating unique operation named: updateUsingDELETE_3
2019-05-24 10:51:03 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-24 10:51:03 -Generating unique operation named: updateUsingTRACE_3
2019-05-24 10:51:03 -Generating unique operation named: ElecUsingGET_1
2019-05-24 10:51:03 -Generating unique operation named: addUsingGET_5
2019-05-24 10:51:03 -Generating unique operation named: editUsingGET_5
2019-05-24 10:51:03 -Generating unique operation named: listUsingGET_5
2019-05-24 10:51:03 -Generating unique operation named: removeUsingPOST_10
2019-05-24 10:51:03 -Generating unique operation named: removeUsingPOST_11
2019-05-24 10:51:03 -Generating unique operation named: saveUsingPOST_5
2019-05-24 10:51:03 -Generating unique operation named: updateUsingGET_4
2019-05-24 10:51:03 -Generating unique operation named: updateUsingHEAD_4
2019-05-24 10:51:03 -Generating unique operation named: updateUsingPOST_5
2019-05-24 10:51:03 -Generating unique operation named: updateUsingPUT_4
2019-05-24 10:51:03 -Generating unique operation named: updateUsingPATCH_4
2019-05-24 10:51:03 -Generating unique operation named: updateUsingDELETE_4
2019-05-24 10:51:03 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-24 10:51:03 -Generating unique operation named: updateUsingTRACE_4
2019-05-24 10:51:03 -Generating unique operation named: editUsingGET_6
2019-05-24 10:51:03 -Generating unique operation named: listUsingGET_6
2019-05-24 10:51:03 -Generating unique operation named: updateUsingPOST_6
2019-05-24 10:51:03 -Generating unique operation named: addUsingGET_6
2019-05-24 10:51:03 -Generating unique operation named: editUsingGET_7
2019-05-24 10:51:03 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-24 10:51:03 -Generating unique operation named: listUsingGET_7
2019-05-24 10:51:03 -Generating unique operation named: removeUsingPOST_12
2019-05-24 10:51:03 -Generating unique operation named: removeUsingPOST_13
2019-05-24 10:51:03 -Generating unique operation named: saveUsingPOST_6
2019-05-24 10:51:03 -Generating unique operation named: updateUsingGET_5
2019-05-24 10:51:03 -Generating unique operation named: updateUsingHEAD_5
2019-05-24 10:51:03 -Generating unique operation named: updateUsingPOST_7
2019-05-24 10:51:03 -Generating unique operation named: updateUsingPUT_5
2019-05-24 10:51:03 -Generating unique operation named: updateUsingPATCH_5
2019-05-24 10:51:03 -Generating unique operation named: updateUsingDELETE_5
2019-05-24 10:51:03 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-24 10:51:03 -Generating unique operation named: updateUsingTRACE_5
2019-05-24 10:51:03 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-24 10:51:03 -Generating unique operation named: addUsingGET_7
2019-05-24 10:51:03 -Generating unique operation named: editUsingGET_8
2019-05-24 10:51:03 -Generating unique operation named: listUsingGET_8
2019-05-24 10:51:03 -Generating unique operation named: removeUsingPOST_14
2019-05-24 10:51:03 -Generating unique operation named: removeUsingPOST_15
2019-05-24 10:51:03 -Generating unique operation named: saveUsingPOST_7
2019-05-24 10:51:03 -Generating unique operation named: updateUsingGET_6
2019-05-24 10:51:03 -Generating unique operation named: updateUsingHEAD_6
2019-05-24 10:51:03 -Generating unique operation named: updateUsingPOST_8
2019-05-24 10:51:03 -Generating unique operation named: updateUsingPUT_6
2019-05-24 10:51:03 -Generating unique operation named: updateUsingPATCH_6
2019-05-24 10:51:03 -Generating unique operation named: updateUsingDELETE_6
2019-05-24 10:51:03 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-24 10:51:04 -Generating unique operation named: updateUsingTRACE_6
2019-05-24 10:51:04 -Generating unique operation named: addUsingGET_8
2019-05-24 10:51:04 -Generating unique operation named: editUsingGET_9
2019-05-24 10:51:04 -Generating unique operation named: listUsingGET_9
2019-05-24 10:51:04 -Generating unique operation named: removeUsingPOST_16
2019-05-24 10:51:04 -Generating unique operation named: removeUsingPOST_17
2019-05-24 10:51:04 -Generating unique operation named: saveUsingPOST_8
2019-05-24 10:51:04 -Generating unique operation named: updateUsingGET_7
2019-05-24 10:51:04 -Generating unique operation named: updateUsingHEAD_7
2019-05-24 10:51:04 -Generating unique operation named: updateUsingPOST_9
2019-05-24 10:51:04 -Generating unique operation named: updateUsingPUT_7
2019-05-24 10:51:04 -Generating unique operation named: updateUsingPATCH_7
2019-05-24 10:51:04 -Generating unique operation named: updateUsingDELETE_7
2019-05-24 10:51:04 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-24 10:51:04 -Generating unique operation named: updateUsingTRACE_7
2019-05-24 10:51:04 -Generating unique operation named: addUsingGET_9
2019-05-24 10:51:04 -Generating unique operation named: editUsingGET_10
2019-05-24 10:51:04 -Generating unique operation named: infoUsingGET_1
2019-05-24 10:51:04 -Generating unique operation named: infoUsingHEAD_1
2019-05-24 10:51:04 -Generating unique operation named: infoUsingPOST_1
2019-05-24 10:51:04 -Generating unique operation named: infoUsingPUT_1
2019-05-24 10:51:04 -Generating unique operation named: infoUsingPATCH_1
2019-05-24 10:51:04 -Generating unique operation named: infoUsingDELETE_1
2019-05-24 10:51:04 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-24 10:51:04 -Generating unique operation named: infoUsingTRACE_1
2019-05-24 10:51:04 -Generating unique operation named: listUsingGET_10
2019-05-24 10:51:04 -Generating unique operation named: removeUsingPOST_18
2019-05-24 10:51:04 -Generating unique operation named: removeUsingPOST_19
2019-05-24 10:51:04 -Generating unique operation named: saveUsingPOST_9
2019-05-24 10:51:04 -Generating unique operation named: updateUsingPOST_10
2019-05-24 10:51:04 -Generating unique operation named: listUsingGET_11
2019-05-24 10:51:04 -Generating unique operation named: removeUsingPOST_20
2019-05-24 10:51:04 -Generating unique operation named: welcomeUsingGET_1
2019-05-24 10:51:04 -Generating unique operation named: addUsingGET_10
2019-05-24 10:51:04 -Generating unique operation named: editUsingGET_11
2019-05-24 10:51:04 -Generating unique operation named: listUsingGET_12
2019-05-24 10:51:04 -Generating unique operation named: removeUsingPOST_21
2019-05-24 10:51:04 -Generating unique operation named: saveUsingPOST_10
2019-05-24 10:51:04 -Generating unique operation named: treeUsingGET_1
2019-05-24 10:51:04 -Generating unique operation named: treeUsingGET_2
2019-05-24 10:51:04 -Generating unique operation named: updateUsingPOST_11
2019-05-24 10:51:04 -Generating unique operation named: addUsingGET_11
2019-05-24 10:51:04 -Generating unique operation named: editUsingGET_12
2019-05-24 10:51:04 -Generating unique operation named: listUsingGET_13
2019-05-24 10:51:04 -Generating unique operation named: removeUsingPOST_22
2019-05-24 10:51:04 -Generating unique operation named: removeUsingPOST_23
2019-05-24 10:51:04 -Generating unique operation named: updateUsingPOST_12
2019-05-24 10:51:04 -Generating unique operation named: addUsingGET_12
2019-05-24 10:51:04 -Generating unique operation named: editUsingGET_13
2019-05-24 10:51:04 -Generating unique operation named: listUsingGET_14
2019-05-24 10:51:04 -Generating unique operation named: removeUsingPOST_24
2019-05-24 10:51:04 -Generating unique operation named: removeUsingPOST_25
2019-05-24 10:51:04 -Generating unique operation named: saveUsingPOST_11
2019-05-24 10:51:04 -Generating unique operation named: updateUsingGET_8
2019-05-24 10:51:04 -Generating unique operation named: updateUsingHEAD_8
2019-05-24 10:51:04 -Generating unique operation named: updateUsingPOST_13
2019-05-24 10:51:04 -Generating unique operation named: updateUsingPUT_8
2019-05-24 10:51:04 -Generating unique operation named: updateUsingPATCH_8
2019-05-24 10:51:04 -Generating unique operation named: updateUsingDELETE_8
2019-05-24 10:51:04 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-24 10:51:04 -Generating unique operation named: updateUsingTRACE_8
2019-05-24 10:51:04 -Generating unique operation named: addUsingGET_13
2019-05-24 10:51:04 -Generating unique operation named: editUsingGET_14
2019-05-24 10:51:04 -Generating unique operation named: listUsingGET_15
2019-05-24 10:51:04 -Generating unique operation named: printEditUsingGET_1
2019-05-24 10:51:04 -Generating unique operation named: removeUsingPOST_26
2019-05-24 10:51:04 -Generating unique operation named: removeUsingPOST_27
2019-05-24 10:51:04 -Generating unique operation named: saveUsingPOST_12
2019-05-24 10:51:04 -Generating unique operation named: updateUsingGET_9
2019-05-24 10:51:04 -Generating unique operation named: updateUsingHEAD_9
2019-05-24 10:51:04 -Generating unique operation named: updateUsingPOST_14
2019-05-24 10:51:04 -Generating unique operation named: updateUsingPUT_9
2019-05-24 10:51:04 -Generating unique operation named: updateUsingPATCH_9
2019-05-24 10:51:04 -Generating unique operation named: updateUsingDELETE_9
2019-05-24 10:51:04 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-24 10:51:05 -Generating unique operation named: updateUsingTRACE_9
2019-05-24 10:51:05 -Generating unique operation named: addUsingGET_14
2019-05-24 10:51:05 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-24 10:51:05 -Generating unique operation named: editUsingGET_15
2019-05-24 10:51:05 -Generating unique operation named: listUsingGET_16
2019-05-24 10:51:05 -Generating unique operation named: saveUsingPOST_13
2019-05-24 10:51:05 -Generating unique operation named: saveUsingPOST_14
2019-05-24 10:51:05 -Generating unique operation named: updateUsingPOST_15
2019-05-24 10:51:05 -Generating unique operation named: listUsingGET_17
2019-05-24 10:51:05 -Generating unique operation named: listUsingHEAD_1
2019-05-24 10:51:05 -Generating unique operation named: listUsingPOST_1
2019-05-24 10:51:05 -Generating unique operation named: listUsingPUT_1
2019-05-24 10:51:05 -Generating unique operation named: listUsingPATCH_1
2019-05-24 10:51:05 -Generating unique operation named: listUsingDELETE_1
2019-05-24 10:51:05 -Generating unique operation named: listUsingOPTIONS_1
2019-05-24 10:51:05 -Generating unique operation named: listUsingTRACE_1
2019-05-24 10:51:05 -Generating unique operation named: countDDUsingGET_1
2019-05-24 10:51:05 -Generating unique operation named: exportDDUsingGET_1
2019-05-24 10:51:05 -Generating unique operation named: addUsingGET_15
2019-05-24 10:51:05 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-24 10:51:05 -Generating unique operation named: editUsingGET_16
2019-05-24 10:51:05 -Generating unique operation named: listUsingGET_18
2019-05-24 10:51:05 -Generating unique operation named: removeUsingPOST_28
2019-05-24 10:51:05 -Generating unique operation named: saveUsingPOST_15
2019-05-24 10:51:05 -Generating unique operation named: treeUsingGET_3
2019-05-24 10:51:05 -Generating unique operation named: treeViewUsingGET_1
2019-05-24 10:51:05 -Generating unique operation named: updateUsingPOST_16
2019-05-24 10:51:05 -Generating unique operation named: addUsingGET_16
2019-05-24 10:51:05 -Generating unique operation named: editUsingGET_17
2019-05-24 10:51:05 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-24 10:51:05 -Generating unique operation named: listUsingGET_19
2019-05-24 10:51:05 -Generating unique operation named: removeUsingPOST_29
2019-05-24 10:51:05 -Generating unique operation named: removeUsingPOST_30
2019-05-24 10:51:05 -Generating unique operation named: saveUsingPOST_16
2019-05-24 10:51:05 -Generating unique operation named: updateUsingGET_10
2019-05-24 10:51:05 -Generating unique operation named: updateUsingHEAD_10
2019-05-24 10:51:05 -Generating unique operation named: updateUsingPOST_17
2019-05-24 10:51:05 -Generating unique operation named: updateUsingPUT_10
2019-05-24 10:51:05 -Generating unique operation named: updateUsingPATCH_10
2019-05-24 10:51:05 -Generating unique operation named: updateUsingDELETE_10
2019-05-24 10:51:05 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-24 10:51:05 -Generating unique operation named: updateUsingTRACE_10
2019-05-24 10:51:05 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-24 10:51:05 -Generating unique operation named: addUsingGET_17
2019-05-24 10:51:05 -Generating unique operation named: editUsingGET_18
2019-05-24 10:51:05 -Generating unique operation named: listUsingGET_20
2019-05-24 10:51:05 -Generating unique operation named: removeUsingPOST_31
2019-05-24 10:51:05 -Generating unique operation named: removeUsingPOST_32
2019-05-24 10:51:05 -Generating unique operation named: saveUsingPOST_17
2019-05-24 10:51:05 -Generating unique operation named: updateUsingGET_11
2019-05-24 10:51:05 -Generating unique operation named: updateUsingHEAD_11
2019-05-24 10:51:05 -Generating unique operation named: updateUsingPOST_18
2019-05-24 10:51:05 -Generating unique operation named: updateUsingPUT_11
2019-05-24 10:51:05 -Generating unique operation named: updateUsingPATCH_11
2019-05-24 10:51:05 -Generating unique operation named: updateUsingDELETE_11
2019-05-24 10:51:05 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-24 10:51:05 -Generating unique operation named: updateUsingTRACE_11
2019-05-24 10:51:05 -Generating unique operation named: addUsingGET_18
2019-05-24 10:51:05 -Generating unique operation named: editUsingGET_19
2019-05-24 10:51:05 -Generating unique operation named: listUsingGET_21
2019-05-24 10:51:05 -Generating unique operation named: removeUsingPOST_33
2019-05-24 10:51:05 -Generating unique operation named: removeUsingPOST_34
2019-05-24 10:51:05 -Generating unique operation named: saveUsingPOST_18
2019-05-24 10:51:05 -Generating unique operation named: updateUsingGET_12
2019-05-24 10:51:05 -Generating unique operation named: updateUsingHEAD_12
2019-05-24 10:51:05 -Generating unique operation named: updateUsingPOST_19
2019-05-24 10:51:05 -Generating unique operation named: updateUsingPUT_12
2019-05-24 10:51:05 -Generating unique operation named: updateUsingPATCH_12
2019-05-24 10:51:05 -Generating unique operation named: updateUsingDELETE_12
2019-05-24 10:51:05 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-24 10:51:05 -Generating unique operation named: updateUsingTRACE_12
2019-05-24 10:51:05 -Starting Quartz Scheduler now
2019-05-24 10:51:05 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-24 10:51:05 -Starting...
2019-05-24 10:51:05 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-24 10:51:05 -Started.
2019-05-24 10:51:05 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-24 10:51:05 -Using a shared selector for servlet write/read
2019-05-24 10:51:05 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-24 10:51:05 -Started BootdoApplication in 35.553 seconds (JVM running for 36.559)
2019-05-24 10:51:06 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-24 10:51:06 -==> Parameters: 
2019-05-24 10:51:06 -<==      Total: 1
2019-05-24 10:51:19 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-24 10:51:19 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-24 10:51:19 -FrameworkServlet 'dispatcherServlet': initialization completed in 87 ms
2019-05-24 10:51:19 -Enabling session validation scheduler...
2019-05-24 10:51:19 -请求地址 : http://localhost:8081/login;JSESSIONID=04c9fffc-6299-4dd0-aac6-1dd0251824a0
2019-05-24 10:51:19 -HTTP METHOD : GET
2019-05-24 10:51:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 10:51:19 -参数 : [{}]
2019-05-24 10:51:19 -耗时 : 4
2019-05-24 10:51:19 -返回值 : login
2019-05-24 10:51:21 -请求地址 : http://localhost:8081/getVerify
2019-05-24 10:51:21 -HTTP METHOD : GET
2019-05-24 10:51:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 10:51:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6540517b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@58d9ca9b]
2019-05-24 10:51:22 -7259
2019-05-24 10:51:22 -耗时 : 631
2019-05-24 10:51:22 -返回值 : null
2019-05-24 10:51:26 -请求地址 : http://localhost:8081/login
2019-05-24 10:51:26 -HTTP METHOD : POST
2019-05-24 10:51:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 10:51:26 -参数 : [admin, 111111, 7259, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6306a7a4]
2019-05-24 10:51:26 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-24 10:51:26 -==> Parameters: admin(String)
2019-05-24 10:51:27 -<==      Total: 1
2019-05-24 10:51:27 -耗时 : 324
2019-05-24 10:51:27 -返回值 : {msg=操作成功, code=0}
2019-05-24 10:51:27 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-24 10:51:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:51:27 -==> Parameters: 1(Long), admin(String), 登录(String), 324(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 10:51:27.13(Timestamp)
2019-05-24 10:51:27 -请求地址 : http://localhost:8081/index
2019-05-24 10:51:27 -HTTP METHOD : GET
2019-05-24 10:51:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 10:51:27 -参数 : [{}]
2019-05-24 10:51:27 -<==    Updates: 1
2019-05-24 10:51:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 10:51:27 -==> Parameters: 1(Long)
2019-05-24 10:51:27 -<==      Total: 50
2019-05-24 10:51:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 10:51:27 -==> Parameters: 138(Long)
2019-05-24 10:51:27 -<==      Total: 1
2019-05-24 10:51:27 -耗时 : 264
2019-05-24 10:51:27 -返回值 : index_v1
2019-05-24 10:51:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:51:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 265(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 10:51:27.526(Timestamp)
2019-05-24 10:51:27 -<==    Updates: 1
2019-05-24 10:51:27 -请求地址 : http://localhost:8081/main
2019-05-24 10:51:27 -HTTP METHOD : GET
2019-05-24 10:51:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:51:27 -参数 : []
2019-05-24 10:51:27 -耗时 : 0
2019-05-24 10:51:27 -返回值 : main
2019-05-24 10:51:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 10:51:28 -HTTP METHOD : GET
2019-05-24 10:51:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 10:51:28 -参数 : []
2019-05-24 10:51:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 10:51:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 10:51:28 -<==      Total: 0
2019-05-24 10:51:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 10:51:28 -==> Parameters: 1(Long), 0(String)
2019-05-24 10:51:28 -<==      Total: 1
2019-05-24 10:51:28 -耗时 : 68
2019-05-24 10:51:28 -返回值 : com.bootdo.common.utils.PageUtils@c366e4e
2019-05-24 10:51:28 -请求地址 : http://localhost:8081/main
2019-05-24 10:51:28 -HTTP METHOD : GET
2019-05-24 10:51:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:51:28 -参数 : []
2019-05-24 10:51:28 -耗时 : 1
2019-05-24 10:51:28 -返回值 : main
2019-05-24 10:51:29 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 10:51:29 -==> Parameters: 1(Long)
2019-05-24 10:51:29 -<==      Total: 94
2019-05-24 10:51:29 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 10:51:29 -HTTP METHOD : GET
2019-05-24 10:51:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 10:51:29 -参数 : []
2019-05-24 10:51:29 -耗时 : 2
2019-05-24 10:51:29 -返回值 : /moneyList/moneyWZ
2019-05-24 10:51:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 10:51:30 -HTTP METHOD : GET
2019-05-24 10:51:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 10:51:30 -参数 : [userType]
2019-05-24 10:51:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 10:51:30 -==> Parameters: userType(String)
2019-05-24 10:51:30 -<==      Total: 4
2019-05-24 10:51:30 -耗时 : 60
2019-05-24 10:51:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 10:51:30 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:51:30 -HTTP METHOD : GET
2019-05-24 10:51:30 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:51:30 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@4ce289be]
2019-05-24 10:51:30 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:51:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:51:30 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:51:30.677(Timestamp)
2019-05-24 10:51:30 -<==    Updates: 1
2019-05-24 10:51:37 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:51:37 -HTTP METHOD : GET
2019-05-24 10:51:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:51:37 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@599d309]
2019-05-24 10:51:37 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:51:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:51:37 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:51:37.517(Timestamp)
2019-05-24 10:51:37 -<==    Updates: 1
2019-05-24 10:51:38 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:51:38 -HTTP METHOD : GET
2019-05-24 10:51:38 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:51:38 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@623caacc]
2019-05-24 10:51:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:51:38 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:51:38 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:51:38.184(Timestamp)
2019-05-24 10:51:38 -<==    Updates: 1
2019-05-24 10:51:58 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-05-24 10:52:09 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:52:09 -HTTP METHOD : GET
2019-05-24 10:52:09 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:52:09 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@7805259d]
2019-05-24 10:52:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:52:09 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:52:09 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:52:09.941(Timestamp)
2019-05-24 10:52:09 -<==    Updates: 1
2019-05-24 10:52:10 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:52:10 -HTTP METHOD : GET
2019-05-24 10:52:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:52:10 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@7bf37be1]
2019-05-24 10:52:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:52:10 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:52:10 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:52:10.985(Timestamp)
2019-05-24 10:52:11 -<==    Updates: 1
2019-05-24 10:52:11 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:52:11 -HTTP METHOD : GET
2019-05-24 10:52:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:52:11 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@1d8479f]
2019-05-24 10:52:11 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:52:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:52:11 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:52:11.195(Timestamp)
2019-05-24 10:52:11 -<==    Updates: 1
2019-05-24 10:52:11 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:52:11 -HTTP METHOD : GET
2019-05-24 10:52:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:52:11 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@409e2bdf]
2019-05-24 10:52:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:52:11 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:52:11 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:52:11.481(Timestamp)
2019-05-24 10:52:11 -<==    Updates: 1
2019-05-24 10:52:11 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:52:11 -HTTP METHOD : GET
2019-05-24 10:52:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:52:11 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@6031d4e0]
2019-05-24 10:52:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:52:11 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:52:11 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:52:11.816(Timestamp)
2019-05-24 10:52:11 -<==    Updates: 1
2019-05-24 10:52:12 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:52:12 -HTTP METHOD : GET
2019-05-24 10:52:12 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:52:12 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@6880504d]
2019-05-24 10:52:12 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor128.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$419defcb.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:52:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:52:12 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:52:12.457(Timestamp)
2019-05-24 10:52:12 -<==    Updates: 1
2019-05-24 10:57:08 -Starting BootdoApplication on PC-201905091110 with PID 16104 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-24 10:57:08 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-24 10:57:08 -The following profiles are active: dev
2019-05-24 10:57:08 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 10:57:08 CST 2019]; root of context hierarchy
2019-05-24 10:57:19 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-24 10:57:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c846a4eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:57:27 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ba9fd392] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:57:28 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:57:29 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:57:29 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:57:29 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-24 10:57:29 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-24 10:57:29 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:57:29 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:57:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:57:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 10:57:30 -Tomcat initialized with port(s): 8081 (http)
2019-05-24 10:57:30 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-24 10:57:30 -Starting service [Tomcat]
2019-05-24 10:57:30 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-24 10:57:30 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-24 10:57:31 -Initializing Spring embedded WebApplicationContext
2019-05-24 10:57:31 -Root WebApplicationContext: initialization completed in 22623 ms
2019-05-24 10:57:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-24 10:57:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-24 10:57:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-24 10:57:32 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-24 10:57:32 -Filter xssFilter was not registered (disabled)
2019-05-24 10:57:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-24 10:57:32 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-24 10:57:32 -Servlet statViewServlet mapped to [/druid/*]
2019-05-24 10:57:32 -Servlet dispatcherServlet mapped to [/]
2019-05-24 10:57:37 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 10:57:08 CST 2019]; root of context hierarchy
2019-05-24 10:57:38 -Using default implementation for ThreadExecutor
2019-05-24 10:57:38 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-24 10:57:38 -Quartz Scheduler v.2.2.1 created.
2019-05-24 10:57:38 -RAMJobStore initialized.
2019-05-24 10:57:38 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-24 10:57:38 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-24 10:57:38 -Quartz scheduler version: 2.2.1
2019-05-24 10:57:38 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@32a8ca06
2019-05-24 10:57:38 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-24 10:57:38 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-24 10:57:42 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:57:42 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-24 10:57:42 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:57:42 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-24 10:57:42 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-24 10:57:42 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-24 10:57:42 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-24 10:57:42 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:57:42 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:57:42 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-24 10:57:42 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-24 10:57:42 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:57:42 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 10:57:42 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-24 10:57:42 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-24 10:57:42 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 10:57:42 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:57:42 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-24 10:57:42 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-24 10:57:42 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 10:57:42 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 10:57:42 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-24 10:57:42 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-24 10:57:42 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 10:57:42 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-24 10:57:42 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-24 10:57:42 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-24 10:57:42 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-24 10:57:42 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-24 10:57:42 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-24 10:57:42 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-24 10:57:42 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-24 10:57:42 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-24 10:57:42 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-24 10:57:42 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-24 10:57:42 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-24 10:57:42 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-24 10:57:42 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 10:57:42 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-24 10:57:42 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 10:57:42 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-24 10:57:42 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-24 10:57:42 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-24 10:57:42 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-24 10:57:42 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-24 10:57:42 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-24 10:57:42 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-24 10:57:42 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-24 10:57:42 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-24 10:57:42 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:57:42 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:57:42 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:57:42 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-24 10:57:42 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-24 10:57:42 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:57:42 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-24 10:57:42 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-24 10:57:42 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:57:42 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-24 10:57:42 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-24 10:57:42 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-24 10:57:42 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-24 10:57:42 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-24 10:57:42 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-24 10:57:42 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-24 10:57:42 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-24 10:57:42 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-24 10:57:42 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-24 10:57:42 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:57:42 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-24 10:57:42 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 10:57:42 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 10:57:42 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-24 10:57:42 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-24 10:57:42 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-24 10:57:42 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 10:57:42 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:57:42 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-24 10:57:42 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:57:42 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 10:57:42 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-24 10:57:42 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 10:57:42 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 10:57:42 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-24 10:57:42 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-24 10:57:42 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-24 10:57:42 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-24 10:57:42 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-24 10:57:42 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-24 10:57:42 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-24 10:57:42 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 10:57:42 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-24 10:57:42 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-24 10:57:42 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-24 10:57:42 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-24 10:57:42 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-24 10:57:42 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-24 10:57:42 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-24 10:57:42 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-24 10:57:42 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-24 10:57:42 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-24 10:57:42 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-24 10:57:42 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-24 10:57:42 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-24 10:57:42 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-24 10:57:42 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-24 10:57:42 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-24 10:57:42 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-24 10:57:42 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-24 10:57:42 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-24 10:57:42 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:57:42 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-24 10:57:42 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-24 10:57:42 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-24 10:57:42 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-24 10:57:42 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-24 10:57:42 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-24 10:57:42 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-24 10:57:42 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-24 10:57:42 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-24 10:57:42 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-24 10:57:42 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-24 10:57:42 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-24 10:57:42 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-24 10:57:42 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-24 10:57:42 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-24 10:57:42 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-24 10:57:42 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-24 10:57:42 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 10:57:42 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 10:57:42 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:57:42 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-24 10:57:42 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-24 10:57:42 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-24 10:57:42 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-24 10:57:42 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-24 10:57:42 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-24 10:57:42 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 10:57:42 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-24 10:57:42 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-24 10:57:42 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-24 10:57:42 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 10:57:42 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 10:57:42 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 10:57:42 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 10:57:42 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-24 10:57:42 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-24 10:57:42 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 10:57:42 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-24 10:57:42 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 10:57:42 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 10:57:42 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-24 10:57:42 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-24 10:57:42 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-24 10:57:43 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-24 10:57:43 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-24 10:57:43 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-24 10:57:44 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:57:44 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 10:57:08 CST 2019]; root of context hierarchy
2019-05-24 10:57:44 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:57:44 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:57:44 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 10:57:44 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-24 10:57:45 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-24 10:57:47 -Registering beans for JMX exposure on startup
2019-05-24 10:57:47 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-24 10:57:47 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-24 10:57:47 -Starting beans in phase 2147483647
2019-05-24 10:57:47 -Context refreshed
2019-05-24 10:57:47 -Found 1 custom documentation plugin(s)
2019-05-24 10:57:47 -Scanning for api listing references
2019-05-24 10:57:48 -Generating unique operation named: getCountDUsingPOST_1
2019-05-24 10:57:48 -Generating unique operation named: removeUsingPOST_1
2019-05-24 10:57:48 -Generating unique operation named: addUsingGET_1
2019-05-24 10:57:48 -Generating unique operation named: editUsingGET_1
2019-05-24 10:57:48 -Generating unique operation named: listUsingGET_1
2019-05-24 10:57:48 -Generating unique operation named: removeUsingPOST_2
2019-05-24 10:57:48 -Generating unique operation named: removeUsingPOST_3
2019-05-24 10:57:48 -Generating unique operation named: saveUsingPOST_1
2019-05-24 10:57:48 -Generating unique operation named: updateUsingGET_1
2019-05-24 10:57:48 -Generating unique operation named: updateUsingHEAD_1
2019-05-24 10:57:48 -Generating unique operation named: updateUsingPOST_1
2019-05-24 10:57:48 -Generating unique operation named: updateUsingPUT_1
2019-05-24 10:57:48 -Generating unique operation named: updateUsingPATCH_1
2019-05-24 10:57:48 -Generating unique operation named: updateUsingDELETE_1
2019-05-24 10:57:48 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-24 10:57:48 -Generating unique operation named: updateUsingTRACE_1
2019-05-24 10:57:48 -Generating unique operation named: addUsingGET_2
2019-05-24 10:57:48 -Generating unique operation named: editUsingGET_2
2019-05-24 10:57:48 -Generating unique operation named: listUsingGET_2
2019-05-24 10:57:48 -Generating unique operation named: removeUsingPOST_4
2019-05-24 10:57:48 -Generating unique operation named: removeUsingPOST_5
2019-05-24 10:57:48 -Generating unique operation named: saveUsingPOST_2
2019-05-24 10:57:48 -Generating unique operation named: updateUsingPOST_2
2019-05-24 10:57:48 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-24 10:57:48 -Generating unique operation named: addUsingGET_3
2019-05-24 10:57:48 -Generating unique operation named: editUsingGET_3
2019-05-24 10:57:48 -Generating unique operation named: listUsingGET_3
2019-05-24 10:57:49 -Generating unique operation named: removeUsingPOST_6
2019-05-24 10:57:49 -Generating unique operation named: removeUsingPOST_7
2019-05-24 10:57:49 -Generating unique operation named: saveUsingPOST_3
2019-05-24 10:57:49 -Generating unique operation named: updateUsingGET_2
2019-05-24 10:57:49 -Generating unique operation named: updateUsingHEAD_2
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPOST_3
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPUT_2
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPATCH_2
2019-05-24 10:57:49 -Generating unique operation named: updateUsingDELETE_2
2019-05-24 10:57:49 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-24 10:57:49 -Generating unique operation named: updateUsingTRACE_2
2019-05-24 10:57:49 -Generating unique operation named: addUsingGET_4
2019-05-24 10:57:49 -Generating unique operation named: editUsingGET_4
2019-05-24 10:57:49 -Generating unique operation named: listUsingGET_4
2019-05-24 10:57:49 -Generating unique operation named: removeUsingPOST_8
2019-05-24 10:57:49 -Generating unique operation named: removeUsingPOST_9
2019-05-24 10:57:49 -Generating unique operation named: saveUsingPOST_4
2019-05-24 10:57:49 -Generating unique operation named: updateUsingGET_3
2019-05-24 10:57:49 -Generating unique operation named: updateUsingHEAD_3
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPOST_4
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPUT_3
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPATCH_3
2019-05-24 10:57:49 -Generating unique operation named: updateUsingDELETE_3
2019-05-24 10:57:49 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-24 10:57:49 -Generating unique operation named: updateUsingTRACE_3
2019-05-24 10:57:49 -Generating unique operation named: ElecUsingGET_1
2019-05-24 10:57:49 -Generating unique operation named: addUsingGET_5
2019-05-24 10:57:49 -Generating unique operation named: editUsingGET_5
2019-05-24 10:57:49 -Generating unique operation named: listUsingGET_5
2019-05-24 10:57:49 -Generating unique operation named: removeUsingPOST_10
2019-05-24 10:57:49 -Generating unique operation named: removeUsingPOST_11
2019-05-24 10:57:49 -Generating unique operation named: saveUsingPOST_5
2019-05-24 10:57:49 -Generating unique operation named: updateUsingGET_4
2019-05-24 10:57:49 -Generating unique operation named: updateUsingHEAD_4
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPOST_5
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPUT_4
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPATCH_4
2019-05-24 10:57:49 -Generating unique operation named: updateUsingDELETE_4
2019-05-24 10:57:49 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-24 10:57:49 -Generating unique operation named: updateUsingTRACE_4
2019-05-24 10:57:49 -Generating unique operation named: editUsingGET_6
2019-05-24 10:57:49 -Generating unique operation named: listUsingGET_6
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPOST_6
2019-05-24 10:57:49 -Generating unique operation named: addUsingGET_6
2019-05-24 10:57:49 -Generating unique operation named: editUsingGET_7
2019-05-24 10:57:49 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-24 10:57:49 -Generating unique operation named: listUsingGET_7
2019-05-24 10:57:49 -Generating unique operation named: removeUsingPOST_12
2019-05-24 10:57:49 -Generating unique operation named: removeUsingPOST_13
2019-05-24 10:57:49 -Generating unique operation named: saveUsingPOST_6
2019-05-24 10:57:49 -Generating unique operation named: updateUsingGET_5
2019-05-24 10:57:49 -Generating unique operation named: updateUsingHEAD_5
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPOST_7
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPUT_5
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPATCH_5
2019-05-24 10:57:49 -Generating unique operation named: updateUsingDELETE_5
2019-05-24 10:57:49 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-24 10:57:49 -Generating unique operation named: updateUsingTRACE_5
2019-05-24 10:57:49 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-24 10:57:49 -Generating unique operation named: addUsingGET_7
2019-05-24 10:57:49 -Generating unique operation named: editUsingGET_8
2019-05-24 10:57:49 -Generating unique operation named: listUsingGET_8
2019-05-24 10:57:49 -Generating unique operation named: removeUsingPOST_14
2019-05-24 10:57:49 -Generating unique operation named: removeUsingPOST_15
2019-05-24 10:57:49 -Generating unique operation named: saveUsingPOST_7
2019-05-24 10:57:49 -Generating unique operation named: updateUsingGET_6
2019-05-24 10:57:49 -Generating unique operation named: updateUsingHEAD_6
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPOST_8
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPUT_6
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPATCH_6
2019-05-24 10:57:49 -Generating unique operation named: updateUsingDELETE_6
2019-05-24 10:57:49 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-24 10:57:49 -Generating unique operation named: updateUsingTRACE_6
2019-05-24 10:57:49 -Generating unique operation named: addUsingGET_8
2019-05-24 10:57:49 -Generating unique operation named: editUsingGET_9
2019-05-24 10:57:49 -Generating unique operation named: listUsingGET_9
2019-05-24 10:57:49 -Generating unique operation named: removeUsingPOST_16
2019-05-24 10:57:49 -Generating unique operation named: removeUsingPOST_17
2019-05-24 10:57:49 -Generating unique operation named: saveUsingPOST_8
2019-05-24 10:57:49 -Generating unique operation named: updateUsingGET_7
2019-05-24 10:57:49 -Generating unique operation named: updateUsingHEAD_7
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPOST_9
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPUT_7
2019-05-24 10:57:49 -Generating unique operation named: updateUsingPATCH_7
2019-05-24 10:57:50 -Generating unique operation named: updateUsingDELETE_7
2019-05-24 10:57:50 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-24 10:57:50 -Generating unique operation named: updateUsingTRACE_7
2019-05-24 10:57:50 -Generating unique operation named: addUsingGET_9
2019-05-24 10:57:50 -Generating unique operation named: editUsingGET_10
2019-05-24 10:57:50 -Generating unique operation named: infoUsingGET_1
2019-05-24 10:57:50 -Generating unique operation named: infoUsingHEAD_1
2019-05-24 10:57:50 -Generating unique operation named: infoUsingPOST_1
2019-05-24 10:57:50 -Generating unique operation named: infoUsingPUT_1
2019-05-24 10:57:50 -Generating unique operation named: infoUsingPATCH_1
2019-05-24 10:57:50 -Generating unique operation named: infoUsingDELETE_1
2019-05-24 10:57:50 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-24 10:57:50 -Generating unique operation named: infoUsingTRACE_1
2019-05-24 10:57:50 -Generating unique operation named: listUsingGET_10
2019-05-24 10:57:50 -Generating unique operation named: removeUsingPOST_18
2019-05-24 10:57:50 -Generating unique operation named: removeUsingPOST_19
2019-05-24 10:57:50 -Generating unique operation named: saveUsingPOST_9
2019-05-24 10:57:50 -Generating unique operation named: updateUsingPOST_10
2019-05-24 10:57:50 -Generating unique operation named: listUsingGET_11
2019-05-24 10:57:50 -Generating unique operation named: removeUsingPOST_20
2019-05-24 10:57:50 -Generating unique operation named: welcomeUsingGET_1
2019-05-24 10:57:50 -Generating unique operation named: addUsingGET_10
2019-05-24 10:57:50 -Generating unique operation named: editUsingGET_11
2019-05-24 10:57:50 -Generating unique operation named: listUsingGET_12
2019-05-24 10:57:50 -Generating unique operation named: removeUsingPOST_21
2019-05-24 10:57:50 -Generating unique operation named: saveUsingPOST_10
2019-05-24 10:57:50 -Generating unique operation named: treeUsingGET_1
2019-05-24 10:57:50 -Generating unique operation named: treeUsingGET_2
2019-05-24 10:57:50 -Generating unique operation named: updateUsingPOST_11
2019-05-24 10:57:50 -Generating unique operation named: addUsingGET_11
2019-05-24 10:57:50 -Generating unique operation named: editUsingGET_12
2019-05-24 10:57:50 -Generating unique operation named: listUsingGET_13
2019-05-24 10:57:50 -Generating unique operation named: removeUsingPOST_22
2019-05-24 10:57:50 -Generating unique operation named: removeUsingPOST_23
2019-05-24 10:57:50 -Generating unique operation named: updateUsingPOST_12
2019-05-24 10:57:50 -Generating unique operation named: addUsingGET_12
2019-05-24 10:57:50 -Generating unique operation named: editUsingGET_13
2019-05-24 10:57:50 -Generating unique operation named: listUsingGET_14
2019-05-24 10:57:50 -Generating unique operation named: removeUsingPOST_24
2019-05-24 10:57:50 -Generating unique operation named: removeUsingPOST_25
2019-05-24 10:57:50 -Generating unique operation named: saveUsingPOST_11
2019-05-24 10:57:50 -Generating unique operation named: updateUsingGET_8
2019-05-24 10:57:50 -Generating unique operation named: updateUsingHEAD_8
2019-05-24 10:57:50 -Generating unique operation named: updateUsingPOST_13
2019-05-24 10:57:50 -Generating unique operation named: updateUsingPUT_8
2019-05-24 10:57:50 -Generating unique operation named: updateUsingPATCH_8
2019-05-24 10:57:50 -Generating unique operation named: updateUsingDELETE_8
2019-05-24 10:57:50 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-24 10:57:50 -Generating unique operation named: updateUsingTRACE_8
2019-05-24 10:57:50 -Generating unique operation named: addUsingGET_13
2019-05-24 10:57:50 -Generating unique operation named: editUsingGET_14
2019-05-24 10:57:50 -Generating unique operation named: listUsingGET_15
2019-05-24 10:57:50 -Generating unique operation named: printEditUsingGET_1
2019-05-24 10:57:50 -Generating unique operation named: removeUsingPOST_26
2019-05-24 10:57:50 -Generating unique operation named: removeUsingPOST_27
2019-05-24 10:57:50 -Generating unique operation named: saveUsingPOST_12
2019-05-24 10:57:50 -Generating unique operation named: updateUsingGET_9
2019-05-24 10:57:50 -Generating unique operation named: updateUsingHEAD_9
2019-05-24 10:57:50 -Generating unique operation named: updateUsingPOST_14
2019-05-24 10:57:50 -Generating unique operation named: updateUsingPUT_9
2019-05-24 10:57:50 -Generating unique operation named: updateUsingPATCH_9
2019-05-24 10:57:50 -Generating unique operation named: updateUsingDELETE_9
2019-05-24 10:57:50 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-24 10:57:50 -Generating unique operation named: updateUsingTRACE_9
2019-05-24 10:57:50 -Generating unique operation named: addUsingGET_14
2019-05-24 10:57:50 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-24 10:57:50 -Generating unique operation named: editUsingGET_15
2019-05-24 10:57:50 -Generating unique operation named: listUsingGET_16
2019-05-24 10:57:50 -Generating unique operation named: saveUsingPOST_13
2019-05-24 10:57:50 -Generating unique operation named: saveUsingPOST_14
2019-05-24 10:57:50 -Generating unique operation named: updateUsingPOST_15
2019-05-24 10:57:50 -Generating unique operation named: listUsingGET_17
2019-05-24 10:57:50 -Generating unique operation named: listUsingHEAD_1
2019-05-24 10:57:50 -Generating unique operation named: listUsingPOST_1
2019-05-24 10:57:50 -Generating unique operation named: listUsingPUT_1
2019-05-24 10:57:50 -Generating unique operation named: listUsingPATCH_1
2019-05-24 10:57:50 -Generating unique operation named: listUsingDELETE_1
2019-05-24 10:57:50 -Generating unique operation named: listUsingOPTIONS_1
2019-05-24 10:57:50 -Generating unique operation named: listUsingTRACE_1
2019-05-24 10:57:50 -Generating unique operation named: countDDUsingGET_1
2019-05-24 10:57:50 -Generating unique operation named: exportDDUsingGET_1
2019-05-24 10:57:51 -Generating unique operation named: addUsingGET_15
2019-05-24 10:57:51 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-24 10:57:51 -Generating unique operation named: editUsingGET_16
2019-05-24 10:57:51 -Generating unique operation named: listUsingGET_18
2019-05-24 10:57:51 -Generating unique operation named: removeUsingPOST_28
2019-05-24 10:57:51 -Generating unique operation named: saveUsingPOST_15
2019-05-24 10:57:51 -Generating unique operation named: treeUsingGET_3
2019-05-24 10:57:51 -Generating unique operation named: treeViewUsingGET_1
2019-05-24 10:57:51 -Generating unique operation named: updateUsingPOST_16
2019-05-24 10:57:51 -Generating unique operation named: addUsingGET_16
2019-05-24 10:57:51 -Generating unique operation named: editUsingGET_17
2019-05-24 10:57:51 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-24 10:57:51 -Generating unique operation named: listUsingGET_19
2019-05-24 10:57:51 -Generating unique operation named: removeUsingPOST_29
2019-05-24 10:57:51 -Generating unique operation named: removeUsingPOST_30
2019-05-24 10:57:51 -Generating unique operation named: saveUsingPOST_16
2019-05-24 10:57:51 -Generating unique operation named: updateUsingGET_10
2019-05-24 10:57:51 -Generating unique operation named: updateUsingHEAD_10
2019-05-24 10:57:51 -Generating unique operation named: updateUsingPOST_17
2019-05-24 10:57:51 -Generating unique operation named: updateUsingPUT_10
2019-05-24 10:57:51 -Generating unique operation named: updateUsingPATCH_10
2019-05-24 10:57:51 -Generating unique operation named: updateUsingDELETE_10
2019-05-24 10:57:51 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-24 10:57:51 -Generating unique operation named: updateUsingTRACE_10
2019-05-24 10:57:51 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-24 10:57:51 -Generating unique operation named: addUsingGET_17
2019-05-24 10:57:51 -Generating unique operation named: editUsingGET_18
2019-05-24 10:57:51 -Generating unique operation named: listUsingGET_20
2019-05-24 10:57:51 -Generating unique operation named: removeUsingPOST_31
2019-05-24 10:57:51 -Generating unique operation named: removeUsingPOST_32
2019-05-24 10:57:51 -Generating unique operation named: saveUsingPOST_17
2019-05-24 10:57:51 -Generating unique operation named: updateUsingGET_11
2019-05-24 10:57:51 -Generating unique operation named: updateUsingHEAD_11
2019-05-24 10:57:51 -Generating unique operation named: updateUsingPOST_18
2019-05-24 10:57:51 -Generating unique operation named: updateUsingPUT_11
2019-05-24 10:57:51 -Generating unique operation named: updateUsingPATCH_11
2019-05-24 10:57:51 -Generating unique operation named: updateUsingDELETE_11
2019-05-24 10:57:51 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-24 10:57:51 -Generating unique operation named: updateUsingTRACE_11
2019-05-24 10:57:51 -Generating unique operation named: addUsingGET_18
2019-05-24 10:57:51 -Generating unique operation named: editUsingGET_19
2019-05-24 10:57:51 -Generating unique operation named: listUsingGET_21
2019-05-24 10:57:51 -Generating unique operation named: removeUsingPOST_33
2019-05-24 10:57:51 -Generating unique operation named: removeUsingPOST_34
2019-05-24 10:57:51 -Generating unique operation named: saveUsingPOST_18
2019-05-24 10:57:51 -Generating unique operation named: updateUsingGET_12
2019-05-24 10:57:51 -Generating unique operation named: updateUsingHEAD_12
2019-05-24 10:57:51 -Generating unique operation named: updateUsingPOST_19
2019-05-24 10:57:51 -Generating unique operation named: updateUsingPUT_12
2019-05-24 10:57:51 -Generating unique operation named: updateUsingPATCH_12
2019-05-24 10:57:51 -Generating unique operation named: updateUsingDELETE_12
2019-05-24 10:57:51 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-24 10:57:51 -Generating unique operation named: updateUsingTRACE_12
2019-05-24 10:57:51 -Starting Quartz Scheduler now
2019-05-24 10:57:51 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-24 10:57:51 -Starting...
2019-05-24 10:57:51 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-24 10:57:51 -Started.
2019-05-24 10:57:51 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-24 10:57:51 -Using a shared selector for servlet write/read
2019-05-24 10:57:51 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-24 10:57:51 -Started BootdoApplication in 45.029 seconds (JVM running for 46.09)
2019-05-24 10:57:51 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-24 10:57:52 -==> Parameters: 
2019-05-24 10:57:52 -<==      Total: 1
2019-05-24 10:58:31 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-24 10:58:31 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-24 10:58:31 -FrameworkServlet 'dispatcherServlet': initialization completed in 102 ms
2019-05-24 10:58:31 -Enabling session validation scheduler...
2019-05-24 10:58:32 -请求地址 : http://localhost:8081/login;JSESSIONID=ec1d7802-819e-458c-9adf-7835219250b2
2019-05-24 10:58:32 -HTTP METHOD : GET
2019-05-24 10:58:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 10:58:32 -参数 : [{}]
2019-05-24 10:58:32 -耗时 : 8
2019-05-24 10:58:32 -返回值 : login
2019-05-24 10:58:33 -请求地址 : http://localhost:8081/getVerify
2019-05-24 10:58:33 -HTTP METHOD : GET
2019-05-24 10:58:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 10:58:33 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@43f9602, org.apache.shiro.web.servlet.ShiroHttpServletResponse@af868f5]
2019-05-24 10:58:36 -6160
2019-05-24 10:58:36 -耗时 : 3053
2019-05-24 10:58:36 -返回值 : null
2019-05-24 10:58:42 -请求地址 : http://localhost:8081/login
2019-05-24 10:58:42 -HTTP METHOD : POST
2019-05-24 10:58:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 10:58:42 -参数 : [admin, 111111, 6160, org.apache.shiro.web.servlet.ShiroHttpServletRequest@11672821]
2019-05-24 10:58:42 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-24 10:58:42 -==> Parameters: admin(String)
2019-05-24 10:58:42 -<==      Total: 1
2019-05-24 10:58:42 -耗时 : 163
2019-05-24 10:58:42 -返回值 : {msg=操作成功, code=0}
2019-05-24 10:58:42 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-24 10:58:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:58:42 -==> Parameters: 1(Long), admin(String), 登录(String), 163(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 10:58:42.41(Timestamp)
2019-05-24 10:58:42 -请求地址 : http://localhost:8081/index
2019-05-24 10:58:42 -HTTP METHOD : GET
2019-05-24 10:58:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 10:58:42 -参数 : [{}]
2019-05-24 10:58:42 -<==    Updates: 1
2019-05-24 10:58:42 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 10:58:42 -==> Parameters: 1(Long)
2019-05-24 10:58:42 -<==      Total: 50
2019-05-24 10:58:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 10:58:42 -==> Parameters: 138(Long)
2019-05-24 10:58:42 -<==      Total: 1
2019-05-24 10:58:42 -耗时 : 411
2019-05-24 10:58:42 -返回值 : index_v1
2019-05-24 10:58:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:58:43 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 412(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 10:58:43.008(Timestamp)
2019-05-24 10:58:43 -<==    Updates: 1
2019-05-24 10:58:43 -请求地址 : http://localhost:8081/main
2019-05-24 10:58:43 -HTTP METHOD : GET
2019-05-24 10:58:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:58:43 -参数 : []
2019-05-24 10:58:43 -耗时 : 1
2019-05-24 10:58:43 -返回值 : main
2019-05-24 10:58:43 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-24 10:58:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 10:58:43 -HTTP METHOD : GET
2019-05-24 10:58:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 10:58:43 -参数 : []
2019-05-24 10:58:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 10:58:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 10:58:43 -<==      Total: 0
2019-05-24 10:58:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 10:58:43 -==> Parameters: 1(Long), 0(String)
2019-05-24 10:58:43 -<==      Total: 1
2019-05-24 10:58:43 -耗时 : 158
2019-05-24 10:58:43 -返回值 : com.bootdo.common.utils.PageUtils@75dd2682
2019-05-24 10:58:44 -请求地址 : http://localhost:8081/main
2019-05-24 10:58:44 -HTTP METHOD : GET
2019-05-24 10:58:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 10:58:44 -参数 : []
2019-05-24 10:58:44 -耗时 : 0
2019-05-24 10:58:44 -返回值 : main
2019-05-24 10:58:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 10:58:57 -==> Parameters: 1(Long)
2019-05-24 10:58:57 -<==      Total: 94
2019-05-24 10:58:57 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 10:58:57 -HTTP METHOD : GET
2019-05-24 10:58:57 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 10:58:57 -参数 : []
2019-05-24 10:58:57 -耗时 : 0
2019-05-24 10:58:57 -返回值 : /moneyList/moneyWZ
2019-05-24 10:58:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 10:58:59 -HTTP METHOD : GET
2019-05-24 10:58:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 10:58:59 -参数 : [userType]
2019-05-24 10:58:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 10:58:59 -==> Parameters: userType(String)
2019-05-24 10:58:59 -<==      Total: 4
2019-05-24 10:58:59 -耗时 : 74
2019-05-24 10:58:59 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 10:58:59 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:58:59 -HTTP METHOD : GET
2019-05-24 10:58:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:58:59 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@593b4c9d]
2019-05-24 10:58:59 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$3e1a2878.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:58:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:58:59 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:58:59.347(Timestamp)
2019-05-24 10:58:59 -<==    Updates: 1
2019-05-24 10:59:09 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 10:59:09 -HTTP METHOD : GET
2019-05-24 10:59:09 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 10:59:09 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@37131030]
2019-05-24 10:59:09 -Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:29)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:55)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$3e1a2878.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 10:59:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 10:59:09 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.moneyList.dao.MoneyWZDao.list(String), null, 2019-05-24 10:59:09.29(Timestamp)
2019-05-24 10:59:09 -<==    Updates: 1
2019-05-24 11:05:49 -Starting BootdoApplication on PC-201905091110 with PID 35968 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-24 11:05:49 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-24 11:05:49 -The following profiles are active: dev
2019-05-24 11:05:49 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Fri May 24 11:05:49 CST 2019]; root of context hierarchy
2019-05-24 11:05:53 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-24 11:05:55 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0cf267] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:05:55 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$fd66210e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:05:56 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:05:57 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:05:57 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:05:57 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-24 11:05:57 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-24 11:05:57 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:05:57 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:05:57 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:05:57 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:05:58 -Tomcat initialized with port(s): 8081 (http)
2019-05-24 11:05:58 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-24 11:05:58 -Starting service [Tomcat]
2019-05-24 11:05:58 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-24 11:05:58 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-24 11:05:58 -Initializing Spring embedded WebApplicationContext
2019-05-24 11:05:58 -Root WebApplicationContext: initialization completed in 9397 ms
2019-05-24 11:05:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-24 11:05:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-24 11:05:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-24 11:05:59 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-24 11:05:59 -Filter xssFilter was not registered (disabled)
2019-05-24 11:05:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-24 11:05:59 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-24 11:05:59 -Servlet statViewServlet mapped to [/druid/*]
2019-05-24 11:05:59 -Servlet dispatcherServlet mapped to [/]
2019-05-24 11:06:02 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
2019-05-24 11:06:02 -Stopping service [Tomcat]
2019-05-24 11:06:02 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-05-24 11:06:02 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:23)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	... 55 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:522)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3de14397.CGLIB$sqlSessionFactory$0(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3de14397$$FastClassBySpringCGLIB$$d9daac48.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$3de14397.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 56 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:520)
	... 69 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:74)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 71 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 75 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 77 common frames omitted
2019-05-24 11:06:47 -Starting BootdoApplication on PC-201905091110 with PID 28116 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-24 11:06:47 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-24 11:06:47 -The following profiles are active: dev
2019-05-24 11:06:48 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 11:06:48 CST 2019]; root of context hierarchy
2019-05-24 11:06:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-24 11:06:54 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$567061d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:06:54 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$48c99080] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:06:55 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:06:55 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:06:55 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:06:55 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-24 11:06:55 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-24 11:06:55 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:06:55 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:06:56 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:06:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:06:57 -Tomcat initialized with port(s): 8081 (http)
2019-05-24 11:06:57 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-24 11:06:57 -Starting service [Tomcat]
2019-05-24 11:06:57 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-24 11:06:57 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-24 11:06:57 -Initializing Spring embedded WebApplicationContext
2019-05-24 11:06:57 -Root WebApplicationContext: initialization completed in 9653 ms
2019-05-24 11:06:58 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-24 11:06:58 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-24 11:06:58 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-24 11:06:58 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-24 11:06:58 -Filter xssFilter was not registered (disabled)
2019-05-24 11:06:58 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-24 11:06:58 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-24 11:06:58 -Servlet statViewServlet mapped to [/druid/*]
2019-05-24 11:06:58 -Servlet dispatcherServlet mapped to [/]
2019-05-24 11:07:00 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
2019-05-24 11:07:00 -Stopping service [Tomcat]
2019-05-24 11:07:00 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-05-24 11:07:00 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'countDDController': Unsatisfied dependency expressed through field 'elecLogService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:23)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogServiceImpl': Unsatisfied dependency expressed through field 'elecLogDao'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'elecLogDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\moneyLog\dao\ElecLogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	... 55 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:522)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8944b309.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8944b309$$FastClassBySpringCGLIB$$ab3650c9.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8944b309.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 56 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:520)
	... 69 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:74)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 71 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.moneyList.vo.ElecLogVo'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 75 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.moneyList.vo.ElecLogVo
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 77 common frames omitted
2019-05-24 11:11:01 -Starting BootdoApplication on PC-201905091110 with PID 34280 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-24 11:11:02 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-24 11:11:02 -The following profiles are active: dev
2019-05-24 11:11:02 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 11:11:02 CST 2019]; root of context hierarchy
2019-05-24 11:11:06 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-24 11:11:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1702bab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:11:08 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f3c95a52] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:11:09 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:11:09 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:11:09 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:11:09 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-24 11:11:09 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-24 11:11:09 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:11:09 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:11:10 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:11:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 11:11:11 -Tomcat initialized with port(s): 8081 (http)
2019-05-24 11:11:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-24 11:11:11 -Starting service [Tomcat]
2019-05-24 11:11:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-24 11:11:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-24 11:11:11 -Initializing Spring embedded WebApplicationContext
2019-05-24 11:11:11 -Root WebApplicationContext: initialization completed in 9329 ms
2019-05-24 11:11:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-24 11:11:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-24 11:11:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-24 11:11:12 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-24 11:11:12 -Filter xssFilter was not registered (disabled)
2019-05-24 11:11:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-24 11:11:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-24 11:11:12 -Servlet statViewServlet mapped to [/druid/*]
2019-05-24 11:11:12 -Servlet dispatcherServlet mapped to [/]
2019-05-24 11:11:16 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 11:11:02 CST 2019]; root of context hierarchy
2019-05-24 11:11:16 -Using default implementation for ThreadExecutor
2019-05-24 11:11:16 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-24 11:11:16 -Quartz Scheduler v.2.2.1 created.
2019-05-24 11:11:16 -RAMJobStore initialized.
2019-05-24 11:11:16 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-24 11:11:16 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-24 11:11:16 -Quartz scheduler version: 2.2.1
2019-05-24 11:11:16 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5cd8d029
2019-05-24 11:11:17 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-24 11:11:17 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-24 11:11:20 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 11:11:20 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-24 11:11:20 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 11:11:20 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-24 11:11:20 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-24 11:11:20 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-24 11:11:20 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 11:11:20 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-24 11:11:20 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 11:11:20 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-24 11:11:20 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 11:11:20 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-24 11:11:20 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 11:11:20 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-24 11:11:20 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 11:11:20 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-24 11:11:20 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 11:11:20 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-24 11:11:20 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-24 11:11:20 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 11:11:20 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-24 11:11:20 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 11:11:20 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 11:11:20 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-24 11:11:20 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-24 11:11:20 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-24 11:11:20 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-24 11:11:20 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-24 11:11:20 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:20 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-24 11:11:20 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-24 11:11:20 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-24 11:11:20 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:20 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-24 11:11:20 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-24 11:11:20 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-24 11:11:20 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-24 11:11:20 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-24 11:11:20 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-24 11:11:20 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:20 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-24 11:11:20 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-24 11:11:20 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:20 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-24 11:11:20 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-24 11:11:20 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:20 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-24 11:11:20 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 11:11:20 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-24 11:11:20 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-24 11:11:20 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 11:11:20 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-24 11:11:20 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-24 11:11:20 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-24 11:11:20 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-24 11:11:20 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:20 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-24 11:11:20 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-24 11:11:20 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:20 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-24 11:11:20 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-24 11:11:20 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-24 11:11:20 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-24 11:11:20 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:20 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-24 11:11:20 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-24 11:11:20 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-24 11:11:20 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-24 11:11:20 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-24 11:11:20 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-24 11:11:20 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 11:11:20 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 11:11:20 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-24 11:11:20 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:20 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-24 11:11:20 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 11:11:20 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-24 11:11:20 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-24 11:11:20 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-24 11:11:20 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-24 11:11:20 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-24 11:11:20 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:20 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-24 11:11:20 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-24 11:11:20 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:20 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-24 11:11:20 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-24 11:11:20 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-24 11:11:20 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-24 11:11:20 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-24 11:11:20 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-24 11:11:20 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:20 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-24 11:11:20 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-24 11:11:20 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-24 11:11:20 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 11:11:20 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:20 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-24 11:11:20 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-24 11:11:20 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-24 11:11:20 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-24 11:11:20 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 11:11:20 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:20 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 11:11:20 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-24 11:11:21 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:21 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-24 11:11:21 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 11:11:21 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-24 11:11:21 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-24 11:11:21 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 11:11:21 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 11:11:21 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 11:11:21 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-24 11:11:21 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-24 11:11:21 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-24 11:11:21 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 11:11:21 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 11:11:21 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-24 11:11:21 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-24 11:11:21 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-24 11:11:21 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-24 11:11:21 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 11:11:21 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:21 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 11:11:21 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 11:11:21 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-24 11:11:21 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-24 11:11:21 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-24 11:11:21 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-24 11:11:21 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 11:11:21 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:21 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 11:11:21 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 11:11:21 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-24 11:11:21 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-24 11:11:21 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-24 11:11:21 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-24 11:11:21 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 11:11:21 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:21 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 11:11:21 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-24 11:11:21 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 11:11:21 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-24 11:11:21 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-24 11:11:21 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-24 11:11:21 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-24 11:11:21 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:21 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-24 11:11:21 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-24 11:11:21 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-24 11:11:21 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:21 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-24 11:11:21 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-24 11:11:21 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-24 11:11:21 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-24 11:11:21 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-24 11:11:21 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:21 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-24 11:11:21 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-24 11:11:21 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:21 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-24 11:11:21 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-24 11:11:21 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-24 11:11:21 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-24 11:11:21 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-24 11:11:21 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-24 11:11:21 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-24 11:11:21 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-24 11:11:21 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-24 11:11:21 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-24 11:11:21 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-24 11:11:21 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:21 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 11:11:21 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-24 11:11:21 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-24 11:11:21 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-24 11:11:21 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:21 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-24 11:11:21 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-24 11:11:21 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-24 11:11:21 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 11:11:21 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-24 11:11:21 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-24 11:11:21 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-24 11:11:21 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-24 11:11:21 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-24 11:11:21 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-24 11:11:21 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-24 11:11:21 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-24 11:11:21 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-24 11:11:21 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-24 11:11:21 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-24 11:11:21 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:21 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-24 11:11:21 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-24 11:11:21 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:21 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-24 11:11:21 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-24 11:11:21 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-24 11:11:21 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-24 11:11:21 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 11:11:21 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 11:11:21 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-24 11:11:21 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 11:11:21 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 11:11:21 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-24 11:11:21 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-24 11:11:21 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-24 11:11:21 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-24 11:11:21 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-24 11:11:21 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:21 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-24 11:11:21 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-24 11:11:21 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:21 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-24 11:11:21 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 11:11:21 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:21 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-24 11:11:21 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-24 11:11:21 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-24 11:11:21 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 11:11:21 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 11:11:21 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 11:11:21 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-24 11:11:21 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 11:11:21 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 11:11:21 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-24 11:11:21 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-24 11:11:21 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 11:11:21 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 11:11:21 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-24 11:11:21 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-24 11:11:21 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-24 11:11:21 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-24 11:11:21 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-24 11:11:22 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-24 11:11:22 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 11:11:23 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 11:11:02 CST 2019]; root of context hierarchy
2019-05-24 11:11:23 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 11:11:23 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 11:11:23 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 11:11:23 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-24 11:11:23 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-24 11:11:25 -Registering beans for JMX exposure on startup
2019-05-24 11:11:26 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-24 11:11:26 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-24 11:11:26 -Starting beans in phase 2147483647
2019-05-24 11:11:26 -Context refreshed
2019-05-24 11:11:26 -Found 1 custom documentation plugin(s)
2019-05-24 11:11:26 -Scanning for api listing references
2019-05-24 11:11:26 -Generating unique operation named: getCountDUsingPOST_1
2019-05-24 11:11:26 -Generating unique operation named: removeUsingPOST_1
2019-05-24 11:11:26 -Generating unique operation named: addUsingGET_1
2019-05-24 11:11:26 -Generating unique operation named: editUsingGET_1
2019-05-24 11:11:26 -Generating unique operation named: listUsingGET_1
2019-05-24 11:11:26 -Generating unique operation named: removeUsingPOST_2
2019-05-24 11:11:26 -Generating unique operation named: removeUsingPOST_3
2019-05-24 11:11:26 -Generating unique operation named: saveUsingPOST_1
2019-05-24 11:11:27 -Generating unique operation named: updateUsingGET_1
2019-05-24 11:11:27 -Generating unique operation named: updateUsingHEAD_1
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPOST_1
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPUT_1
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPATCH_1
2019-05-24 11:11:27 -Generating unique operation named: updateUsingDELETE_1
2019-05-24 11:11:27 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-24 11:11:27 -Generating unique operation named: updateUsingTRACE_1
2019-05-24 11:11:27 -Generating unique operation named: addUsingGET_2
2019-05-24 11:11:27 -Generating unique operation named: editUsingGET_2
2019-05-24 11:11:27 -Generating unique operation named: listUsingGET_2
2019-05-24 11:11:27 -Generating unique operation named: removeUsingPOST_4
2019-05-24 11:11:27 -Generating unique operation named: removeUsingPOST_5
2019-05-24 11:11:27 -Generating unique operation named: saveUsingPOST_2
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPOST_2
2019-05-24 11:11:27 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-24 11:11:27 -Generating unique operation named: addUsingGET_3
2019-05-24 11:11:27 -Generating unique operation named: editUsingGET_3
2019-05-24 11:11:27 -Generating unique operation named: listUsingGET_3
2019-05-24 11:11:27 -Generating unique operation named: removeUsingPOST_6
2019-05-24 11:11:27 -Generating unique operation named: removeUsingPOST_7
2019-05-24 11:11:27 -Generating unique operation named: saveUsingPOST_3
2019-05-24 11:11:27 -Generating unique operation named: updateUsingGET_2
2019-05-24 11:11:27 -Generating unique operation named: updateUsingHEAD_2
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPOST_3
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPUT_2
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPATCH_2
2019-05-24 11:11:27 -Generating unique operation named: updateUsingDELETE_2
2019-05-24 11:11:27 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-24 11:11:27 -Generating unique operation named: updateUsingTRACE_2
2019-05-24 11:11:27 -Generating unique operation named: addUsingGET_4
2019-05-24 11:11:27 -Generating unique operation named: editUsingGET_4
2019-05-24 11:11:27 -Generating unique operation named: listUsingGET_4
2019-05-24 11:11:27 -Generating unique operation named: removeUsingPOST_8
2019-05-24 11:11:27 -Generating unique operation named: removeUsingPOST_9
2019-05-24 11:11:27 -Generating unique operation named: saveUsingPOST_4
2019-05-24 11:11:27 -Generating unique operation named: updateUsingGET_3
2019-05-24 11:11:27 -Generating unique operation named: updateUsingHEAD_3
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPOST_4
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPUT_3
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPATCH_3
2019-05-24 11:11:27 -Generating unique operation named: updateUsingDELETE_3
2019-05-24 11:11:27 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-24 11:11:27 -Generating unique operation named: updateUsingTRACE_3
2019-05-24 11:11:27 -Generating unique operation named: ElecUsingGET_1
2019-05-24 11:11:27 -Generating unique operation named: addUsingGET_5
2019-05-24 11:11:27 -Generating unique operation named: editUsingGET_5
2019-05-24 11:11:27 -Generating unique operation named: listUsingGET_5
2019-05-24 11:11:27 -Generating unique operation named: removeUsingPOST_10
2019-05-24 11:11:27 -Generating unique operation named: removeUsingPOST_11
2019-05-24 11:11:27 -Generating unique operation named: saveUsingPOST_5
2019-05-24 11:11:27 -Generating unique operation named: updateUsingGET_4
2019-05-24 11:11:27 -Generating unique operation named: updateUsingHEAD_4
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPOST_5
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPUT_4
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPATCH_4
2019-05-24 11:11:27 -Generating unique operation named: updateUsingDELETE_4
2019-05-24 11:11:27 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-24 11:11:27 -Generating unique operation named: updateUsingTRACE_4
2019-05-24 11:11:27 -Generating unique operation named: editUsingGET_6
2019-05-24 11:11:27 -Generating unique operation named: listUsingGET_6
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPOST_6
2019-05-24 11:11:27 -Generating unique operation named: addUsingGET_6
2019-05-24 11:11:27 -Generating unique operation named: editUsingGET_7
2019-05-24 11:11:27 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-24 11:11:27 -Generating unique operation named: listUsingGET_7
2019-05-24 11:11:27 -Generating unique operation named: removeUsingPOST_12
2019-05-24 11:11:27 -Generating unique operation named: removeUsingPOST_13
2019-05-24 11:11:27 -Generating unique operation named: saveUsingPOST_6
2019-05-24 11:11:27 -Generating unique operation named: updateUsingGET_5
2019-05-24 11:11:27 -Generating unique operation named: updateUsingHEAD_5
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPOST_7
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPUT_5
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPATCH_5
2019-05-24 11:11:27 -Generating unique operation named: updateUsingDELETE_5
2019-05-24 11:11:27 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-24 11:11:27 -Generating unique operation named: updateUsingTRACE_5
2019-05-24 11:11:27 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-24 11:11:27 -Generating unique operation named: addUsingGET_7
2019-05-24 11:11:27 -Generating unique operation named: editUsingGET_8
2019-05-24 11:11:27 -Generating unique operation named: listUsingGET_8
2019-05-24 11:11:27 -Generating unique operation named: removeUsingPOST_14
2019-05-24 11:11:27 -Generating unique operation named: removeUsingPOST_15
2019-05-24 11:11:27 -Generating unique operation named: saveUsingPOST_7
2019-05-24 11:11:27 -Generating unique operation named: updateUsingGET_6
2019-05-24 11:11:27 -Generating unique operation named: updateUsingHEAD_6
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPOST_8
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPUT_6
2019-05-24 11:11:27 -Generating unique operation named: updateUsingPATCH_6
2019-05-24 11:11:27 -Generating unique operation named: updateUsingDELETE_6
2019-05-24 11:11:28 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-24 11:11:28 -Generating unique operation named: updateUsingTRACE_6
2019-05-24 11:11:28 -Generating unique operation named: addUsingGET_8
2019-05-24 11:11:28 -Generating unique operation named: editUsingGET_9
2019-05-24 11:11:28 -Generating unique operation named: listUsingGET_9
2019-05-24 11:11:28 -Generating unique operation named: removeUsingPOST_16
2019-05-24 11:11:28 -Generating unique operation named: removeUsingPOST_17
2019-05-24 11:11:28 -Generating unique operation named: saveUsingPOST_8
2019-05-24 11:11:28 -Generating unique operation named: updateUsingGET_7
2019-05-24 11:11:28 -Generating unique operation named: updateUsingHEAD_7
2019-05-24 11:11:28 -Generating unique operation named: updateUsingPOST_9
2019-05-24 11:11:28 -Generating unique operation named: updateUsingPUT_7
2019-05-24 11:11:28 -Generating unique operation named: updateUsingPATCH_7
2019-05-24 11:11:28 -Generating unique operation named: updateUsingDELETE_7
2019-05-24 11:11:28 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-24 11:11:28 -Generating unique operation named: updateUsingTRACE_7
2019-05-24 11:11:28 -Generating unique operation named: addUsingGET_9
2019-05-24 11:11:28 -Generating unique operation named: editUsingGET_10
2019-05-24 11:11:28 -Generating unique operation named: infoUsingGET_1
2019-05-24 11:11:28 -Generating unique operation named: infoUsingHEAD_1
2019-05-24 11:11:28 -Generating unique operation named: infoUsingPOST_1
2019-05-24 11:11:28 -Generating unique operation named: infoUsingPUT_1
2019-05-24 11:11:28 -Generating unique operation named: infoUsingPATCH_1
2019-05-24 11:11:28 -Generating unique operation named: infoUsingDELETE_1
2019-05-24 11:11:28 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-24 11:11:28 -Generating unique operation named: infoUsingTRACE_1
2019-05-24 11:11:28 -Generating unique operation named: listUsingGET_10
2019-05-24 11:11:28 -Generating unique operation named: removeUsingPOST_18
2019-05-24 11:11:28 -Generating unique operation named: removeUsingPOST_19
2019-05-24 11:11:28 -Generating unique operation named: saveUsingPOST_9
2019-05-24 11:11:28 -Generating unique operation named: updateUsingPOST_10
2019-05-24 11:11:28 -Generating unique operation named: listUsingGET_11
2019-05-24 11:11:28 -Generating unique operation named: removeUsingPOST_20
2019-05-24 11:11:28 -Generating unique operation named: welcomeUsingGET_1
2019-05-24 11:11:28 -Generating unique operation named: addUsingGET_10
2019-05-24 11:11:28 -Generating unique operation named: editUsingGET_11
2019-05-24 11:11:28 -Generating unique operation named: listUsingGET_12
2019-05-24 11:11:28 -Generating unique operation named: removeUsingPOST_21
2019-05-24 11:11:28 -Generating unique operation named: saveUsingPOST_10
2019-05-24 11:11:28 -Generating unique operation named: treeUsingGET_1
2019-05-24 11:11:28 -Generating unique operation named: treeUsingGET_2
2019-05-24 11:11:28 -Generating unique operation named: updateUsingPOST_11
2019-05-24 11:11:28 -Generating unique operation named: addUsingGET_11
2019-05-24 11:11:28 -Generating unique operation named: editUsingGET_12
2019-05-24 11:11:28 -Generating unique operation named: listUsingGET_13
2019-05-24 11:11:28 -Generating unique operation named: removeUsingPOST_22
2019-05-24 11:11:28 -Generating unique operation named: removeUsingPOST_23
2019-05-24 11:11:28 -Generating unique operation named: updateUsingPOST_12
2019-05-24 11:11:28 -Generating unique operation named: addUsingGET_12
2019-05-24 11:11:28 -Generating unique operation named: editUsingGET_13
2019-05-24 11:11:28 -Generating unique operation named: listUsingGET_14
2019-05-24 11:11:28 -Generating unique operation named: removeUsingPOST_24
2019-05-24 11:11:28 -Generating unique operation named: removeUsingPOST_25
2019-05-24 11:11:28 -Generating unique operation named: saveUsingPOST_11
2019-05-24 11:11:28 -Generating unique operation named: updateUsingGET_8
2019-05-24 11:11:28 -Generating unique operation named: updateUsingHEAD_8
2019-05-24 11:11:28 -Generating unique operation named: updateUsingPOST_13
2019-05-24 11:11:28 -Generating unique operation named: updateUsingPUT_8
2019-05-24 11:11:28 -Generating unique operation named: updateUsingPATCH_8
2019-05-24 11:11:28 -Generating unique operation named: updateUsingDELETE_8
2019-05-24 11:11:28 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-24 11:11:28 -Generating unique operation named: updateUsingTRACE_8
2019-05-24 11:11:28 -Generating unique operation named: addUsingGET_13
2019-05-24 11:11:28 -Generating unique operation named: editUsingGET_14
2019-05-24 11:11:28 -Generating unique operation named: listUsingGET_15
2019-05-24 11:11:28 -Generating unique operation named: printEditUsingGET_1
2019-05-24 11:11:28 -Generating unique operation named: removeUsingPOST_26
2019-05-24 11:11:28 -Generating unique operation named: removeUsingPOST_27
2019-05-24 11:11:28 -Generating unique operation named: saveUsingPOST_12
2019-05-24 11:11:28 -Generating unique operation named: updateUsingGET_9
2019-05-24 11:11:28 -Generating unique operation named: updateUsingHEAD_9
2019-05-24 11:11:28 -Generating unique operation named: updateUsingPOST_14
2019-05-24 11:11:28 -Generating unique operation named: updateUsingPUT_9
2019-05-24 11:11:28 -Generating unique operation named: updateUsingPATCH_9
2019-05-24 11:11:28 -Generating unique operation named: updateUsingDELETE_9
2019-05-24 11:11:28 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-24 11:11:28 -Generating unique operation named: updateUsingTRACE_9
2019-05-24 11:11:28 -Generating unique operation named: addUsingGET_14
2019-05-24 11:11:28 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-24 11:11:29 -Generating unique operation named: editUsingGET_15
2019-05-24 11:11:29 -Generating unique operation named: listUsingGET_16
2019-05-24 11:11:29 -Generating unique operation named: saveUsingPOST_13
2019-05-24 11:11:29 -Generating unique operation named: saveUsingPOST_14
2019-05-24 11:11:29 -Generating unique operation named: updateUsingPOST_15
2019-05-24 11:11:29 -Generating unique operation named: listUsingGET_17
2019-05-24 11:11:29 -Generating unique operation named: listUsingHEAD_1
2019-05-24 11:11:29 -Generating unique operation named: listUsingPOST_1
2019-05-24 11:11:29 -Generating unique operation named: listUsingPUT_1
2019-05-24 11:11:29 -Generating unique operation named: listUsingPATCH_1
2019-05-24 11:11:29 -Generating unique operation named: listUsingDELETE_1
2019-05-24 11:11:29 -Generating unique operation named: listUsingOPTIONS_1
2019-05-24 11:11:29 -Generating unique operation named: listUsingTRACE_1
2019-05-24 11:11:29 -Generating unique operation named: countDDUsingGET_1
2019-05-24 11:11:29 -Generating unique operation named: exportDDUsingGET_1
2019-05-24 11:11:29 -Generating unique operation named: addUsingGET_15
2019-05-24 11:11:29 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-24 11:11:29 -Generating unique operation named: editUsingGET_16
2019-05-24 11:11:29 -Generating unique operation named: listUsingGET_18
2019-05-24 11:11:29 -Generating unique operation named: removeUsingPOST_28
2019-05-24 11:11:29 -Generating unique operation named: saveUsingPOST_15
2019-05-24 11:11:29 -Generating unique operation named: treeUsingGET_3
2019-05-24 11:11:29 -Generating unique operation named: treeViewUsingGET_1
2019-05-24 11:11:29 -Generating unique operation named: updateUsingPOST_16
2019-05-24 11:11:29 -Generating unique operation named: addUsingGET_16
2019-05-24 11:11:29 -Generating unique operation named: editUsingGET_17
2019-05-24 11:11:29 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-24 11:11:29 -Generating unique operation named: listUsingGET_19
2019-05-24 11:11:29 -Generating unique operation named: removeUsingPOST_29
2019-05-24 11:11:29 -Generating unique operation named: removeUsingPOST_30
2019-05-24 11:11:29 -Generating unique operation named: saveUsingPOST_16
2019-05-24 11:11:29 -Generating unique operation named: updateUsingGET_10
2019-05-24 11:11:29 -Generating unique operation named: updateUsingHEAD_10
2019-05-24 11:11:29 -Generating unique operation named: updateUsingPOST_17
2019-05-24 11:11:29 -Generating unique operation named: updateUsingPUT_10
2019-05-24 11:11:29 -Generating unique operation named: updateUsingPATCH_10
2019-05-24 11:11:29 -Generating unique operation named: updateUsingDELETE_10
2019-05-24 11:11:29 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-24 11:11:29 -Generating unique operation named: updateUsingTRACE_10
2019-05-24 11:11:29 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-24 11:11:29 -Generating unique operation named: addUsingGET_17
2019-05-24 11:11:29 -Generating unique operation named: editUsingGET_18
2019-05-24 11:11:29 -Generating unique operation named: listUsingGET_20
2019-05-24 11:11:29 -Generating unique operation named: removeUsingPOST_31
2019-05-24 11:11:29 -Generating unique operation named: removeUsingPOST_32
2019-05-24 11:11:29 -Generating unique operation named: saveUsingPOST_17
2019-05-24 11:11:29 -Generating unique operation named: updateUsingGET_11
2019-05-24 11:11:29 -Generating unique operation named: updateUsingHEAD_11
2019-05-24 11:11:29 -Generating unique operation named: updateUsingPOST_18
2019-05-24 11:11:29 -Generating unique operation named: updateUsingPUT_11
2019-05-24 11:11:29 -Generating unique operation named: updateUsingPATCH_11
2019-05-24 11:11:29 -Generating unique operation named: updateUsingDELETE_11
2019-05-24 11:11:29 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-24 11:11:29 -Generating unique operation named: updateUsingTRACE_11
2019-05-24 11:11:29 -Generating unique operation named: addUsingGET_18
2019-05-24 11:11:29 -Generating unique operation named: editUsingGET_19
2019-05-24 11:11:29 -Generating unique operation named: listUsingGET_21
2019-05-24 11:11:29 -Generating unique operation named: removeUsingPOST_33
2019-05-24 11:11:29 -Generating unique operation named: removeUsingPOST_34
2019-05-24 11:11:29 -Generating unique operation named: saveUsingPOST_18
2019-05-24 11:11:29 -Generating unique operation named: updateUsingGET_12
2019-05-24 11:11:29 -Generating unique operation named: updateUsingHEAD_12
2019-05-24 11:11:29 -Generating unique operation named: updateUsingPOST_19
2019-05-24 11:11:29 -Generating unique operation named: updateUsingPUT_12
2019-05-24 11:11:29 -Generating unique operation named: updateUsingPATCH_12
2019-05-24 11:11:29 -Generating unique operation named: updateUsingDELETE_12
2019-05-24 11:11:29 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-24 11:11:29 -Generating unique operation named: updateUsingTRACE_12
2019-05-24 11:11:29 -Starting Quartz Scheduler now
2019-05-24 11:11:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-24 11:11:29 -Starting...
2019-05-24 11:11:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-24 11:11:29 -Started.
2019-05-24 11:11:29 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-24 11:11:29 -Using a shared selector for servlet write/read
2019-05-24 11:11:29 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-24 11:11:29 -Started BootdoApplication in 29.207 seconds (JVM running for 30.152)
2019-05-24 11:11:30 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-24 11:11:30 -==> Parameters: 
2019-05-24 11:11:30 -<==      Total: 1
2019-05-24 11:11:54 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-24 11:11:54 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-24 11:11:54 -FrameworkServlet 'dispatcherServlet': initialization completed in 80 ms
2019-05-24 11:11:55 -Enabling session validation scheduler...
2019-05-24 11:11:55 -请求地址 : http://localhost:8081/login;JSESSIONID=8a6db4be-e340-4342-aa21-2008fa8eb9be
2019-05-24 11:11:55 -HTTP METHOD : GET
2019-05-24 11:11:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 11:11:55 -参数 : [{}]
2019-05-24 11:11:55 -耗时 : 5
2019-05-24 11:11:55 -返回值 : login
2019-05-24 11:11:57 -请求地址 : http://localhost:8081/getVerify
2019-05-24 11:11:57 -HTTP METHOD : GET
2019-05-24 11:11:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 11:11:57 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6b9cde1a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7e999562]
2019-05-24 11:12:01 -2966
2019-05-24 11:12:02 -耗时 : 4918
2019-05-24 11:12:02 -返回值 : null
2019-05-24 11:12:05 -请求地址 : http://localhost:8081/login
2019-05-24 11:12:05 -HTTP METHOD : POST
2019-05-24 11:12:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 11:12:05 -参数 : [admin, 111111, 2966, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3310d4f7]
2019-05-24 11:12:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-24 11:12:05 -==> Parameters: admin(String)
2019-05-24 11:12:05 -<==      Total: 1
2019-05-24 11:12:05 -耗时 : 309
2019-05-24 11:12:05 -返回值 : {msg=操作成功, code=0}
2019-05-24 11:12:05 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-24 11:12:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 11:12:05 -==> Parameters: 1(Long), admin(String), 登录(String), 310(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 11:12:05.796(Timestamp)
2019-05-24 11:12:05 -请求地址 : http://localhost:8081/index
2019-05-24 11:12:05 -HTTP METHOD : GET
2019-05-24 11:12:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 11:12:05 -参数 : [{}]
2019-05-24 11:12:06 -<==    Updates: 1
2019-05-24 11:12:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 11:12:06 -==> Parameters: 1(Long)
2019-05-24 11:12:06 -<==      Total: 50
2019-05-24 11:12:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 11:12:06 -==> Parameters: 138(Long)
2019-05-24 11:12:06 -<==      Total: 1
2019-05-24 11:12:06 -耗时 : 425
2019-05-24 11:12:06 -返回值 : index_v1
2019-05-24 11:12:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 11:12:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 425(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 11:12:06.41(Timestamp)
2019-05-24 11:12:06 -<==    Updates: 1
2019-05-24 11:12:06 -请求地址 : http://localhost:8081/main
2019-05-24 11:12:06 -HTTP METHOD : GET
2019-05-24 11:12:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 11:12:06 -参数 : []
2019-05-24 11:12:06 -耗时 : 0
2019-05-24 11:12:06 -返回值 : main
2019-05-24 11:12:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 11:12:07 -HTTP METHOD : GET
2019-05-24 11:12:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 11:12:07 -参数 : []
2019-05-24 11:12:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 11:12:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 11:12:07 -请求地址 : http://localhost:8081/main
2019-05-24 11:12:07 -HTTP METHOD : GET
2019-05-24 11:12:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 11:12:07 -参数 : []
2019-05-24 11:12:07 -耗时 : 1
2019-05-24 11:12:07 -返回值 : main
2019-05-24 11:12:07 -<==      Total: 0
2019-05-24 11:12:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 11:12:07 -==> Parameters: 1(Long), 0(String)
2019-05-24 11:12:07 -<==      Total: 1
2019-05-24 11:12:07 -耗时 : 450
2019-05-24 11:12:07 -返回值 : com.bootdo.common.utils.PageUtils@1904cf08
2019-05-24 11:12:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 11:12:10 -==> Parameters: 1(Long)
2019-05-24 11:12:10 -<==      Total: 94
2019-05-24 11:12:10 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 11:12:10 -HTTP METHOD : GET
2019-05-24 11:12:10 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 11:12:10 -参数 : []
2019-05-24 11:12:10 -耗时 : 1
2019-05-24 11:12:10 -返回值 : /moneyList/moneyWZ
2019-05-24 11:12:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 11:12:11 -HTTP METHOD : GET
2019-05-24 11:12:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 11:12:11 -参数 : [userType]
2019-05-24 11:12:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 11:12:11 -==> Parameters: userType(String)
2019-05-24 11:12:11 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:12:11 -HTTP METHOD : GET
2019-05-24 11:12:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:12:11 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@22c8c5b8]
2019-05-24 11:12:12 -<==      Total: 4
2019-05-24 11:12:12 -耗时 : 175
2019-05-24 11:12:12 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 11:12:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:12:12 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:12:12 -<==      Total: 2
2019-05-24 11:12:12 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:12:12 -==> Parameters: 
2019-05-24 11:12:12 -<==      Total: 1
2019-05-24 11:12:12 -耗时 : 438
2019-05-24 11:12:12 -返回值 : com.bootdo.common.utils.PageUtils@3010105b
2019-05-24 11:12:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-05-24 11:12:35 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:12:35 -HTTP METHOD : GET
2019-05-24 11:12:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:12:35 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@7a2b3fa3]
2019-05-24 11:12:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:12:35 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:12:35 -<==      Total: 2
2019-05-24 11:12:35 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:12:35 -==> Parameters: 
2019-05-24 11:12:35 -<==      Total: 1
2019-05-24 11:12:35 -耗时 : 16
2019-05-24 11:12:35 -返回值 : com.bootdo.common.utils.PageUtils@392159c2
2019-05-24 11:13:13 -请求地址 : http://localhost:8081/index
2019-05-24 11:13:13 -HTTP METHOD : GET
2019-05-24 11:13:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 11:13:13 -参数 : [{}]
2019-05-24 11:13:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 11:13:13 -==> Parameters: 1(Long)
2019-05-24 11:13:13 -<==      Total: 50
2019-05-24 11:13:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 11:13:13 -==> Parameters: 138(Long)
2019-05-24 11:13:13 -<==      Total: 1
2019-05-24 11:13:13 -耗时 : 30
2019-05-24 11:13:13 -返回值 : index_v1
2019-05-24 11:13:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 11:13:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 11:13:13.283(Timestamp)
2019-05-24 11:13:13 -请求地址 : http://localhost:8081/main
2019-05-24 11:13:13 -HTTP METHOD : GET
2019-05-24 11:13:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 11:13:13 -参数 : []
2019-05-24 11:13:13 -耗时 : 1
2019-05-24 11:13:13 -返回值 : main
2019-05-24 11:13:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 11:13:13 -<==    Updates: 1
2019-05-24 11:13:13 -HTTP METHOD : GET
2019-05-24 11:13:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 11:13:13 -参数 : []
2019-05-24 11:13:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 11:13:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 11:13:13 -<==      Total: 0
2019-05-24 11:13:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 11:13:13 -==> Parameters: 1(Long), 0(String)
2019-05-24 11:13:13 -<==      Total: 1
2019-05-24 11:13:13 -耗时 : 36
2019-05-24 11:13:13 -返回值 : com.bootdo.common.utils.PageUtils@4a18f0a4
2019-05-24 11:13:13 -请求地址 : http://localhost:8081/main
2019-05-24 11:13:13 -HTTP METHOD : GET
2019-05-24 11:13:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 11:13:13 -参数 : []
2019-05-24 11:13:13 -耗时 : 1
2019-05-24 11:13:13 -返回值 : main
2019-05-24 11:13:18 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-05-24 11:13:18 -HTTP METHOD : GET
2019-05-24 11:13:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-05-24 11:13:18 -参数 : []
2019-05-24 11:13:18 -耗时 : 0
2019-05-24 11:13:18 -返回值 : /moneyLog/elecLog/elecLog
2019-05-24 11:13:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 11:13:19 -HTTP METHOD : GET
2019-05-24 11:13:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 11:13:19 -参数 : [userType]
2019-05-24 11:13:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 11:13:19 -==> Parameters: userType(String)
2019-05-24 11:13:19 -<==      Total: 4
2019-05-24 11:13:19 -耗时 : 6
2019-05-24 11:13:19 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 11:13:19 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-24 11:13:19 -HTTP METHOD : GET
2019-05-24 11:13:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 11:13:19 -参数 : [elecType]
2019-05-24 11:13:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 11:13:19 -==> Parameters: elecType(String)
2019-05-24 11:13:19 -<==      Total: 11
2019-05-24 11:13:19 -耗时 : 13
2019-05-24 11:13:19 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 11:13:19 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-05-24 11:13:19 -HTTP METHOD : GET
2019-05-24 11:13:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-05-24 11:13:19 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, elecDate=}]
2019-05-24 11:13:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-05-24 11:13:19 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:13:19 -<==      Total: 10
2019-05-24 11:13:19 -==>  Preparing: select count(*) from elec_log 
2019-05-24 11:13:19 -==> Parameters: 
2019-05-24 11:13:19 -<==      Total: 1
2019-05-24 11:13:19 -耗时 : 299
2019-05-24 11:13:19 -返回值 : com.bootdo.common.utils.PageUtils@7227d3a3
2019-05-24 11:13:19 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 11:13:19 -HTTP METHOD : GET
2019-05-24 11:13:19 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 11:13:19 -参数 : []
2019-05-24 11:13:19 -耗时 : 8
2019-05-24 11:13:19 -返回值 : /moneyList/moneyWZ
2019-05-24 11:13:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 11:13:20 -HTTP METHOD : GET
2019-05-24 11:13:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 11:13:20 -参数 : [userType]
2019-05-24 11:13:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 11:13:20 -==> Parameters: userType(String)
2019-05-24 11:13:20 -<==      Total: 4
2019-05-24 11:13:20 -耗时 : 5
2019-05-24 11:13:20 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 11:13:20 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:13:20 -HTTP METHOD : GET
2019-05-24 11:13:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:13:20 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@4dedc682]
2019-05-24 11:13:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:13:20 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:13:20 -<==      Total: 2
2019-05-24 11:13:20 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:13:20 -==> Parameters: 
2019-05-24 11:13:20 -<==      Total: 1
2019-05-24 11:13:20 -耗时 : 7
2019-05-24 11:13:20 -返回值 : com.bootdo.common.utils.PageUtils@227401ac
2019-05-24 11:13:28 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:13:28 -HTTP METHOD : GET
2019-05-24 11:13:28 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:13:28 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@339221b]
2019-05-24 11:13:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:13:28 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:13:28 -<==      Total: 2
2019-05-24 11:13:28 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:13:28 -==> Parameters: 
2019-05-24 11:13:28 -<==      Total: 1
2019-05-24 11:13:28 -耗时 : 10
2019-05-24 11:13:28 -返回值 : com.bootdo.common.utils.PageUtils@1a60e6ef
2019-05-24 11:13:29 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:13:29 -HTTP METHOD : GET
2019-05-24 11:13:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:13:29 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@6cbbdeb7]
2019-05-24 11:13:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:13:29 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:13:29 -<==      Total: 2
2019-05-24 11:13:29 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:13:29 -==> Parameters: 
2019-05-24 11:13:29 -<==      Total: 1
2019-05-24 11:13:29 -耗时 : 9
2019-05-24 11:13:29 -返回值 : com.bootdo.common.utils.PageUtils@1941a382
2019-05-24 11:13:29 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:13:29 -HTTP METHOD : GET
2019-05-24 11:13:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:13:29 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@6a8e3d5e]
2019-05-24 11:13:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:13:29 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:13:29 -<==      Total: 2
2019-05-24 11:13:29 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:13:29 -==> Parameters: 
2019-05-24 11:13:29 -<==      Total: 1
2019-05-24 11:13:30 -耗时 : 9
2019-05-24 11:13:30 -返回值 : com.bootdo.common.utils.PageUtils@70353f95
2019-05-24 11:13:30 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:13:30 -HTTP METHOD : GET
2019-05-24 11:13:30 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:13:30 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@4e298dd]
2019-05-24 11:13:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:13:30 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:13:30 -<==      Total: 2
2019-05-24 11:13:30 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:13:30 -==> Parameters: 
2019-05-24 11:13:30 -<==      Total: 1
2019-05-24 11:13:30 -耗时 : 10
2019-05-24 11:13:30 -返回值 : com.bootdo.common.utils.PageUtils@52a84315
2019-05-24 11:13:30 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:13:30 -HTTP METHOD : GET
2019-05-24 11:13:30 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:13:30 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@5e2ce1aa]
2019-05-24 11:13:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:13:30 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:13:30 -<==      Total: 2
2019-05-24 11:13:30 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:13:30 -==> Parameters: 
2019-05-24 11:13:30 -<==      Total: 1
2019-05-24 11:13:30 -耗时 : 15
2019-05-24 11:13:30 -返回值 : com.bootdo.common.utils.PageUtils@2f7d8def
2019-05-24 11:13:30 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:13:30 -HTTP METHOD : GET
2019-05-24 11:13:30 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:13:30 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@60538024]
2019-05-24 11:13:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:13:30 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:13:30 -<==      Total: 2
2019-05-24 11:13:30 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:13:30 -==> Parameters: 
2019-05-24 11:13:30 -<==      Total: 1
2019-05-24 11:13:30 -耗时 : 7
2019-05-24 11:13:30 -返回值 : com.bootdo.common.utils.PageUtils@766795ea
2019-05-24 11:13:31 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:13:31 -HTTP METHOD : GET
2019-05-24 11:13:31 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:13:31 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@569666e8]
2019-05-24 11:13:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:13:31 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:13:31 -<==      Total: 2
2019-05-24 11:13:31 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:13:31 -==> Parameters: 
2019-05-24 11:13:31 -<==      Total: 1
2019-05-24 11:13:31 -耗时 : 10
2019-05-24 11:13:31 -返回值 : com.bootdo.common.utils.PageUtils@691ce17e
2019-05-24 11:13:32 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:13:32 -HTTP METHOD : GET
2019-05-24 11:13:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:13:32 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@18e1ab6]
2019-05-24 11:13:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:13:32 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:13:32 -<==      Total: 2
2019-05-24 11:13:32 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:13:32 -==> Parameters: 
2019-05-24 11:13:32 -<==      Total: 1
2019-05-24 11:13:32 -耗时 : 9
2019-05-24 11:13:32 -返回值 : com.bootdo.common.utils.PageUtils@1177ffc5
2019-05-24 11:13:32 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:13:32 -HTTP METHOD : GET
2019-05-24 11:13:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:13:32 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@3c5c65e]
2019-05-24 11:13:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:13:32 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:13:32 -<==      Total: 2
2019-05-24 11:13:32 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:13:32 -==> Parameters: 
2019-05-24 11:13:32 -<==      Total: 1
2019-05-24 11:13:32 -耗时 : 7
2019-05-24 11:13:32 -返回值 : com.bootdo.common.utils.PageUtils@2e279d09
2019-05-24 11:13:33 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:13:33 -HTTP METHOD : GET
2019-05-24 11:13:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:13:33 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@52ead19e]
2019-05-24 11:13:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:13:33 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:13:33 -<==      Total: 2
2019-05-24 11:13:33 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:13:33 -==> Parameters: 
2019-05-24 11:13:33 -<==      Total: 1
2019-05-24 11:13:33 -耗时 : 9
2019-05-24 11:13:33 -返回值 : com.bootdo.common.utils.PageUtils@30ca4bf8
2019-05-24 11:14:43 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:14:43 -HTTP METHOD : GET
2019-05-24 11:14:43 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:14:43 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=W-0011}, com.bootdo.elec.domain.ElecDO@2bbd987b]
2019-05-24 11:14:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and user_id = ? order by id asc limit ?, ? 
2019-05-24 11:14:43 -==> Parameters: W-0011(String), 0(Integer), 10(Integer)
2019-05-24 11:14:43 -<==      Total: 1
2019-05-24 11:14:43 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and user_id = ? 
2019-05-24 11:14:43 -==> Parameters: W-0011(String)
2019-05-24 11:14:43 -<==      Total: 1
2019-05-24 11:14:43 -耗时 : 17
2019-05-24 11:14:43 -返回值 : com.bootdo.common.utils.PageUtils@309ea14e
2019-05-24 11:14:47 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:14:47 -HTTP METHOD : GET
2019-05-24 11:14:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:14:47 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=W-0011}, com.bootdo.elec.domain.ElecDO@429c0ded]
2019-05-24 11:14:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and user_id = ? order by id asc limit ?, ? 
2019-05-24 11:14:47 -==> Parameters: W-0011(String), 0(Integer), 10(Integer)
2019-05-24 11:14:47 -<==      Total: 1
2019-05-24 11:14:47 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and user_id = ? 
2019-05-24 11:14:47 -==> Parameters: W-0011(String)
2019-05-24 11:14:47 -<==      Total: 1
2019-05-24 11:14:47 -耗时 : 11
2019-05-24 11:14:47 -返回值 : com.bootdo.common.utils.PageUtils@5746228f
2019-05-24 11:17:00 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:17:00 -HTTP METHOD : GET
2019-05-24 11:17:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:17:00 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@454e1358]
2019-05-24 11:17:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:17:00 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:17:00 -<==      Total: 2
2019-05-24 11:17:00 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:17:00 -==> Parameters: 
2019-05-24 11:17:00 -<==      Total: 1
2019-05-24 11:17:00 -耗时 : 10
2019-05-24 11:17:00 -返回值 : com.bootdo.common.utils.PageUtils@3212f121
2019-05-24 11:17:01 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:17:01 -HTTP METHOD : GET
2019-05-24 11:17:01 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:17:01 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@cd86b93]
2019-05-24 11:17:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:17:01 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:17:01 -<==      Total: 2
2019-05-24 11:17:01 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:17:01 -==> Parameters: 
2019-05-24 11:17:01 -<==      Total: 1
2019-05-24 11:17:01 -耗时 : 9
2019-05-24 11:17:01 -返回值 : com.bootdo.common.utils.PageUtils@7fab9ee4
2019-05-24 11:17:02 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:17:02 -HTTP METHOD : GET
2019-05-24 11:17:02 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:17:02 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@4c53fb72]
2019-05-24 11:17:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:17:02 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:17:02 -<==      Total: 2
2019-05-24 11:17:02 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:17:02 -==> Parameters: 
2019-05-24 11:17:02 -<==      Total: 1
2019-05-24 11:17:02 -耗时 : 10
2019-05-24 11:17:02 -返回值 : com.bootdo.common.utils.PageUtils@6baadab0
2019-05-24 11:17:09 -请求地址 : http://localhost:8081/index
2019-05-24 11:17:09 -HTTP METHOD : GET
2019-05-24 11:17:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 11:17:09 -参数 : [{}]
2019-05-24 11:17:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 11:17:09 -==> Parameters: 1(Long)
2019-05-24 11:17:09 -<==      Total: 50
2019-05-24 11:17:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 11:17:09 -==> Parameters: 138(Long)
2019-05-24 11:17:09 -<==      Total: 1
2019-05-24 11:17:09 -耗时 : 31
2019-05-24 11:17:09 -返回值 : index_v1
2019-05-24 11:17:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 11:17:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 11:17:09.249(Timestamp)
2019-05-24 11:17:09 -请求地址 : http://localhost:8081/main
2019-05-24 11:17:09 -HTTP METHOD : GET
2019-05-24 11:17:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 11:17:09 -参数 : []
2019-05-24 11:17:09 -耗时 : 0
2019-05-24 11:17:09 -返回值 : main
2019-05-24 11:17:09 -<==    Updates: 1
2019-05-24 11:17:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 11:17:09 -HTTP METHOD : GET
2019-05-24 11:17:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 11:17:09 -参数 : []
2019-05-24 11:17:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 11:17:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 11:17:09 -<==      Total: 0
2019-05-24 11:17:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 11:17:09 -==> Parameters: 1(Long), 0(String)
2019-05-24 11:17:09 -<==      Total: 1
2019-05-24 11:17:09 -耗时 : 22
2019-05-24 11:17:09 -返回值 : com.bootdo.common.utils.PageUtils@7d873719
2019-05-24 11:17:09 -请求地址 : http://localhost:8081/main
2019-05-24 11:17:09 -HTTP METHOD : GET
2019-05-24 11:17:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 11:17:09 -参数 : []
2019-05-24 11:17:09 -耗时 : 1
2019-05-24 11:17:09 -返回值 : main
2019-05-24 11:17:13 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 11:17:13 -HTTP METHOD : GET
2019-05-24 11:17:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 11:17:13 -参数 : []
2019-05-24 11:17:13 -耗时 : 0
2019-05-24 11:17:13 -返回值 : /moneyList/moneyWZ
2019-05-24 11:17:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 11:17:13 -HTTP METHOD : GET
2019-05-24 11:17:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 11:17:13 -参数 : [userType]
2019-05-24 11:17:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 11:17:13 -==> Parameters: userType(String)
2019-05-24 11:17:13 -<==      Total: 4
2019-05-24 11:17:13 -耗时 : 6
2019-05-24 11:17:13 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 11:17:13 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:17:13 -HTTP METHOD : GET
2019-05-24 11:17:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:17:13 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@876616a]
2019-05-24 11:17:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:17:13 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:17:13 -<==      Total: 2
2019-05-24 11:17:13 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:17:13 -==> Parameters: 
2019-05-24 11:17:13 -<==      Total: 1
2019-05-24 11:17:13 -耗时 : 8
2019-05-24 11:17:13 -返回值 : com.bootdo.common.utils.PageUtils@26cadea5
2019-05-24 11:31:55 -请求地址 : http://localhost:8081/index
2019-05-24 11:31:55 -HTTP METHOD : GET
2019-05-24 11:31:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 11:31:55 -参数 : [{}]
2019-05-24 11:31:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 11:31:55 -==> Parameters: 1(Long)
2019-05-24 11:31:55 -<==      Total: 50
2019-05-24 11:31:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 11:31:55 -==> Parameters: 138(Long)
2019-05-24 11:31:55 -<==      Total: 1
2019-05-24 11:31:55 -耗时 : 24
2019-05-24 11:31:55 -返回值 : index_v1
2019-05-24 11:31:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 11:31:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 11:31:55.401(Timestamp)
2019-05-24 11:31:55 -请求地址 : http://localhost:8081/main
2019-05-24 11:31:55 -HTTP METHOD : GET
2019-05-24 11:31:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 11:31:55 -参数 : []
2019-05-24 11:31:55 -耗时 : 0
2019-05-24 11:31:55 -返回值 : main
2019-05-24 11:31:55 -<==    Updates: 1
2019-05-24 11:31:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 11:31:55 -HTTP METHOD : GET
2019-05-24 11:31:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 11:31:55 -参数 : []
2019-05-24 11:31:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 11:31:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 11:31:55 -<==      Total: 0
2019-05-24 11:31:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 11:31:55 -==> Parameters: 1(Long), 0(String)
2019-05-24 11:31:55 -<==      Total: 1
2019-05-24 11:31:55 -耗时 : 6
2019-05-24 11:31:55 -返回值 : com.bootdo.common.utils.PageUtils@182238a1
2019-05-24 11:31:55 -请求地址 : http://localhost:8081/main
2019-05-24 11:31:55 -HTTP METHOD : GET
2019-05-24 11:31:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 11:31:55 -参数 : []
2019-05-24 11:31:55 -耗时 : 1
2019-05-24 11:31:55 -返回值 : main
2019-05-24 11:31:57 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 11:31:57 -==> Parameters: 1(Long)
2019-05-24 11:31:57 -<==      Total: 94
2019-05-24 11:31:57 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 11:31:57 -HTTP METHOD : GET
2019-05-24 11:31:57 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 11:31:57 -参数 : []
2019-05-24 11:31:57 -耗时 : 0
2019-05-24 11:31:57 -返回值 : /moneyList/moneyWZ
2019-05-24 11:31:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 11:31:57 -HTTP METHOD : GET
2019-05-24 11:31:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 11:31:57 -参数 : [userType]
2019-05-24 11:31:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 11:31:57 -==> Parameters: userType(String)
2019-05-24 11:31:57 -<==      Total: 4
2019-05-24 11:31:57 -耗时 : 6
2019-05-24 11:31:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 11:31:57 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:31:57 -HTTP METHOD : GET
2019-05-24 11:31:57 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:31:57 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@113efd]
2019-05-24 11:31:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:31:57 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:31:57 -<==      Total: 2
2019-05-24 11:31:57 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:31:57 -==> Parameters: 
2019-05-24 11:31:57 -<==      Total: 1
2019-05-24 11:31:57 -耗时 : 7
2019-05-24 11:31:57 -返回值 : com.bootdo.common.utils.PageUtils@69fc5003
2019-05-24 11:32:35 -请求地址 : http://localhost:8081/index
2019-05-24 11:32:35 -HTTP METHOD : GET
2019-05-24 11:32:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 11:32:35 -参数 : [{}]
2019-05-24 11:32:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 11:32:35 -==> Parameters: 1(Long)
2019-05-24 11:32:35 -<==      Total: 50
2019-05-24 11:32:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 11:32:35 -==> Parameters: 138(Long)
2019-05-24 11:32:35 -<==      Total: 1
2019-05-24 11:32:35 -耗时 : 28
2019-05-24 11:32:35 -返回值 : index_v1
2019-05-24 11:32:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 11:32:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 11:32:35.848(Timestamp)
2019-05-24 11:32:35 -请求地址 : http://localhost:8081/main
2019-05-24 11:32:35 -HTTP METHOD : GET
2019-05-24 11:32:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 11:32:35 -参数 : []
2019-05-24 11:32:35 -耗时 : 0
2019-05-24 11:32:35 -返回值 : main
2019-05-24 11:32:36 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 11:32:36 -HTTP METHOD : GET
2019-05-24 11:32:36 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 11:32:36 -参数 : []
2019-05-24 11:32:36 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 11:32:36 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 11:32:36 -<==    Updates: 1
2019-05-24 11:32:36 -请求地址 : http://localhost:8081/main
2019-05-24 11:32:36 -HTTP METHOD : GET
2019-05-24 11:32:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 11:32:36 -参数 : []
2019-05-24 11:32:36 -耗时 : 0
2019-05-24 11:32:36 -返回值 : main
2019-05-24 11:32:36 -<==      Total: 0
2019-05-24 11:32:36 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 11:32:36 -==> Parameters: 1(Long), 0(String)
2019-05-24 11:32:36 -<==      Total: 1
2019-05-24 11:32:36 -耗时 : 104
2019-05-24 11:32:36 -返回值 : com.bootdo.common.utils.PageUtils@5378744f
2019-05-24 11:32:37 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 11:32:37 -HTTP METHOD : GET
2019-05-24 11:32:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 11:32:37 -参数 : []
2019-05-24 11:32:37 -耗时 : 0
2019-05-24 11:32:37 -返回值 : /moneyList/moneyWZ
2019-05-24 11:32:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 11:32:37 -HTTP METHOD : GET
2019-05-24 11:32:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 11:32:37 -参数 : [userType]
2019-05-24 11:32:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 11:32:37 -==> Parameters: userType(String)
2019-05-24 11:32:37 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 11:32:37 -HTTP METHOD : GET
2019-05-24 11:32:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 11:32:37 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@48bf33]
2019-05-24 11:32:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 11:32:37 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 11:32:37 -<==      Total: 2
2019-05-24 11:32:37 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 11:32:37 -==> Parameters: 
2019-05-24 11:32:37 -<==      Total: 1
2019-05-24 11:32:37 -耗时 : 7
2019-05-24 11:32:37 -返回值 : com.bootdo.common.utils.PageUtils@2926bad1
2019-05-24 11:32:37 -<==      Total: 4
2019-05-24 11:32:37 -耗时 : 168
2019-05-24 11:32:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 11:42:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 434]
2019-05-24 12:11:55 -Validating all active sessions...
2019-05-24 12:11:55 -Finished session validation.  [1] sessions were stopped.
2019-05-24 12:12:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 867]
2019-05-24 12:42:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1300]
2019-05-24 13:11:55 -Validating all active sessions...
2019-05-24 13:11:55 -Finished session validation.  No sessions were stopped.
2019-05-24 13:12:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1733]
2019-05-24 13:42:22 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 57], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2166]
2019-05-24 13:58:17 -请求地址 : http://localhost:8081/login;JSESSIONID=78ba9b2f-c4e2-4721-8351-adfe3e77a7f9
2019-05-24 13:58:17 -HTTP METHOD : GET
2019-05-24 13:58:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 13:58:17 -参数 : [{}]
2019-05-24 13:58:17 -耗时 : 1
2019-05-24 13:58:17 -返回值 : login
2019-05-24 13:59:38 -请求地址 : http://localhost:8081/login;JSESSIONID=969aeb3c-6efd-4d8e-8d71-f5f51faa46fc
2019-05-24 13:59:38 -HTTP METHOD : GET
2019-05-24 13:59:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 13:59:38 -参数 : [{}]
2019-05-24 13:59:38 -耗时 : 1
2019-05-24 13:59:38 -返回值 : login
2019-05-24 13:59:39 -请求地址 : http://localhost:8081/getVerify
2019-05-24 13:59:39 -HTTP METHOD : GET
2019-05-24 13:59:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 13:59:39 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3423a510, org.apache.shiro.web.servlet.ShiroHttpServletResponse@41e4984b]
2019-05-24 13:59:39 -1139
2019-05-24 13:59:39 -耗时 : 50
2019-05-24 13:59:39 -返回值 : null
2019-05-24 13:59:39 -请求地址 : http://localhost:8081/login
2019-05-24 13:59:39 -HTTP METHOD : GET
2019-05-24 13:59:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 13:59:39 -参数 : [{}]
2019-05-24 13:59:39 -耗时 : 0
2019-05-24 13:59:39 -返回值 : login
2019-05-24 13:59:47 -请求地址 : http://localhost:8081/login
2019-05-24 13:59:47 -HTTP METHOD : POST
2019-05-24 13:59:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 13:59:47 -参数 : [admin, 111111, 1139, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1b28600f]
2019-05-24 13:59:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-24 13:59:47 -==> Parameters: admin(String)
2019-05-24 13:59:47 -<==      Total: 1
2019-05-24 13:59:47 -耗时 : 120
2019-05-24 13:59:47 -返回值 : {msg=操作成功, code=0}
2019-05-24 13:59:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 13:59:47 -==> Parameters: 1(Long), admin(String), 登录(String), 121(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 13:59:47.776(Timestamp)
2019-05-24 13:59:47 -请求地址 : http://localhost:8081/index
2019-05-24 13:59:47 -HTTP METHOD : GET
2019-05-24 13:59:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 13:59:47 -参数 : [{}]
2019-05-24 13:59:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 13:59:47 -==> Parameters: 1(Long)
2019-05-24 13:59:47 -<==      Total: 50
2019-05-24 13:59:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 13:59:47 -==> Parameters: 138(Long)
2019-05-24 13:59:47 -<==      Total: 1
2019-05-24 13:59:47 -耗时 : 18
2019-05-24 13:59:47 -返回值 : index_v1
2019-05-24 13:59:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 13:59:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 13:59:47.813(Timestamp)
2019-05-24 13:59:47 -<==    Updates: 1
2019-05-24 13:59:47 -<==    Updates: 1
2019-05-24 13:59:48 -请求地址 : http://localhost:8081/main
2019-05-24 13:59:48 -HTTP METHOD : GET
2019-05-24 13:59:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 13:59:48 -参数 : []
2019-05-24 13:59:48 -耗时 : 0
2019-05-24 13:59:48 -返回值 : main
2019-05-24 13:59:50 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 13:59:50 -HTTP METHOD : GET
2019-05-24 13:59:50 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 13:59:50 -参数 : []
2019-05-24 13:59:50 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 13:59:50 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 13:59:50 -<==      Total: 0
2019-05-24 13:59:50 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 13:59:50 -==> Parameters: 1(Long), 0(String)
2019-05-24 13:59:50 -<==      Total: 1
2019-05-24 13:59:50 -耗时 : 6
2019-05-24 13:59:50 -返回值 : com.bootdo.common.utils.PageUtils@2970501e
2019-05-24 13:59:50 -请求地址 : http://localhost:8081/main
2019-05-24 13:59:50 -HTTP METHOD : GET
2019-05-24 13:59:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 13:59:50 -参数 : []
2019-05-24 13:59:50 -耗时 : 0
2019-05-24 13:59:50 -返回值 : main
2019-05-24 13:59:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 13:59:54 -==> Parameters: 1(Long)
2019-05-24 13:59:54 -<==      Total: 94
2019-05-24 13:59:54 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 13:59:54 -HTTP METHOD : GET
2019-05-24 13:59:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 13:59:54 -参数 : []
2019-05-24 13:59:54 -耗时 : 1
2019-05-24 13:59:54 -返回值 : /moneyList/moneyWZ
2019-05-24 13:59:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 13:59:56 -HTTP METHOD : GET
2019-05-24 13:59:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 13:59:56 -参数 : [userType]
2019-05-24 13:59:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 13:59:56 -==> Parameters: userType(String)
2019-05-24 13:59:56 -<==      Total: 4
2019-05-24 13:59:56 -耗时 : 5
2019-05-24 13:59:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 13:59:56 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 13:59:56 -HTTP METHOD : GET
2019-05-24 13:59:56 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 13:59:56 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@282d76ae]
2019-05-24 13:59:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 13:59:56 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 13:59:56 -<==      Total: 2
2019-05-24 13:59:56 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 13:59:56 -==> Parameters: 
2019-05-24 13:59:56 -<==      Total: 1
2019-05-24 13:59:56 -耗时 : 8
2019-05-24 13:59:56 -返回值 : com.bootdo.common.utils.PageUtils@188a7825
2019-05-24 14:11:22 -Starting BootdoApplication on PC-201905091110 with PID 20972 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-24 14:11:22 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-24 14:11:22 -The following profiles are active: dev
2019-05-24 14:11:22 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 14:11:22 CST 2019]; root of context hierarchy
2019-05-24 14:11:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-24 14:11:28 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bd9bea9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:11:28 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$fe32ed50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:11:31 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:11:31 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:11:31 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:11:31 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-24 14:11:31 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-24 14:11:31 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:11:31 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:11:31 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:11:31 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:11:33 -Tomcat initialized with port(s): 8081 (http)
2019-05-24 14:11:33 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-24 14:11:33 -Starting service [Tomcat]
2019-05-24 14:11:33 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-24 14:11:33 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-24 14:11:33 -Initializing Spring embedded WebApplicationContext
2019-05-24 14:11:33 -Root WebApplicationContext: initialization completed in 10952 ms
2019-05-24 14:11:34 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-24 14:11:34 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-24 14:11:34 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-24 14:11:34 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-24 14:11:34 -Filter xssFilter was not registered (disabled)
2019-05-24 14:11:34 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-24 14:11:34 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-24 14:11:34 -Servlet statViewServlet mapped to [/druid/*]
2019-05-24 14:11:34 -Servlet dispatcherServlet mapped to [/]
2019-05-24 14:11:38 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 14:11:22 CST 2019]; root of context hierarchy
2019-05-24 14:11:40 -Using default implementation for ThreadExecutor
2019-05-24 14:11:41 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-24 14:11:41 -Quartz Scheduler v.2.2.1 created.
2019-05-24 14:11:41 -RAMJobStore initialized.
2019-05-24 14:11:41 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-24 14:11:41 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-24 14:11:41 -Quartz scheduler version: 2.2.1
2019-05-24 14:11:41 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@638afcaa
2019-05-24 14:11:41 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-24 14:11:41 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-24 14:11:46 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-24 14:11:46 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 14:11:46 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-24 14:11:46 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 14:11:46 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-24 14:11:46 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-24 14:11:46 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-24 14:11:46 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 14:11:46 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-24 14:11:46 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 14:11:46 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-24 14:11:46 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 14:11:46 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-24 14:11:46 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 14:11:46 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-24 14:11:46 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 14:11:46 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-24 14:11:46 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 14:11:46 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 14:11:46 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-24 14:11:46 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 14:11:46 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-24 14:11:46 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-24 14:11:46 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 14:11:46 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-24 14:11:46 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-24 14:11:46 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-24 14:11:46 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:46 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-24 14:11:46 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-24 14:11:46 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-24 14:11:46 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-24 14:11:46 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-24 14:11:46 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-24 14:11:46 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-24 14:11:46 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-24 14:11:46 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-24 14:11:46 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:46 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-24 14:11:46 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-24 14:11:46 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:46 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-24 14:11:46 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 14:11:46 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-24 14:11:46 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 14:11:46 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-24 14:11:46 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-24 14:11:46 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-24 14:11:46 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:46 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-24 14:11:46 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-24 14:11:46 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-24 14:11:46 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-24 14:11:46 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:46 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-24 14:11:46 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-24 14:11:46 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-24 14:11:46 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-24 14:11:46 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-24 14:11:46 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 14:11:46 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 14:11:46 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-24 14:11:46 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-24 14:11:46 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 14:11:46 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-24 14:11:46 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-24 14:11:46 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-24 14:11:46 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-24 14:11:46 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:46 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-24 14:11:46 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-24 14:11:46 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-24 14:11:46 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-24 14:11:46 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-24 14:11:46 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-24 14:11:46 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-24 14:11:46 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-24 14:11:46 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:46 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-24 14:11:46 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-24 14:11:46 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 14:11:46 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-24 14:11:46 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-24 14:11:46 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-24 14:11:46 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 14:11:46 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:46 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 14:11:46 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-24 14:11:46 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-24 14:11:46 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 14:11:46 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-24 14:11:46 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-24 14:11:46 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 14:11:46 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 14:11:46 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 14:11:46 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-24 14:11:46 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-24 14:11:46 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 14:11:46 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 14:11:46 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-24 14:11:46 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-24 14:11:46 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-24 14:11:46 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-24 14:11:46 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-24 14:11:46 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-24 14:11:46 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-24 14:11:46 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-24 14:11:46 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-24 14:11:46 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 14:11:46 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-24 14:11:46 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-24 14:11:46 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-24 14:11:46 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-24 14:11:46 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:46 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-24 14:11:46 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-24 14:11:46 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-24 14:11:46 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:46 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-24 14:11:46 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-24 14:11:46 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-24 14:11:46 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-24 14:11:46 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:46 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-24 14:11:46 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-24 14:11:46 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-24 14:11:46 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-24 14:11:46 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-24 14:11:46 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-24 14:11:46 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-24 14:11:46 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-24 14:11:46 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-24 14:11:46 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-24 14:11:46 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-24 14:11:46 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 14:11:46 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-24 14:11:46 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:46 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-24 14:11:46 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:46 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-24 14:11:46 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-24 14:11:46 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-24 14:11:46 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-24 14:11:46 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-24 14:11:46 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-24 14:11:46 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-24 14:11:46 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-24 14:11:46 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-24 14:11:46 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-24 14:11:46 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-24 14:11:46 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-24 14:11:46 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:46 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-24 14:11:46 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:46 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-24 14:11:46 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-24 14:11:46 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-24 14:11:46 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-24 14:11:46 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-24 14:11:46 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 14:11:46 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 14:11:46 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-24 14:11:46 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 14:11:46 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-24 14:11:46 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-24 14:11:46 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-24 14:11:46 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-24 14:11:46 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-24 14:11:47 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:47 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-24 14:11:47 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:47 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:47 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-24 14:11:47 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 14:11:47 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:47 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-24 14:11:47 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-24 14:11:47 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-24 14:11:47 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-24 14:11:47 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 14:11:47 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:11:47 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 14:11:47 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-24 14:11:47 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:11:47 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-24 14:11:47 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 14:11:47 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-24 14:11:47 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:11:47 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 14:11:47 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-24 14:11:47 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-24 14:11:47 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-24 14:11:47 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-24 14:11:47 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-24 14:11:47 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-24 14:11:48 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 14:11:48 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 14:11:22 CST 2019]; root of context hierarchy
2019-05-24 14:11:48 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 14:11:48 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 14:11:48 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 14:11:48 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-24 14:11:49 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-24 14:11:51 -Registering beans for JMX exposure on startup
2019-05-24 14:11:51 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-24 14:11:51 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-24 14:11:51 -Starting beans in phase 2147483647
2019-05-24 14:11:51 -Context refreshed
2019-05-24 14:11:51 -Found 1 custom documentation plugin(s)
2019-05-24 14:11:51 -Scanning for api listing references
2019-05-24 14:11:51 -Generating unique operation named: getCountDUsingPOST_1
2019-05-24 14:11:51 -Generating unique operation named: removeUsingPOST_1
2019-05-24 14:11:51 -Generating unique operation named: addUsingGET_1
2019-05-24 14:11:51 -Generating unique operation named: editUsingGET_1
2019-05-24 14:11:51 -Generating unique operation named: listUsingGET_1
2019-05-24 14:11:51 -Generating unique operation named: removeUsingPOST_2
2019-05-24 14:11:51 -Generating unique operation named: removeUsingPOST_3
2019-05-24 14:11:51 -Generating unique operation named: saveUsingPOST_1
2019-05-24 14:11:52 -Generating unique operation named: updateUsingGET_1
2019-05-24 14:11:52 -Generating unique operation named: updateUsingHEAD_1
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPOST_1
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPUT_1
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPATCH_1
2019-05-24 14:11:52 -Generating unique operation named: updateUsingDELETE_1
2019-05-24 14:11:52 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-24 14:11:52 -Generating unique operation named: updateUsingTRACE_1
2019-05-24 14:11:52 -Generating unique operation named: addUsingGET_2
2019-05-24 14:11:52 -Generating unique operation named: editUsingGET_2
2019-05-24 14:11:52 -Generating unique operation named: listUsingGET_2
2019-05-24 14:11:52 -Generating unique operation named: removeUsingPOST_4
2019-05-24 14:11:52 -Generating unique operation named: removeUsingPOST_5
2019-05-24 14:11:52 -Generating unique operation named: saveUsingPOST_2
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPOST_2
2019-05-24 14:11:52 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-24 14:11:52 -Generating unique operation named: addUsingGET_3
2019-05-24 14:11:52 -Generating unique operation named: editUsingGET_3
2019-05-24 14:11:52 -Generating unique operation named: listUsingGET_3
2019-05-24 14:11:52 -Generating unique operation named: removeUsingPOST_6
2019-05-24 14:11:52 -Generating unique operation named: removeUsingPOST_7
2019-05-24 14:11:52 -Generating unique operation named: saveUsingPOST_3
2019-05-24 14:11:52 -Generating unique operation named: updateUsingGET_2
2019-05-24 14:11:52 -Generating unique operation named: updateUsingHEAD_2
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPOST_3
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPUT_2
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPATCH_2
2019-05-24 14:11:52 -Generating unique operation named: updateUsingDELETE_2
2019-05-24 14:11:52 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-24 14:11:52 -Generating unique operation named: updateUsingTRACE_2
2019-05-24 14:11:52 -Generating unique operation named: addUsingGET_4
2019-05-24 14:11:52 -Generating unique operation named: editUsingGET_4
2019-05-24 14:11:52 -Generating unique operation named: listUsingGET_4
2019-05-24 14:11:52 -Generating unique operation named: removeUsingPOST_8
2019-05-24 14:11:52 -Generating unique operation named: removeUsingPOST_9
2019-05-24 14:11:52 -Generating unique operation named: saveUsingPOST_4
2019-05-24 14:11:52 -Generating unique operation named: updateUsingGET_3
2019-05-24 14:11:52 -Generating unique operation named: updateUsingHEAD_3
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPOST_4
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPUT_3
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPATCH_3
2019-05-24 14:11:52 -Generating unique operation named: updateUsingDELETE_3
2019-05-24 14:11:52 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-24 14:11:52 -Generating unique operation named: updateUsingTRACE_3
2019-05-24 14:11:52 -Generating unique operation named: ElecUsingGET_1
2019-05-24 14:11:52 -Generating unique operation named: addUsingGET_5
2019-05-24 14:11:52 -Generating unique operation named: editUsingGET_5
2019-05-24 14:11:52 -Generating unique operation named: listUsingGET_5
2019-05-24 14:11:52 -Generating unique operation named: removeUsingPOST_10
2019-05-24 14:11:52 -Generating unique operation named: removeUsingPOST_11
2019-05-24 14:11:52 -Generating unique operation named: saveUsingPOST_5
2019-05-24 14:11:52 -Generating unique operation named: updateUsingGET_4
2019-05-24 14:11:52 -Generating unique operation named: updateUsingHEAD_4
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPOST_5
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPUT_4
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPATCH_4
2019-05-24 14:11:52 -Generating unique operation named: updateUsingDELETE_4
2019-05-24 14:11:52 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-24 14:11:52 -Generating unique operation named: updateUsingTRACE_4
2019-05-24 14:11:52 -Generating unique operation named: editUsingGET_6
2019-05-24 14:11:52 -Generating unique operation named: listUsingGET_6
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPOST_6
2019-05-24 14:11:52 -Generating unique operation named: addUsingGET_6
2019-05-24 14:11:52 -Generating unique operation named: editUsingGET_7
2019-05-24 14:11:52 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-24 14:11:52 -Generating unique operation named: listUsingGET_7
2019-05-24 14:11:52 -Generating unique operation named: removeUsingPOST_12
2019-05-24 14:11:52 -Generating unique operation named: removeUsingPOST_13
2019-05-24 14:11:52 -Generating unique operation named: saveUsingPOST_6
2019-05-24 14:11:52 -Generating unique operation named: updateUsingGET_5
2019-05-24 14:11:52 -Generating unique operation named: updateUsingHEAD_5
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPOST_7
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPUT_5
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPATCH_5
2019-05-24 14:11:52 -Generating unique operation named: updateUsingDELETE_5
2019-05-24 14:11:52 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-24 14:11:52 -Generating unique operation named: updateUsingTRACE_5
2019-05-24 14:11:52 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-24 14:11:52 -Generating unique operation named: addUsingGET_7
2019-05-24 14:11:52 -Generating unique operation named: editUsingGET_8
2019-05-24 14:11:52 -Generating unique operation named: listUsingGET_8
2019-05-24 14:11:52 -Generating unique operation named: removeUsingPOST_14
2019-05-24 14:11:52 -Generating unique operation named: removeUsingPOST_15
2019-05-24 14:11:52 -Generating unique operation named: saveUsingPOST_7
2019-05-24 14:11:52 -Generating unique operation named: updateUsingGET_6
2019-05-24 14:11:52 -Generating unique operation named: updateUsingHEAD_6
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPOST_8
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPUT_6
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPATCH_6
2019-05-24 14:11:52 -Generating unique operation named: updateUsingDELETE_6
2019-05-24 14:11:52 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-24 14:11:52 -Generating unique operation named: updateUsingTRACE_6
2019-05-24 14:11:52 -Generating unique operation named: addUsingGET_8
2019-05-24 14:11:52 -Generating unique operation named: editUsingGET_9
2019-05-24 14:11:52 -Generating unique operation named: listUsingGET_9
2019-05-24 14:11:52 -Generating unique operation named: removeUsingPOST_16
2019-05-24 14:11:52 -Generating unique operation named: removeUsingPOST_17
2019-05-24 14:11:52 -Generating unique operation named: saveUsingPOST_8
2019-05-24 14:11:52 -Generating unique operation named: updateUsingGET_7
2019-05-24 14:11:52 -Generating unique operation named: updateUsingHEAD_7
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPOST_9
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPUT_7
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPATCH_7
2019-05-24 14:11:52 -Generating unique operation named: updateUsingDELETE_7
2019-05-24 14:11:52 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-24 14:11:52 -Generating unique operation named: updateUsingTRACE_7
2019-05-24 14:11:52 -Generating unique operation named: addUsingGET_9
2019-05-24 14:11:52 -Generating unique operation named: editUsingGET_10
2019-05-24 14:11:52 -Generating unique operation named: infoUsingGET_1
2019-05-24 14:11:52 -Generating unique operation named: infoUsingHEAD_1
2019-05-24 14:11:52 -Generating unique operation named: infoUsingPOST_1
2019-05-24 14:11:52 -Generating unique operation named: infoUsingPUT_1
2019-05-24 14:11:52 -Generating unique operation named: infoUsingPATCH_1
2019-05-24 14:11:52 -Generating unique operation named: infoUsingDELETE_1
2019-05-24 14:11:52 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-24 14:11:52 -Generating unique operation named: infoUsingTRACE_1
2019-05-24 14:11:52 -Generating unique operation named: listUsingGET_10
2019-05-24 14:11:52 -Generating unique operation named: removeUsingPOST_18
2019-05-24 14:11:52 -Generating unique operation named: removeUsingPOST_19
2019-05-24 14:11:52 -Generating unique operation named: saveUsingPOST_9
2019-05-24 14:11:52 -Generating unique operation named: updateUsingPOST_10
2019-05-24 14:11:52 -Generating unique operation named: listUsingGET_11
2019-05-24 14:11:52 -Generating unique operation named: removeUsingPOST_20
2019-05-24 14:11:52 -Generating unique operation named: welcomeUsingGET_1
2019-05-24 14:11:53 -Generating unique operation named: addUsingGET_10
2019-05-24 14:11:53 -Generating unique operation named: editUsingGET_11
2019-05-24 14:11:53 -Generating unique operation named: listUsingGET_12
2019-05-24 14:11:53 -Generating unique operation named: removeUsingPOST_21
2019-05-24 14:11:53 -Generating unique operation named: saveUsingPOST_10
2019-05-24 14:11:53 -Generating unique operation named: treeUsingGET_1
2019-05-24 14:11:53 -Generating unique operation named: treeUsingGET_2
2019-05-24 14:11:53 -Generating unique operation named: updateUsingPOST_11
2019-05-24 14:11:53 -Generating unique operation named: addUsingGET_11
2019-05-24 14:11:53 -Generating unique operation named: editUsingGET_12
2019-05-24 14:11:53 -Generating unique operation named: listUsingGET_13
2019-05-24 14:11:53 -Generating unique operation named: removeUsingPOST_22
2019-05-24 14:11:53 -Generating unique operation named: removeUsingPOST_23
2019-05-24 14:11:53 -Generating unique operation named: updateUsingPOST_12
2019-05-24 14:11:53 -Generating unique operation named: addUsingGET_12
2019-05-24 14:11:53 -Generating unique operation named: editUsingGET_13
2019-05-24 14:11:53 -Generating unique operation named: listUsingGET_14
2019-05-24 14:11:53 -Generating unique operation named: removeUsingPOST_24
2019-05-24 14:11:53 -Generating unique operation named: removeUsingPOST_25
2019-05-24 14:11:53 -Generating unique operation named: saveUsingPOST_11
2019-05-24 14:11:53 -Generating unique operation named: updateUsingGET_8
2019-05-24 14:11:53 -Generating unique operation named: updateUsingHEAD_8
2019-05-24 14:11:53 -Generating unique operation named: updateUsingPOST_13
2019-05-24 14:11:53 -Generating unique operation named: updateUsingPUT_8
2019-05-24 14:11:53 -Generating unique operation named: updateUsingPATCH_8
2019-05-24 14:11:53 -Generating unique operation named: updateUsingDELETE_8
2019-05-24 14:11:53 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-24 14:11:53 -Generating unique operation named: updateUsingTRACE_8
2019-05-24 14:11:53 -Generating unique operation named: addUsingGET_13
2019-05-24 14:11:53 -Generating unique operation named: editUsingGET_14
2019-05-24 14:11:53 -Generating unique operation named: listUsingGET_15
2019-05-24 14:11:53 -Generating unique operation named: printEditUsingGET_1
2019-05-24 14:11:53 -Generating unique operation named: removeUsingPOST_26
2019-05-24 14:11:53 -Generating unique operation named: removeUsingPOST_27
2019-05-24 14:11:53 -Generating unique operation named: saveUsingPOST_12
2019-05-24 14:11:53 -Generating unique operation named: updateUsingGET_9
2019-05-24 14:11:53 -Generating unique operation named: updateUsingHEAD_9
2019-05-24 14:11:53 -Generating unique operation named: updateUsingPOST_14
2019-05-24 14:11:53 -Generating unique operation named: updateUsingPUT_9
2019-05-24 14:11:53 -Generating unique operation named: updateUsingPATCH_9
2019-05-24 14:11:53 -Generating unique operation named: updateUsingDELETE_9
2019-05-24 14:11:53 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-24 14:11:53 -Generating unique operation named: updateUsingTRACE_9
2019-05-24 14:11:53 -Generating unique operation named: addUsingGET_14
2019-05-24 14:11:53 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-24 14:11:53 -Generating unique operation named: editUsingGET_15
2019-05-24 14:11:53 -Generating unique operation named: listUsingGET_16
2019-05-24 14:11:53 -Generating unique operation named: saveUsingPOST_13
2019-05-24 14:11:53 -Generating unique operation named: saveUsingPOST_14
2019-05-24 14:11:53 -Generating unique operation named: updateUsingPOST_15
2019-05-24 14:11:53 -Generating unique operation named: listUsingGET_17
2019-05-24 14:11:53 -Generating unique operation named: listUsingHEAD_1
2019-05-24 14:11:53 -Generating unique operation named: listUsingPOST_1
2019-05-24 14:11:53 -Generating unique operation named: listUsingPUT_1
2019-05-24 14:11:53 -Generating unique operation named: listUsingPATCH_1
2019-05-24 14:11:53 -Generating unique operation named: listUsingDELETE_1
2019-05-24 14:11:53 -Generating unique operation named: listUsingOPTIONS_1
2019-05-24 14:11:53 -Generating unique operation named: listUsingTRACE_1
2019-05-24 14:11:53 -Generating unique operation named: countDDUsingGET_1
2019-05-24 14:11:53 -Generating unique operation named: exportDDUsingGET_1
2019-05-24 14:11:53 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-24 14:11:53 -Generating unique operation named: addUsingGET_15
2019-05-24 14:11:53 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-24 14:11:53 -Generating unique operation named: editUsingGET_16
2019-05-24 14:11:53 -Generating unique operation named: listUsingGET_18
2019-05-24 14:11:53 -Generating unique operation named: removeUsingPOST_28
2019-05-24 14:11:53 -Generating unique operation named: saveUsingPOST_15
2019-05-24 14:11:53 -Generating unique operation named: treeUsingGET_3
2019-05-24 14:11:53 -Generating unique operation named: treeViewUsingGET_1
2019-05-24 14:11:53 -Generating unique operation named: updateUsingPOST_16
2019-05-24 14:11:53 -Generating unique operation named: addUsingGET_16
2019-05-24 14:11:53 -Generating unique operation named: editUsingGET_17
2019-05-24 14:11:53 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-24 14:11:53 -Generating unique operation named: listUsingGET_19
2019-05-24 14:11:53 -Generating unique operation named: removeUsingPOST_29
2019-05-24 14:11:53 -Generating unique operation named: removeUsingPOST_30
2019-05-24 14:11:53 -Generating unique operation named: saveUsingPOST_16
2019-05-24 14:11:53 -Generating unique operation named: updateUsingGET_10
2019-05-24 14:11:53 -Generating unique operation named: updateUsingHEAD_10
2019-05-24 14:11:53 -Generating unique operation named: updateUsingPOST_17
2019-05-24 14:11:53 -Generating unique operation named: updateUsingPUT_10
2019-05-24 14:11:53 -Generating unique operation named: updateUsingPATCH_10
2019-05-24 14:11:53 -Generating unique operation named: updateUsingDELETE_10
2019-05-24 14:11:53 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-24 14:11:53 -Generating unique operation named: updateUsingTRACE_10
2019-05-24 14:11:53 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-24 14:11:53 -Generating unique operation named: addUsingGET_17
2019-05-24 14:11:53 -Generating unique operation named: editUsingGET_18
2019-05-24 14:11:53 -Generating unique operation named: listUsingGET_20
2019-05-24 14:11:53 -Generating unique operation named: removeUsingPOST_31
2019-05-24 14:11:53 -Generating unique operation named: removeUsingPOST_32
2019-05-24 14:11:53 -Generating unique operation named: saveUsingPOST_17
2019-05-24 14:11:53 -Generating unique operation named: updateUsingGET_11
2019-05-24 14:11:53 -Generating unique operation named: updateUsingHEAD_11
2019-05-24 14:11:53 -Generating unique operation named: updateUsingPOST_18
2019-05-24 14:11:53 -Generating unique operation named: updateUsingPUT_11
2019-05-24 14:11:53 -Generating unique operation named: updateUsingPATCH_11
2019-05-24 14:11:53 -Generating unique operation named: updateUsingDELETE_11
2019-05-24 14:11:53 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-24 14:11:53 -Generating unique operation named: updateUsingTRACE_11
2019-05-24 14:11:53 -Generating unique operation named: addUsingGET_18
2019-05-24 14:11:54 -Generating unique operation named: editUsingGET_19
2019-05-24 14:11:54 -Generating unique operation named: listUsingGET_21
2019-05-24 14:11:54 -Generating unique operation named: removeUsingPOST_33
2019-05-24 14:11:54 -Generating unique operation named: removeUsingPOST_34
2019-05-24 14:11:54 -Generating unique operation named: saveUsingPOST_18
2019-05-24 14:11:54 -Generating unique operation named: updateUsingGET_12
2019-05-24 14:11:54 -Generating unique operation named: updateUsingHEAD_12
2019-05-24 14:11:54 -Generating unique operation named: updateUsingPOST_19
2019-05-24 14:11:54 -Generating unique operation named: updateUsingPUT_12
2019-05-24 14:11:54 -Generating unique operation named: updateUsingPATCH_12
2019-05-24 14:11:54 -Generating unique operation named: updateUsingDELETE_12
2019-05-24 14:11:54 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-24 14:11:54 -Generating unique operation named: updateUsingTRACE_12
2019-05-24 14:11:54 -Starting Quartz Scheduler now
2019-05-24 14:11:54 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-24 14:11:54 -Starting...
2019-05-24 14:11:54 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-24 14:11:54 -Started.
2019-05-24 14:11:54 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-24 14:11:54 -Using a shared selector for servlet write/read
2019-05-24 14:11:54 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-24 14:11:54 -Started BootdoApplication in 32.626 seconds (JVM running for 33.413)
2019-05-24 14:11:54 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-24 14:11:54 -==> Parameters: 
2019-05-24 14:11:54 -<==      Total: 1
2019-05-24 14:12:19 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-24 14:12:19 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-24 14:12:20 -FrameworkServlet 'dispatcherServlet': initialization completed in 77 ms
2019-05-24 14:12:20 -Enabling session validation scheduler...
2019-05-24 14:12:20 -请求地址 : http://localhost:8081/login;JSESSIONID=011d227a-a4ba-4faf-a1ab-f355d798c2cc
2019-05-24 14:12:20 -HTTP METHOD : GET
2019-05-24 14:12:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 14:12:20 -参数 : [{}]
2019-05-24 14:12:20 -耗时 : 6
2019-05-24 14:12:20 -返回值 : login
2019-05-24 14:12:21 -请求地址 : http://localhost:8081/getVerify
2019-05-24 14:12:21 -HTTP METHOD : GET
2019-05-24 14:12:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 14:12:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4bd8d21a, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4fe75fb9]
2019-05-24 14:12:29 -8191
2019-05-24 14:12:30 -耗时 : 8238
2019-05-24 14:12:30 -返回值 : null
2019-05-24 14:12:37 -请求地址 : http://localhost:8081/login
2019-05-24 14:12:37 -HTTP METHOD : POST
2019-05-24 14:12:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 14:12:37 -参数 : [admin, 111111, 8191, org.apache.shiro.web.servlet.ShiroHttpServletRequest@b5ebdf2]
2019-05-24 14:12:37 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-24 14:12:37 -==> Parameters: admin(String)
2019-05-24 14:12:37 -<==      Total: 1
2019-05-24 14:12:37 -耗时 : 240
2019-05-24 14:12:37 -返回值 : {msg=操作成功, code=0}
2019-05-24 14:12:37 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-24 14:12:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 14:12:37 -==> Parameters: 1(Long), admin(String), 登录(String), 240(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 14:12:37.883(Timestamp)
2019-05-24 14:12:38 -请求地址 : http://localhost:8081/index
2019-05-24 14:12:38 -HTTP METHOD : GET
2019-05-24 14:12:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 14:12:38 -参数 : [{}]
2019-05-24 14:12:38 -<==    Updates: 1
2019-05-24 14:12:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 14:12:38 -==> Parameters: 1(Long)
2019-05-24 14:12:38 -<==      Total: 50
2019-05-24 14:12:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 14:12:38 -==> Parameters: 138(Long)
2019-05-24 14:12:38 -<==      Total: 1
2019-05-24 14:12:38 -耗时 : 894
2019-05-24 14:12:38 -返回值 : index_v1
2019-05-24 14:12:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 14:12:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 894(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 14:12:39.093(Timestamp)
2019-05-24 14:12:39 -<==    Updates: 1
2019-05-24 14:12:39 -请求地址 : http://localhost:8081/main
2019-05-24 14:12:39 -HTTP METHOD : GET
2019-05-24 14:12:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 14:12:39 -参数 : []
2019-05-24 14:12:39 -耗时 : 1
2019-05-24 14:12:39 -返回值 : main
2019-05-24 14:12:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 14:12:39 -HTTP METHOD : GET
2019-05-24 14:12:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 14:12:39 -参数 : []
2019-05-24 14:12:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 14:12:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 14:12:39 -请求地址 : http://localhost:8081/main
2019-05-24 14:12:39 -HTTP METHOD : GET
2019-05-24 14:12:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 14:12:39 -参数 : []
2019-05-24 14:12:39 -耗时 : 0
2019-05-24 14:12:39 -返回值 : main
2019-05-24 14:12:40 -<==      Total: 0
2019-05-24 14:12:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 14:12:40 -==> Parameters: 1(Long), 0(String)
2019-05-24 14:12:40 -<==      Total: 1
2019-05-24 14:12:40 -耗时 : 337
2019-05-24 14:12:40 -返回值 : com.bootdo.common.utils.PageUtils@455409b6
2019-05-24 14:12:47 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-05-24 14:14:58 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 14:14:58 -==> Parameters: 1(Long)
2019-05-24 14:14:58 -<==      Total: 94
2019-05-24 14:14:58 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-05-24 14:14:58 -HTTP METHOD : GET
2019-05-24 14:14:58 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-05-24 14:14:58 -参数 : []
2019-05-24 14:14:58 -耗时 : 0
2019-05-24 14:14:58 -返回值 : /moneyList/moneyList
2019-05-24 14:14:59 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 14:14:59 -HTTP METHOD : GET
2019-05-24 14:14:59 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 14:14:59 -参数 : []
2019-05-24 14:14:59 -耗时 : 0
2019-05-24 14:14:59 -返回值 : /moneyList/moneyWZ
2019-05-24 14:15:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 14:15:00 -HTTP METHOD : GET
2019-05-24 14:15:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 14:15:00 -参数 : [userType]
2019-05-24 14:15:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 14:15:00 -==> Parameters: userType(String)
2019-05-24 14:15:00 -<==      Total: 4
2019-05-24 14:15:00 -耗时 : 77
2019-05-24 14:15:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 14:15:00 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 14:15:00 -HTTP METHOD : GET
2019-05-24 14:15:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 14:15:00 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@1b0036fb]
2019-05-24 14:15:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 14:15:00 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 14:15:01 -<==      Total: 2
2019-05-24 14:15:01 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 14:15:01 -==> Parameters: 
2019-05-24 14:15:01 -<==      Total: 1
2019-05-24 14:15:01 -耗时 : 152
2019-05-24 14:15:01 -返回值 : com.bootdo.common.utils.PageUtils@31039768
2019-05-24 14:15:11 -请求地址 : http://localhost:8081/moneyList/moneyWZ/exprotWZ
2019-05-24 14:15:11 -HTTP METHOD : GET
2019-05-24 14:15:11 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY
2019-05-24 14:15:11 -参数 : [com.bootdo.elec.vo.ElecVo@d5c9f2e, com.bootdo.moneyLog.vo.ElecLogVo@49cc2da0, org.apache.shiro.web.servlet.ShiroHttpServletResponse@30a401f1]
2019-05-24 14:15:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` >= 0 `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? 
2019-05-24 14:15:12 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-05-24 14:15:12 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-05-24 14:15:12 -耗时 : 928
2019-05-24 14:15:12 -返回值 : null
2019-05-24 14:22:31 -Starting BootdoApplication on PC-201905091110 with PID 13940 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-24 14:22:31 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-24 14:22:31 -The following profiles are active: dev
2019-05-24 14:22:31 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 14:22:31 CST 2019]; root of context hierarchy
2019-05-24 14:22:35 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-24 14:22:37 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d980ca4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:22:37 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$cbd9f8f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:22:38 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:22:39 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:22:39 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:22:39 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-24 14:22:39 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-24 14:22:39 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:22:39 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:22:39 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:22:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 14:22:41 -Tomcat initialized with port(s): 8081 (http)
2019-05-24 14:22:41 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-24 14:22:41 -Starting service [Tomcat]
2019-05-24 14:22:41 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-24 14:22:41 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-24 14:22:41 -Initializing Spring embedded WebApplicationContext
2019-05-24 14:22:41 -Root WebApplicationContext: initialization completed in 10106 ms
2019-05-24 14:22:42 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-24 14:22:42 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-24 14:22:42 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-24 14:22:42 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-24 14:22:42 -Filter xssFilter was not registered (disabled)
2019-05-24 14:22:42 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-24 14:22:42 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-24 14:22:42 -Servlet statViewServlet mapped to [/druid/*]
2019-05-24 14:22:42 -Servlet dispatcherServlet mapped to [/]
2019-05-24 14:22:46 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 14:22:31 CST 2019]; root of context hierarchy
2019-05-24 14:22:47 -Using default implementation for ThreadExecutor
2019-05-24 14:22:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-24 14:22:47 -Quartz Scheduler v.2.2.1 created.
2019-05-24 14:22:47 -RAMJobStore initialized.
2019-05-24 14:22:47 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-24 14:22:47 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-24 14:22:47 -Quartz scheduler version: 2.2.1
2019-05-24 14:22:47 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4ef5dd23
2019-05-24 14:22:48 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-24 14:22:48 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-24 14:22:51 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 14:22:51 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-24 14:22:51 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-24 14:22:51 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 14:22:51 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-24 14:22:51 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-24 14:22:51 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-24 14:22:51 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 14:22:51 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-24 14:22:51 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 14:22:51 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-24 14:22:51 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 14:22:51 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 14:22:51 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-24 14:22:51 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 14:22:51 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-24 14:22:51 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 14:22:51 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-24 14:22:51 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 14:22:51 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-24 14:22:51 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-24 14:22:51 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 14:22:51 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-24 14:22:51 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 14:22:51 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-24 14:22:51 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-24 14:22:51 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-24 14:22:51 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-24 14:22:51 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-24 14:22:51 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-24 14:22:51 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-24 14:22:51 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-24 14:22:51 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-24 14:22:51 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-24 14:22:51 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-24 14:22:51 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-24 14:22:51 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-24 14:22:51 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 14:22:51 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-24 14:22:51 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 14:22:51 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-24 14:22:51 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-24 14:22:51 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-24 14:22:51 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-24 14:22:51 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-24 14:22:51 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-24 14:22:51 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-24 14:22:51 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-24 14:22:51 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-24 14:22:51 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 14:22:51 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 14:22:51 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-24 14:22:51 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-24 14:22:51 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-24 14:22:51 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 14:22:51 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-24 14:22:51 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-24 14:22:51 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-24 14:22:51 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-24 14:22:51 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-24 14:22:51 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-24 14:22:51 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-24 14:22:51 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-24 14:22:51 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-24 14:22:51 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-24 14:22:51 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-24 14:22:51 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-24 14:22:51 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-24 14:22:51 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 14:22:51 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-24 14:22:51 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 14:22:51 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 14:22:51 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-24 14:22:51 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-24 14:22:51 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 14:22:51 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-24 14:22:51 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 14:22:51 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 14:22:51 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-24 14:22:51 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 14:22:51 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-24 14:22:51 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 14:22:51 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 14:22:51 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-24 14:22:51 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-24 14:22:51 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-24 14:22:51 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-24 14:22:51 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-24 14:22:51 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-24 14:22:51 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-24 14:22:51 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 14:22:51 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-24 14:22:51 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-24 14:22:51 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-24 14:22:51 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-24 14:22:51 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-24 14:22:51 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-24 14:22:51 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-24 14:22:51 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-24 14:22:51 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-24 14:22:51 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-24 14:22:51 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-24 14:22:51 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-24 14:22:51 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-24 14:22:51 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-24 14:22:51 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-24 14:22:51 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-24 14:22:51 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-24 14:22:51 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-24 14:22:51 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-24 14:22:51 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 14:22:51 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-24 14:22:51 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-24 14:22:51 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-24 14:22:51 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-24 14:22:51 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-24 14:22:51 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-24 14:22:51 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-24 14:22:51 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-24 14:22:51 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-24 14:22:51 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-24 14:22:51 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-24 14:22:51 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-24 14:22:51 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-24 14:22:51 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-24 14:22:51 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-24 14:22:51 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-24 14:22:51 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 14:22:51 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 14:22:51 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-24 14:22:51 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 14:22:51 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-24 14:22:51 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-24 14:22:51 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-24 14:22:51 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-24 14:22:51 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-24 14:22:51 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 14:22:51 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-24 14:22:51 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-24 14:22:51 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-24 14:22:51 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-24 14:22:51 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 14:22:51 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 14:22:51 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 14:22:51 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 14:22:51 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-24 14:22:51 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 14:22:51 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 14:22:51 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-24 14:22:51 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-24 14:22:51 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 14:22:51 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-24 14:22:51 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-24 14:22:51 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-24 14:22:52 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-24 14:22:52 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-24 14:22:52 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-24 14:22:53 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 14:22:53 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 14:22:31 CST 2019]; root of context hierarchy
2019-05-24 14:22:53 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 14:22:53 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 14:22:53 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 14:22:54 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-24 14:22:54 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-24 14:22:56 -Registering beans for JMX exposure on startup
2019-05-24 14:22:56 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-24 14:22:56 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-24 14:22:56 -Starting beans in phase 2147483647
2019-05-24 14:22:56 -Context refreshed
2019-05-24 14:22:56 -Found 1 custom documentation plugin(s)
2019-05-24 14:22:56 -Scanning for api listing references
2019-05-24 14:22:57 -Generating unique operation named: getCountDUsingPOST_1
2019-05-24 14:22:57 -Generating unique operation named: removeUsingPOST_1
2019-05-24 14:22:57 -Generating unique operation named: addUsingGET_1
2019-05-24 14:22:57 -Generating unique operation named: editUsingGET_1
2019-05-24 14:22:57 -Generating unique operation named: listUsingGET_1
2019-05-24 14:22:57 -Generating unique operation named: removeUsingPOST_2
2019-05-24 14:22:57 -Generating unique operation named: removeUsingPOST_3
2019-05-24 14:22:57 -Generating unique operation named: saveUsingPOST_1
2019-05-24 14:22:57 -Generating unique operation named: updateUsingGET_1
2019-05-24 14:22:57 -Generating unique operation named: updateUsingHEAD_1
2019-05-24 14:22:57 -Generating unique operation named: updateUsingPOST_1
2019-05-24 14:22:57 -Generating unique operation named: updateUsingPUT_1
2019-05-24 14:22:57 -Generating unique operation named: updateUsingPATCH_1
2019-05-24 14:22:57 -Generating unique operation named: updateUsingDELETE_1
2019-05-24 14:22:57 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-24 14:22:57 -Generating unique operation named: updateUsingTRACE_1
2019-05-24 14:22:57 -Generating unique operation named: addUsingGET_2
2019-05-24 14:22:57 -Generating unique operation named: editUsingGET_2
2019-05-24 14:22:57 -Generating unique operation named: listUsingGET_2
2019-05-24 14:22:57 -Generating unique operation named: removeUsingPOST_4
2019-05-24 14:22:57 -Generating unique operation named: removeUsingPOST_5
2019-05-24 14:22:57 -Generating unique operation named: saveUsingPOST_2
2019-05-24 14:22:57 -Generating unique operation named: updateUsingPOST_2
2019-05-24 14:22:57 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-24 14:22:57 -Generating unique operation named: addUsingGET_3
2019-05-24 14:22:57 -Generating unique operation named: editUsingGET_3
2019-05-24 14:22:57 -Generating unique operation named: listUsingGET_3
2019-05-24 14:22:57 -Generating unique operation named: removeUsingPOST_6
2019-05-24 14:22:57 -Generating unique operation named: removeUsingPOST_7
2019-05-24 14:22:57 -Generating unique operation named: saveUsingPOST_3
2019-05-24 14:22:57 -Generating unique operation named: updateUsingGET_2
2019-05-24 14:22:57 -Generating unique operation named: updateUsingHEAD_2
2019-05-24 14:22:57 -Generating unique operation named: updateUsingPOST_3
2019-05-24 14:22:57 -Generating unique operation named: updateUsingPUT_2
2019-05-24 14:22:57 -Generating unique operation named: updateUsingPATCH_2
2019-05-24 14:22:57 -Generating unique operation named: updateUsingDELETE_2
2019-05-24 14:22:57 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-24 14:22:57 -Generating unique operation named: updateUsingTRACE_2
2019-05-24 14:22:57 -Generating unique operation named: addUsingGET_4
2019-05-24 14:22:57 -Generating unique operation named: editUsingGET_4
2019-05-24 14:22:57 -Generating unique operation named: listUsingGET_4
2019-05-24 14:22:57 -Generating unique operation named: removeUsingPOST_8
2019-05-24 14:22:57 -Generating unique operation named: removeUsingPOST_9
2019-05-24 14:22:57 -Generating unique operation named: saveUsingPOST_4
2019-05-24 14:22:57 -Generating unique operation named: updateUsingGET_3
2019-05-24 14:22:57 -Generating unique operation named: updateUsingHEAD_3
2019-05-24 14:22:57 -Generating unique operation named: updateUsingPOST_4
2019-05-24 14:22:57 -Generating unique operation named: updateUsingPUT_3
2019-05-24 14:22:57 -Generating unique operation named: updateUsingPATCH_3
2019-05-24 14:22:57 -Generating unique operation named: updateUsingDELETE_3
2019-05-24 14:22:57 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-24 14:22:57 -Generating unique operation named: updateUsingTRACE_3
2019-05-24 14:22:57 -Generating unique operation named: ElecUsingGET_1
2019-05-24 14:22:57 -Generating unique operation named: addUsingGET_5
2019-05-24 14:22:57 -Generating unique operation named: editUsingGET_5
2019-05-24 14:22:57 -Generating unique operation named: listUsingGET_5
2019-05-24 14:22:57 -Generating unique operation named: removeUsingPOST_10
2019-05-24 14:22:57 -Generating unique operation named: removeUsingPOST_11
2019-05-24 14:22:57 -Generating unique operation named: saveUsingPOST_5
2019-05-24 14:22:57 -Generating unique operation named: updateUsingGET_4
2019-05-24 14:22:57 -Generating unique operation named: updateUsingHEAD_4
2019-05-24 14:22:57 -Generating unique operation named: updateUsingPOST_5
2019-05-24 14:22:57 -Generating unique operation named: updateUsingPUT_4
2019-05-24 14:22:57 -Generating unique operation named: updateUsingPATCH_4
2019-05-24 14:22:57 -Generating unique operation named: updateUsingDELETE_4
2019-05-24 14:22:57 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-24 14:22:57 -Generating unique operation named: updateUsingTRACE_4
2019-05-24 14:22:57 -Generating unique operation named: editUsingGET_6
2019-05-24 14:22:57 -Generating unique operation named: listUsingGET_6
2019-05-24 14:22:57 -Generating unique operation named: updateUsingPOST_6
2019-05-24 14:22:57 -Generating unique operation named: addUsingGET_6
2019-05-24 14:22:57 -Generating unique operation named: editUsingGET_7
2019-05-24 14:22:57 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-24 14:22:57 -Generating unique operation named: listUsingGET_7
2019-05-24 14:22:57 -Generating unique operation named: removeUsingPOST_12
2019-05-24 14:22:57 -Generating unique operation named: removeUsingPOST_13
2019-05-24 14:22:58 -Generating unique operation named: saveUsingPOST_6
2019-05-24 14:22:58 -Generating unique operation named: updateUsingGET_5
2019-05-24 14:22:58 -Generating unique operation named: updateUsingHEAD_5
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPOST_7
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPUT_5
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPATCH_5
2019-05-24 14:22:58 -Generating unique operation named: updateUsingDELETE_5
2019-05-24 14:22:58 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-24 14:22:58 -Generating unique operation named: updateUsingTRACE_5
2019-05-24 14:22:58 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-24 14:22:58 -Generating unique operation named: addUsingGET_7
2019-05-24 14:22:58 -Generating unique operation named: editUsingGET_8
2019-05-24 14:22:58 -Generating unique operation named: listUsingGET_8
2019-05-24 14:22:58 -Generating unique operation named: removeUsingPOST_14
2019-05-24 14:22:58 -Generating unique operation named: removeUsingPOST_15
2019-05-24 14:22:58 -Generating unique operation named: saveUsingPOST_7
2019-05-24 14:22:58 -Generating unique operation named: updateUsingGET_6
2019-05-24 14:22:58 -Generating unique operation named: updateUsingHEAD_6
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPOST_8
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPUT_6
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPATCH_6
2019-05-24 14:22:58 -Generating unique operation named: updateUsingDELETE_6
2019-05-24 14:22:58 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-24 14:22:58 -Generating unique operation named: updateUsingTRACE_6
2019-05-24 14:22:58 -Generating unique operation named: addUsingGET_8
2019-05-24 14:22:58 -Generating unique operation named: editUsingGET_9
2019-05-24 14:22:58 -Generating unique operation named: listUsingGET_9
2019-05-24 14:22:58 -Generating unique operation named: removeUsingPOST_16
2019-05-24 14:22:58 -Generating unique operation named: removeUsingPOST_17
2019-05-24 14:22:58 -Generating unique operation named: saveUsingPOST_8
2019-05-24 14:22:58 -Generating unique operation named: updateUsingGET_7
2019-05-24 14:22:58 -Generating unique operation named: updateUsingHEAD_7
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPOST_9
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPUT_7
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPATCH_7
2019-05-24 14:22:58 -Generating unique operation named: updateUsingDELETE_7
2019-05-24 14:22:58 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-24 14:22:58 -Generating unique operation named: updateUsingTRACE_7
2019-05-24 14:22:58 -Generating unique operation named: addUsingGET_9
2019-05-24 14:22:58 -Generating unique operation named: editUsingGET_10
2019-05-24 14:22:58 -Generating unique operation named: infoUsingGET_1
2019-05-24 14:22:58 -Generating unique operation named: infoUsingHEAD_1
2019-05-24 14:22:58 -Generating unique operation named: infoUsingPOST_1
2019-05-24 14:22:58 -Generating unique operation named: infoUsingPUT_1
2019-05-24 14:22:58 -Generating unique operation named: infoUsingPATCH_1
2019-05-24 14:22:58 -Generating unique operation named: infoUsingDELETE_1
2019-05-24 14:22:58 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-24 14:22:58 -Generating unique operation named: infoUsingTRACE_1
2019-05-24 14:22:58 -Generating unique operation named: listUsingGET_10
2019-05-24 14:22:58 -Generating unique operation named: removeUsingPOST_18
2019-05-24 14:22:58 -Generating unique operation named: removeUsingPOST_19
2019-05-24 14:22:58 -Generating unique operation named: saveUsingPOST_9
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPOST_10
2019-05-24 14:22:58 -Generating unique operation named: listUsingGET_11
2019-05-24 14:22:58 -Generating unique operation named: removeUsingPOST_20
2019-05-24 14:22:58 -Generating unique operation named: welcomeUsingGET_1
2019-05-24 14:22:58 -Generating unique operation named: addUsingGET_10
2019-05-24 14:22:58 -Generating unique operation named: editUsingGET_11
2019-05-24 14:22:58 -Generating unique operation named: listUsingGET_12
2019-05-24 14:22:58 -Generating unique operation named: removeUsingPOST_21
2019-05-24 14:22:58 -Generating unique operation named: saveUsingPOST_10
2019-05-24 14:22:58 -Generating unique operation named: treeUsingGET_1
2019-05-24 14:22:58 -Generating unique operation named: treeUsingGET_2
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPOST_11
2019-05-24 14:22:58 -Generating unique operation named: addUsingGET_11
2019-05-24 14:22:58 -Generating unique operation named: editUsingGET_12
2019-05-24 14:22:58 -Generating unique operation named: listUsingGET_13
2019-05-24 14:22:58 -Generating unique operation named: removeUsingPOST_22
2019-05-24 14:22:58 -Generating unique operation named: removeUsingPOST_23
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPOST_12
2019-05-24 14:22:58 -Generating unique operation named: addUsingGET_12
2019-05-24 14:22:58 -Generating unique operation named: editUsingGET_13
2019-05-24 14:22:58 -Generating unique operation named: listUsingGET_14
2019-05-24 14:22:58 -Generating unique operation named: removeUsingPOST_24
2019-05-24 14:22:58 -Generating unique operation named: removeUsingPOST_25
2019-05-24 14:22:58 -Generating unique operation named: saveUsingPOST_11
2019-05-24 14:22:58 -Generating unique operation named: updateUsingGET_8
2019-05-24 14:22:58 -Generating unique operation named: updateUsingHEAD_8
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPOST_13
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPUT_8
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPATCH_8
2019-05-24 14:22:58 -Generating unique operation named: updateUsingDELETE_8
2019-05-24 14:22:58 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-24 14:22:58 -Generating unique operation named: updateUsingTRACE_8
2019-05-24 14:22:58 -Generating unique operation named: addUsingGET_13
2019-05-24 14:22:58 -Generating unique operation named: editUsingGET_14
2019-05-24 14:22:58 -Generating unique operation named: listUsingGET_15
2019-05-24 14:22:58 -Generating unique operation named: printEditUsingGET_1
2019-05-24 14:22:58 -Generating unique operation named: removeUsingPOST_26
2019-05-24 14:22:58 -Generating unique operation named: removeUsingPOST_27
2019-05-24 14:22:58 -Generating unique operation named: saveUsingPOST_12
2019-05-24 14:22:58 -Generating unique operation named: updateUsingGET_9
2019-05-24 14:22:58 -Generating unique operation named: updateUsingHEAD_9
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPOST_14
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPUT_9
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPATCH_9
2019-05-24 14:22:58 -Generating unique operation named: updateUsingDELETE_9
2019-05-24 14:22:58 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-24 14:22:58 -Generating unique operation named: updateUsingTRACE_9
2019-05-24 14:22:58 -Generating unique operation named: addUsingGET_14
2019-05-24 14:22:58 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-24 14:22:58 -Generating unique operation named: editUsingGET_15
2019-05-24 14:22:58 -Generating unique operation named: listUsingGET_16
2019-05-24 14:22:58 -Generating unique operation named: saveUsingPOST_13
2019-05-24 14:22:58 -Generating unique operation named: saveUsingPOST_14
2019-05-24 14:22:58 -Generating unique operation named: updateUsingPOST_15
2019-05-24 14:22:58 -Generating unique operation named: listUsingGET_17
2019-05-24 14:22:58 -Generating unique operation named: listUsingHEAD_1
2019-05-24 14:22:58 -Generating unique operation named: listUsingPOST_1
2019-05-24 14:22:58 -Generating unique operation named: listUsingPUT_1
2019-05-24 14:22:58 -Generating unique operation named: listUsingPATCH_1
2019-05-24 14:22:58 -Generating unique operation named: listUsingDELETE_1
2019-05-24 14:22:58 -Generating unique operation named: listUsingOPTIONS_1
2019-05-24 14:22:58 -Generating unique operation named: listUsingTRACE_1
2019-05-24 14:22:59 -Generating unique operation named: countDDUsingGET_1
2019-05-24 14:22:59 -Generating unique operation named: exportDDUsingGET_1
2019-05-24 14:22:59 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-24 14:22:59 -Generating unique operation named: addUsingGET_15
2019-05-24 14:22:59 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-24 14:22:59 -Generating unique operation named: editUsingGET_16
2019-05-24 14:22:59 -Generating unique operation named: listUsingGET_18
2019-05-24 14:22:59 -Generating unique operation named: removeUsingPOST_28
2019-05-24 14:22:59 -Generating unique operation named: saveUsingPOST_15
2019-05-24 14:22:59 -Generating unique operation named: treeUsingGET_3
2019-05-24 14:22:59 -Generating unique operation named: treeViewUsingGET_1
2019-05-24 14:22:59 -Generating unique operation named: updateUsingPOST_16
2019-05-24 14:22:59 -Generating unique operation named: addUsingGET_16
2019-05-24 14:22:59 -Generating unique operation named: editUsingGET_17
2019-05-24 14:22:59 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-24 14:22:59 -Generating unique operation named: listUsingGET_19
2019-05-24 14:22:59 -Generating unique operation named: removeUsingPOST_29
2019-05-24 14:22:59 -Generating unique operation named: removeUsingPOST_30
2019-05-24 14:22:59 -Generating unique operation named: saveUsingPOST_16
2019-05-24 14:22:59 -Generating unique operation named: updateUsingGET_10
2019-05-24 14:22:59 -Generating unique operation named: updateUsingHEAD_10
2019-05-24 14:22:59 -Generating unique operation named: updateUsingPOST_17
2019-05-24 14:22:59 -Generating unique operation named: updateUsingPUT_10
2019-05-24 14:22:59 -Generating unique operation named: updateUsingPATCH_10
2019-05-24 14:22:59 -Generating unique operation named: updateUsingDELETE_10
2019-05-24 14:22:59 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-24 14:22:59 -Generating unique operation named: updateUsingTRACE_10
2019-05-24 14:22:59 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-24 14:22:59 -Generating unique operation named: addUsingGET_17
2019-05-24 14:22:59 -Generating unique operation named: editUsingGET_18
2019-05-24 14:22:59 -Generating unique operation named: listUsingGET_20
2019-05-24 14:22:59 -Generating unique operation named: removeUsingPOST_31
2019-05-24 14:22:59 -Generating unique operation named: removeUsingPOST_32
2019-05-24 14:22:59 -Generating unique operation named: saveUsingPOST_17
2019-05-24 14:22:59 -Generating unique operation named: updateUsingGET_11
2019-05-24 14:22:59 -Generating unique operation named: updateUsingHEAD_11
2019-05-24 14:22:59 -Generating unique operation named: updateUsingPOST_18
2019-05-24 14:22:59 -Generating unique operation named: updateUsingPUT_11
2019-05-24 14:22:59 -Generating unique operation named: updateUsingPATCH_11
2019-05-24 14:22:59 -Generating unique operation named: updateUsingDELETE_11
2019-05-24 14:22:59 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-24 14:22:59 -Generating unique operation named: updateUsingTRACE_11
2019-05-24 14:22:59 -Generating unique operation named: addUsingGET_18
2019-05-24 14:22:59 -Generating unique operation named: editUsingGET_19
2019-05-24 14:22:59 -Generating unique operation named: listUsingGET_21
2019-05-24 14:22:59 -Generating unique operation named: removeUsingPOST_33
2019-05-24 14:22:59 -Generating unique operation named: removeUsingPOST_34
2019-05-24 14:22:59 -Generating unique operation named: saveUsingPOST_18
2019-05-24 14:22:59 -Generating unique operation named: updateUsingGET_12
2019-05-24 14:22:59 -Generating unique operation named: updateUsingHEAD_12
2019-05-24 14:22:59 -Generating unique operation named: updateUsingPOST_19
2019-05-24 14:22:59 -Generating unique operation named: updateUsingPUT_12
2019-05-24 14:22:59 -Generating unique operation named: updateUsingPATCH_12
2019-05-24 14:22:59 -Generating unique operation named: updateUsingDELETE_12
2019-05-24 14:22:59 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-24 14:22:59 -Generating unique operation named: updateUsingTRACE_12
2019-05-24 14:22:59 -Starting Quartz Scheduler now
2019-05-24 14:22:59 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-24 14:22:59 -Starting...
2019-05-24 14:22:59 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-24 14:22:59 -Started.
2019-05-24 14:22:59 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-24 14:22:59 -Using a shared selector for servlet write/read
2019-05-24 14:22:59 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-24 14:22:59 -Started BootdoApplication in 29.525 seconds (JVM running for 30.364)
2019-05-24 14:22:59 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-24 14:22:59 -==> Parameters: 
2019-05-24 14:23:00 -<==      Total: 1
2019-05-24 14:23:52 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-24 14:53:52 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-05-24 14:57:48 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-24 14:57:48 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-24 14:57:48 -FrameworkServlet 'dispatcherServlet': initialization completed in 209 ms
2019-05-24 14:57:49 -Enabling session validation scheduler...
2019-05-24 14:57:49 -请求地址 : http://localhost:8081/login;JSESSIONID=c85f63af-6d53-4ebb-81fe-2081e6b87aac
2019-05-24 14:57:49 -HTTP METHOD : GET
2019-05-24 14:57:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 14:57:49 -参数 : [{}]
2019-05-24 14:57:49 -耗时 : 8
2019-05-24 14:57:49 -返回值 : login
2019-05-24 14:57:50 -请求地址 : http://localhost:8081/login;JSESSIONID=c85f63af-6d53-4ebb-81fe-2081e6b87aac
2019-05-24 14:57:50 -HTTP METHOD : GET
2019-05-24 14:57:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 14:57:50 -参数 : [{}]
2019-05-24 14:57:50 -耗时 : 0
2019-05-24 14:57:50 -返回值 : login
2019-05-24 14:57:50 -请求地址 : http://localhost:8081/getVerify
2019-05-24 14:57:50 -HTTP METHOD : GET
2019-05-24 14:57:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 14:57:50 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7efb32a8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@703cc307]
2019-05-24 14:57:51 -请求地址 : http://localhost:8081/getVerify
2019-05-24 14:57:51 -HTTP METHOD : GET
2019-05-24 14:57:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 14:57:51 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1a0700af, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1e389737]
2019-05-24 14:57:51 -3388
2019-05-24 14:57:51 -5698
2019-05-24 14:57:51 -耗时 : 775
2019-05-24 14:57:51 -返回值 : null
2019-05-24 14:57:51 -耗时 : 479
2019-05-24 14:57:51 -返回值 : null
2019-05-24 15:04:54 -请求地址 : http://localhost:8081/login
2019-05-24 15:04:54 -HTTP METHOD : POST
2019-05-24 15:04:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 15:04:54 -参数 : [admin, 111111, 3388, org.apache.shiro.web.servlet.ShiroHttpServletRequest@11672821]
2019-05-24 15:04:54 -耗时 : 12
2019-05-24 15:04:54 -返回值 : {msg=请输入正确的验证码, code=500}
2019-05-24 15:04:54 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-24 15:04:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 15:04:54 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 12(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 15:04:54.309(Timestamp)
2019-05-24 15:04:54 -<==    Updates: 1
2019-05-24 15:04:59 -请求地址 : http://localhost:8081/login
2019-05-24 15:04:59 -HTTP METHOD : POST
2019-05-24 15:04:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 15:04:59 -参数 : [admin, 111111, 3388, org.apache.shiro.web.servlet.ShiroHttpServletRequest@72e95404]
2019-05-24 15:04:59 -耗时 : 0
2019-05-24 15:04:59 -返回值 : {msg=请输入正确的验证码, code=500}
2019-05-24 15:04:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 15:04:59 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 0(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 15:04:59.614(Timestamp)
2019-05-24 15:04:59 -<==    Updates: 1
2019-05-24 15:05:02 -请求地址 : http://localhost:8081/getVerify
2019-05-24 15:05:02 -HTTP METHOD : GET
2019-05-24 15:05:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 15:05:02 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@43f9602, org.apache.shiro.web.servlet.ShiroHttpServletResponse@af868f5]
2019-05-24 15:05:02 -4428
2019-05-24 15:05:02 -耗时 : 13
2019-05-24 15:05:02 -返回值 : null
2019-05-24 15:05:06 -请求地址 : http://localhost:8081/login
2019-05-24 15:05:06 -HTTP METHOD : POST
2019-05-24 15:05:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 15:05:06 -参数 : [admin, 111111, 4428, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1b810ebb]
2019-05-24 15:05:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-24 15:05:06 -==> Parameters: admin(String)
2019-05-24 15:05:06 -<==      Total: 1
2019-05-24 15:05:06 -耗时 : 149
2019-05-24 15:05:06 -返回值 : {msg=操作成功, code=0}
2019-05-24 15:05:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 15:05:06 -==> Parameters: 1(Long), admin(String), 登录(String), 149(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 15:05:06.694(Timestamp)
2019-05-24 15:05:06 -请求地址 : http://localhost:8081/index
2019-05-24 15:05:06 -HTTP METHOD : GET
2019-05-24 15:05:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 15:05:06 -参数 : [{}]
2019-05-24 15:05:06 -<==    Updates: 1
2019-05-24 15:05:06 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 15:05:06 -==> Parameters: 1(Long)
2019-05-24 15:05:06 -<==      Total: 50
2019-05-24 15:05:06 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 15:05:06 -==> Parameters: 138(Long)
2019-05-24 15:05:06 -<==      Total: 1
2019-05-24 15:05:06 -耗时 : 166
2019-05-24 15:05:06 -返回值 : index_v1
2019-05-24 15:05:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 15:05:06 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 166(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 15:05:06.955(Timestamp)
2019-05-24 15:05:07 -<==    Updates: 1
2019-05-24 15:05:07 -请求地址 : http://localhost:8081/main
2019-05-24 15:05:07 -HTTP METHOD : GET
2019-05-24 15:05:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 15:05:07 -参数 : []
2019-05-24 15:05:07 -耗时 : 0
2019-05-24 15:05:07 -返回值 : main
2019-05-24 15:05:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 15:05:07 -HTTP METHOD : GET
2019-05-24 15:05:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 15:05:07 -参数 : []
2019-05-24 15:05:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 15:05:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 15:05:07 -请求地址 : http://localhost:8081/main
2019-05-24 15:05:07 -HTTP METHOD : GET
2019-05-24 15:05:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 15:05:07 -参数 : []
2019-05-24 15:05:07 -耗时 : 1
2019-05-24 15:05:07 -返回值 : main
2019-05-24 15:05:07 -<==      Total: 0
2019-05-24 15:05:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 15:05:07 -==> Parameters: 1(Long), 0(String)
2019-05-24 15:05:07 -<==      Total: 1
2019-05-24 15:05:07 -耗时 : 163
2019-05-24 15:05:07 -返回值 : com.bootdo.common.utils.PageUtils@5b95102a
2019-05-24 15:05:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 15:05:16 -==> Parameters: 1(Long)
2019-05-24 15:05:16 -<==      Total: 94
2019-05-24 15:05:16 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 15:05:16 -HTTP METHOD : GET
2019-05-24 15:05:16 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 15:05:16 -参数 : []
2019-05-24 15:05:16 -耗时 : 0
2019-05-24 15:05:16 -返回值 : /moneyList/moneyWZ
2019-05-24 15:05:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 15:05:16 -HTTP METHOD : GET
2019-05-24 15:05:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 15:05:16 -参数 : [userType]
2019-05-24 15:05:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 15:05:16 -==> Parameters: userType(String)
2019-05-24 15:05:16 -<==      Total: 4
2019-05-24 15:05:16 -耗时 : 63
2019-05-24 15:05:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 15:05:16 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 15:05:16 -HTTP METHOD : GET
2019-05-24 15:05:16 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 15:05:16 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@31af8884]
2019-05-24 15:05:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 15:05:16 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 15:05:17 -<==      Total: 2
2019-05-24 15:05:17 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 15:05:17 -==> Parameters: 
2019-05-24 15:05:17 -<==      Total: 1
2019-05-24 15:05:17 -耗时 : 115
2019-05-24 15:05:17 -返回值 : com.bootdo.common.utils.PageUtils@68746a93
2019-05-24 15:05:37 -请求地址 : http://localhost:8081/moneyList/moneyWZ/exprotWZ
2019-05-24 15:05:37 -HTTP METHOD : GET
2019-05-24 15:05:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY
2019-05-24 15:05:37 -参数 : [com.bootdo.elec.vo.ElecVo@4e7a960c, com.bootdo.moneyLog.vo.ElecLogVo@122d5a3c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2a03ef2a]
2019-05-24 15:05:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? and `elec_sum` >= 0 
2019-05-24 15:05:38 -==> Parameters: 2019-03(String)
2019-05-24 15:05:38 -<==      Total: 1
2019-05-24 15:05:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? and `elec_sum` < 0 
2019-05-24 15:05:38 -==> Parameters: 2019-03(String)
2019-05-24 15:05:38 -<==      Total: 1
2019-05-24 15:05:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`elec_type`,`elec_money`,`elec_date`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? 
2019-05-24 15:05:38 -==> Parameters: 2019-03(String)
2019-05-24 15:05:38 -<==      Total: 2
2019-05-24 15:05:38 -耗时 : 795
2019-05-24 15:05:38 -返回值 : null
2019-05-24 15:06:47 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 15:06:47 -HTTP METHOD : GET
2019-05-24 15:06:47 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 15:06:47 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@6818f21c]
2019-05-24 15:06:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? order by id asc limit ?, ? 
2019-05-24 15:06:47 -==> Parameters: 2019-03(String), 0(Integer), 10(Integer)
2019-05-24 15:06:47 -<==      Total: 2
2019-05-24 15:06:47 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? 
2019-05-24 15:06:47 -==> Parameters: 2019-03(String)
2019-05-24 15:06:47 -<==      Total: 1
2019-05-24 15:06:47 -耗时 : 18
2019-05-24 15:06:47 -返回值 : com.bootdo.common.utils.PageUtils@32569fa4
2019-05-24 15:06:54 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 15:06:54 -HTTP METHOD : GET
2019-05-24 15:06:54 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 15:06:54 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@270eaacc]
2019-05-24 15:06:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? order by id asc limit ?, ? 
2019-05-24 15:06:54 -==> Parameters: 2019-03(String), 0(Integer), 10(Integer)
2019-05-24 15:06:54 -<==      Total: 2
2019-05-24 15:06:54 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? 
2019-05-24 15:06:54 -==> Parameters: 2019-03(String)
2019-05-24 15:06:54 -<==      Total: 1
2019-05-24 15:06:54 -耗时 : 15
2019-05-24 15:06:54 -返回值 : com.bootdo.common.utils.PageUtils@54a5d7e3
2019-05-24 15:06:55 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 15:06:55 -HTTP METHOD : GET
2019-05-24 15:06:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 15:06:55 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@5b19b8c4]
2019-05-24 15:06:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? order by id asc limit ?, ? 
2019-05-24 15:06:55 -==> Parameters: 2019-03(String), 0(Integer), 10(Integer)
2019-05-24 15:06:55 -<==      Total: 2
2019-05-24 15:06:55 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? 
2019-05-24 15:06:55 -==> Parameters: 2019-03(String)
2019-05-24 15:06:55 -<==      Total: 1
2019-05-24 15:06:55 -耗时 : 10
2019-05-24 15:06:55 -返回值 : com.bootdo.common.utils.PageUtils@f36cd93
2019-05-24 15:06:55 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 15:06:55 -HTTP METHOD : GET
2019-05-24 15:06:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 15:06:55 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=, userId=}, com.bootdo.elec.domain.ElecDO@11fd7f2b]
2019-05-24 15:06:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? order by id asc limit ?, ? 
2019-05-24 15:06:55 -==> Parameters: 2019-03(String), 0(Integer), 10(Integer)
2019-05-24 15:06:55 -<==      Total: 2
2019-05-24 15:06:55 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? 
2019-05-24 15:06:55 -==> Parameters: 2019-03(String)
2019-05-24 15:06:55 -<==      Total: 1
2019-05-24 15:06:55 -耗时 : 11
2019-05-24 15:06:55 -返回值 : com.bootdo.common.utils.PageUtils@9023275
2019-05-24 15:10:16 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 15:10:16 -HTTP METHOD : GET
2019-05-24 15:10:16 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 15:10:16 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=C, userId=, type=C}, com.bootdo.elec.domain.ElecDO@7e2c111f]
2019-05-24 15:10:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? and user_type = ? order by id asc limit ?, ? 
2019-05-24 15:10:16 -==> Parameters: 2019-03(String), C(String), 0(Integer), 10(Integer)
2019-05-24 15:10:16 -<==      Total: 0
2019-05-24 15:10:16 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? and user_type = ? 
2019-05-24 15:10:16 -==> Parameters: 2019-03(String), C(String)
2019-05-24 15:10:16 -<==      Total: 1
2019-05-24 15:10:16 -耗时 : 15
2019-05-24 15:10:16 -返回值 : com.bootdo.common.utils.PageUtils@7117b5ea
2019-05-24 15:10:18 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 15:10:18 -HTTP METHOD : GET
2019-05-24 15:10:18 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 15:10:18 -参数 : [{limit=10, offset=0, createTime=2019-03, userType=B, userId=, type=B}, com.bootdo.elec.domain.ElecDO@3a20a07d]
2019-05-24 15:10:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? and user_type = ? order by id asc limit ?, ? 
2019-05-24 15:10:18 -==> Parameters: 2019-03(String), B(String), 0(Integer), 10(Integer)
2019-05-24 15:10:18 -<==      Total: 1
2019-05-24 15:10:18 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? and user_type = ? 
2019-05-24 15:10:18 -==> Parameters: 2019-03(String), B(String)
2019-05-24 15:10:18 -<==      Total: 1
2019-05-24 15:10:18 -耗时 : 16
2019-05-24 15:10:18 -返回值 : com.bootdo.common.utils.PageUtils@2595586a
2019-05-24 15:11:26 -请求地址 : http://localhost:8081/moneyList/moneyWZ/edit/9
2019-05-24 15:11:26 -HTTP METHOD : GET
2019-05-24 15:11:26 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.edit
2019-05-24 15:11:26 -参数 : [9, {}]
2019-05-24 15:11:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-05-24 15:11:26 -==> Parameters: 9(Long)
2019-05-24 15:11:26 -<==      Total: 1
2019-05-24 15:11:26 -耗时 : 16
2019-05-24 15:11:26 -返回值 : elec/elec/edit
2019-05-24 15:11:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 15:11:27 -HTTP METHOD : GET
2019-05-24 15:11:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 15:11:27 -参数 : [userType]
2019-05-24 15:11:27 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-24 15:11:27 -HTTP METHOD : GET
2019-05-24 15:11:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 15:11:27 -参数 : [elecType]
2019-05-24 15:11:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 15:11:27 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-24 15:11:27 -HTTP METHOD : GET
2019-05-24 15:11:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 15:11:27 -参数 : [userState]
2019-05-24 15:11:27 -==> Parameters: elecType(String)
2019-05-24 15:11:27 -<==      Total: 11
2019-05-24 15:11:27 -耗时 : 13
2019-05-24 15:11:27 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 15:11:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 15:11:27 -==> Parameters: userType(String)
2019-05-24 15:11:27 -<==      Total: 4
2019-05-24 15:11:27 -耗时 : 38
2019-05-24 15:11:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 15:11:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 15:11:27 -==> Parameters: userState(String)
2019-05-24 15:11:27 -<==      Total: 2
2019-05-24 15:11:27 -耗时 : 35
2019-05-24 15:11:27 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 15:13:25 -请求地址 : http://localhost:8081/index
2019-05-24 15:13:25 -HTTP METHOD : GET
2019-05-24 15:13:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 15:13:25 -参数 : [{}]
2019-05-24 15:13:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 15:13:25 -==> Parameters: 1(Long)
2019-05-24 15:13:25 -<==      Total: 50
2019-05-24 15:13:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 15:13:25 -==> Parameters: 138(Long)
2019-05-24 15:13:25 -<==      Total: 1
2019-05-24 15:13:25 -耗时 : 192
2019-05-24 15:13:25 -返回值 : index_v1
2019-05-24 15:13:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 15:13:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 192(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 15:13:25.571(Timestamp)
2019-05-24 15:13:25 -请求地址 : http://localhost:8081/main
2019-05-24 15:13:25 -HTTP METHOD : GET
2019-05-24 15:13:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 15:13:25 -参数 : []
2019-05-24 15:13:25 -耗时 : 0
2019-05-24 15:13:25 -返回值 : main
2019-05-24 15:13:25 -<==    Updates: 1
2019-05-24 15:13:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 15:13:25 -HTTP METHOD : GET
2019-05-24 15:13:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 15:13:25 -参数 : []
2019-05-24 15:13:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 15:13:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 15:13:25 -<==      Total: 0
2019-05-24 15:13:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 15:13:25 -==> Parameters: 1(Long), 0(String)
2019-05-24 15:13:25 -<==      Total: 1
2019-05-24 15:13:25 -耗时 : 19
2019-05-24 15:13:25 -返回值 : com.bootdo.common.utils.PageUtils@51623b62
2019-05-24 15:13:25 -请求地址 : http://localhost:8081/main
2019-05-24 15:13:25 -HTTP METHOD : GET
2019-05-24 15:13:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 15:13:25 -参数 : []
2019-05-24 15:13:25 -耗时 : 1
2019-05-24 15:13:25 -返回值 : main
2019-05-24 15:13:29 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 15:13:29 -HTTP METHOD : GET
2019-05-24 15:13:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 15:13:29 -参数 : []
2019-05-24 15:13:29 -耗时 : 0
2019-05-24 15:13:29 -返回值 : /moneyList/moneyWZ
2019-05-24 15:13:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 15:13:29 -HTTP METHOD : GET
2019-05-24 15:13:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 15:13:29 -参数 : [userType]
2019-05-24 15:13:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 15:13:29 -==> Parameters: userType(String)
2019-05-24 15:13:29 -<==      Total: 4
2019-05-24 15:13:29 -耗时 : 16
2019-05-24 15:13:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 15:13:29 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 15:13:29 -HTTP METHOD : GET
2019-05-24 15:13:29 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 15:13:29 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=}, com.bootdo.elec.domain.ElecDO@15944045]
2019-05-24 15:13:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 15:13:29 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 15:13:29 -<==      Total: 2
2019-05-24 15:13:29 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 15:13:29 -==> Parameters: 
2019-05-24 15:13:29 -<==      Total: 1
2019-05-24 15:13:29 -耗时 : 77
2019-05-24 15:13:29 -返回值 : com.bootdo.common.utils.PageUtils@4cd006b2
2019-05-24 15:13:33 -请求地址 : http://localhost:8081/moneyList/moneyWZ/edit/9
2019-05-24 15:13:33 -HTTP METHOD : GET
2019-05-24 15:13:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.edit
2019-05-24 15:13:33 -参数 : [9, {}]
2019-05-24 15:13:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-05-24 15:13:33 -==> Parameters: 9(Long)
2019-05-24 15:13:33 -<==      Total: 1
2019-05-24 15:13:33 -耗时 : 126
2019-05-24 15:13:33 -返回值 : elec/elec/edit
2019-05-24 15:13:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 15:13:33 -HTTP METHOD : GET
2019-05-24 15:13:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 15:13:33 -参数 : [userType]
2019-05-24 15:13:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 15:13:33 -==> Parameters: userType(String)
2019-05-24 15:13:33 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-24 15:13:33 -HTTP METHOD : GET
2019-05-24 15:13:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 15:13:33 -参数 : [userState]
2019-05-24 15:13:33 -<==      Total: 4
2019-05-24 15:13:33 -耗时 : 6
2019-05-24 15:13:33 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 15:13:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 15:13:33 -==> Parameters: userState(String)
2019-05-24 15:13:33 -<==      Total: 2
2019-05-24 15:13:33 -耗时 : 13
2019-05-24 15:13:33 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 15:13:33 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-24 15:13:33 -HTTP METHOD : GET
2019-05-24 15:13:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 15:13:33 -参数 : [elecType]
2019-05-24 15:13:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 15:13:33 -==> Parameters: elecType(String)
2019-05-24 15:13:33 -<==      Total: 11
2019-05-24 15:13:33 -耗时 : 7
2019-05-24 15:13:33 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 15:23:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 271]
2019-05-24 15:53:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 704]
2019-05-24 15:57:49 -Validating all active sessions...
2019-05-24 15:57:49 -Finished session validation.  [1] sessions were stopped.
2019-05-24 16:14:21 -请求地址 : http://localhost:8081/login;JSESSIONID=1797b967-c5ea-490d-bba2-993fd040a25e
2019-05-24 16:14:21 -HTTP METHOD : GET
2019-05-24 16:14:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 16:14:21 -参数 : [{}]
2019-05-24 16:14:21 -耗时 : 1
2019-05-24 16:14:21 -返回值 : login
2019-05-24 16:14:21 -请求地址 : http://localhost:8081/login;JSESSIONID=1797b967-c5ea-490d-bba2-993fd040a25e
2019-05-24 16:14:21 -HTTP METHOD : GET
2019-05-24 16:14:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 16:14:21 -参数 : [{}]
2019-05-24 16:14:21 -耗时 : 1
2019-05-24 16:14:21 -返回值 : login
2019-05-24 16:14:21 -请求地址 : http://localhost:8081/getVerify
2019-05-24 16:14:21 -HTTP METHOD : GET
2019-05-24 16:14:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 16:14:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@fba35c8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4b1fb867]
2019-05-24 16:14:21 -7829
2019-05-24 16:14:21 -耗时 : 23
2019-05-24 16:14:21 -返回值 : null
2019-05-24 16:14:21 -请求地址 : http://localhost:8081/getVerify
2019-05-24 16:14:21 -HTTP METHOD : GET
2019-05-24 16:14:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 16:14:21 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@794a4f90, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1fb5f54e]
2019-05-24 16:14:21 -5899
2019-05-24 16:14:21 -耗时 : 19
2019-05-24 16:14:21 -返回值 : null
2019-05-24 16:14:27 -请求地址 : http://localhost:8081/login
2019-05-24 16:14:27 -HTTP METHOD : POST
2019-05-24 16:14:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 16:14:27 -参数 : [admin, 111111, 5899, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7bead169]
2019-05-24 16:14:27 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-24 16:14:27 -==> Parameters: admin(String)
2019-05-24 16:14:27 -<==      Total: 1
2019-05-24 16:14:27 -耗时 : 78
2019-05-24 16:14:27 -返回值 : {msg=操作成功, code=0}
2019-05-24 16:14:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 16:14:27 -==> Parameters: 1(Long), admin(String), 登录(String), 78(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 16:14:27.653(Timestamp)
2019-05-24 16:14:27 -请求地址 : http://localhost:8081/index
2019-05-24 16:14:27 -HTTP METHOD : GET
2019-05-24 16:14:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 16:14:27 -参数 : [{}]
2019-05-24 16:14:27 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 16:14:27 -==> Parameters: 1(Long)
2019-05-24 16:14:27 -<==    Updates: 1
2019-05-24 16:14:27 -<==      Total: 50
2019-05-24 16:14:27 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 16:14:27 -==> Parameters: 138(Long)
2019-05-24 16:14:27 -<==      Total: 1
2019-05-24 16:14:27 -耗时 : 59
2019-05-24 16:14:27 -返回值 : index_v1
2019-05-24 16:14:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 16:14:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 59(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 16:14:27.73(Timestamp)
2019-05-24 16:14:27 -<==    Updates: 1
2019-05-24 16:14:27 -请求地址 : http://localhost:8081/main
2019-05-24 16:14:27 -HTTP METHOD : GET
2019-05-24 16:14:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 16:14:27 -参数 : []
2019-05-24 16:14:27 -耗时 : 0
2019-05-24 16:14:27 -返回值 : main
2019-05-24 16:14:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 16:14:28 -HTTP METHOD : GET
2019-05-24 16:14:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 16:14:28 -参数 : []
2019-05-24 16:14:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 16:14:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 16:14:28 -<==      Total: 0
2019-05-24 16:14:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 16:14:28 -==> Parameters: 1(Long), 0(String)
2019-05-24 16:14:28 -<==      Total: 1
2019-05-24 16:14:28 -耗时 : 17
2019-05-24 16:14:28 -返回值 : com.bootdo.common.utils.PageUtils@171a6ca1
2019-05-24 16:14:28 -请求地址 : http://localhost:8081/main
2019-05-24 16:14:28 -HTTP METHOD : GET
2019-05-24 16:14:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 16:14:28 -参数 : []
2019-05-24 16:14:28 -耗时 : 1
2019-05-24 16:14:28 -返回值 : main
2019-05-24 16:14:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 16:14:34 -==> Parameters: 1(Long)
2019-05-24 16:14:34 -<==      Total: 94
2019-05-24 16:14:34 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 16:14:34 -HTTP METHOD : GET
2019-05-24 16:14:34 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 16:14:34 -参数 : []
2019-05-24 16:14:34 -耗时 : 0
2019-05-24 16:14:34 -返回值 : /moneyList/moneyWZ
2019-05-24 16:14:34 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 16:14:34 -HTTP METHOD : GET
2019-05-24 16:14:34 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:14:34 -参数 : [userType]
2019-05-24 16:14:34 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:14:34 -==> Parameters: userType(String)
2019-05-24 16:14:34 -<==      Total: 4
2019-05-24 16:14:34 -耗时 : 6
2019-05-24 16:14:34 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:14:34 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:14:34 -HTTP METHOD : GET
2019-05-24 16:14:34 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:14:34 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@7eab15d5]
2019-05-24 16:14:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:14:34 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 16:14:34 -<==      Total: 2
2019-05-24 16:14:34 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 16:14:34 -==> Parameters: 
2019-05-24 16:14:34 -<==      Total: 1
2019-05-24 16:14:34 -耗时 : 9
2019-05-24 16:14:34 -返回值 : com.bootdo.common.utils.PageUtils@3d7bf5d7
2019-05-24 16:14:43 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:14:43 -HTTP METHOD : GET
2019-05-24 16:14:43 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:14:43 -参数 : [{limit=10, offset=0, createTime=2019-05, userType=, userId=, queryType=2}, com.bootdo.elec.domain.ElecDO@4285766a]
2019-05-24 16:14:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? order by id asc limit ?, ? 
2019-05-24 16:14:43 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-05-24 16:14:43 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-05-24 16:14:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 16:14:43 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'     and `create_time` = ?                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?(String), null, 2019-05-24 16:14:43.931(Timestamp)
2019-05-24 16:14:43 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'     and `create_time` = ?                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'     and `create_time` = ?                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:30)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:63)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$73d6103f.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy173.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id`
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:239)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:362)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 127 common frames omitted
2019-05-24 16:14:44 -<==    Updates: 1
2019-05-24 16:14:44 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:14:44 -HTTP METHOD : GET
2019-05-24 16:14:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:14:44 -参数 : [{limit=10, offset=0, createTime=2019-05, userType=, userId=, queryType=2}, com.bootdo.elec.domain.ElecDO@34e1e2e4]
2019-05-24 16:14:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? order by id asc limit ?, ? 
2019-05-24 16:14:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 16:14:44 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'     and `create_time` = ?                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?(String), null, 2019-05-24 16:14:44.748(Timestamp)
2019-05-24 16:14:44 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'     and `create_time` = ?                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'     and `create_time` = ?                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:30)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:63)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$73d6103f.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy173.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id`
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:239)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:362)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 127 common frames omitted
2019-05-24 16:14:44 -<==    Updates: 1
2019-05-24 16:14:45 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:14:45 -HTTP METHOD : GET
2019-05-24 16:14:45 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:14:45 -参数 : [{limit=10, offset=0, createTime=2019-05, userType=, userId=, queryType=2}, com.bootdo.elec.domain.ElecDO@13394a53]
2019-05-24 16:14:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? order by id asc limit ?, ? 
2019-05-24 16:14:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 16:14:45 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'     and `create_time` = ?                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'     and `create_time` = ?                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:30)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:63)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$73d6103f.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy173.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id`
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:239)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:362)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 127 common frames omitted
2019-05-24 16:14:45 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'     and `create_time` = ?                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?(String), null, 2019-05-24 16:14:45.385(Timestamp)
2019-05-24 16:14:45 -<==    Updates: 1
2019-05-24 16:14:49 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:14:49 -HTTP METHOD : GET
2019-05-24 16:14:49 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:14:49 -参数 : [{limit=10, offset=0, createTime=2019-05, userType=, userId=, queryType=2}, com.bootdo.elec.domain.ElecDO@38aa7b56]
2019-05-24 16:14:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 `user_id` LIKE 'W%' and user_org = '2' and `create_time` = ? order by id asc limit ?, ? 
2019-05-24 16:14:49 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'     and `create_time` = ?                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'     and `create_time` = ?                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:30)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:63)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$73d6103f.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy173.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id`
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:239)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:362)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 127 common frames omitted
2019-05-24 16:14:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 16:14:49 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'     and `create_time` = ?                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2'
	   and `create_time` = ? 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?(String), null, 2019-05-24 16:14:49.714(Timestamp)
2019-05-24 16:14:49 -<==    Updates: 1
2019-05-24 16:14:55 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:14:55 -HTTP METHOD : GET
2019-05-24 16:14:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:14:55 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=2}, com.bootdo.elec.domain.ElecDO@7307a9f5]
2019-05-24 16:14:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:14:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 16:14:55 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:30)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:63)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$73d6103f.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy173.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id`
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:239)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:362)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 127 common frames omitted
2019-05-24 16:14:55 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?(String), null, 2019-05-24 16:14:55.011(Timestamp)
2019-05-24 16:14:55 -<==    Updates: 1
2019-05-24 16:14:55 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:14:55 -HTTP METHOD : GET
2019-05-24 16:14:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:14:55 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=2}, com.bootdo.elec.domain.ElecDO@201f59fd]
2019-05-24 16:14:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:14:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 16:14:55 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?(String), null, 2019-05-24 16:14:55.565(Timestamp)
2019-05-24 16:14:55 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:30)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:63)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$73d6103f.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy173.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id`
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:239)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:362)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 127 common frames omitted
2019-05-24 16:14:55 -<==    Updates: 1
2019-05-24 16:14:55 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:14:55 -HTTP METHOD : GET
2019-05-24 16:14:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:14:55 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=2}, com.bootdo.elec.domain.ElecDO@2099f8fb]
2019-05-24 16:14:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:14:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 16:14:55 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:30)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:63)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$73d6103f.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy173.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id`
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:239)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:362)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	... 127 common frames omitted
2019-05-24 16:14:55 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?(String), null, 2019-05-24 16:14:55.795(Timestamp)
2019-05-24 16:14:55 -<==    Updates: 1
2019-05-24 16:14:56 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:14:56 -HTTP METHOD : GET
2019-05-24 16:14:56 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:14:56 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=2}, com.bootdo.elec.domain.ElecDO@4659d929]
2019-05-24 16:14:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `elec_sum` < 0 `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:14:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 16:14:56 -
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:89)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:30)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:63)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$73d6103f.list(<generated>)
	at sun.reflect.GeneratedMethodAccessor196.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:725)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy173.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
Caused by: com.alibaba.druid.sql.parser.ParserException: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id`
	at com.alibaba.druid.sql.parser.SQLParser.printError(SQLParser.java:239)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:362)
	at com.alibaba.druid.sql.parser.SQLStatementParser.parseStatementList(SQLStatementParser.java:79)
	at com.alibaba.druid.wall.WallProvider.checkInternal(WallProvider.java:620)
	at com.alibaba.druid.wall.WallProvider.check(WallProvider.java:574)
	at com.alibaba.druid.wall.WallFilter.check(WallFilter.java:712)
	at com.alibaba.druid.wall.WallFilter.connection_prepareStatement(WallFilter.java:253)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.filter.FilterAdapter.connection_prepareStatement(FilterAdapter.java:928)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_prepareStatement(FilterEventAdapter.java:122)
	at com.alibaba.druid.filter.FilterChainImpl.connection_prepareStatement(FilterChainImpl.java:448)
	at com.alibaba.druid.proxy.jdbc.ConnectionProxyImpl.prepareStatement(ConnectionProxyImpl.java:342)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:331)
	at sun.reflect.GeneratedMethodAccessor132.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy173.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.GeneratedMethodAccessor141.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy101.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy130.list(Unknown Source)
	at com.bootdo.moneyList.service.impl.MoneyWZServiceImpl.list(MoneyWZServiceImpl.java:30)
	at com.bootdo.moneyList.controller.MoneyListWZController.list(MoneyListWZController.java:63)
	at com.bootdo.moneyList.controller.MoneyListWZController$$FastClassBySpringCGLIB$$c14fdd3f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyList.controller.MoneyListWZController$$EnhancerBySpringCGLIB$$73d6103f.list(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	... 69 common frames omitted
2019-05-24 16:14:56 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/moneyList/moneyWZ/list(String), org.springframework.jdbc.UncategorizedSQLException: 
### Error querying database.  Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
### The error may exist in file [D:\eclipse2018-work\bootdo\target\classes\mybatis\moneyList\MoneyWZMapper.xml]
### The error may involve com.bootdo.moneyList.dao.MoneyWZDao.list
### The error occurred while executing a query
### SQL: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec          WHERE   `elec_sum`   < 0                     `user_id`  LIKE  'W%'   and  user_org  = '2'                                                               order by id asc                      limit ?, ?
### Cause: java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?
; uncategorized SQLException; SQL state [null]; error code [0]; sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?; nested exception is java.sql.SQLException: sql injection violation, syntax error: syntax error, error in :' 
	  `user_id`  LIKE  'W%'   and  u',expect IDENTIFIER, actual IDENTIFIER `user_id` : select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT  t.`name`  FROM sys_dept  t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec
	 
    	 WHERE   `elec_sum`   < 0
	        
		    
	  `user_id`  LIKE  'W%'   and  user_org  = '2' 	  
	      		   
	      		     	  	
         
                order by id asc
			 
        
		 
			limit ?, ?(String), null, 2019-05-24 16:14:56.009(Timestamp)
2019-05-24 16:14:56 -<==    Updates: 1
2019-05-24 16:20:46 -Starting BootdoApplication on PC-201905091110 with PID 29396 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-24 16:20:47 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-24 16:20:47 -The following profiles are active: dev
2019-05-24 16:20:47 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Fri May 24 16:20:47 CST 2019]; root of context hierarchy
2019-05-24 16:20:52 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-24 16:20:58 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3ad55aa8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 16:20:58 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$2d2e894f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 16:21:01 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 16:21:02 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 16:21:02 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 16:21:02 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-24 16:21:02 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-24 16:21:02 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 16:21:02 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 16:21:02 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 16:21:02 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 16:21:04 -Tomcat initialized with port(s): 8081 (http)
2019-05-24 16:21:04 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-24 16:21:05 -Starting service [Tomcat]
2019-05-24 16:21:05 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-24 16:21:05 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-24 16:21:05 -Initializing Spring embedded WebApplicationContext
2019-05-24 16:21:05 -Root WebApplicationContext: initialization completed in 18533 ms
2019-05-24 16:21:08 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-24 16:21:08 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-24 16:21:08 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-24 16:21:08 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-24 16:21:08 -Filter xssFilter was not registered (disabled)
2019-05-24 16:21:08 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-24 16:21:08 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-24 16:21:08 -Servlet statViewServlet mapped to [/druid/*]
2019-05-24 16:21:08 -Servlet dispatcherServlet mapped to [/]
2019-05-24 16:21:12 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Fri May 24 16:20:47 CST 2019]; root of context hierarchy
2019-05-24 16:21:13 -Using default implementation for ThreadExecutor
2019-05-24 16:21:13 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-24 16:21:13 -Quartz Scheduler v.2.2.1 created.
2019-05-24 16:21:13 -RAMJobStore initialized.
2019-05-24 16:21:13 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-24 16:21:13 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-24 16:21:13 -Quartz scheduler version: 2.2.1
2019-05-24 16:21:13 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@163e8949
2019-05-24 16:21:13 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-24 16:21:13 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-24 16:21:16 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 16:21:16 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-24 16:21:16 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-24 16:21:16 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 16:21:16 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-24 16:21:16 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-24 16:21:16 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 16:21:16 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-24 16:21:16 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 16:21:16 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-24 16:21:16 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 16:21:16 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-24 16:21:16 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-24 16:21:16 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 16:21:16 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 16:21:16 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-24 16:21:16 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 16:21:16 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-24 16:21:16 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 16:21:16 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-24 16:21:16 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-24 16:21:16 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 16:21:16 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 16:21:16 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-24 16:21:16 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-24 16:21:16 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-24 16:21:16 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-24 16:21:16 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-24 16:21:16 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:16 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-24 16:21:16 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-24 16:21:16 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-24 16:21:16 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-24 16:21:16 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-24 16:21:16 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:16 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-24 16:21:16 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-24 16:21:16 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-24 16:21:16 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-24 16:21:16 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:16 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-24 16:21:16 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-24 16:21:16 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-24 16:21:16 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:16 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-24 16:21:16 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:16 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-24 16:21:16 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 16:21:16 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-24 16:21:16 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-24 16:21:16 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 16:21:16 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-24 16:21:16 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-24 16:21:16 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-24 16:21:16 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-24 16:21:16 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:16 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-24 16:21:16 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-24 16:21:16 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:16 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-24 16:21:16 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-24 16:21:16 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-24 16:21:16 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-24 16:21:16 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:16 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-24 16:21:16 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-24 16:21:16 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-24 16:21:16 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-24 16:21:16 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-24 16:21:16 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-24 16:21:16 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 16:21:16 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 16:21:16 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-24 16:21:16 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:16 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-24 16:21:16 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-24 16:21:16 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 16:21:16 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-24 16:21:16 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-24 16:21:16 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-24 16:21:16 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-24 16:21:16 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:16 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-24 16:21:16 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:16 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-24 16:21:16 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-24 16:21:16 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-24 16:21:16 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-24 16:21:16 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-24 16:21:16 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-24 16:21:16 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-24 16:21:16 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:16 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-24 16:21:16 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-24 16:21:16 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-24 16:21:16 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-24 16:21:16 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 16:21:16 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-24 16:21:16 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-24 16:21:16 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-24 16:21:16 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 16:21:16 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:16 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 16:21:16 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-24 16:21:16 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:16 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 16:21:16 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-24 16:21:16 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-24 16:21:16 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 16:21:16 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:16 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-24 16:21:16 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 16:21:16 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 16:21:16 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-24 16:21:16 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-24 16:21:16 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-24 16:21:16 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 16:21:16 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 16:21:16 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-24 16:21:16 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:16 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:16 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-24 16:21:16 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-24 16:21:16 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-24 16:21:16 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 16:21:16 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:16 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 16:21:16 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-24 16:21:16 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 16:21:16 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:16 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-24 16:21:16 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-24 16:21:16 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-24 16:21:16 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 16:21:16 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:16 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 16:21:16 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-24 16:21:16 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 16:21:16 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:16 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-24 16:21:16 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-24 16:21:16 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-24 16:21:17 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 16:21:17 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:17 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 16:21:17 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-24 16:21:17 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 16:21:17 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-24 16:21:17 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-24 16:21:17 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-24 16:21:17 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-24 16:21:17 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:17 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-24 16:21:17 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-24 16:21:17 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-24 16:21:17 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-24 16:21:17 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:17 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-24 16:21:17 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-24 16:21:17 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-24 16:21:17 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-24 16:21:17 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:17 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-24 16:21:17 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-24 16:21:17 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-24 16:21:17 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:17 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-24 16:21:17 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-24 16:21:17 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-24 16:21:17 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-24 16:21:17 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-24 16:21:17 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-24 16:21:17 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-24 16:21:17 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-24 16:21:17 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-24 16:21:17 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 16:21:17 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:17 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-24 16:21:17 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-24 16:21:17 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-24 16:21:17 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-24 16:21:17 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:17 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-24 16:21:17 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-24 16:21:17 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-24 16:21:17 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 16:21:17 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-24 16:21:17 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-24 16:21:17 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-24 16:21:17 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-24 16:21:17 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-24 16:21:17 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-24 16:21:17 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-24 16:21:17 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-24 16:21:17 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-24 16:21:17 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-24 16:21:17 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-24 16:21:17 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:17 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-24 16:21:17 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-24 16:21:17 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:17 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-24 16:21:17 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-24 16:21:17 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-24 16:21:17 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-24 16:21:17 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 16:21:17 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-24 16:21:17 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 16:21:17 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 16:21:17 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 16:21:17 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-24 16:21:17 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-24 16:21:17 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-24 16:21:17 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-24 16:21:17 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-24 16:21:17 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:17 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-24 16:21:17 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:17 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-24 16:21:17 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:17 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-24 16:21:17 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 16:21:17 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-24 16:21:17 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-24 16:21:17 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-24 16:21:17 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 16:21:17 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 16:21:17 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 16:21:17 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-24 16:21:17 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 16:21:17 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-24 16:21:17 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 16:21:17 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 16:21:17 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-24 16:21:17 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 16:21:17 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-24 16:21:17 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-24 16:21:17 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-24 16:21:17 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-24 16:21:17 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-24 16:21:17 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-24 16:21:18 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 16:21:18 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@70e9c95d: startup date [Fri May 24 16:20:47 CST 2019]; root of context hierarchy
2019-05-24 16:21:18 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 16:21:18 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 16:21:18 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 16:21:18 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-24 16:21:18 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-24 16:21:20 -Registering beans for JMX exposure on startup
2019-05-24 16:21:21 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-24 16:21:21 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-24 16:21:21 -Starting beans in phase 2147483647
2019-05-24 16:21:21 -Context refreshed
2019-05-24 16:21:21 -Found 1 custom documentation plugin(s)
2019-05-24 16:21:21 -Scanning for api listing references
2019-05-24 16:21:21 -Generating unique operation named: getCountDUsingPOST_1
2019-05-24 16:21:21 -Generating unique operation named: removeUsingPOST_1
2019-05-24 16:21:21 -Generating unique operation named: addUsingGET_1
2019-05-24 16:21:21 -Generating unique operation named: editUsingGET_1
2019-05-24 16:21:21 -Generating unique operation named: listUsingGET_1
2019-05-24 16:21:22 -Generating unique operation named: removeUsingPOST_2
2019-05-24 16:21:22 -Generating unique operation named: removeUsingPOST_3
2019-05-24 16:21:22 -Generating unique operation named: saveUsingPOST_1
2019-05-24 16:21:22 -Generating unique operation named: updateUsingGET_1
2019-05-24 16:21:22 -Generating unique operation named: updateUsingHEAD_1
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPOST_1
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPUT_1
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPATCH_1
2019-05-24 16:21:22 -Generating unique operation named: updateUsingDELETE_1
2019-05-24 16:21:22 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-24 16:21:22 -Generating unique operation named: updateUsingTRACE_1
2019-05-24 16:21:22 -Generating unique operation named: addUsingGET_2
2019-05-24 16:21:22 -Generating unique operation named: editUsingGET_2
2019-05-24 16:21:22 -Generating unique operation named: listUsingGET_2
2019-05-24 16:21:22 -Generating unique operation named: removeUsingPOST_4
2019-05-24 16:21:22 -Generating unique operation named: removeUsingPOST_5
2019-05-24 16:21:22 -Generating unique operation named: saveUsingPOST_2
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPOST_2
2019-05-24 16:21:22 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-24 16:21:22 -Generating unique operation named: addUsingGET_3
2019-05-24 16:21:22 -Generating unique operation named: editUsingGET_3
2019-05-24 16:21:22 -Generating unique operation named: listUsingGET_3
2019-05-24 16:21:22 -Generating unique operation named: removeUsingPOST_6
2019-05-24 16:21:22 -Generating unique operation named: removeUsingPOST_7
2019-05-24 16:21:22 -Generating unique operation named: saveUsingPOST_3
2019-05-24 16:21:22 -Generating unique operation named: updateUsingGET_2
2019-05-24 16:21:22 -Generating unique operation named: updateUsingHEAD_2
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPOST_3
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPUT_2
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPATCH_2
2019-05-24 16:21:22 -Generating unique operation named: updateUsingDELETE_2
2019-05-24 16:21:22 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-24 16:21:22 -Generating unique operation named: updateUsingTRACE_2
2019-05-24 16:21:22 -Generating unique operation named: addUsingGET_4
2019-05-24 16:21:22 -Generating unique operation named: editUsingGET_4
2019-05-24 16:21:22 -Generating unique operation named: listUsingGET_4
2019-05-24 16:21:22 -Generating unique operation named: removeUsingPOST_8
2019-05-24 16:21:22 -Generating unique operation named: removeUsingPOST_9
2019-05-24 16:21:22 -Generating unique operation named: saveUsingPOST_4
2019-05-24 16:21:22 -Generating unique operation named: updateUsingGET_3
2019-05-24 16:21:22 -Generating unique operation named: updateUsingHEAD_3
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPOST_4
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPUT_3
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPATCH_3
2019-05-24 16:21:22 -Generating unique operation named: updateUsingDELETE_3
2019-05-24 16:21:22 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-24 16:21:22 -Generating unique operation named: updateUsingTRACE_3
2019-05-24 16:21:22 -Generating unique operation named: ElecUsingGET_1
2019-05-24 16:21:22 -Generating unique operation named: addUsingGET_5
2019-05-24 16:21:22 -Generating unique operation named: editUsingGET_5
2019-05-24 16:21:22 -Generating unique operation named: listUsingGET_5
2019-05-24 16:21:22 -Generating unique operation named: removeUsingPOST_10
2019-05-24 16:21:22 -Generating unique operation named: removeUsingPOST_11
2019-05-24 16:21:22 -Generating unique operation named: saveUsingPOST_5
2019-05-24 16:21:22 -Generating unique operation named: updateUsingGET_4
2019-05-24 16:21:22 -Generating unique operation named: updateUsingHEAD_4
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPOST_5
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPUT_4
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPATCH_4
2019-05-24 16:21:22 -Generating unique operation named: updateUsingDELETE_4
2019-05-24 16:21:22 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-24 16:21:22 -Generating unique operation named: updateUsingTRACE_4
2019-05-24 16:21:22 -Generating unique operation named: editUsingGET_6
2019-05-24 16:21:22 -Generating unique operation named: listUsingGET_6
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPOST_6
2019-05-24 16:21:22 -Generating unique operation named: addUsingGET_6
2019-05-24 16:21:22 -Generating unique operation named: editUsingGET_7
2019-05-24 16:21:22 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-24 16:21:22 -Generating unique operation named: listUsingGET_7
2019-05-24 16:21:22 -Generating unique operation named: removeUsingPOST_12
2019-05-24 16:21:22 -Generating unique operation named: removeUsingPOST_13
2019-05-24 16:21:22 -Generating unique operation named: saveUsingPOST_6
2019-05-24 16:21:22 -Generating unique operation named: updateUsingGET_5
2019-05-24 16:21:22 -Generating unique operation named: updateUsingHEAD_5
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPOST_7
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPUT_5
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPATCH_5
2019-05-24 16:21:22 -Generating unique operation named: updateUsingDELETE_5
2019-05-24 16:21:22 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-24 16:21:22 -Generating unique operation named: updateUsingTRACE_5
2019-05-24 16:21:22 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-24 16:21:22 -Generating unique operation named: addUsingGET_7
2019-05-24 16:21:22 -Generating unique operation named: editUsingGET_8
2019-05-24 16:21:22 -Generating unique operation named: listUsingGET_8
2019-05-24 16:21:22 -Generating unique operation named: removeUsingPOST_14
2019-05-24 16:21:22 -Generating unique operation named: removeUsingPOST_15
2019-05-24 16:21:22 -Generating unique operation named: saveUsingPOST_7
2019-05-24 16:21:22 -Generating unique operation named: updateUsingGET_6
2019-05-24 16:21:22 -Generating unique operation named: updateUsingHEAD_6
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPOST_8
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPUT_6
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPATCH_6
2019-05-24 16:21:22 -Generating unique operation named: updateUsingDELETE_6
2019-05-24 16:21:22 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-24 16:21:22 -Generating unique operation named: updateUsingTRACE_6
2019-05-24 16:21:22 -Generating unique operation named: addUsingGET_8
2019-05-24 16:21:22 -Generating unique operation named: editUsingGET_9
2019-05-24 16:21:22 -Generating unique operation named: listUsingGET_9
2019-05-24 16:21:22 -Generating unique operation named: removeUsingPOST_16
2019-05-24 16:21:22 -Generating unique operation named: removeUsingPOST_17
2019-05-24 16:21:22 -Generating unique operation named: saveUsingPOST_8
2019-05-24 16:21:22 -Generating unique operation named: updateUsingGET_7
2019-05-24 16:21:22 -Generating unique operation named: updateUsingHEAD_7
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPOST_9
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPUT_7
2019-05-24 16:21:22 -Generating unique operation named: updateUsingPATCH_7
2019-05-24 16:21:22 -Generating unique operation named: updateUsingDELETE_7
2019-05-24 16:21:22 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-24 16:21:22 -Generating unique operation named: updateUsingTRACE_7
2019-05-24 16:21:23 -Generating unique operation named: addUsingGET_9
2019-05-24 16:21:23 -Generating unique operation named: editUsingGET_10
2019-05-24 16:21:23 -Generating unique operation named: infoUsingGET_1
2019-05-24 16:21:23 -Generating unique operation named: infoUsingHEAD_1
2019-05-24 16:21:23 -Generating unique operation named: infoUsingPOST_1
2019-05-24 16:21:23 -Generating unique operation named: infoUsingPUT_1
2019-05-24 16:21:23 -Generating unique operation named: infoUsingPATCH_1
2019-05-24 16:21:23 -Generating unique operation named: infoUsingDELETE_1
2019-05-24 16:21:23 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-24 16:21:23 -Generating unique operation named: infoUsingTRACE_1
2019-05-24 16:21:23 -Generating unique operation named: listUsingGET_10
2019-05-24 16:21:23 -Generating unique operation named: removeUsingPOST_18
2019-05-24 16:21:23 -Generating unique operation named: removeUsingPOST_19
2019-05-24 16:21:23 -Generating unique operation named: saveUsingPOST_9
2019-05-24 16:21:23 -Generating unique operation named: updateUsingPOST_10
2019-05-24 16:21:23 -Generating unique operation named: listUsingGET_11
2019-05-24 16:21:23 -Generating unique operation named: removeUsingPOST_20
2019-05-24 16:21:23 -Generating unique operation named: welcomeUsingGET_1
2019-05-24 16:21:23 -Generating unique operation named: addUsingGET_10
2019-05-24 16:21:23 -Generating unique operation named: editUsingGET_11
2019-05-24 16:21:23 -Generating unique operation named: listUsingGET_12
2019-05-24 16:21:23 -Generating unique operation named: removeUsingPOST_21
2019-05-24 16:21:23 -Generating unique operation named: saveUsingPOST_10
2019-05-24 16:21:23 -Generating unique operation named: treeUsingGET_1
2019-05-24 16:21:23 -Generating unique operation named: treeUsingGET_2
2019-05-24 16:21:23 -Generating unique operation named: updateUsingPOST_11
2019-05-24 16:21:23 -Generating unique operation named: addUsingGET_11
2019-05-24 16:21:23 -Generating unique operation named: editUsingGET_12
2019-05-24 16:21:23 -Generating unique operation named: listUsingGET_13
2019-05-24 16:21:23 -Generating unique operation named: removeUsingPOST_22
2019-05-24 16:21:23 -Generating unique operation named: removeUsingPOST_23
2019-05-24 16:21:23 -Generating unique operation named: updateUsingPOST_12
2019-05-24 16:21:23 -Generating unique operation named: addUsingGET_12
2019-05-24 16:21:23 -Generating unique operation named: editUsingGET_13
2019-05-24 16:21:23 -Generating unique operation named: listUsingGET_14
2019-05-24 16:21:23 -Generating unique operation named: removeUsingPOST_24
2019-05-24 16:21:23 -Generating unique operation named: removeUsingPOST_25
2019-05-24 16:21:23 -Generating unique operation named: saveUsingPOST_11
2019-05-24 16:21:23 -Generating unique operation named: updateUsingGET_8
2019-05-24 16:21:23 -Generating unique operation named: updateUsingHEAD_8
2019-05-24 16:21:23 -Generating unique operation named: updateUsingPOST_13
2019-05-24 16:21:23 -Generating unique operation named: updateUsingPUT_8
2019-05-24 16:21:23 -Generating unique operation named: updateUsingPATCH_8
2019-05-24 16:21:23 -Generating unique operation named: updateUsingDELETE_8
2019-05-24 16:21:23 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-24 16:21:23 -Generating unique operation named: updateUsingTRACE_8
2019-05-24 16:21:23 -Generating unique operation named: addUsingGET_13
2019-05-24 16:21:23 -Generating unique operation named: editUsingGET_14
2019-05-24 16:21:23 -Generating unique operation named: listUsingGET_15
2019-05-24 16:21:23 -Generating unique operation named: printEditUsingGET_1
2019-05-24 16:21:23 -Generating unique operation named: removeUsingPOST_26
2019-05-24 16:21:23 -Generating unique operation named: removeUsingPOST_27
2019-05-24 16:21:23 -Generating unique operation named: saveUsingPOST_12
2019-05-24 16:21:23 -Generating unique operation named: updateUsingGET_9
2019-05-24 16:21:23 -Generating unique operation named: updateUsingHEAD_9
2019-05-24 16:21:23 -Generating unique operation named: updateUsingPOST_14
2019-05-24 16:21:23 -Generating unique operation named: updateUsingPUT_9
2019-05-24 16:21:23 -Generating unique operation named: updateUsingPATCH_9
2019-05-24 16:21:23 -Generating unique operation named: updateUsingDELETE_9
2019-05-24 16:21:23 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-24 16:21:23 -Generating unique operation named: updateUsingTRACE_9
2019-05-24 16:21:23 -Generating unique operation named: addUsingGET_14
2019-05-24 16:21:23 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-24 16:21:23 -Generating unique operation named: editUsingGET_15
2019-05-24 16:21:23 -Generating unique operation named: listUsingGET_16
2019-05-24 16:21:23 -Generating unique operation named: saveUsingPOST_13
2019-05-24 16:21:23 -Generating unique operation named: saveUsingPOST_14
2019-05-24 16:21:23 -Generating unique operation named: updateUsingPOST_15
2019-05-24 16:21:23 -Generating unique operation named: listUsingGET_17
2019-05-24 16:21:23 -Generating unique operation named: listUsingHEAD_1
2019-05-24 16:21:23 -Generating unique operation named: listUsingPOST_1
2019-05-24 16:21:23 -Generating unique operation named: listUsingPUT_1
2019-05-24 16:21:23 -Generating unique operation named: listUsingPATCH_1
2019-05-24 16:21:23 -Generating unique operation named: listUsingDELETE_1
2019-05-24 16:21:23 -Generating unique operation named: listUsingOPTIONS_1
2019-05-24 16:21:23 -Generating unique operation named: listUsingTRACE_1
2019-05-24 16:21:23 -Generating unique operation named: countDDUsingGET_1
2019-05-24 16:21:23 -Generating unique operation named: exportDDUsingGET_1
2019-05-24 16:21:23 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-24 16:21:24 -Generating unique operation named: addUsingGET_15
2019-05-24 16:21:24 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-24 16:21:24 -Generating unique operation named: editUsingGET_16
2019-05-24 16:21:24 -Generating unique operation named: listUsingGET_18
2019-05-24 16:21:24 -Generating unique operation named: removeUsingPOST_28
2019-05-24 16:21:24 -Generating unique operation named: saveUsingPOST_15
2019-05-24 16:21:24 -Generating unique operation named: treeUsingGET_3
2019-05-24 16:21:24 -Generating unique operation named: treeViewUsingGET_1
2019-05-24 16:21:24 -Generating unique operation named: updateUsingPOST_16
2019-05-24 16:21:24 -Generating unique operation named: addUsingGET_16
2019-05-24 16:21:24 -Generating unique operation named: editUsingGET_17
2019-05-24 16:21:24 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-24 16:21:24 -Generating unique operation named: listUsingGET_19
2019-05-24 16:21:24 -Generating unique operation named: removeUsingPOST_29
2019-05-24 16:21:24 -Generating unique operation named: removeUsingPOST_30
2019-05-24 16:21:24 -Generating unique operation named: saveUsingPOST_16
2019-05-24 16:21:24 -Generating unique operation named: updateUsingGET_10
2019-05-24 16:21:24 -Generating unique operation named: updateUsingHEAD_10
2019-05-24 16:21:24 -Generating unique operation named: updateUsingPOST_17
2019-05-24 16:21:24 -Generating unique operation named: updateUsingPUT_10
2019-05-24 16:21:24 -Generating unique operation named: updateUsingPATCH_10
2019-05-24 16:21:24 -Generating unique operation named: updateUsingDELETE_10
2019-05-24 16:21:24 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-24 16:21:24 -Generating unique operation named: updateUsingTRACE_10
2019-05-24 16:21:24 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-24 16:21:24 -Generating unique operation named: addUsingGET_17
2019-05-24 16:21:24 -Generating unique operation named: editUsingGET_18
2019-05-24 16:21:24 -Generating unique operation named: listUsingGET_20
2019-05-24 16:21:24 -Generating unique operation named: removeUsingPOST_31
2019-05-24 16:21:24 -Generating unique operation named: removeUsingPOST_32
2019-05-24 16:21:24 -Generating unique operation named: saveUsingPOST_17
2019-05-24 16:21:24 -Generating unique operation named: updateUsingGET_11
2019-05-24 16:21:24 -Generating unique operation named: updateUsingHEAD_11
2019-05-24 16:21:24 -Generating unique operation named: updateUsingPOST_18
2019-05-24 16:21:24 -Generating unique operation named: updateUsingPUT_11
2019-05-24 16:21:24 -Generating unique operation named: updateUsingPATCH_11
2019-05-24 16:21:24 -Generating unique operation named: updateUsingDELETE_11
2019-05-24 16:21:24 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-24 16:21:24 -Generating unique operation named: updateUsingTRACE_11
2019-05-24 16:21:24 -Generating unique operation named: addUsingGET_18
2019-05-24 16:21:24 -Generating unique operation named: editUsingGET_19
2019-05-24 16:21:24 -Generating unique operation named: listUsingGET_21
2019-05-24 16:21:24 -Generating unique operation named: removeUsingPOST_33
2019-05-24 16:21:24 -Generating unique operation named: removeUsingPOST_34
2019-05-24 16:21:24 -Generating unique operation named: saveUsingPOST_18
2019-05-24 16:21:24 -Generating unique operation named: updateUsingGET_12
2019-05-24 16:21:24 -Generating unique operation named: updateUsingHEAD_12
2019-05-24 16:21:24 -Generating unique operation named: updateUsingPOST_19
2019-05-24 16:21:24 -Generating unique operation named: updateUsingPUT_12
2019-05-24 16:21:24 -Generating unique operation named: updateUsingPATCH_12
2019-05-24 16:21:24 -Generating unique operation named: updateUsingDELETE_12
2019-05-24 16:21:24 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-24 16:21:24 -Generating unique operation named: updateUsingTRACE_12
2019-05-24 16:21:24 -Starting Quartz Scheduler now
2019-05-24 16:21:24 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-24 16:21:24 -Starting...
2019-05-24 16:21:24 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-24 16:21:24 -Started.
2019-05-24 16:21:24 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-24 16:21:24 -Using a shared selector for servlet write/read
2019-05-24 16:21:24 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-24 16:21:24 -Started BootdoApplication in 39.102 seconds (JVM running for 40.133)
2019-05-24 16:21:24 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-24 16:21:25 -==> Parameters: 
2019-05-24 16:21:25 -<==      Total: 1
2019-05-24 16:21:58 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-24 16:21:58 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-24 16:21:58 -FrameworkServlet 'dispatcherServlet': initialization completed in 57 ms
2019-05-24 16:21:58 -Enabling session validation scheduler...
2019-05-24 16:21:58 -请求地址 : http://localhost:8081/login;JSESSIONID=bc211323-63f9-4e84-b443-afcad01bacaa
2019-05-24 16:21:58 -HTTP METHOD : GET
2019-05-24 16:21:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 16:21:58 -参数 : [{}]
2019-05-24 16:21:58 -耗时 : 6
2019-05-24 16:21:58 -返回值 : login
2019-05-24 16:21:59 -请求地址 : http://localhost:8081/getVerify
2019-05-24 16:21:59 -HTTP METHOD : GET
2019-05-24 16:21:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 16:21:59 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@471b6ad9, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4324f6e2]
2019-05-24 16:22:04 -9377
2019-05-24 16:22:04 -耗时 : 4977
2019-05-24 16:22:04 -返回值 : null
2019-05-24 16:22:08 -请求地址 : http://localhost:8081/login
2019-05-24 16:22:08 -HTTP METHOD : POST
2019-05-24 16:22:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 16:22:08 -参数 : [admin, 111111, 9377, org.apache.shiro.web.servlet.ShiroHttpServletRequest@ececbbd]
2019-05-24 16:22:09 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-24 16:22:09 -==> Parameters: admin(String)
2019-05-24 16:22:09 -<==      Total: 1
2019-05-24 16:22:09 -耗时 : 205
2019-05-24 16:22:09 -返回值 : {msg=操作成功, code=0}
2019-05-24 16:22:09 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-24 16:22:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 16:22:09 -==> Parameters: 1(Long), admin(String), 登录(String), 206(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 16:22:09.34(Timestamp)
2019-05-24 16:22:09 -<==    Updates: 1
2019-05-24 16:22:09 -请求地址 : http://localhost:8081/index
2019-05-24 16:22:09 -HTTP METHOD : GET
2019-05-24 16:22:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 16:22:09 -参数 : [{}]
2019-05-24 16:22:09 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 16:22:09 -==> Parameters: 1(Long)
2019-05-24 16:22:09 -<==      Total: 50
2019-05-24 16:22:09 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 16:22:09 -==> Parameters: 138(Long)
2019-05-24 16:22:09 -<==      Total: 1
2019-05-24 16:22:09 -耗时 : 329
2019-05-24 16:22:09 -返回值 : index_v1
2019-05-24 16:22:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 16:22:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 329(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 16:22:10.119(Timestamp)
2019-05-24 16:22:10 -<==    Updates: 1
2019-05-24 16:22:10 -请求地址 : http://localhost:8081/main
2019-05-24 16:22:10 -HTTP METHOD : GET
2019-05-24 16:22:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 16:22:10 -参数 : []
2019-05-24 16:22:10 -耗时 : 1
2019-05-24 16:22:10 -返回值 : main
2019-05-24 16:22:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 16:22:10 -HTTP METHOD : GET
2019-05-24 16:22:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 16:22:10 -参数 : []
2019-05-24 16:22:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 16:22:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 16:22:10 -<==      Total: 0
2019-05-24 16:22:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 16:22:10 -==> Parameters: 1(Long), 0(String)
2019-05-24 16:22:10 -<==      Total: 1
2019-05-24 16:22:10 -耗时 : 56
2019-05-24 16:22:10 -返回值 : com.bootdo.common.utils.PageUtils@44ef49f5
2019-05-24 16:22:10 -请求地址 : http://localhost:8081/main
2019-05-24 16:22:10 -HTTP METHOD : GET
2019-05-24 16:22:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 16:22:10 -参数 : []
2019-05-24 16:22:10 -耗时 : 1
2019-05-24 16:22:10 -返回值 : main
2019-05-24 16:22:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 16:22:16 -==> Parameters: 1(Long)
2019-05-24 16:22:16 -<==      Total: 94
2019-05-24 16:22:16 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 16:22:16 -HTTP METHOD : GET
2019-05-24 16:22:16 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 16:22:16 -参数 : []
2019-05-24 16:22:16 -耗时 : 0
2019-05-24 16:22:16 -返回值 : /moneyList/moneyWZ
2019-05-24 16:22:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 16:22:17 -HTTP METHOD : GET
2019-05-24 16:22:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:22:17 -参数 : [userType]
2019-05-24 16:22:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:22:17 -==> Parameters: userType(String)
2019-05-24 16:22:17 -<==      Total: 4
2019-05-24 16:22:17 -耗时 : 34
2019-05-24 16:22:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:22:17 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:22:17 -HTTP METHOD : GET
2019-05-24 16:22:17 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:22:17 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@65c0b3c7]
2019-05-24 16:22:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:22:17 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 16:22:17 -<==      Total: 2
2019-05-24 16:22:17 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 16:22:17 -==> Parameters: 
2019-05-24 16:22:17 -<==      Total: 1
2019-05-24 16:22:17 -耗时 : 140
2019-05-24 16:22:17 -返回值 : com.bootdo.common.utils.PageUtils@6d506b0d
2019-05-24 16:22:17 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-05-24 16:22:19 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:22:19 -HTTP METHOD : GET
2019-05-24 16:22:19 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:22:19 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=2}, com.bootdo.elec.domain.ElecDO@6fefc470]
2019-05-24 16:22:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `elec_sum` < 0 order by id asc limit ?, ? 
2019-05-24 16:22:19 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 16:22:19 -<==      Total: 1
2019-05-24 16:22:19 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `elec_sum` < 0 
2019-05-24 16:22:19 -==> Parameters: 
2019-05-24 16:22:19 -<==      Total: 1
2019-05-24 16:22:19 -耗时 : 13
2019-05-24 16:22:19 -返回值 : com.bootdo.common.utils.PageUtils@2c61c777
2019-05-24 16:22:31 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:22:31 -HTTP METHOD : GET
2019-05-24 16:22:31 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:22:31 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@3077f41d]
2019-05-24 16:22:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:22:31 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 16:22:31 -<==      Total: 2
2019-05-24 16:22:31 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 16:22:31 -==> Parameters: 
2019-05-24 16:22:31 -<==      Total: 1
2019-05-24 16:22:31 -耗时 : 14
2019-05-24 16:22:31 -返回值 : com.bootdo.common.utils.PageUtils@15d71988
2019-05-24 16:22:34 -请求地址 : http://localhost:8081/moneyList/moneyWZ/edit/9
2019-05-24 16:22:34 -HTTP METHOD : GET
2019-05-24 16:22:34 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.edit
2019-05-24 16:22:34 -参数 : [9, {}]
2019-05-24 16:22:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-05-24 16:22:34 -==> Parameters: 9(Long)
2019-05-24 16:22:34 -<==      Total: 1
2019-05-24 16:22:34 -耗时 : 14
2019-05-24 16:22:34 -返回值 : elec/elec/edit
2019-05-24 16:22:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 16:22:35 -HTTP METHOD : GET
2019-05-24 16:22:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:22:35 -参数 : [userType]
2019-05-24 16:22:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:22:35 -==> Parameters: userType(String)
2019-05-24 16:22:35 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-24 16:22:35 -HTTP METHOD : GET
2019-05-24 16:22:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:22:35 -参数 : [userState]
2019-05-24 16:22:35 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-24 16:22:35 -HTTP METHOD : GET
2019-05-24 16:22:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:22:35 -参数 : [elecType]
2019-05-24 16:22:35 -<==      Total: 4
2019-05-24 16:22:35 -耗时 : 14
2019-05-24 16:22:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:22:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:22:35 -==> Parameters: userState(String)
2019-05-24 16:22:35 -<==      Total: 2
2019-05-24 16:22:35 -耗时 : 23
2019-05-24 16:22:35 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:22:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:22:35 -==> Parameters: elecType(String)
2019-05-24 16:22:35 -<==      Total: 11
2019-05-24 16:22:35 -耗时 : 66
2019-05-24 16:22:35 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:22:38 -请求地址 : http://localhost:8081/moneyList/moneyWZ/add
2019-05-24 16:22:38 -HTTP METHOD : GET
2019-05-24 16:22:38 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.add
2019-05-24 16:22:38 -参数 : []
2019-05-24 16:22:38 -耗时 : 0
2019-05-24 16:22:38 -返回值 : elec/elec/add
2019-05-24 16:22:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 16:22:38 -HTTP METHOD : GET
2019-05-24 16:22:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:22:38 -参数 : [userType]
2019-05-24 16:22:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:22:38 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-24 16:22:38 -HTTP METHOD : GET
2019-05-24 16:22:38 -==> Parameters: userType(String)
2019-05-24 16:22:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:22:38 -参数 : [userState]
2019-05-24 16:22:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:22:38 -<==      Total: 4
2019-05-24 16:22:38 -耗时 : 7
2019-05-24 16:22:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:22:38 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-24 16:22:38 -HTTP METHOD : GET
2019-05-24 16:22:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:22:38 -参数 : [elecType]
2019-05-24 16:22:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:22:38 -==> Parameters: userState(String)
2019-05-24 16:22:38 -==> Parameters: elecType(String)
2019-05-24 16:22:38 -<==      Total: 2
2019-05-24 16:22:38 -耗时 : 12
2019-05-24 16:22:38 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:22:38 -<==      Total: 11
2019-05-24 16:22:38 -耗时 : 8
2019-05-24 16:22:38 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:28:37 -请求地址 : http://localhost:8081/index
2019-05-24 16:28:37 -HTTP METHOD : GET
2019-05-24 16:28:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 16:28:37 -参数 : [{}]
2019-05-24 16:28:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 16:28:37 -==> Parameters: 1(Long)
2019-05-24 16:28:37 -<==      Total: 50
2019-05-24 16:28:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 16:28:37 -==> Parameters: 138(Long)
2019-05-24 16:28:37 -<==      Total: 1
2019-05-24 16:28:37 -耗时 : 27
2019-05-24 16:28:37 -返回值 : index_v1
2019-05-24 16:28:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 16:28:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 16:28:37.671(Timestamp)
2019-05-24 16:28:37 -<==    Updates: 1
2019-05-24 16:28:37 -请求地址 : http://localhost:8081/main
2019-05-24 16:28:37 -HTTP METHOD : GET
2019-05-24 16:28:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 16:28:37 -参数 : []
2019-05-24 16:28:37 -耗时 : 0
2019-05-24 16:28:37 -返回值 : main
2019-05-24 16:28:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 16:28:38 -HTTP METHOD : GET
2019-05-24 16:28:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 16:28:38 -参数 : []
2019-05-24 16:28:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 16:28:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 16:28:38 -<==      Total: 0
2019-05-24 16:28:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 16:28:38 -==> Parameters: 1(Long), 0(String)
2019-05-24 16:28:38 -<==      Total: 1
2019-05-24 16:28:38 -耗时 : 28
2019-05-24 16:28:38 -返回值 : com.bootdo.common.utils.PageUtils@f2d515a
2019-05-24 16:28:38 -请求地址 : http://localhost:8081/main
2019-05-24 16:28:38 -HTTP METHOD : GET
2019-05-24 16:28:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 16:28:38 -参数 : []
2019-05-24 16:28:38 -耗时 : 1
2019-05-24 16:28:38 -返回值 : main
2019-05-24 16:28:40 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 16:28:40 -HTTP METHOD : GET
2019-05-24 16:28:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 16:28:40 -参数 : []
2019-05-24 16:28:40 -耗时 : 1
2019-05-24 16:28:40 -返回值 : /moneyList/moneyWZ
2019-05-24 16:28:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 16:28:40 -HTTP METHOD : GET
2019-05-24 16:28:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:28:40 -参数 : [userType]
2019-05-24 16:28:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:28:40 -==> Parameters: userType(String)
2019-05-24 16:28:40 -<==      Total: 4
2019-05-24 16:28:40 -耗时 : 5
2019-05-24 16:28:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:28:40 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:28:40 -HTTP METHOD : GET
2019-05-24 16:28:40 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:28:40 -参数 : [{limit=1, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@4ee8b9d5]
2019-05-24 16:28:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:28:40 -==> Parameters: 0(Integer), 1(Integer)
2019-05-24 16:28:40 -<==      Total: 1
2019-05-24 16:28:40 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 16:28:40 -==> Parameters: 
2019-05-24 16:28:40 -<==      Total: 1
2019-05-24 16:28:40 -耗时 : 7
2019-05-24 16:28:40 -返回值 : com.bootdo.common.utils.PageUtils@2bc64ff4
2019-05-24 16:28:42 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:28:42 -HTTP METHOD : GET
2019-05-24 16:28:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:28:42 -参数 : [{limit=1, offset=1, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@69a66f04]
2019-05-24 16:28:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:28:42 -==> Parameters: 1(Integer), 1(Integer)
2019-05-24 16:28:42 -<==      Total: 1
2019-05-24 16:28:42 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 16:28:42 -==> Parameters: 
2019-05-24 16:28:42 -<==      Total: 1
2019-05-24 16:28:42 -耗时 : 11
2019-05-24 16:28:42 -返回值 : com.bootdo.common.utils.PageUtils@5a2ddba1
2019-05-24 16:28:43 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:28:43 -HTTP METHOD : GET
2019-05-24 16:28:43 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:28:43 -参数 : [{limit=1, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@1da881a5]
2019-05-24 16:28:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:28:43 -==> Parameters: 0(Integer), 1(Integer)
2019-05-24 16:28:43 -<==      Total: 1
2019-05-24 16:28:43 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 16:28:43 -==> Parameters: 
2019-05-24 16:28:43 -<==      Total: 1
2019-05-24 16:28:43 -耗时 : 9
2019-05-24 16:28:43 -返回值 : com.bootdo.common.utils.PageUtils@3f4473fe
2019-05-24 16:28:55 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:28:55 -HTTP METHOD : GET
2019-05-24 16:28:55 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:28:55 -参数 : [{limit=1, offset=1, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@9ae947e]
2019-05-24 16:28:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:28:55 -==> Parameters: 1(Integer), 1(Integer)
2019-05-24 16:28:55 -<==      Total: 1
2019-05-24 16:28:55 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 16:28:55 -==> Parameters: 
2019-05-24 16:28:55 -<==      Total: 1
2019-05-24 16:28:55 -耗时 : 10
2019-05-24 16:28:55 -返回值 : com.bootdo.common.utils.PageUtils@1fb44dd2
2019-05-24 16:29:19 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-24 16:29:21 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:29:21 -HTTP METHOD : GET
2019-05-24 16:29:21 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:29:21 -参数 : [{limit=1, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@426e6b7c]
2019-05-24 16:29:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:29:21 -==> Parameters: 0(Integer), 1(Integer)
2019-05-24 16:29:21 -<==      Total: 1
2019-05-24 16:29:21 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 16:29:21 -==> Parameters: 
2019-05-24 16:29:21 -<==      Total: 1
2019-05-24 16:29:21 -耗时 : 8
2019-05-24 16:29:21 -返回值 : com.bootdo.common.utils.PageUtils@48f660c2
2019-05-24 16:29:33 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:29:33 -HTTP METHOD : GET
2019-05-24 16:29:33 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:29:33 -参数 : [{limit=1, offset=1, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@642ae491]
2019-05-24 16:29:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:29:33 -==> Parameters: 1(Integer), 1(Integer)
2019-05-24 16:29:33 -<==      Total: 1
2019-05-24 16:29:33 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 16:29:33 -==> Parameters: 
2019-05-24 16:29:33 -<==      Total: 1
2019-05-24 16:29:33 -耗时 : 8
2019-05-24 16:29:33 -返回值 : com.bootdo.common.utils.PageUtils@159b9538
2019-05-24 16:29:36 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:29:36 -HTTP METHOD : GET
2019-05-24 16:29:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:29:36 -参数 : [{limit=1, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@66b8681a]
2019-05-24 16:29:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:29:36 -==> Parameters: 0(Integer), 1(Integer)
2019-05-24 16:29:36 -<==      Total: 1
2019-05-24 16:29:36 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 16:29:36 -==> Parameters: 
2019-05-24 16:29:36 -<==      Total: 1
2019-05-24 16:29:36 -耗时 : 9
2019-05-24 16:29:36 -返回值 : com.bootdo.common.utils.PageUtils@84bcfaf
2019-05-24 16:32:30 -请求地址 : http://localhost:8081/index
2019-05-24 16:32:30 -HTTP METHOD : GET
2019-05-24 16:32:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 16:32:30 -参数 : [{}]
2019-05-24 16:32:30 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 16:32:30 -==> Parameters: 1(Long)
2019-05-24 16:32:30 -<==      Total: 50
2019-05-24 16:32:30 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 16:32:30 -==> Parameters: 138(Long)
2019-05-24 16:32:30 -<==      Total: 1
2019-05-24 16:32:30 -耗时 : 89
2019-05-24 16:32:30 -返回值 : index_v1
2019-05-24 16:32:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 16:32:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 89(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 16:32:30.155(Timestamp)
2019-05-24 16:32:30 -<==    Updates: 1
2019-05-24 16:32:30 -请求地址 : http://localhost:8081/main
2019-05-24 16:32:30 -HTTP METHOD : GET
2019-05-24 16:32:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 16:32:30 -参数 : []
2019-05-24 16:32:30 -耗时 : 0
2019-05-24 16:32:30 -返回值 : main
2019-05-24 16:32:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 16:32:30 -HTTP METHOD : GET
2019-05-24 16:32:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 16:32:30 -参数 : []
2019-05-24 16:32:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 16:32:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 16:32:30 -<==      Total: 0
2019-05-24 16:32:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 16:32:30 -==> Parameters: 1(Long), 0(String)
2019-05-24 16:32:30 -<==      Total: 1
2019-05-24 16:32:30 -耗时 : 7
2019-05-24 16:32:30 -返回值 : com.bootdo.common.utils.PageUtils@1d432e53
2019-05-24 16:32:30 -请求地址 : http://localhost:8081/main
2019-05-24 16:32:30 -HTTP METHOD : GET
2019-05-24 16:32:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 16:32:30 -参数 : []
2019-05-24 16:32:30 -耗时 : 0
2019-05-24 16:32:30 -返回值 : main
2019-05-24 16:32:32 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 16:32:32 -==> Parameters: 1(Long)
2019-05-24 16:32:32 -<==      Total: 94
2019-05-24 16:32:32 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 16:32:32 -HTTP METHOD : GET
2019-05-24 16:32:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 16:32:32 -参数 : []
2019-05-24 16:32:32 -耗时 : 0
2019-05-24 16:32:32 -返回值 : /moneyList/moneyWZ
2019-05-24 16:32:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 16:32:32 -HTTP METHOD : GET
2019-05-24 16:32:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:32:32 -参数 : [userType]
2019-05-24 16:32:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:32:32 -==> Parameters: userType(String)
2019-05-24 16:32:32 -<==      Total: 4
2019-05-24 16:32:32 -耗时 : 5
2019-05-24 16:32:32 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:32:32 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:32:32 -HTTP METHOD : GET
2019-05-24 16:32:32 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:32:32 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@7972d72b]
2019-05-24 16:32:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:32:32 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 16:32:32 -<==      Total: 2
2019-05-24 16:32:32 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 16:32:32 -==> Parameters: 
2019-05-24 16:32:32 -<==      Total: 1
2019-05-24 16:32:32 -耗时 : 7
2019-05-24 16:32:32 -返回值 : com.bootdo.common.utils.PageUtils@4c6cb54a
2019-05-24 16:32:37 -请求地址 : http://localhost:8081/moneyList/moneyWZ/edit/9
2019-05-24 16:32:37 -HTTP METHOD : GET
2019-05-24 16:32:37 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.edit
2019-05-24 16:32:37 -参数 : [9, {}]
2019-05-24 16:32:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-05-24 16:32:37 -==> Parameters: 9(Long)
2019-05-24 16:32:37 -<==      Total: 1
2019-05-24 16:32:37 -耗时 : 12
2019-05-24 16:32:37 -返回值 : elec/elec/edit
2019-05-24 16:32:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 16:32:37 -HTTP METHOD : GET
2019-05-24 16:32:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:32:37 -参数 : [userType]
2019-05-24 16:32:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:32:37 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-24 16:32:37 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-24 16:32:37 -HTTP METHOD : GET
2019-05-24 16:32:37 -HTTP METHOD : GET
2019-05-24 16:32:37 -==> Parameters: userType(String)
2019-05-24 16:32:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:32:37 -参数 : [elecType]
2019-05-24 16:32:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:32:37 -参数 : [userState]
2019-05-24 16:32:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:32:37 -==> Parameters: elecType(String)
2019-05-24 16:32:37 -<==      Total: 4
2019-05-24 16:32:37 -耗时 : 6
2019-05-24 16:32:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:32:37 -<==      Total: 11
2019-05-24 16:32:37 -耗时 : 10
2019-05-24 16:32:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:32:37 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:32:37 -==> Parameters: userState(String)
2019-05-24 16:32:37 -<==      Total: 2
2019-05-24 16:32:37 -耗时 : 26
2019-05-24 16:32:37 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:32:51 -请求地址 : http://localhost:8081/elec/elec/update
2019-05-24 16:32:51 -HTTP METHOD : POST
2019-05-24 16:32:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.update
2019-05-24 16:32:51 -参数 : [com.bootdo.elec.domain.ElecDO@23c8f863]
2019-05-24 16:32:51 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-24 16:32:51 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), (String), 1(String), 1(String), 7(String), 0(String), 0(String), 1(Integer), 0(BigDecimal), 0.00(BigDecimal), -8.00(BigDecimal), 2019-03(String), 1(Long), 2019-05-24 16:32:51.07(Timestamp), 1(Long), (String), 9(Long)
2019-05-24 16:32:51 -<==    Updates: 1
2019-05-24 16:32:51 -耗时 : 220
2019-05-24 16:32:51 -返回值 : {msg=操作成功, code=0}
2019-05-24 16:32:51 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:32:51 -HTTP METHOD : GET
2019-05-24 16:32:51 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:32:51 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=2}, com.bootdo.elec.domain.ElecDO@1de75b8d]
2019-05-24 16:32:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `elec_sum` < 0 order by id asc limit ?, ? 
2019-05-24 16:32:51 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 16:32:51 -<==      Total: 1
2019-05-24 16:32:51 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `elec_sum` < 0 
2019-05-24 16:32:51 -==> Parameters: 
2019-05-24 16:32:51 -<==      Total: 1
2019-05-24 16:32:51 -耗时 : 26
2019-05-24 16:32:51 -返回值 : com.bootdo.common.utils.PageUtils@37375ab4
2019-05-24 16:32:57 -请求地址 : http://localhost:8081/index
2019-05-24 16:32:57 -HTTP METHOD : GET
2019-05-24 16:32:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 16:32:57 -参数 : [{}]
2019-05-24 16:32:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 16:32:57 -==> Parameters: 1(Long)
2019-05-24 16:32:57 -<==      Total: 50
2019-05-24 16:32:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 16:32:57 -==> Parameters: 138(Long)
2019-05-24 16:32:57 -<==      Total: 1
2019-05-24 16:32:57 -耗时 : 36
2019-05-24 16:32:57 -返回值 : index_v1
2019-05-24 16:32:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 16:32:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 16:32:57.888(Timestamp)
2019-05-24 16:32:57 -<==    Updates: 1
2019-05-24 16:32:57 -请求地址 : http://localhost:8081/main
2019-05-24 16:32:57 -HTTP METHOD : GET
2019-05-24 16:32:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 16:32:57 -参数 : []
2019-05-24 16:32:57 -耗时 : 0
2019-05-24 16:32:57 -返回值 : main
2019-05-24 16:32:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 16:32:58 -HTTP METHOD : GET
2019-05-24 16:32:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 16:32:58 -参数 : []
2019-05-24 16:32:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 16:32:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 16:32:58 -<==      Total: 0
2019-05-24 16:32:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 16:32:58 -==> Parameters: 1(Long), 0(String)
2019-05-24 16:32:58 -<==      Total: 1
2019-05-24 16:32:58 -耗时 : 12
2019-05-24 16:32:58 -返回值 : com.bootdo.common.utils.PageUtils@43837f6a
2019-05-24 16:32:58 -请求地址 : http://localhost:8081/main
2019-05-24 16:32:58 -HTTP METHOD : GET
2019-05-24 16:32:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 16:32:58 -参数 : []
2019-05-24 16:32:58 -耗时 : 1
2019-05-24 16:32:58 -返回值 : main
2019-05-24 16:33:00 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 16:33:00 -HTTP METHOD : GET
2019-05-24 16:33:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 16:33:00 -参数 : []
2019-05-24 16:33:00 -耗时 : 0
2019-05-24 16:33:00 -返回值 : /moneyList/moneyWZ
2019-05-24 16:33:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 16:33:00 -HTTP METHOD : GET
2019-05-24 16:33:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:33:00 -参数 : [userType]
2019-05-24 16:33:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:33:00 -==> Parameters: userType(String)
2019-05-24 16:33:00 -<==      Total: 4
2019-05-24 16:33:00 -耗时 : 4
2019-05-24 16:33:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:33:00 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:33:00 -HTTP METHOD : GET
2019-05-24 16:33:00 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:33:00 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@5abcd092]
2019-05-24 16:33:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:33:00 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 16:33:00 -<==      Total: 2
2019-05-24 16:33:00 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 16:33:00 -==> Parameters: 
2019-05-24 16:33:00 -<==      Total: 1
2019-05-24 16:33:00 -耗时 : 8
2019-05-24 16:33:00 -返回值 : com.bootdo.common.utils.PageUtils@3871b220
2019-05-24 16:33:06 -请求地址 : http://localhost:8081/moneyList/moneyWZ/add
2019-05-24 16:33:06 -HTTP METHOD : GET
2019-05-24 16:33:06 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.add
2019-05-24 16:33:06 -参数 : []
2019-05-24 16:33:06 -耗时 : 1
2019-05-24 16:33:06 -返回值 : elec/elec/add
2019-05-24 16:33:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 16:33:06 -HTTP METHOD : GET
2019-05-24 16:33:06 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-24 16:33:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:33:06 -HTTP METHOD : GET
2019-05-24 16:33:06 -参数 : [userType]
2019-05-24 16:33:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:33:06 -参数 : [userState]
2019-05-24 16:33:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:33:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:33:06 -==> Parameters: userState(String)
2019-05-24 16:33:06 -==> Parameters: userType(String)
2019-05-24 16:33:06 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-24 16:33:06 -HTTP METHOD : GET
2019-05-24 16:33:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:33:06 -参数 : [elecType]
2019-05-24 16:33:06 -<==      Total: 2
2019-05-24 16:33:06 -<==      Total: 4
2019-05-24 16:33:06 -耗时 : 4
2019-05-24 16:33:06 -耗时 : 4
2019-05-24 16:33:06 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:33:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:33:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:33:06 -==> Parameters: elecType(String)
2019-05-24 16:33:06 -<==      Total: 11
2019-05-24 16:33:06 -耗时 : 12
2019-05-24 16:33:06 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:33:28 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-24 16:33:28 -HTTP METHOD : GET
2019-05-24 16:33:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-24 16:33:28 -参数 : []
2019-05-24 16:33:28 -耗时 : 0
2019-05-24 16:33:28 -返回值 : system/dept/deptTree
2019-05-24 16:33:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-24 16:33:29 -HTTP METHOD : GET
2019-05-24 16:33:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-24 16:33:29 -参数 : []
2019-05-24 16:33:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-24 16:33:29 -==> Parameters: 
2019-05-24 16:33:29 -<==      Total: 3
2019-05-24 16:33:29 -耗时 : 19
2019-05-24 16:33:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-24 16:35:17 -请求地址 : http://localhost:8081/elec/elec/save
2019-05-24 16:35:17 -HTTP METHOD : POST
2019-05-24 16:35:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.save
2019-05-24 16:35:17 -参数 : [com.bootdo.elec.domain.ElecDO@6f1603b3]
2019-05-24 16:35:17 -==>  Preparing: insert into elec ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 16:35:17 -==> Parameters: WS-0001(String), 四大护法(String), A(String), 2(String), 15248789963(String), 0(String), 1234567(String), 6(String), 0.465(BigDecimal), 0(String), 10(String), 1(Integer), 10(BigDecimal), 9.99(BigDecimal), 0.87(BigDecimal), 2019-03(String), 1(Long), 2019-05-24 16:35:17.677(Timestamp), 1(Long), (String)
2019-05-24 16:35:17 -<==    Updates: 1
2019-05-24 16:35:17 -耗时 : 71
2019-05-24 16:35:17 -返回值 : {msg=操作成功, code=0}
2019-05-24 16:35:17 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:35:17 -HTTP METHOD : GET
2019-05-24 16:35:17 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:35:17 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=2}, com.bootdo.elec.domain.ElecDO@628e2ac8]
2019-05-24 16:35:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `elec_sum` < 0 order by id asc limit ?, ? 
2019-05-24 16:35:17 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 16:35:17 -<==      Total: 1
2019-05-24 16:35:17 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `elec_sum` < 0 
2019-05-24 16:35:17 -==> Parameters: 
2019-05-24 16:35:17 -<==      Total: 1
2019-05-24 16:35:17 -耗时 : 5
2019-05-24 16:35:17 -返回值 : com.bootdo.common.utils.PageUtils@18ed91c3
2019-05-24 16:35:20 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:35:20 -HTTP METHOD : GET
2019-05-24 16:35:20 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:35:20 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@1b3d83d2]
2019-05-24 16:35:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:35:20 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 16:35:20 -<==      Total: 3
2019-05-24 16:35:20 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 16:35:20 -==> Parameters: 
2019-05-24 16:35:20 -<==      Total: 1
2019-05-24 16:35:20 -耗时 : 7
2019-05-24 16:35:20 -返回值 : com.bootdo.common.utils.PageUtils@15d446e1
2019-05-24 16:36:05 -请求地址 : http://localhost:8081/moneyList/moneyWZ/edit/14
2019-05-24 16:36:05 -HTTP METHOD : GET
2019-05-24 16:36:05 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.edit
2019-05-24 16:36:05 -参数 : [14, {}]
2019-05-24 16:36:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-05-24 16:36:05 -==> Parameters: 14(Long)
2019-05-24 16:36:05 -<==      Total: 1
2019-05-24 16:36:05 -耗时 : 6
2019-05-24 16:36:05 -返回值 : elec/elec/edit
2019-05-24 16:36:05 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-24 16:36:05 -HTTP METHOD : GET
2019-05-24 16:36:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:36:05 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-24 16:36:05 -参数 : [elecType]
2019-05-24 16:36:05 -HTTP METHOD : GET
2019-05-24 16:36:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:36:05 -参数 : [userState]
2019-05-24 16:36:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:36:05 -==> Parameters: userState(String)
2019-05-24 16:36:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 16:36:05 -HTTP METHOD : GET
2019-05-24 16:36:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:36:05 -参数 : [userType]
2019-05-24 16:36:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:36:05 -==> Parameters: elecType(String)
2019-05-24 16:36:05 -<==      Total: 2
2019-05-24 16:36:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:36:05 -耗时 : 7
2019-05-24 16:36:05 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:36:05 -==> Parameters: userType(String)
2019-05-24 16:36:05 -<==      Total: 11
2019-05-24 16:36:05 -耗时 : 8
2019-05-24 16:36:05 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:36:05 -<==      Total: 4
2019-05-24 16:36:05 -耗时 : 15
2019-05-24 16:36:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:36:13 -请求地址 : http://localhost:8081/elec/elec/update
2019-05-24 16:36:13 -HTTP METHOD : POST
2019-05-24 16:36:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.update
2019-05-24 16:36:13 -参数 : [com.bootdo.elec.domain.ElecDO@3f063b0f]
2019-05-24 16:36:13 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-24 16:36:13 -==> Parameters: WS-0001(String), 四大护法(String), A(String), 2(String), 15248789963(String), 1(String), 1234567(String), 6(String), 0(String), 10(String), 1(Integer), 10(BigDecimal), 9.99(BigDecimal), 0.87(BigDecimal), 2019-03(String), 1(Long), 2019-05-24 16:36:13.443(Timestamp), 1(Long), (String), 14(Long)
2019-05-24 16:36:13 -<==    Updates: 1
2019-05-24 16:36:13 -耗时 : 101
2019-05-24 16:36:13 -返回值 : {msg=操作成功, code=0}
2019-05-24 16:36:13 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:36:13 -HTTP METHOD : GET
2019-05-24 16:36:13 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:36:13 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=2}, com.bootdo.elec.domain.ElecDO@68b6ca05]
2019-05-24 16:36:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `elec_sum` < 0 order by id asc limit ?, ? 
2019-05-24 16:36:13 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 16:36:13 -<==      Total: 1
2019-05-24 16:36:13 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `elec_sum` < 0 
2019-05-24 16:36:13 -==> Parameters: 
2019-05-24 16:36:13 -<==      Total: 1
2019-05-24 16:36:13 -耗时 : 52
2019-05-24 16:36:13 -返回值 : com.bootdo.common.utils.PageUtils@22234da4
2019-05-24 16:36:22 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:36:22 -HTTP METHOD : GET
2019-05-24 16:36:22 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:36:22 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@346d0309]
2019-05-24 16:36:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:36:22 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 16:36:22 -<==      Total: 3
2019-05-24 16:36:22 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 16:36:22 -==> Parameters: 
2019-05-24 16:36:22 -<==      Total: 1
2019-05-24 16:36:22 -耗时 : 10
2019-05-24 16:36:22 -返回值 : com.bootdo.common.utils.PageUtils@af40f17
2019-05-24 16:37:25 -请求地址 : http://localhost:8081/index
2019-05-24 16:37:25 -HTTP METHOD : GET
2019-05-24 16:37:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 16:37:25 -参数 : [{}]
2019-05-24 16:37:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 16:37:25 -==> Parameters: 1(Long)
2019-05-24 16:37:25 -<==      Total: 50
2019-05-24 16:37:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 16:37:25 -==> Parameters: 138(Long)
2019-05-24 16:37:25 -<==      Total: 1
2019-05-24 16:37:25 -耗时 : 20
2019-05-24 16:37:25 -返回值 : index_v1
2019-05-24 16:37:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 16:37:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 16:37:25.319(Timestamp)
2019-05-24 16:37:25 -<==    Updates: 1
2019-05-24 16:37:25 -请求地址 : http://localhost:8081/main
2019-05-24 16:37:25 -HTTP METHOD : GET
2019-05-24 16:37:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 16:37:25 -参数 : []
2019-05-24 16:37:25 -耗时 : 1
2019-05-24 16:37:25 -返回值 : main
2019-05-24 16:37:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 16:37:25 -HTTP METHOD : GET
2019-05-24 16:37:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 16:37:25 -参数 : []
2019-05-24 16:37:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 16:37:25 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 16:37:25 -<==      Total: 0
2019-05-24 16:37:25 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 16:37:25 -==> Parameters: 1(Long), 0(String)
2019-05-24 16:37:25 -<==      Total: 1
2019-05-24 16:37:25 -耗时 : 11
2019-05-24 16:37:25 -返回值 : com.bootdo.common.utils.PageUtils@79b8fc33
2019-05-24 16:37:25 -请求地址 : http://localhost:8081/main
2019-05-24 16:37:25 -HTTP METHOD : GET
2019-05-24 16:37:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 16:37:25 -参数 : []
2019-05-24 16:37:25 -耗时 : 0
2019-05-24 16:37:25 -返回值 : main
2019-05-24 16:37:27 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 16:37:27 -HTTP METHOD : GET
2019-05-24 16:37:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 16:37:27 -参数 : []
2019-05-24 16:37:27 -耗时 : 1
2019-05-24 16:37:27 -返回值 : /moneyList/moneyWZ
2019-05-24 16:37:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 16:37:27 -HTTP METHOD : GET
2019-05-24 16:37:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:37:27 -参数 : [userType]
2019-05-24 16:37:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:37:27 -==> Parameters: userType(String)
2019-05-24 16:37:27 -<==      Total: 4
2019-05-24 16:37:27 -耗时 : 4
2019-05-24 16:37:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:37:27 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:37:27 -HTTP METHOD : GET
2019-05-24 16:37:27 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:37:27 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@2d1ed905]
2019-05-24 16:37:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:37:27 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 16:37:27 -<==      Total: 3
2019-05-24 16:37:27 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 16:37:27 -==> Parameters: 
2019-05-24 16:37:27 -<==      Total: 1
2019-05-24 16:37:27 -耗时 : 7
2019-05-24 16:37:27 -返回值 : com.bootdo.common.utils.PageUtils@234ae1fc
2019-05-24 16:37:30 -请求地址 : http://localhost:8081/moneyList/moneyWZ/edit/14
2019-05-24 16:37:30 -HTTP METHOD : GET
2019-05-24 16:37:30 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.edit
2019-05-24 16:37:30 -参数 : [14, {}]
2019-05-24 16:37:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-05-24 16:37:30 -==> Parameters: 14(Long)
2019-05-24 16:37:30 -<==      Total: 1
2019-05-24 16:37:30 -耗时 : 4
2019-05-24 16:37:30 -返回值 : elec/elec/edit
2019-05-24 16:37:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 16:37:31 -HTTP METHOD : GET
2019-05-24 16:37:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:37:31 -参数 : [userType]
2019-05-24 16:37:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:37:31 -==> Parameters: userType(String)
2019-05-24 16:37:31 -<==      Total: 4
2019-05-24 16:37:31 -耗时 : 4
2019-05-24 16:37:31 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-24 16:37:31 -HTTP METHOD : GET
2019-05-24 16:37:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:37:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:37:31 -参数 : [userState]
2019-05-24 16:37:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:37:31 -==> Parameters: userState(String)
2019-05-24 16:37:31 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-24 16:37:31 -HTTP METHOD : GET
2019-05-24 16:37:31 -<==      Total: 2
2019-05-24 16:37:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:37:31 -参数 : [elecType]
2019-05-24 16:37:31 -耗时 : 3
2019-05-24 16:37:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:37:31 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:37:31 -==> Parameters: elecType(String)
2019-05-24 16:37:31 -<==      Total: 11
2019-05-24 16:37:31 -耗时 : 6
2019-05-24 16:37:31 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:37:36 -请求地址 : http://localhost:8081/moneyList/moneyWZ/edit/14
2019-05-24 16:37:36 -HTTP METHOD : GET
2019-05-24 16:37:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.edit
2019-05-24 16:37:36 -参数 : [14, {}]
2019-05-24 16:37:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-05-24 16:37:36 -==> Parameters: 14(Long)
2019-05-24 16:37:36 -<==      Total: 1
2019-05-24 16:37:36 -耗时 : 5
2019-05-24 16:37:36 -返回值 : elec/elec/edit
2019-05-24 16:37:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 16:37:36 -HTTP METHOD : GET
2019-05-24 16:37:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:37:36 -参数 : [userType]
2019-05-24 16:37:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:37:36 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-05-24 16:37:36 -HTTP METHOD : GET
2019-05-24 16:37:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:37:36 -参数 : [userState]
2019-05-24 16:37:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:37:36 -==> Parameters: userState(String)
2019-05-24 16:37:36 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-24 16:37:36 -HTTP METHOD : GET
2019-05-24 16:37:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 16:37:36 -参数 : [elecType]
2019-05-24 16:37:36 -<==      Total: 2
2019-05-24 16:37:36 -耗时 : 4
2019-05-24 16:37:36 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:37:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 16:37:36 -==> Parameters: elecType(String)
2019-05-24 16:37:36 -==> Parameters: userType(String)
2019-05-24 16:37:36 -<==      Total: 4
2019-05-24 16:37:36 -耗时 : 10
2019-05-24 16:37:36 -<==      Total: 11
2019-05-24 16:37:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:37:37 -耗时 : 10
2019-05-24 16:37:37 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 16:37:43 -请求地址 : http://localhost:8081/elec/elec/update
2019-05-24 16:37:43 -HTTP METHOD : POST
2019-05-24 16:37:43 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.update
2019-05-24 16:37:43 -参数 : [com.bootdo.elec.domain.ElecDO@d7fca2c]
2019-05-24 16:37:43 -==>  Preparing: update elec SET `user_id` = ?, `user_name` = ?, `user_type` = ?, `user_org` = ?, `user_tell` = ?, `user_state` = ?, `wages_id` = ?, `elec_type` = ?, `start` = ?, `end` = ?, `hu` = ?, `elec_amount` = ?, `elec_cost` = ?, `elec_sum` = ?, `create_time` = ?, `create_by` = ?, `update_time` = ?, `update_by` = ?, `remark` = ? where id = ? 
2019-05-24 16:37:43 -==> Parameters: WS-0001(String), 四大护法(String), A(String), 2(String), 15248789963(String), 0(String), 1234567(String), 6(String), 0(String), 10(String), 1(Integer), 10(BigDecimal), 9.99(BigDecimal), 0.87(BigDecimal), 2019-03(String), 1(Long), 2019-05-24 16:37:43.503(Timestamp), 1(Long), (String), 14(Long)
2019-05-24 16:37:43 -<==    Updates: 1
2019-05-24 16:37:43 -==>  Preparing: update elec set `start`= 0, `end` = 0, `elec_amount` = 0, `elec_cost` = 0 ,`elec_sum` = 0 where id = ? 
2019-05-24 16:37:43 -==> Parameters: 14(Long)
2019-05-24 16:37:43 -<==    Updates: 1
2019-05-24 16:37:43 -耗时 : 189
2019-05-24 16:37:43 -返回值 : {msg=操作成功, code=0}
2019-05-24 16:37:43 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:37:43 -HTTP METHOD : GET
2019-05-24 16:37:43 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:37:43 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=2}, com.bootdo.elec.domain.ElecDO@406eb99c]
2019-05-24 16:37:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `elec_sum` < 0 order by id asc limit ?, ? 
2019-05-24 16:37:43 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 16:37:43 -<==      Total: 1
2019-05-24 16:37:43 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' and `elec_sum` < 0 
2019-05-24 16:37:43 -==> Parameters: 
2019-05-24 16:37:43 -<==      Total: 1
2019-05-24 16:37:43 -耗时 : 16
2019-05-24 16:37:43 -返回值 : com.bootdo.common.utils.PageUtils@27e9718f
2019-05-24 16:37:46 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 16:37:46 -HTTP METHOD : GET
2019-05-24 16:37:46 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 16:37:46 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@65ceafa5]
2019-05-24 16:37:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 16:37:46 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 16:37:46 -<==      Total: 3
2019-05-24 16:37:46 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 16:37:46 -==> Parameters: 
2019-05-24 16:37:46 -<==      Total: 1
2019-05-24 16:37:46 -耗时 : 8
2019-05-24 16:37:46 -返回值 : com.bootdo.common.utils.PageUtils@19ef750f
2019-05-24 16:52:17 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 60], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 435]
2019-05-24 20:58:26 -Starting BootdoApplication on PC-201905091110 with PID 4508 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-24 20:58:26 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-24 20:58:26 -The following profiles are active: dev
2019-05-24 20:58:26 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 20:58:26 CST 2019]; root of context hierarchy
2019-05-24 20:58:33 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-24 20:58:36 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4be51ef5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 20:58:36 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3e3e4d9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 20:58:38 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 20:58:38 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 20:58:38 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 20:58:38 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-24 20:58:38 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-24 20:58:38 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 20:58:38 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 20:58:38 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 20:58:38 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-24 20:58:40 -Tomcat initialized with port(s): 8081 (http)
2019-05-24 20:58:40 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-24 20:58:40 -Starting service [Tomcat]
2019-05-24 20:58:40 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-24 20:58:40 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-24 20:58:40 -Initializing Spring embedded WebApplicationContext
2019-05-24 20:58:40 -Root WebApplicationContext: initialization completed in 14099 ms
2019-05-24 20:58:41 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-24 20:58:41 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-24 20:58:41 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-24 20:58:41 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-24 20:58:41 -Filter xssFilter was not registered (disabled)
2019-05-24 20:58:41 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-24 20:58:41 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-24 20:58:41 -Servlet statViewServlet mapped to [/druid/*]
2019-05-24 20:58:41 -Servlet dispatcherServlet mapped to [/]
2019-05-24 20:58:46 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 20:58:26 CST 2019]; root of context hierarchy
2019-05-24 20:58:46 -Using default implementation for ThreadExecutor
2019-05-24 20:58:46 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-24 20:58:46 -Quartz Scheduler v.2.2.1 created.
2019-05-24 20:58:46 -RAMJobStore initialized.
2019-05-24 20:58:46 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-24 20:58:46 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-24 20:58:46 -Quartz scheduler version: 2.2.1
2019-05-24 20:58:46 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@43e8f1c
2019-05-24 20:58:47 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-24 20:58:47 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-24 20:58:56 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-24 20:58:56 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 20:58:56 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-24 20:58:56 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 20:58:56 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-24 20:58:56 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-24 20:58:56 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-24 20:58:56 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 20:58:56 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 20:58:56 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-24 20:58:56 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 20:58:56 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-24 20:58:56 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-24 20:58:56 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 20:58:56 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-24 20:58:56 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-24 20:58:56 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 20:58:56 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-24 20:58:56 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-24 20:58:56 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-24 20:58:56 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 20:58:56 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-24 20:58:56 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-24 20:58:56 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-24 20:58:56 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-24 20:58:56 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-24 20:58:56 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-24 20:58:56 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-24 20:58:56 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-24 20:58:56 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-24 20:58:56 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-24 20:58:56 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-24 20:58:56 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-24 20:58:56 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-24 20:58:56 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-24 20:58:56 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-24 20:58:56 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-24 20:58:56 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 20:58:56 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-24 20:58:56 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-24 20:58:56 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-24 20:58:56 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-24 20:58:56 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-24 20:58:56 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-24 20:58:56 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-24 20:58:56 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-24 20:58:56 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-24 20:58:56 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-24 20:58:56 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-24 20:58:56 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 20:58:56 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 20:58:56 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-24 20:58:56 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-24 20:58:56 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-24 20:58:56 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 20:58:56 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-24 20:58:56 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-24 20:58:56 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-24 20:58:56 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-24 20:58:56 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-24 20:58:56 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-24 20:58:56 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-24 20:58:56 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-24 20:58:56 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-24 20:58:56 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-24 20:58:56 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-24 20:58:56 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-24 20:58:56 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-24 20:58:56 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 20:58:56 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-24 20:58:56 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 20:58:56 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-24 20:58:56 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-24 20:58:56 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-24 20:58:56 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 20:58:56 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-24 20:58:56 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 20:58:56 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 20:58:56 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-24 20:58:56 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-24 20:58:56 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-24 20:58:56 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-24 20:58:56 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-24 20:58:56 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-24 20:58:56 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-24 20:58:56 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-24 20:58:56 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-24 20:58:56 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-24 20:58:56 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-24 20:58:56 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-24 20:58:56 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-24 20:58:56 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-24 20:58:56 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-24 20:58:56 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-24 20:58:56 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-24 20:58:56 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-24 20:58:56 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-24 20:58:56 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-24 20:58:56 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-24 20:58:56 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-24 20:58:56 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-24 20:58:56 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-24 20:58:56 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-24 20:58:56 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-24 20:58:56 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-24 20:58:56 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-24 20:58:56 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-24 20:58:56 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-24 20:58:56 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-24 20:58:56 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 20:58:56 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-24 20:58:56 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-24 20:58:56 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-24 20:58:56 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-24 20:58:56 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-24 20:58:56 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-24 20:58:56 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-24 20:58:56 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-24 20:58:56 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-24 20:58:56 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-24 20:58:56 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-24 20:58:56 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-24 20:58:56 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-24 20:58:56 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-24 20:58:56 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-24 20:58:56 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-24 20:58:56 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-24 20:58:56 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-24 20:58:56 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 20:58:56 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-24 20:58:56 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 20:58:56 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-24 20:58:56 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-24 20:58:56 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-24 20:58:56 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-24 20:58:56 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-24 20:58:56 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-24 20:58:56 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-24 20:58:56 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-24 20:58:56 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-24 20:58:56 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-24 20:58:56 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 20:58:56 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-24 20:58:56 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-24 20:58:56 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-24 20:58:56 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-24 20:58:56 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-24 20:58:56 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-24 20:58:56 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-24 20:58:56 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-24 20:58:56 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-24 20:58:56 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-24 20:58:56 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-24 20:58:56 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-24 20:58:57 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-24 20:58:57 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-24 20:58:57 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-24 20:58:57 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 20:58:58 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Fri May 24 20:58:26 CST 2019]; root of context hierarchy
2019-05-24 20:58:58 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 20:58:58 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 20:58:58 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-24 20:58:58 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-24 20:58:58 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-24 20:59:01 -Registering beans for JMX exposure on startup
2019-05-24 20:59:01 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-24 20:59:01 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-24 20:59:01 -Starting beans in phase 2147483647
2019-05-24 20:59:01 -Context refreshed
2019-05-24 20:59:01 -Found 1 custom documentation plugin(s)
2019-05-24 20:59:01 -Scanning for api listing references
2019-05-24 20:59:01 -Generating unique operation named: getCountDUsingPOST_1
2019-05-24 20:59:01 -Generating unique operation named: removeUsingPOST_1
2019-05-24 20:59:02 -Generating unique operation named: addUsingGET_1
2019-05-24 20:59:02 -Generating unique operation named: editUsingGET_1
2019-05-24 20:59:02 -Generating unique operation named: listUsingGET_1
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_2
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_3
2019-05-24 20:59:02 -Generating unique operation named: saveUsingPOST_1
2019-05-24 20:59:02 -Generating unique operation named: updateUsingGET_1
2019-05-24 20:59:02 -Generating unique operation named: updateUsingHEAD_1
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPOST_1
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPUT_1
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPATCH_1
2019-05-24 20:59:02 -Generating unique operation named: updateUsingDELETE_1
2019-05-24 20:59:02 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-24 20:59:02 -Generating unique operation named: updateUsingTRACE_1
2019-05-24 20:59:02 -Generating unique operation named: addUsingGET_2
2019-05-24 20:59:02 -Generating unique operation named: editUsingGET_2
2019-05-24 20:59:02 -Generating unique operation named: listUsingGET_2
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_4
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_5
2019-05-24 20:59:02 -Generating unique operation named: saveUsingPOST_2
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPOST_2
2019-05-24 20:59:02 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-24 20:59:02 -Generating unique operation named: addUsingGET_3
2019-05-24 20:59:02 -Generating unique operation named: editUsingGET_3
2019-05-24 20:59:02 -Generating unique operation named: listUsingGET_3
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_6
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_7
2019-05-24 20:59:02 -Generating unique operation named: saveUsingPOST_3
2019-05-24 20:59:02 -Generating unique operation named: updateUsingGET_2
2019-05-24 20:59:02 -Generating unique operation named: updateUsingHEAD_2
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPOST_3
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPUT_2
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPATCH_2
2019-05-24 20:59:02 -Generating unique operation named: updateUsingDELETE_2
2019-05-24 20:59:02 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-24 20:59:02 -Generating unique operation named: updateUsingTRACE_2
2019-05-24 20:59:02 -Generating unique operation named: addUsingGET_4
2019-05-24 20:59:02 -Generating unique operation named: editUsingGET_4
2019-05-24 20:59:02 -Generating unique operation named: listUsingGET_4
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_8
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_9
2019-05-24 20:59:02 -Generating unique operation named: saveUsingPOST_4
2019-05-24 20:59:02 -Generating unique operation named: updateUsingGET_3
2019-05-24 20:59:02 -Generating unique operation named: updateUsingHEAD_3
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPOST_4
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPUT_3
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPATCH_3
2019-05-24 20:59:02 -Generating unique operation named: updateUsingDELETE_3
2019-05-24 20:59:02 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-24 20:59:02 -Generating unique operation named: updateUsingTRACE_3
2019-05-24 20:59:02 -Generating unique operation named: ElecUsingGET_1
2019-05-24 20:59:02 -Generating unique operation named: addUsingGET_5
2019-05-24 20:59:02 -Generating unique operation named: editUsingGET_5
2019-05-24 20:59:02 -Generating unique operation named: listUsingGET_5
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_10
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_11
2019-05-24 20:59:02 -Generating unique operation named: saveUsingPOST_5
2019-05-24 20:59:02 -Generating unique operation named: updateUsingGET_4
2019-05-24 20:59:02 -Generating unique operation named: updateUsingHEAD_4
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPOST_5
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPUT_4
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPATCH_4
2019-05-24 20:59:02 -Generating unique operation named: updateUsingDELETE_4
2019-05-24 20:59:02 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-24 20:59:02 -Generating unique operation named: updateUsingTRACE_4
2019-05-24 20:59:02 -Generating unique operation named: editUsingGET_6
2019-05-24 20:59:02 -Generating unique operation named: listUsingGET_6
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPOST_6
2019-05-24 20:59:02 -Generating unique operation named: addUsingGET_6
2019-05-24 20:59:02 -Generating unique operation named: editUsingGET_7
2019-05-24 20:59:02 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-24 20:59:02 -Generating unique operation named: listUsingGET_7
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_12
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_13
2019-05-24 20:59:02 -Generating unique operation named: saveUsingPOST_6
2019-05-24 20:59:02 -Generating unique operation named: updateUsingGET_5
2019-05-24 20:59:02 -Generating unique operation named: updateUsingHEAD_5
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPOST_7
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPUT_5
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPATCH_5
2019-05-24 20:59:02 -Generating unique operation named: updateUsingDELETE_5
2019-05-24 20:59:02 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-24 20:59:02 -Generating unique operation named: updateUsingTRACE_5
2019-05-24 20:59:02 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-24 20:59:02 -Generating unique operation named: addUsingGET_7
2019-05-24 20:59:02 -Generating unique operation named: editUsingGET_8
2019-05-24 20:59:02 -Generating unique operation named: listUsingGET_8
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_14
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_15
2019-05-24 20:59:02 -Generating unique operation named: saveUsingPOST_7
2019-05-24 20:59:02 -Generating unique operation named: updateUsingGET_6
2019-05-24 20:59:02 -Generating unique operation named: updateUsingHEAD_6
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPOST_8
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPUT_6
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPATCH_6
2019-05-24 20:59:02 -Generating unique operation named: updateUsingDELETE_6
2019-05-24 20:59:02 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-24 20:59:02 -Generating unique operation named: updateUsingTRACE_6
2019-05-24 20:59:02 -Generating unique operation named: addUsingGET_8
2019-05-24 20:59:02 -Generating unique operation named: editUsingGET_9
2019-05-24 20:59:02 -Generating unique operation named: listUsingGET_9
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_16
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_17
2019-05-24 20:59:02 -Generating unique operation named: saveUsingPOST_8
2019-05-24 20:59:02 -Generating unique operation named: updateUsingGET_7
2019-05-24 20:59:02 -Generating unique operation named: updateUsingHEAD_7
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPOST_9
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPUT_7
2019-05-24 20:59:02 -Generating unique operation named: updateUsingPATCH_7
2019-05-24 20:59:02 -Generating unique operation named: updateUsingDELETE_7
2019-05-24 20:59:02 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-24 20:59:02 -Generating unique operation named: updateUsingTRACE_7
2019-05-24 20:59:02 -Generating unique operation named: addUsingGET_9
2019-05-24 20:59:02 -Generating unique operation named: editUsingGET_10
2019-05-24 20:59:02 -Generating unique operation named: infoUsingGET_1
2019-05-24 20:59:02 -Generating unique operation named: infoUsingHEAD_1
2019-05-24 20:59:02 -Generating unique operation named: infoUsingPOST_1
2019-05-24 20:59:02 -Generating unique operation named: infoUsingPUT_1
2019-05-24 20:59:02 -Generating unique operation named: infoUsingPATCH_1
2019-05-24 20:59:02 -Generating unique operation named: infoUsingDELETE_1
2019-05-24 20:59:02 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-24 20:59:02 -Generating unique operation named: infoUsingTRACE_1
2019-05-24 20:59:02 -Generating unique operation named: listUsingGET_10
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_18
2019-05-24 20:59:02 -Generating unique operation named: removeUsingPOST_19
2019-05-24 20:59:02 -Generating unique operation named: saveUsingPOST_9
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPOST_10
2019-05-24 20:59:03 -Generating unique operation named: listUsingGET_11
2019-05-24 20:59:03 -Generating unique operation named: removeUsingPOST_20
2019-05-24 20:59:03 -Generating unique operation named: welcomeUsingGET_1
2019-05-24 20:59:03 -Generating unique operation named: addUsingGET_10
2019-05-24 20:59:03 -Generating unique operation named: editUsingGET_11
2019-05-24 20:59:03 -Generating unique operation named: listUsingGET_12
2019-05-24 20:59:03 -Generating unique operation named: removeUsingPOST_21
2019-05-24 20:59:03 -Generating unique operation named: saveUsingPOST_10
2019-05-24 20:59:03 -Generating unique operation named: treeUsingGET_1
2019-05-24 20:59:03 -Generating unique operation named: treeUsingGET_2
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPOST_11
2019-05-24 20:59:03 -Generating unique operation named: addUsingGET_11
2019-05-24 20:59:03 -Generating unique operation named: editUsingGET_12
2019-05-24 20:59:03 -Generating unique operation named: listUsingGET_13
2019-05-24 20:59:03 -Generating unique operation named: removeUsingPOST_22
2019-05-24 20:59:03 -Generating unique operation named: removeUsingPOST_23
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPOST_12
2019-05-24 20:59:03 -Generating unique operation named: addUsingGET_12
2019-05-24 20:59:03 -Generating unique operation named: editUsingGET_13
2019-05-24 20:59:03 -Generating unique operation named: listUsingGET_14
2019-05-24 20:59:03 -Generating unique operation named: removeUsingPOST_24
2019-05-24 20:59:03 -Generating unique operation named: removeUsingPOST_25
2019-05-24 20:59:03 -Generating unique operation named: saveUsingPOST_11
2019-05-24 20:59:03 -Generating unique operation named: updateUsingGET_8
2019-05-24 20:59:03 -Generating unique operation named: updateUsingHEAD_8
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPOST_13
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPUT_8
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPATCH_8
2019-05-24 20:59:03 -Generating unique operation named: updateUsingDELETE_8
2019-05-24 20:59:03 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-24 20:59:03 -Generating unique operation named: updateUsingTRACE_8
2019-05-24 20:59:03 -Generating unique operation named: addUsingGET_13
2019-05-24 20:59:03 -Generating unique operation named: editUsingGET_14
2019-05-24 20:59:03 -Generating unique operation named: listUsingGET_15
2019-05-24 20:59:03 -Generating unique operation named: printEditUsingGET_1
2019-05-24 20:59:03 -Generating unique operation named: removeUsingPOST_26
2019-05-24 20:59:03 -Generating unique operation named: removeUsingPOST_27
2019-05-24 20:59:03 -Generating unique operation named: saveUsingPOST_12
2019-05-24 20:59:03 -Generating unique operation named: updateUsingGET_9
2019-05-24 20:59:03 -Generating unique operation named: updateUsingHEAD_9
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPOST_14
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPUT_9
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPATCH_9
2019-05-24 20:59:03 -Generating unique operation named: updateUsingDELETE_9
2019-05-24 20:59:03 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-24 20:59:03 -Generating unique operation named: updateUsingTRACE_9
2019-05-24 20:59:03 -Generating unique operation named: addUsingGET_14
2019-05-24 20:59:03 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-24 20:59:03 -Generating unique operation named: editUsingGET_15
2019-05-24 20:59:03 -Generating unique operation named: listUsingGET_16
2019-05-24 20:59:03 -Generating unique operation named: saveUsingPOST_13
2019-05-24 20:59:03 -Generating unique operation named: saveUsingPOST_14
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPOST_15
2019-05-24 20:59:03 -Generating unique operation named: listUsingGET_17
2019-05-24 20:59:03 -Generating unique operation named: listUsingHEAD_1
2019-05-24 20:59:03 -Generating unique operation named: listUsingPOST_1
2019-05-24 20:59:03 -Generating unique operation named: listUsingPUT_1
2019-05-24 20:59:03 -Generating unique operation named: listUsingPATCH_1
2019-05-24 20:59:03 -Generating unique operation named: listUsingDELETE_1
2019-05-24 20:59:03 -Generating unique operation named: listUsingOPTIONS_1
2019-05-24 20:59:03 -Generating unique operation named: listUsingTRACE_1
2019-05-24 20:59:03 -Generating unique operation named: countDDUsingGET_1
2019-05-24 20:59:03 -Generating unique operation named: exportDDUsingGET_1
2019-05-24 20:59:03 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-24 20:59:03 -Generating unique operation named: addUsingGET_15
2019-05-24 20:59:03 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-24 20:59:03 -Generating unique operation named: editUsingGET_16
2019-05-24 20:59:03 -Generating unique operation named: listUsingGET_18
2019-05-24 20:59:03 -Generating unique operation named: removeUsingPOST_28
2019-05-24 20:59:03 -Generating unique operation named: saveUsingPOST_15
2019-05-24 20:59:03 -Generating unique operation named: treeUsingGET_3
2019-05-24 20:59:03 -Generating unique operation named: treeViewUsingGET_1
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPOST_16
2019-05-24 20:59:03 -Generating unique operation named: addUsingGET_16
2019-05-24 20:59:03 -Generating unique operation named: editUsingGET_17
2019-05-24 20:59:03 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-24 20:59:03 -Generating unique operation named: listUsingGET_19
2019-05-24 20:59:03 -Generating unique operation named: removeUsingPOST_29
2019-05-24 20:59:03 -Generating unique operation named: removeUsingPOST_30
2019-05-24 20:59:03 -Generating unique operation named: saveUsingPOST_16
2019-05-24 20:59:03 -Generating unique operation named: updateUsingGET_10
2019-05-24 20:59:03 -Generating unique operation named: updateUsingHEAD_10
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPOST_17
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPUT_10
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPATCH_10
2019-05-24 20:59:03 -Generating unique operation named: updateUsingDELETE_10
2019-05-24 20:59:03 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-24 20:59:03 -Generating unique operation named: updateUsingTRACE_10
2019-05-24 20:59:03 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-24 20:59:03 -Generating unique operation named: addUsingGET_17
2019-05-24 20:59:03 -Generating unique operation named: editUsingGET_18
2019-05-24 20:59:03 -Generating unique operation named: listUsingGET_20
2019-05-24 20:59:03 -Generating unique operation named: removeUsingPOST_31
2019-05-24 20:59:03 -Generating unique operation named: removeUsingPOST_32
2019-05-24 20:59:03 -Generating unique operation named: saveUsingPOST_17
2019-05-24 20:59:03 -Generating unique operation named: updateUsingGET_11
2019-05-24 20:59:03 -Generating unique operation named: updateUsingHEAD_11
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPOST_18
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPUT_11
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPATCH_11
2019-05-24 20:59:03 -Generating unique operation named: updateUsingDELETE_11
2019-05-24 20:59:03 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-24 20:59:03 -Generating unique operation named: updateUsingTRACE_11
2019-05-24 20:59:03 -Generating unique operation named: addUsingGET_18
2019-05-24 20:59:03 -Generating unique operation named: editUsingGET_19
2019-05-24 20:59:03 -Generating unique operation named: listUsingGET_21
2019-05-24 20:59:03 -Generating unique operation named: removeUsingPOST_33
2019-05-24 20:59:03 -Generating unique operation named: removeUsingPOST_34
2019-05-24 20:59:03 -Generating unique operation named: saveUsingPOST_18
2019-05-24 20:59:03 -Generating unique operation named: updateUsingGET_12
2019-05-24 20:59:03 -Generating unique operation named: updateUsingHEAD_12
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPOST_19
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPUT_12
2019-05-24 20:59:03 -Generating unique operation named: updateUsingPATCH_12
2019-05-24 20:59:03 -Generating unique operation named: updateUsingDELETE_12
2019-05-24 20:59:03 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-24 20:59:03 -Generating unique operation named: updateUsingTRACE_12
2019-05-24 20:59:03 -Starting Quartz Scheduler now
2019-05-24 20:59:03 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-24 20:59:03 -Starting...
2019-05-24 20:59:03 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-24 20:59:03 -Started.
2019-05-24 20:59:04 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-24 20:59:04 -Using a shared selector for servlet write/read
2019-05-24 20:59:04 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-24 20:59:04 -Started BootdoApplication in 40.299 seconds (JVM running for 42.722)
2019-05-24 20:59:04 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-24 20:59:04 -==> Parameters: 
2019-05-24 20:59:04 -<==      Total: 1
2019-05-24 20:59:18 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-24 20:59:18 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-24 20:59:18 -FrameworkServlet 'dispatcherServlet': initialization completed in 56 ms
2019-05-24 20:59:19 -Enabling session validation scheduler...
2019-05-24 20:59:20 -请求地址 : http://localhost:8081/login;JSESSIONID=9b3bb2e8-a014-4336-b8a3-2ed7ca44fc26
2019-05-24 20:59:20 -HTTP METHOD : GET
2019-05-24 20:59:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-24 20:59:20 -参数 : [{}]
2019-05-24 20:59:20 -耗时 : 5
2019-05-24 20:59:20 -返回值 : login
2019-05-24 20:59:24 -请求地址 : http://localhost:8081/getVerify
2019-05-24 20:59:24 -HTTP METHOD : GET
2019-05-24 20:59:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-24 20:59:24 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1b835752, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1544ba52]
2019-05-24 20:59:32 -0355
2019-05-24 20:59:33 -耗时 : 8690
2019-05-24 20:59:33 -返回值 : null
2019-05-24 20:59:39 -请求地址 : http://localhost:8081/login
2019-05-24 20:59:39 -HTTP METHOD : POST
2019-05-24 20:59:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-24 20:59:39 -参数 : [admin, 111111, 0355, org.apache.shiro.web.servlet.ShiroHttpServletRequest@57485fa4]
2019-05-24 20:59:39 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-24 20:59:39 -==> Parameters: admin(String)
2019-05-24 20:59:40 -<==      Total: 1
2019-05-24 20:59:40 -耗时 : 514
2019-05-24 20:59:40 -返回值 : {msg=操作成功, code=0}
2019-05-24 20:59:40 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-24 20:59:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 20:59:40 -==> Parameters: 1(Long), admin(String), 登录(String), 515(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-24 20:59:40.306(Timestamp)
2019-05-24 20:59:40 -请求地址 : http://localhost:8081/index
2019-05-24 20:59:40 -HTTP METHOD : GET
2019-05-24 20:59:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-24 20:59:40 -参数 : [{}]
2019-05-24 20:59:40 -<==    Updates: 1
2019-05-24 20:59:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-24 20:59:41 -==> Parameters: 1(Long)
2019-05-24 20:59:41 -<==      Total: 50
2019-05-24 20:59:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-24 20:59:41 -==> Parameters: 138(Long)
2019-05-24 20:59:41 -<==      Total: 1
2019-05-24 20:59:41 -耗时 : 918
2019-05-24 20:59:41 -返回值 : index_v1
2019-05-24 20:59:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 20:59:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 919(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-24 20:59:41.959(Timestamp)
2019-05-24 20:59:42 -<==    Updates: 1
2019-05-24 20:59:42 -请求地址 : http://localhost:8081/main
2019-05-24 20:59:42 -HTTP METHOD : GET
2019-05-24 20:59:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 20:59:42 -参数 : []
2019-05-24 20:59:42 -耗时 : 0
2019-05-24 20:59:42 -返回值 : main
2019-05-24 20:59:44 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-24 20:59:44 -HTTP METHOD : GET
2019-05-24 20:59:44 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-24 20:59:44 -参数 : []
2019-05-24 20:59:44 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-24 20:59:44 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-24 20:59:44 -<==      Total: 0
2019-05-24 20:59:44 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-24 20:59:44 -==> Parameters: 1(Long), 0(String)
2019-05-24 20:59:44 -<==      Total: 1
2019-05-24 20:59:44 -耗时 : 147
2019-05-24 20:59:44 -返回值 : com.bootdo.common.utils.PageUtils@6156964a
2019-05-24 20:59:44 -请求地址 : http://localhost:8081/main
2019-05-24 20:59:44 -HTTP METHOD : GET
2019-05-24 20:59:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-24 20:59:44 -参数 : []
2019-05-24 20:59:44 -耗时 : 1
2019-05-24 20:59:44 -返回值 : main
2019-05-24 20:59:57 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-05-24 21:00:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-24 21:00:35 -==> Parameters: 1(Long)
2019-05-24 21:00:35 -<==      Total: 94
2019-05-24 21:00:35 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-24 21:00:35 -HTTP METHOD : GET
2019-05-24 21:00:35 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-24 21:00:35 -参数 : []
2019-05-24 21:00:35 -耗时 : 0
2019-05-24 21:00:35 -返回值 : /moneyList/moneyWZ
2019-05-24 21:00:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-24 21:00:36 -HTTP METHOD : GET
2019-05-24 21:00:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-24 21:00:36 -参数 : [userType]
2019-05-24 21:00:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-24 21:00:36 -==> Parameters: userType(String)
2019-05-24 21:00:36 -<==      Total: 4
2019-05-24 21:00:36 -耗时 : 25
2019-05-24 21:00:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-24 21:00:36 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-24 21:00:36 -HTTP METHOD : GET
2019-05-24 21:00:36 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-24 21:00:36 -参数 : [{limit=10, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@3a51d20b]
2019-05-24 21:00:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-24 21:00:36 -==> Parameters: 0(Integer), 10(Integer)
2019-05-24 21:00:37 -<==      Total: 3
2019-05-24 21:00:37 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-24 21:00:37 -==> Parameters: 
2019-05-24 21:00:37 -<==      Total: 1
2019-05-24 21:00:37 -耗时 : 174
2019-05-24 21:00:37 -返回值 : com.bootdo.common.utils.PageUtils@159548fb
2019-05-24 21:00:42 -请求地址 : http://localhost:8081/moneyList/moneyWZ/batchMoney
2019-05-24 21:00:42 -HTTP METHOD : POST
2019-05-24 21:00:42 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.batchMoney
2019-05-24 21:00:42 -参数 : [[Ljava.lang.Long;@2c967baa]
2019-05-24 21:00:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id in ( ? , ? , ? ) 
2019-05-24 21:00:42 -==> Parameters: 9(Long), 11(Long), 14(Long)
2019-05-24 21:00:42 -<==      Total: 3
2019-05-24 21:00:42 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 21:00:42 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), 7(String), -8.00(BigDecimal), 2019-05-24 21:00:42.834(Timestamp), 2019-03(String), 1(Long), 2019-05-24 21:00:42.834(Timestamp), 1(Long), null
2019-05-24 21:00:42 -<==    Updates: 1
2019-05-24 21:00:42 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_state`, `print_date`, `cost_poper`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 21:00:42 -==> Parameters: WS-0009(String), 考试的(String), B(String), 2(String), 0(String), 0(String), 1(Integer), 0.810(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), -8.00(BigDecimal), -8.00(BigDecimal), null, null, null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-24 21:00:42.94(Timestamp), 1(Long), null
2019-05-24 21:00:43 -<==    Updates: 1
2019-05-24 21:00:43 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 21:00:43 -==> Parameters: W-0011(String), 打发第(String), A(String), 2(String), 9(String), 1.80(BigDecimal), 2019-05-24 21:00:43.099(Timestamp), 2019-03(String), 1(Long), 2019-05-24 21:00:43.099(Timestamp), 1(Long), null
2019-05-24 21:00:43 -<==    Updates: 1
2019-05-24 21:00:43 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_state`, `print_date`, `cost_poper`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 21:00:43 -==> Parameters: W-0011(String), 打发第(String), A(String), 2(String), 1(String), 1(String), 1(Integer), 0.465(BigDecimal), 1.00(BigDecimal), 1.00(BigDecimal), 1.80(BigDecimal), 1.80(BigDecimal), null, null, null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-24 21:00:43.144(Timestamp), 1(Long), null
2019-05-24 21:00:43 -<==    Updates: 1
2019-05-24 21:00:43 -==>  Preparing: insert into elec_log ( `user_id`, `user_name`, `user_type`, `user_org`, `elec_type`, `elec_money`, `elec_date`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 21:00:43 -==> Parameters: WS-0001(String), 四大护法(String), A(String), 2(String), 6(String), 0.00(BigDecimal), 2019-05-24 21:00:43.209(Timestamp), 2019-03(String), 1(Long), 2019-05-24 21:00:43.209(Timestamp), 1(Long), null
2019-05-24 21:00:43 -<==    Updates: 1
2019-05-24 21:00:43 -==>  Preparing: insert into print ( `user_id`, `user_name`, `user_type`, `user_org`, `start`, `end`, `hu`, `elec_price`, `elec_amount`, `elec_cost`, `elec_sum`, `elec_money`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `heat_money`, `water_price`, `water_cost`, `water_sum`, `water_money`, `print_state`, `print_date`, `cost_poper`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-24 21:00:43 -==> Parameters: WS-0001(String), 四大护法(String), A(String), 2(String), 0(String), 0(String), 1(Integer), 0.465(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), 0.00(BigDecimal), null, null, null, null, null, null, null, null, null, null, null, null, 2019-03(String), 1(Long), 2019-05-24 21:00:43.248(Timestamp), 1(Long), null
2019-05-24 21:00:43 -<==    Updates: 1
2019-05-24 21:00:43 -耗时 : 545
2019-05-24 21:00:43 -返回值 : {msg=操作成功, code=0}
2019-05-24 21:29:57 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 436]

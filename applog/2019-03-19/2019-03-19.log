2019-03-19 08:16:37 -Starting BootdoApplication on ZJZL-20180906VX with PID 12580 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-19 08:16:37 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-19 08:16:37 -The following profiles are active: dev
2019-03-19 08:16:37 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2fc0cc3: startup date [Tue Mar 19 08:16:37 CST 2019]; root of context hierarchy
2019-03-19 08:16:46 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-19 08:16:51 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f54886f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:16:51 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e7a1b597] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:16:52 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:16:54 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:16:54 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:16:54 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-19 08:16:54 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-19 08:16:54 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:16:54 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:16:54 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:16:54 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:16:56 -Tomcat initialized with port(s): 8081 (http)
2019-03-19 08:16:56 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-19 08:16:56 -Starting service [Tomcat]
2019-03-19 08:16:56 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-19 08:16:57 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-19 08:16:57 -Initializing Spring embedded WebApplicationContext
2019-03-19 08:16:57 -Root WebApplicationContext: initialization completed in 19786 ms
2019-03-19 08:16:58 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-19 08:16:58 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-19 08:16:58 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-19 08:16:58 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-19 08:16:58 -Filter xssFilter was not registered (disabled)
2019-03-19 08:16:58 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-19 08:16:58 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-19 08:16:58 -Servlet statViewServlet mapped to [/druid/*]
2019-03-19 08:16:58 -Servlet dispatcherServlet mapped to [/]
2019-03-19 08:17:02 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2fc0cc3: startup date [Tue Mar 19 08:16:37 CST 2019]; root of context hierarchy
2019-03-19 08:17:03 -Using default implementation for ThreadExecutor
2019-03-19 08:17:03 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-19 08:17:03 -Quartz Scheduler v.2.2.1 created.
2019-03-19 08:17:03 -RAMJobStore initialized.
2019-03-19 08:17:03 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-19 08:17:03 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-19 08:17:03 -Quartz scheduler version: 2.2.1
2019-03-19 08:17:03 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@46a97805
2019-03-19 08:17:04 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-19 08:17:04 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-19 08:17:08 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 08:17:08 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-19 08:17:08 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-19 08:17:08 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-19 08:17:08 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-19 08:17:08 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-19 08:17:08 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-19 08:17:08 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-19 08:17:08 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-19 08:17:08 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-19 08:17:08 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-19 08:17:08 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:08 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-19 08:17:08 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-19 08:17:08 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-19 08:17:08 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-19 08:17:08 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-19 08:17:08 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-19 08:17:08 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-19 08:17:08 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-19 08:17:08 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-19 08:17:08 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:08 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-19 08:17:08 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-19 08:17:08 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-19 08:17:08 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:08 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-19 08:17:08 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 08:17:08 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 08:17:08 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-19 08:17:08 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-19 08:17:08 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-19 08:17:08 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-19 08:17:08 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-19 08:17:08 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:08 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-19 08:17:08 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-19 08:17:08 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-19 08:17:08 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-19 08:17:08 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-19 08:17:08 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-19 08:17:08 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:08 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-19 08:17:08 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-19 08:17:08 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-19 08:17:08 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 08:17:08 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 08:17:08 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-19 08:17:08 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-19 08:17:08 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-19 08:17:08 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-19 08:17:08 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-19 08:17:08 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-19 08:17:08 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-19 08:17:08 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 08:17:08 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-19 08:17:08 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 08:17:08 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-19 08:17:08 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-19 08:17:08 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-19 08:17:08 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-19 08:17:08 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 08:17:08 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:08 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 08:17:08 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-19 08:17:08 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-19 08:17:08 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 08:17:08 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-19 08:17:08 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-19 08:17:08 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-19 08:17:08 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-19 08:17:08 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:08 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-19 08:17:08 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-19 08:17:08 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 08:17:08 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-19 08:17:08 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 08:17:08 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-19 08:17:08 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-19 08:17:08 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-19 08:17:08 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 08:17:08 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:08 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 08:17:08 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-19 08:17:08 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 08:17:08 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-19 08:17:08 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-19 08:17:08 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-19 08:17:08 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-19 08:17:08 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-19 08:17:08 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-19 08:17:08 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-19 08:17:08 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 08:17:08 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:08 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 08:17:08 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-19 08:17:08 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-19 08:17:08 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-19 08:17:08 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-19 08:17:08 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 08:17:08 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:08 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 08:17:08 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-19 08:17:08 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-19 08:17:08 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-19 08:17:08 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-19 08:17:08 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 08:17:08 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:08 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 08:17:08 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-19 08:17:08 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-19 08:17:08 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-19 08:17:08 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-19 08:17:08 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-19 08:17:08 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:08 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-19 08:17:08 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-19 08:17:08 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-19 08:17:08 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-19 08:17:08 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:08 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-19 08:17:08 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-19 08:17:08 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-19 08:17:08 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-19 08:17:08 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:08 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-19 08:17:08 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-19 08:17:08 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-19 08:17:08 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-19 08:17:08 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-19 08:17:08 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-19 08:17:08 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-19 08:17:08 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-19 08:17:08 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-19 08:17:08 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-19 08:17:08 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-19 08:17:08 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-19 08:17:08 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-19 08:17:08 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 08:17:09 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-19 08:17:09 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 08:17:09 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-19 08:17:09 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-19 08:17:09 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-19 08:17:09 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:09 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-19 08:17:09 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-19 08:17:09 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-19 08:17:09 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 08:17:09 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-19 08:17:09 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-19 08:17:09 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-19 08:17:09 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-19 08:17:09 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-19 08:17:09 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-19 08:17:09 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-19 08:17:09 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:09 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-19 08:17:09 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-19 08:17:09 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-19 08:17:09 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-19 08:17:09 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-19 08:17:09 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:09 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-19 08:17:09 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-19 08:17:09 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-19 08:17:09 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:09 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-19 08:17:09 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-19 08:17:09 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-19 08:17:09 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-19 08:17:09 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 08:17:09 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-19 08:17:09 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-19 08:17:09 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 08:17:09 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:09 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 08:17:09 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 08:17:09 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-19 08:17:09 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-19 08:17:09 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-19 08:17:09 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-19 08:17:09 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-19 08:17:09 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-19 08:17:09 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:09 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-19 08:17:09 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:09 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:09 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-19 08:17:09 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 08:17:09 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-19 08:17:09 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 08:17:09 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-19 08:17:09 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-19 08:17:09 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-19 08:17:09 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 08:17:09 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:09 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 08:17:09 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:17:09 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-19 08:17:09 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:17:09 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-19 08:17:09 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 08:17:09 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-19 08:17:09 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-19 08:17:09 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-19 08:17:09 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-19 08:17:09 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-19 08:17:10 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-19 08:17:10 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 08:17:11 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2fc0cc3: startup date [Tue Mar 19 08:16:37 CST 2019]; root of context hierarchy
2019-03-19 08:17:11 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 08:17:11 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 08:17:11 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 08:17:11 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-19 08:17:11 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-19 08:17:15 -Registering beans for JMX exposure on startup
2019-03-19 08:17:15 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-19 08:17:15 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-19 08:17:15 -Starting beans in phase 2147483647
2019-03-19 08:17:15 -Context refreshed
2019-03-19 08:17:16 -Found 1 custom documentation plugin(s)
2019-03-19 08:17:16 -Scanning for api listing references
2019-03-19 08:17:17 -Generating unique operation named: removeUsingPOST_1
2019-03-19 08:17:17 -Generating unique operation named: addUsingGET_1
2019-03-19 08:17:17 -Generating unique operation named: editUsingGET_1
2019-03-19 08:17:17 -Generating unique operation named: listUsingGET_1
2019-03-19 08:17:17 -Generating unique operation named: removeUsingPOST_2
2019-03-19 08:17:17 -Generating unique operation named: removeUsingPOST_3
2019-03-19 08:17:18 -Generating unique operation named: saveUsingPOST_1
2019-03-19 08:17:18 -Generating unique operation named: updateUsingGET_1
2019-03-19 08:17:18 -Generating unique operation named: updateUsingHEAD_1
2019-03-19 08:17:18 -Generating unique operation named: updateUsingPOST_1
2019-03-19 08:17:18 -Generating unique operation named: updateUsingPUT_1
2019-03-19 08:17:18 -Generating unique operation named: updateUsingPATCH_1
2019-03-19 08:17:18 -Generating unique operation named: updateUsingDELETE_1
2019-03-19 08:17:18 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-19 08:17:18 -Generating unique operation named: updateUsingTRACE_1
2019-03-19 08:17:18 -Generating unique operation named: addUsingGET_2
2019-03-19 08:17:18 -Generating unique operation named: editUsingGET_2
2019-03-19 08:17:18 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-19 08:17:18 -Generating unique operation named: listUsingGET_2
2019-03-19 08:17:19 -Generating unique operation named: removeUsingPOST_4
2019-03-19 08:17:19 -Generating unique operation named: removeUsingPOST_5
2019-03-19 08:17:19 -Generating unique operation named: saveUsingPOST_2
2019-03-19 08:17:19 -Generating unique operation named: updateUsingGET_2
2019-03-19 08:17:19 -Generating unique operation named: updateUsingHEAD_2
2019-03-19 08:17:19 -Generating unique operation named: updateUsingPOST_2
2019-03-19 08:17:19 -Generating unique operation named: updateUsingPUT_2
2019-03-19 08:17:19 -Generating unique operation named: updateUsingPATCH_2
2019-03-19 08:17:19 -Generating unique operation named: updateUsingDELETE_2
2019-03-19 08:17:19 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-19 08:17:19 -Generating unique operation named: updateUsingTRACE_2
2019-03-19 08:17:19 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-19 08:17:19 -Generating unique operation named: addUsingGET_3
2019-03-19 08:17:19 -Generating unique operation named: editUsingGET_3
2019-03-19 08:17:19 -Generating unique operation named: listUsingGET_3
2019-03-19 08:17:19 -Generating unique operation named: removeUsingPOST_6
2019-03-19 08:17:20 -Generating unique operation named: removeUsingPOST_7
2019-03-19 08:17:20 -Generating unique operation named: saveUsingPOST_3
2019-03-19 08:17:20 -Generating unique operation named: updateUsingGET_3
2019-03-19 08:17:20 -Generating unique operation named: updateUsingHEAD_3
2019-03-19 08:17:20 -Generating unique operation named: updateUsingPOST_3
2019-03-19 08:17:20 -Generating unique operation named: updateUsingPUT_3
2019-03-19 08:17:20 -Generating unique operation named: updateUsingPATCH_3
2019-03-19 08:17:20 -Generating unique operation named: updateUsingDELETE_3
2019-03-19 08:17:20 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-19 08:17:20 -Generating unique operation named: updateUsingTRACE_3
2019-03-19 08:17:20 -Generating unique operation named: addUsingGET_4
2019-03-19 08:17:20 -Generating unique operation named: editUsingGET_4
2019-03-19 08:17:20 -Generating unique operation named: listUsingGET_4
2019-03-19 08:17:20 -Generating unique operation named: removeUsingPOST_8
2019-03-19 08:17:20 -Generating unique operation named: removeUsingPOST_9
2019-03-19 08:17:20 -Generating unique operation named: saveUsingPOST_4
2019-03-19 08:17:20 -Generating unique operation named: updateUsingGET_4
2019-03-19 08:17:20 -Generating unique operation named: updateUsingHEAD_4
2019-03-19 08:17:20 -Generating unique operation named: updateUsingPOST_4
2019-03-19 08:17:20 -Generating unique operation named: updateUsingPUT_4
2019-03-19 08:17:20 -Generating unique operation named: updateUsingPATCH_4
2019-03-19 08:17:20 -Generating unique operation named: updateUsingDELETE_4
2019-03-19 08:17:20 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-19 08:17:20 -Generating unique operation named: updateUsingTRACE_4
2019-03-19 08:17:20 -Generating unique operation named: ElecUsingGET_1
2019-03-19 08:17:20 -Generating unique operation named: addUsingGET_5
2019-03-19 08:17:20 -Generating unique operation named: editUsingGET_5
2019-03-19 08:17:20 -Generating unique operation named: listUsingGET_5
2019-03-19 08:17:20 -Generating unique operation named: removeUsingPOST_10
2019-03-19 08:17:20 -Generating unique operation named: removeUsingPOST_11
2019-03-19 08:17:20 -Generating unique operation named: saveUsingPOST_5
2019-03-19 08:17:20 -Generating unique operation named: updateUsingGET_5
2019-03-19 08:17:20 -Generating unique operation named: updateUsingHEAD_5
2019-03-19 08:17:20 -Generating unique operation named: updateUsingPOST_5
2019-03-19 08:17:20 -Generating unique operation named: updateUsingPUT_5
2019-03-19 08:17:20 -Generating unique operation named: updateUsingPATCH_5
2019-03-19 08:17:20 -Generating unique operation named: updateUsingDELETE_5
2019-03-19 08:17:20 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-19 08:17:20 -Generating unique operation named: updateUsingTRACE_5
2019-03-19 08:17:20 -Generating unique operation named: editUsingGET_6
2019-03-19 08:17:21 -Generating unique operation named: listUsingGET_6
2019-03-19 08:17:21 -Generating unique operation named: updateUsingPOST_6
2019-03-19 08:17:21 -Generating unique operation named: addUsingGET_6
2019-03-19 08:17:21 -Generating unique operation named: editUsingGET_7
2019-03-19 08:17:21 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-19 08:17:21 -Generating unique operation named: listUsingGET_7
2019-03-19 08:17:21 -Generating unique operation named: removeUsingPOST_12
2019-03-19 08:17:21 -Generating unique operation named: removeUsingPOST_13
2019-03-19 08:17:21 -Generating unique operation named: saveUsingPOST_6
2019-03-19 08:17:21 -Generating unique operation named: updateUsingGET_6
2019-03-19 08:17:21 -Generating unique operation named: updateUsingHEAD_6
2019-03-19 08:17:21 -Generating unique operation named: updateUsingPOST_7
2019-03-19 08:17:21 -Generating unique operation named: updateUsingPUT_6
2019-03-19 08:17:21 -Generating unique operation named: updateUsingPATCH_6
2019-03-19 08:17:21 -Generating unique operation named: updateUsingDELETE_6
2019-03-19 08:17:21 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-19 08:17:21 -Generating unique operation named: updateUsingTRACE_6
2019-03-19 08:17:21 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-19 08:17:21 -Generating unique operation named: addUsingGET_7
2019-03-19 08:17:21 -Generating unique operation named: editUsingGET_8
2019-03-19 08:17:21 -Generating unique operation named: listUsingGET_8
2019-03-19 08:17:21 -Generating unique operation named: removeUsingPOST_14
2019-03-19 08:17:21 -Generating unique operation named: removeUsingPOST_15
2019-03-19 08:17:21 -Generating unique operation named: saveUsingPOST_7
2019-03-19 08:17:21 -Generating unique operation named: updateUsingGET_7
2019-03-19 08:17:21 -Generating unique operation named: updateUsingHEAD_7
2019-03-19 08:17:21 -Generating unique operation named: updateUsingPOST_8
2019-03-19 08:17:21 -Generating unique operation named: updateUsingPUT_7
2019-03-19 08:17:21 -Generating unique operation named: updateUsingPATCH_7
2019-03-19 08:17:21 -Generating unique operation named: updateUsingDELETE_7
2019-03-19 08:17:21 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-19 08:17:21 -Generating unique operation named: updateUsingTRACE_7
2019-03-19 08:17:21 -Generating unique operation named: addUsingGET_8
2019-03-19 08:17:21 -Generating unique operation named: editUsingGET_9
2019-03-19 08:17:21 -Generating unique operation named: listUsingGET_9
2019-03-19 08:17:21 -Generating unique operation named: removeUsingPOST_16
2019-03-19 08:17:21 -Generating unique operation named: removeUsingPOST_17
2019-03-19 08:17:21 -Generating unique operation named: saveUsingPOST_8
2019-03-19 08:17:21 -Generating unique operation named: updateUsingGET_8
2019-03-19 08:17:21 -Generating unique operation named: updateUsingHEAD_8
2019-03-19 08:17:21 -Generating unique operation named: updateUsingPOST_9
2019-03-19 08:17:21 -Generating unique operation named: updateUsingPUT_8
2019-03-19 08:17:21 -Generating unique operation named: updateUsingPATCH_8
2019-03-19 08:17:21 -Generating unique operation named: updateUsingDELETE_8
2019-03-19 08:17:21 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-19 08:17:21 -Generating unique operation named: updateUsingTRACE_8
2019-03-19 08:17:21 -Generating unique operation named: addUsingGET_9
2019-03-19 08:17:21 -Generating unique operation named: editUsingGET_10
2019-03-19 08:17:21 -Generating unique operation named: infoUsingGET_1
2019-03-19 08:17:21 -Generating unique operation named: infoUsingHEAD_1
2019-03-19 08:17:21 -Generating unique operation named: infoUsingPOST_1
2019-03-19 08:17:21 -Generating unique operation named: infoUsingPUT_1
2019-03-19 08:17:21 -Generating unique operation named: infoUsingPATCH_1
2019-03-19 08:17:21 -Generating unique operation named: infoUsingDELETE_1
2019-03-19 08:17:21 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-19 08:17:21 -Generating unique operation named: infoUsingTRACE_1
2019-03-19 08:17:21 -Generating unique operation named: listUsingGET_10
2019-03-19 08:17:21 -Generating unique operation named: removeUsingPOST_18
2019-03-19 08:17:21 -Generating unique operation named: removeUsingPOST_19
2019-03-19 08:17:21 -Generating unique operation named: saveUsingPOST_9
2019-03-19 08:17:21 -Generating unique operation named: updateUsingPOST_10
2019-03-19 08:17:21 -Generating unique operation named: listUsingGET_11
2019-03-19 08:17:21 -Generating unique operation named: removeUsingPOST_20
2019-03-19 08:17:21 -Generating unique operation named: welcomeUsingGET_1
2019-03-19 08:17:21 -Generating unique operation named: addUsingGET_10
2019-03-19 08:17:21 -Generating unique operation named: editUsingGET_11
2019-03-19 08:17:21 -Generating unique operation named: listUsingGET_12
2019-03-19 08:17:21 -Generating unique operation named: removeUsingPOST_21
2019-03-19 08:17:21 -Generating unique operation named: saveUsingPOST_10
2019-03-19 08:17:21 -Generating unique operation named: treeUsingGET_1
2019-03-19 08:17:21 -Generating unique operation named: treeUsingGET_2
2019-03-19 08:17:21 -Generating unique operation named: updateUsingPOST_11
2019-03-19 08:17:21 -Generating unique operation named: addUsingGET_11
2019-03-19 08:17:21 -Generating unique operation named: editUsingGET_12
2019-03-19 08:17:21 -Generating unique operation named: listUsingGET_13
2019-03-19 08:17:21 -Generating unique operation named: removeUsingPOST_22
2019-03-19 08:17:21 -Generating unique operation named: removeUsingPOST_23
2019-03-19 08:17:21 -Generating unique operation named: saveUsingPOST_11
2019-03-19 08:17:22 -Generating unique operation named: updateUsingGET_9
2019-03-19 08:17:22 -Generating unique operation named: updateUsingHEAD_9
2019-03-19 08:17:22 -Generating unique operation named: updateUsingPOST_12
2019-03-19 08:17:22 -Generating unique operation named: updateUsingPUT_9
2019-03-19 08:17:22 -Generating unique operation named: updateUsingPATCH_9
2019-03-19 08:17:22 -Generating unique operation named: updateUsingDELETE_9
2019-03-19 08:17:22 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-19 08:17:22 -Generating unique operation named: updateUsingTRACE_9
2019-03-19 08:17:22 -Generating unique operation named: addUsingGET_12
2019-03-19 08:17:22 -Generating unique operation named: editUsingGET_13
2019-03-19 08:17:22 -Generating unique operation named: listUsingGET_14
2019-03-19 08:17:22 -Generating unique operation named: removeUsingPOST_24
2019-03-19 08:17:22 -Generating unique operation named: removeUsingPOST_25
2019-03-19 08:17:22 -Generating unique operation named: saveUsingPOST_12
2019-03-19 08:17:22 -Generating unique operation named: updateUsingGET_10
2019-03-19 08:17:22 -Generating unique operation named: updateUsingHEAD_10
2019-03-19 08:17:22 -Generating unique operation named: updateUsingPOST_13
2019-03-19 08:17:22 -Generating unique operation named: updateUsingPUT_10
2019-03-19 08:17:22 -Generating unique operation named: updateUsingPATCH_10
2019-03-19 08:17:22 -Generating unique operation named: updateUsingDELETE_10
2019-03-19 08:17:22 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-19 08:17:22 -Generating unique operation named: updateUsingTRACE_10
2019-03-19 08:17:22 -Generating unique operation named: addUsingGET_13
2019-03-19 08:17:22 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-19 08:17:22 -Generating unique operation named: editUsingGET_14
2019-03-19 08:17:22 -Generating unique operation named: listUsingGET_15
2019-03-19 08:17:22 -Generating unique operation named: saveUsingPOST_13
2019-03-19 08:17:22 -Generating unique operation named: saveUsingPOST_14
2019-03-19 08:17:22 -Generating unique operation named: updateUsingPOST_14
2019-03-19 08:17:22 -Generating unique operation named: listUsingGET_16
2019-03-19 08:17:22 -Generating unique operation named: listUsingHEAD_1
2019-03-19 08:17:22 -Generating unique operation named: listUsingPOST_1
2019-03-19 08:17:22 -Generating unique operation named: listUsingPUT_1
2019-03-19 08:17:22 -Generating unique operation named: listUsingPATCH_1
2019-03-19 08:17:22 -Generating unique operation named: listUsingDELETE_1
2019-03-19 08:17:22 -Generating unique operation named: listUsingOPTIONS_1
2019-03-19 08:17:22 -Generating unique operation named: listUsingTRACE_1
2019-03-19 08:17:22 -Generating unique operation named: addUsingGET_14
2019-03-19 08:17:22 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-19 08:17:22 -Generating unique operation named: editUsingGET_15
2019-03-19 08:17:22 -Generating unique operation named: listUsingGET_17
2019-03-19 08:17:22 -Generating unique operation named: removeUsingPOST_26
2019-03-19 08:17:22 -Generating unique operation named: saveUsingPOST_15
2019-03-19 08:17:22 -Generating unique operation named: treeUsingGET_3
2019-03-19 08:17:22 -Generating unique operation named: treeViewUsingGET_1
2019-03-19 08:17:22 -Generating unique operation named: updateUsingPOST_15
2019-03-19 08:17:22 -Generating unique operation named: addUsingGET_15
2019-03-19 08:17:22 -Generating unique operation named: editUsingGET_16
2019-03-19 08:17:22 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-19 08:17:22 -Generating unique operation named: listUsingGET_18
2019-03-19 08:17:22 -Generating unique operation named: removeUsingPOST_27
2019-03-19 08:17:22 -Generating unique operation named: removeUsingPOST_28
2019-03-19 08:17:22 -Generating unique operation named: saveUsingPOST_16
2019-03-19 08:17:22 -Generating unique operation named: updateUsingGET_11
2019-03-19 08:17:22 -Generating unique operation named: updateUsingHEAD_11
2019-03-19 08:17:22 -Generating unique operation named: updateUsingPOST_16
2019-03-19 08:17:22 -Generating unique operation named: updateUsingPUT_11
2019-03-19 08:17:22 -Generating unique operation named: updateUsingPATCH_11
2019-03-19 08:17:22 -Generating unique operation named: updateUsingDELETE_11
2019-03-19 08:17:22 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-19 08:17:22 -Generating unique operation named: updateUsingTRACE_11
2019-03-19 08:17:22 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-19 08:17:22 -Generating unique operation named: addUsingGET_16
2019-03-19 08:17:22 -Generating unique operation named: editUsingGET_17
2019-03-19 08:17:22 -Generating unique operation named: listUsingGET_19
2019-03-19 08:17:22 -Generating unique operation named: removeUsingPOST_29
2019-03-19 08:17:22 -Generating unique operation named: removeUsingPOST_30
2019-03-19 08:17:22 -Generating unique operation named: saveUsingPOST_17
2019-03-19 08:17:22 -Generating unique operation named: updateUsingGET_12
2019-03-19 08:17:22 -Generating unique operation named: updateUsingHEAD_12
2019-03-19 08:17:22 -Generating unique operation named: updateUsingPOST_17
2019-03-19 08:17:22 -Generating unique operation named: updateUsingPUT_12
2019-03-19 08:17:22 -Generating unique operation named: updateUsingPATCH_12
2019-03-19 08:17:22 -Generating unique operation named: updateUsingDELETE_12
2019-03-19 08:17:22 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-19 08:17:22 -Generating unique operation named: updateUsingTRACE_12
2019-03-19 08:17:22 -Generating unique operation named: addUsingGET_17
2019-03-19 08:17:22 -Generating unique operation named: editUsingGET_18
2019-03-19 08:17:22 -Generating unique operation named: listUsingGET_20
2019-03-19 08:17:22 -Generating unique operation named: removeUsingPOST_31
2019-03-19 08:17:22 -Generating unique operation named: removeUsingPOST_32
2019-03-19 08:17:22 -Generating unique operation named: saveUsingPOST_18
2019-03-19 08:17:22 -Generating unique operation named: updateUsingGET_13
2019-03-19 08:17:22 -Generating unique operation named: updateUsingHEAD_13
2019-03-19 08:17:22 -Generating unique operation named: updateUsingPOST_18
2019-03-19 08:17:23 -Generating unique operation named: updateUsingPUT_13
2019-03-19 08:17:23 -Generating unique operation named: updateUsingPATCH_13
2019-03-19 08:17:23 -Generating unique operation named: updateUsingDELETE_13
2019-03-19 08:17:23 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-19 08:17:23 -Generating unique operation named: updateUsingTRACE_13
2019-03-19 08:17:23 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-19 08:17:23 -Starting Quartz Scheduler now
2019-03-19 08:17:23 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-19 08:17:23 -Starting...
2019-03-19 08:17:23 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 08:17:23 -Started.
2019-03-19 08:17:23 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-19 08:17:23 -Using a shared selector for servlet write/read
2019-03-19 08:17:23 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-19 08:17:23 -Started BootdoApplication in 49.102 seconds (JVM running for 51.117)
2019-03-19 08:17:23 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-19 08:17:23 -==> Parameters: 
2019-03-19 08:17:24 -<==      Total: 1
2019-03-19 08:17:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-19 08:17:39 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-19 08:17:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 61 ms
2019-03-19 08:17:40 -Enabling session validation scheduler...
2019-03-19 08:17:40 -请求地址 : http://localhost:8081/
2019-03-19 08:17:40 -HTTP METHOD : GET
2019-03-19 08:17:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-19 08:17:40 -参数 : [{}]
2019-03-19 08:17:40 -耗时 : 3
2019-03-19 08:17:40 -返回值 : redirect:/index
2019-03-19 08:17:40 -请求地址 : http://localhost:8081/login;JSESSIONID=4fba109b-84f0-4c49-9ed2-4a161c64bc5a
2019-03-19 08:17:40 -HTTP METHOD : GET
2019-03-19 08:17:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 08:17:40 -参数 : [{}]
2019-03-19 08:17:40 -耗时 : 1
2019-03-19 08:17:40 -返回值 : login
2019-03-19 08:17:44 -请求地址 : http://localhost:8081/getVerify
2019-03-19 08:17:44 -HTTP METHOD : GET
2019-03-19 08:17:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 08:17:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@76d8822e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4bff377f]
2019-03-19 08:17:48 -4632
2019-03-19 08:17:49 -耗时 : 5097
2019-03-19 08:17:49 -返回值 : null
2019-03-19 08:18:00 -请求地址 : http://localhost:8081/login
2019-03-19 08:18:00 -HTTP METHOD : POST
2019-03-19 08:18:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 08:18:00 -参数 : [admin, 111111, 4632, org.apache.shiro.web.servlet.ShiroHttpServletRequest@62538593]
2019-03-19 08:18:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 08:18:00 -==> Parameters: admin(String)
2019-03-19 08:18:00 -<==      Total: 1
2019-03-19 08:18:00 -耗时 : 191
2019-03-19 08:18:00 -返回值 : {msg=操作成功, code=0}
2019-03-19 08:18:01 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-19 08:18:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:18:01 -==> Parameters: 1(Long), admin(String), 登录(String), 191(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 08:18:01.07(Timestamp)
2019-03-19 08:18:01 -<==    Updates: 1
2019-03-19 08:18:01 -请求地址 : http://localhost:8081/index
2019-03-19 08:18:01 -HTTP METHOD : GET
2019-03-19 08:18:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 08:18:01 -参数 : [{}]
2019-03-19 08:18:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 08:18:01 -==> Parameters: 1(Long)
2019-03-19 08:18:01 -<==      Total: 45
2019-03-19 08:18:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 08:18:01 -==> Parameters: 138(Long)
2019-03-19 08:18:01 -<==      Total: 1
2019-03-19 08:18:01 -耗时 : 365
2019-03-19 08:18:01 -返回值 : index_v1
2019-03-19 08:18:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:18:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 365(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-us(String), 127.0.0.1(String), 2019-03-19 08:18:01.767(Timestamp)
2019-03-19 08:18:01 -<==    Updates: 1
2019-03-19 08:18:01 -请求地址 : http://localhost:8081/main
2019-03-19 08:18:01 -HTTP METHOD : GET
2019-03-19 08:18:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:18:01 -参数 : []
2019-03-19 08:18:01 -耗时 : 0
2019-03-19 08:18:01 -返回值 : main
2019-03-19 08:18:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 08:18:03 -HTTP METHOD : GET
2019-03-19 08:18:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 08:18:03 -参数 : []
2019-03-19 08:18:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 08:18:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 08:18:03 -<==      Total: 0
2019-03-19 08:18:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 08:18:03 -==> Parameters: 1(Long), 0(String)
2019-03-19 08:18:03 -<==      Total: 1
2019-03-19 08:18:03 -耗时 : 146
2019-03-19 08:18:03 -返回值 : com.bootdo.common.utils.PageUtils@48359897
2019-03-19 08:18:03 -请求地址 : http://localhost:8081/main
2019-03-19 08:18:03 -HTTP METHOD : GET
2019-03-19 08:18:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:18:03 -参数 : []
2019-03-19 08:18:03 -耗时 : 1
2019-03-19 08:18:03 -返回值 : main
2019-03-19 08:18:10 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2]
2019-03-19 08:18:22 -请求地址 : http://localhost:8081/common/long
2019-03-19 08:18:22 -HTTP METHOD : GET
2019-03-19 08:18:22 -CLASS_METHOD : com.bootdo.common.controller.LongController.Long
2019-03-19 08:18:22 -参数 : []
2019-03-19 08:18:22 -耗时 : 1
2019-03-19 08:18:22 -返回值 : common/job/Long
2019-03-19 08:19:00 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 08:19:00 -==> Parameters: 1(Long)
2019-03-19 08:19:00 -<==      Total: 85
2019-03-19 08:19:00 -请求地址 : http://localhost:8081/charts/countDD
2019-03-19 08:19:00 -HTTP METHOD : GET
2019-03-19 08:19:00 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-19 08:19:00 -参数 : []
2019-03-19 08:19:00 -耗时 : 0
2019-03-19 08:19:00 -返回值 : charts/countDD
2019-03-19 08:19:02 -请求地址 : http://localhost:8081/charts/countMM
2019-03-19 08:19:02 -HTTP METHOD : GET
2019-03-19 08:19:02 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-03-19 08:19:02 -参数 : []
2019-03-19 08:19:02 -耗时 : 1
2019-03-19 08:19:02 -返回值 : charts/countMM
2019-03-19 08:19:19 -请求地址 : http://localhost:8081/charts/countOwe
2019-03-19 08:19:19 -HTTP METHOD : GET
2019-03-19 08:19:19 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-03-19 08:19:19 -参数 : []
2019-03-19 08:19:19 -耗时 : 0
2019-03-19 08:19:19 -返回值 : charts/countOwe
2019-03-19 08:19:21 -请求地址 : http://localhost:8081/charts/countYY
2019-03-19 08:19:21 -HTTP METHOD : GET
2019-03-19 08:19:21 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-03-19 08:19:21 -参数 : []
2019-03-19 08:19:21 -耗时 : 0
2019-03-19 08:19:21 -返回值 : charts/countYY
2019-03-19 08:19:23 -请求地址 : http://localhost:8081/charts/countRun
2019-03-19 08:19:23 -HTTP METHOD : GET
2019-03-19 08:19:23 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-19 08:19:23 -参数 : []
2019-03-19 08:19:23 -耗时 : 1
2019-03-19 08:19:23 -返回值 : charts/countRun
2019-03-19 08:24:11 -请求地址 : http://localhost:8081/index
2019-03-19 08:24:11 -HTTP METHOD : GET
2019-03-19 08:24:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 08:24:11 -参数 : [{}]
2019-03-19 08:24:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 08:24:11 -==> Parameters: 1(Long)
2019-03-19 08:24:11 -<==      Total: 45
2019-03-19 08:24:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 08:24:11 -==> Parameters: 138(Long)
2019-03-19 08:24:11 -<==      Total: 1
2019-03-19 08:24:11 -耗时 : 31
2019-03-19 08:24:11 -返回值 : index_v1
2019-03-19 08:24:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:24:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-us(String), 127.0.0.1(String), 2019-03-19 08:24:11.637(Timestamp)
2019-03-19 08:24:12 -<==    Updates: 1
2019-03-19 08:24:12 -请求地址 : http://localhost:8081/main
2019-03-19 08:24:12 -HTTP METHOD : GET
2019-03-19 08:24:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:24:12 -参数 : []
2019-03-19 08:24:12 -耗时 : 1
2019-03-19 08:24:12 -返回值 : main
2019-03-19 08:24:14 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 08:24:14 -HTTP METHOD : GET
2019-03-19 08:24:14 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 08:24:14 -参数 : []
2019-03-19 08:24:14 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 08:24:14 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 08:24:14 -<==      Total: 0
2019-03-19 08:24:14 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 08:24:14 -==> Parameters: 1(Long), 0(String)
2019-03-19 08:24:14 -<==      Total: 1
2019-03-19 08:24:14 -耗时 : 8
2019-03-19 08:24:14 -返回值 : com.bootdo.common.utils.PageUtils@7715aae7
2019-03-19 08:24:14 -请求地址 : http://localhost:8081/main
2019-03-19 08:24:14 -HTTP METHOD : GET
2019-03-19 08:24:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:24:14 -参数 : []
2019-03-19 08:24:14 -耗时 : 0
2019-03-19 08:24:14 -返回值 : main
2019-03-19 08:24:28 -请求地址 : http://localhost:8081/charts/countDD
2019-03-19 08:24:28 -HTTP METHOD : GET
2019-03-19 08:24:28 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-19 08:24:28 -参数 : []
2019-03-19 08:24:28 -耗时 : 0
2019-03-19 08:24:28 -返回值 : charts/countDD
2019-03-19 08:26:16 -请求地址 : http://localhost:8081/login;JSESSIONID=845f01a0-f604-4642-b1f8-31cbfd554a33
2019-03-19 08:26:16 -HTTP METHOD : GET
2019-03-19 08:26:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 08:26:16 -参数 : [{}]
2019-03-19 08:26:16 -耗时 : 0
2019-03-19 08:26:16 -返回值 : login
2019-03-19 08:26:16 -请求地址 : http://localhost:8081/login;JSESSIONID=845f01a0-f604-4642-b1f8-31cbfd554a33
2019-03-19 08:26:16 -HTTP METHOD : GET
2019-03-19 08:26:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 08:26:16 -参数 : [{}]
2019-03-19 08:26:16 -耗时 : 0
2019-03-19 08:26:16 -返回值 : login
2019-03-19 08:26:16 -请求地址 : http://localhost:8081/getVerify
2019-03-19 08:26:16 -HTTP METHOD : GET
2019-03-19 08:26:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 08:26:16 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5eb41a64, org.apache.shiro.web.servlet.ShiroHttpServletResponse@43768569]
2019-03-19 08:26:16 -4034
2019-03-19 08:26:16 -耗时 : 13
2019-03-19 08:26:16 -返回值 : null
2019-03-19 08:26:17 -请求地址 : http://localhost:8081/getVerify
2019-03-19 08:26:17 -HTTP METHOD : GET
2019-03-19 08:26:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 08:26:17 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@51f1e9f8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@27250181]
2019-03-19 08:26:17 -1485
2019-03-19 08:26:17 -耗时 : 15
2019-03-19 08:26:17 -返回值 : null
2019-03-19 08:26:17 -请求地址 : http://localhost:8081/login
2019-03-19 08:26:17 -HTTP METHOD : GET
2019-03-19 08:26:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 08:26:17 -参数 : [{}]
2019-03-19 08:26:17 -耗时 : 1
2019-03-19 08:26:17 -返回值 : login
2019-03-19 08:26:22 -请求地址 : http://localhost:8081/login
2019-03-19 08:26:22 -HTTP METHOD : POST
2019-03-19 08:26:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 08:26:22 -参数 : [admin, 111111, 1485, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1c3e89b]
2019-03-19 08:26:22 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 08:26:22 -==> Parameters: admin(String)
2019-03-19 08:26:22 -<==      Total: 1
2019-03-19 08:26:22 -耗时 : 7
2019-03-19 08:26:22 -返回值 : {msg=操作成功, code=0}
2019-03-19 08:26:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:26:22 -请求地址 : http://localhost:8081/index
2019-03-19 08:26:22 -HTTP METHOD : GET
2019-03-19 08:26:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 08:26:22 -参数 : [{}]
2019-03-19 08:26:22 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 08:26:22.546(Timestamp)
2019-03-19 08:26:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 08:26:22 -==> Parameters: 1(Long)
2019-03-19 08:26:22 -<==    Updates: 1
2019-03-19 08:26:22 -<==      Total: 45
2019-03-19 08:26:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 08:26:22 -==> Parameters: 138(Long)
2019-03-19 08:26:22 -<==      Total: 1
2019-03-19 08:26:22 -耗时 : 209
2019-03-19 08:26:22 -返回值 : index_v1
2019-03-19 08:26:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:26:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 209(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-us(String), 127.0.0.1(String), 2019-03-19 08:26:22.789(Timestamp)
2019-03-19 08:26:22 -请求地址 : http://localhost:8081/main
2019-03-19 08:26:22 -HTTP METHOD : GET
2019-03-19 08:26:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:26:22 -参数 : []
2019-03-19 08:26:22 -耗时 : 0
2019-03-19 08:26:22 -返回值 : main
2019-03-19 08:26:22 -<==    Updates: 1
2019-03-19 08:26:23 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 08:26:23 -HTTP METHOD : GET
2019-03-19 08:26:23 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 08:26:23 -参数 : []
2019-03-19 08:26:23 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 08:26:23 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 08:26:23 -<==      Total: 0
2019-03-19 08:26:23 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 08:26:23 -==> Parameters: 1(Long), 0(String)
2019-03-19 08:26:23 -<==      Total: 1
2019-03-19 08:26:23 -耗时 : 15
2019-03-19 08:26:23 -返回值 : com.bootdo.common.utils.PageUtils@39d05abb
2019-03-19 08:26:23 -请求地址 : http://localhost:8081/main
2019-03-19 08:26:23 -HTTP METHOD : GET
2019-03-19 08:26:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:26:23 -参数 : []
2019-03-19 08:26:23 -耗时 : 1
2019-03-19 08:26:23 -返回值 : main
2019-03-19 08:26:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 08:26:37 -==> Parameters: 1(Long)
2019-03-19 08:26:37 -<==      Total: 85
2019-03-19 08:26:37 -请求地址 : http://localhost:8081/charts/countDD
2019-03-19 08:26:37 -HTTP METHOD : GET
2019-03-19 08:26:37 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-19 08:26:37 -参数 : []
2019-03-19 08:26:37 -耗时 : 0
2019-03-19 08:26:37 -返回值 : charts/countDD
2019-03-19 08:27:41 -请求地址 : http://localhost:8081/index
2019-03-19 08:27:41 -HTTP METHOD : GET
2019-03-19 08:27:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 08:27:41 -参数 : [{}]
2019-03-19 08:27:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 08:27:41 -==> Parameters: 1(Long)
2019-03-19 08:27:41 -<==      Total: 45
2019-03-19 08:27:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 08:27:41 -==> Parameters: 138(Long)
2019-03-19 08:27:41 -<==      Total: 1
2019-03-19 08:27:41 -耗时 : 23
2019-03-19 08:27:41 -返回值 : index_v1
2019-03-19 08:27:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:27:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-us(String), 127.0.0.1(String), 2019-03-19 08:27:41.127(Timestamp)
2019-03-19 08:27:41 -请求地址 : http://localhost:8081/main
2019-03-19 08:27:41 -HTTP METHOD : GET
2019-03-19 08:27:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:27:41 -参数 : []
2019-03-19 08:27:41 -耗时 : 11
2019-03-19 08:27:41 -返回值 : main
2019-03-19 08:27:41 -<==    Updates: 1
2019-03-19 08:27:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 08:27:41 -HTTP METHOD : GET
2019-03-19 08:27:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 08:27:41 -参数 : []
2019-03-19 08:27:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 08:27:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 08:27:41 -<==      Total: 0
2019-03-19 08:27:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 08:27:41 -==> Parameters: 1(Long), 0(String)
2019-03-19 08:27:41 -<==      Total: 1
2019-03-19 08:27:41 -耗时 : 9
2019-03-19 08:27:41 -返回值 : com.bootdo.common.utils.PageUtils@605df17c
2019-03-19 08:27:41 -请求地址 : http://localhost:8081/main
2019-03-19 08:27:41 -HTTP METHOD : GET
2019-03-19 08:27:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:27:41 -参数 : []
2019-03-19 08:27:41 -耗时 : 1
2019-03-19 08:27:41 -返回值 : main
2019-03-19 08:27:44 -请求地址 : http://localhost:8081/charts/countDD
2019-03-19 08:27:44 -HTTP METHOD : GET
2019-03-19 08:27:44 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-19 08:27:44 -参数 : []
2019-03-19 08:27:44 -耗时 : 1
2019-03-19 08:27:44 -返回值 : charts/countDD
2019-03-19 08:27:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:27:44 -HTTP METHOD : GET
2019-03-19 08:27:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:27:44 -参数 : [userType]
2019-03-19 08:27:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:27:44 -==> Parameters: userType(String)
2019-03-19 08:27:44 -<==      Total: 2
2019-03-19 08:27:44 -耗时 : 51
2019-03-19 08:27:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:28:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 08:28:14 -HTTP METHOD : GET
2019-03-19 08:28:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 08:28:14 -参数 : []
2019-03-19 08:28:14 -耗时 : 1
2019-03-19 08:28:14 -返回值 : system/dept/deptTree
2019-03-19 08:28:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 08:28:14 -HTTP METHOD : GET
2019-03-19 08:28:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 08:28:14 -参数 : []
2019-03-19 08:28:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 08:28:14 -==> Parameters: 
2019-03-19 08:28:14 -<==      Total: 3
2019-03-19 08:28:14 -耗时 : 93
2019-03-19 08:28:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 08:32:32 -请求地址 : http://localhost:8081/index
2019-03-19 08:32:32 -HTTP METHOD : GET
2019-03-19 08:32:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 08:32:32 -参数 : [{}]
2019-03-19 08:32:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 08:32:32 -==> Parameters: 1(Long)
2019-03-19 08:32:32 -<==      Total: 45
2019-03-19 08:32:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 08:32:32 -==> Parameters: 138(Long)
2019-03-19 08:32:32 -<==      Total: 1
2019-03-19 08:32:32 -耗时 : 50
2019-03-19 08:32:32 -返回值 : index_v1
2019-03-19 08:32:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:32:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 50(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","text":"基础管理"},{"attributes":{"icon":"fa fa-desktop"},"checked":false,"children":[{"attributes":{"icon":"fa fa-us(String), 127.0.0.1(String), 2019-03-19 08:32:32.544(Timestamp)
2019-03-19 08:32:32 -<==    Updates: 1
2019-03-19 08:32:32 -请求地址 : http://localhost:8081/main
2019-03-19 08:32:32 -HTTP METHOD : GET
2019-03-19 08:32:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:32:32 -参数 : []
2019-03-19 08:32:32 -耗时 : 1
2019-03-19 08:32:32 -返回值 : main
2019-03-19 08:32:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 08:32:33 -HTTP METHOD : GET
2019-03-19 08:32:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 08:32:33 -参数 : []
2019-03-19 08:32:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 08:32:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 08:32:33 -<==      Total: 0
2019-03-19 08:32:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 08:32:33 -==> Parameters: 1(Long), 0(String)
2019-03-19 08:32:33 -<==      Total: 1
2019-03-19 08:32:33 -耗时 : 11
2019-03-19 08:32:33 -返回值 : com.bootdo.common.utils.PageUtils@7cd3b93
2019-03-19 08:32:33 -请求地址 : http://localhost:8081/main
2019-03-19 08:32:33 -HTTP METHOD : GET
2019-03-19 08:32:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:32:33 -参数 : []
2019-03-19 08:32:33 -耗时 : 1
2019-03-19 08:32:33 -返回值 : main
2019-03-19 08:32:38 -请求地址 : http://localhost:8081/charts/countOwe
2019-03-19 08:32:38 -HTTP METHOD : GET
2019-03-19 08:32:38 -CLASS_METHOD : com.bootdo.charts.controller.countOweController.countOwe
2019-03-19 08:32:38 -参数 : []
2019-03-19 08:32:38 -耗时 : 1
2019-03-19 08:32:38 -返回值 : charts/countOwe
2019-03-19 08:32:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:32:39 -HTTP METHOD : GET
2019-03-19 08:32:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:32:39 -参数 : [userType]
2019-03-19 08:32:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:32:39 -==> Parameters: userType(String)
2019-03-19 08:32:39 -<==      Total: 2
2019-03-19 08:32:39 -耗时 : 6
2019-03-19 08:32:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:32:40 -请求地址 : http://localhost:8081/charts/countYY
2019-03-19 08:32:40 -HTTP METHOD : GET
2019-03-19 08:32:40 -CLASS_METHOD : com.bootdo.charts.controller.countYYController.countYY
2019-03-19 08:32:40 -参数 : []
2019-03-19 08:32:40 -耗时 : 0
2019-03-19 08:32:40 -返回值 : charts/countYY
2019-03-19 08:32:41 -请求地址 : http://localhost:8081/charts/countMM
2019-03-19 08:32:41 -HTTP METHOD : GET
2019-03-19 08:32:41 -CLASS_METHOD : com.bootdo.charts.controller.countMMController.countMM
2019-03-19 08:32:41 -参数 : []
2019-03-19 08:32:41 -耗时 : 0
2019-03-19 08:32:41 -返回值 : charts/countMM
2019-03-19 08:32:42 -请求地址 : http://localhost:8081/charts/countDD
2019-03-19 08:32:42 -HTTP METHOD : GET
2019-03-19 08:32:42 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-19 08:32:42 -参数 : []
2019-03-19 08:32:42 -耗时 : 0
2019-03-19 08:32:42 -返回值 : charts/countDD
2019-03-19 08:32:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:32:42 -HTTP METHOD : GET
2019-03-19 08:32:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:32:42 -参数 : [userType]
2019-03-19 08:32:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:32:42 -==> Parameters: userType(String)
2019-03-19 08:32:42 -<==      Total: 2
2019-03-19 08:32:42 -耗时 : 4
2019-03-19 08:32:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:32:42 -请求地址 : http://localhost:8081/charts/countRun
2019-03-19 08:32:42 -HTTP METHOD : GET
2019-03-19 08:32:42 -CLASS_METHOD : com.bootdo.charts.controller.countRunController.countRun
2019-03-19 08:32:42 -参数 : []
2019-03-19 08:32:42 -耗时 : 0
2019-03-19 08:32:42 -返回值 : charts/countRun
2019-03-19 08:39:22 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 08:39:22 -==> Parameters: 1(Long)
2019-03-19 08:39:22 -<==      Total: 85
2019-03-19 08:39:22 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-19 08:39:22 -HTTP METHOD : GET
2019-03-19 08:39:22 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-19 08:39:22 -参数 : []
2019-03-19 08:39:22 -耗时 : 1
2019-03-19 08:39:22 -返回值 : /moneyList/moneyList
2019-03-19 08:40:03 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-19 08:40:03 -HTTP METHOD : GET
2019-03-19 08:40:03 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-19 08:40:03 -参数 : []
2019-03-19 08:40:03 -耗时 : 1
2019-03-19 08:40:03 -返回值 : /moneyList/moneyList
2019-03-19 08:42:13 -请求地址 : http://localhost:8081/sys/menu/
2019-03-19 08:42:13 -HTTP METHOD : GET
2019-03-19 08:42:13 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-03-19 08:42:13 -参数 : [{}]
2019-03-19 08:42:13 -耗时 : 0
2019-03-19 08:42:13 -返回值 : system/menu/menu
2019-03-19 08:42:13 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-19 08:42:13 -HTTP METHOD : GET
2019-03-19 08:42:13 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-19 08:42:13 -参数 : [{sort=order_num}]
2019-03-19 08:42:13 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-19 08:42:13 -==> Parameters: 
2019-03-19 08:42:14 -<==      Total: 106
2019-03-19 08:42:14 -耗时 : 50
2019-03-19 08:42:14 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-19 08:42:38 -请求地址 : http://localhost:8081/sys/menu/edit/102
2019-03-19 08:42:38 -HTTP METHOD : GET
2019-03-19 08:42:38 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-19 08:42:38 -参数 : [{}, 102]
2019-03-19 08:42:38 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-19 08:42:38 -==> Parameters: 102(Long)
2019-03-19 08:42:38 -<==      Total: 1
2019-03-19 08:42:38 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-19 08:42:38 -==> Parameters: 106(Long)
2019-03-19 08:42:38 -<==      Total: 1
2019-03-19 08:42:38 -耗时 : 21
2019-03-19 08:42:38 -返回值 : system/menu/edit
2019-03-19 08:42:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:42:38 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 21(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-19 08:42:38.56(Timestamp)
2019-03-19 08:42:38 -<==    Updates: 1
2019-03-19 08:42:42 -请求地址 : http://localhost:8081/sys/menu/edit/107
2019-03-19 08:42:42 -HTTP METHOD : GET
2019-03-19 08:42:42 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-19 08:42:42 -参数 : [{}, 107]
2019-03-19 08:42:42 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-19 08:42:42 -==> Parameters: 107(Long)
2019-03-19 08:42:42 -<==      Total: 1
2019-03-19 08:42:42 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-19 08:42:42 -==> Parameters: 106(Long)
2019-03-19 08:42:42 -<==      Total: 1
2019-03-19 08:42:42 -耗时 : 16
2019-03-19 08:42:42 -返回值 : system/menu/edit
2019-03-19 08:42:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:42:42 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 16(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-19 08:42:42.825(Timestamp)
2019-03-19 08:42:42 -<==    Updates: 1
2019-03-19 08:42:47 -请求地址 : http://localhost:8081/sys/role
2019-03-19 08:42:47 -HTTP METHOD : GET
2019-03-19 08:42:47 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2019-03-19 08:42:47 -参数 : []
2019-03-19 08:42:47 -耗时 : 2
2019-03-19 08:42:47 -返回值 : system/role/role
2019-03-19 08:42:47 -请求地址 : http://localhost:8081/sys/role/list
2019-03-19 08:42:47 -HTTP METHOD : GET
2019-03-19 08:42:47 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-03-19 08:42:47 -参数 : []
2019-03-19 08:42:48 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-03-19 08:42:48 -==> Parameters: 
2019-03-19 08:42:48 -<==      Total: 10
2019-03-19 08:42:48 -耗时 : 30
2019-03-19 08:42:48 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-03-19 08:42:50 -请求地址 : http://localhost:8081/sys/role/edit/1
2019-03-19 08:42:50 -HTTP METHOD : GET
2019-03-19 08:42:50 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2019-03-19 08:42:50 -参数 : [1, {}]
2019-03-19 08:42:50 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2019-03-19 08:42:50 -==> Parameters: 1(Long)
2019-03-19 08:42:50 -<==      Total: 1
2019-03-19 08:42:50 -耗时 : 5
2019-03-19 08:42:50 -返回值 : system/role/edit
2019-03-19 08:42:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:42:50 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 5(Integer), com.bootdo.system.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2019-03-19 08:42:50.429(Timestamp)
2019-03-19 08:42:50 -<==    Updates: 1
2019-03-19 08:42:50 -请求地址 : http://localhost:8081/sys/menu/tree/1
2019-03-19 08:42:50 -HTTP METHOD : GET
2019-03-19 08:42:50 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2019-03-19 08:42:50 -参数 : [1]
2019-03-19 08:42:50 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2019-03-19 08:42:50 -==> Parameters: 
2019-03-19 08:42:50 -<==      Total: 106
2019-03-19 08:42:50 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2019-03-19 08:42:50 -==> Parameters: 1(Long)
2019-03-19 08:42:50 -<==      Total: 102
2019-03-19 08:42:50 -耗时 : 58
2019-03-19 08:42:50 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"153","parentId":"149","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"152","parentId":"149","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"151","parentId":"149","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"149","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"149","parentId":"108","state":{"selected":false},"text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","state":{"selected":false},"text":"票据管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"159","parentId":"107","state":{"selected":false},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"158","parentId":"107","state":{"selected":false},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"157","parentId":"107","state":{"selected":false},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"156","parentId":"107","state":{"selected":false},"text":"添加"}],"hasChildren":true,"hasParent":true,"id":"107","parentId":"106","state":{"selected":false},"text":"缴费记录"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","state":{"selected":true},"text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"收费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"120","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"120","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"120","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"120","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"120","parentId":"105","state":{"selected":false},"text":"水价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","state":{"selected":true},"text":"水费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"145","parentId":"117","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"144","parentId":"117","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"143","parentId":"117","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"117","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"117","parentId":"105","state":{"selected":false},"text":"水费用户"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"水费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"116","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"116","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"116","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"116","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"104","state":{"selected":false},"text":"暖价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","state":{"selected":true},"text":"暖费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"113","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"113","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"146","parentId":"113","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"113","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"113","parentId":"104","state":{"selected":false},"text":"暖费用户"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","state":{"selected":false},"text":"暖费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"124","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"124","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"124","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"124","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"124","parentId":"103","state":{"selected":false},"text":"电价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","state":{"selected":true},"text":"电表上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"121","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"121","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"121","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"121","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"121","parentId":"103","state":{"selected":false},"text":"电费用户"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"电费管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","state":{"selected":true},"text":"欠费报表图"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","state":{"selected":true},"text":"走势图报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","state":{"selected":true},"text":"年统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","state":{"selected":true},"text":"月统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","state":{"selected":true},"text":"日统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":true},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"统计管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":true},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":true},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":true},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":true},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":true},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"160","parentId":"77","state":{"selected":true},"text":"3D龙卷风"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"154","parentId":"77","state":{"selected":true},"text":"时钟"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":true},"text":"计算器"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":true},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"组织管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":true},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-03-19 08:42:58 -请求地址 : http://localhost:8081/sys/role/update
2019-03-19 08:42:58 -HTTP METHOD : POST
2019-03-19 08:42:58 -CLASS_METHOD : com.bootdo.system.controller.RoleController.update
2019-03-19 08:42:58 -参数 : [RoleDO{roleId=1, roleName='超级用户角色', roleSign='null', remark='拥有最高权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=[153, 152, 151, 150, 102, 141, 140, 139, 138, 119, 118, 145, 144, 143, 142, 136, 135, 134, 133, 115, 114, 148, 147, 146, 137, 128, 127, 126, 125, 123, 122, 132, 131, 130, 129, 155, 112, 111, 110, 109, 98, 92, 57, 30, 29, 28, 90, 89, 88, 87, 86, 160, 154, 72, 76, 75, 74, 62, 56, 55, 15, 26, 25, 24, 14, 13, 12, 61, 22, 21, 20, 83, 81, 80, 79, 71, 149, 108, 120, 117, 105, 116, 113, 104, 124, 121, 103, 97, 27, 91, 85, 84, 77, 73, 7, 6, 2, 3, 78, 1, 107, 159, 158, 157, 156, 106, -1]}]
2019-03-19 08:42:58 -==>  Preparing: update sys_role SET `role_name` = ?, `remark` = ? where role_id = ? 
2019-03-19 08:42:58 -==> Parameters: 超级用户角色(String), 拥有最高权限(String), 1(Long)
2019-03-19 08:42:58 -<==    Updates: 1
2019-03-19 08:42:58 -==>  Preparing: DELETE FROM sys_role_menu WHERE role_id=? 
2019-03-19 08:42:58 -==> Parameters: 1(Long)
2019-03-19 08:42:58 -<==    Updates: 102
2019-03-19 08:42:58 -==>  Preparing: INSERT INTO sys_role_menu(role_id, menu_id) values
2019-03-19 08:42:58 -==> Parameters: 1(Long), 153(Long), 1(Long), 152(Long), 1(Long), 151(Long), 1(Long), 150(Long), 1(Long), 102(Long), 1(Long), 141(Long), 1(Long), 140(Long), 1(Long), 139(Long), 1(Long), 138(Long), 1(Long), 119(Long), 1(Long), 118(Long), 1(Long), 145(Long), 1(Long), 144(Long), 1(Long), 143(Long), 1(Long), 142(Long), 1(Long), 136(Long), 1(Long), 135(Long), 1(Long), 134(Long), 1(Long), 133(Long), 1(Long), 115(Long), 1(Long), 114(Long), 1(Long), 148(Long), 1(Long), 147(Long), 1(Long), 146(Long), 1(Long), 137(Long), 1(Long), 128(Long), 1(Long), 127(Long), 1(Long), 126(Long), 1(Long), 125(Long), 1(Long), 123(Long), 1(Long), 122(Long), 1(Long), 132(Long), 1(Long), 131(Long), 1(Long), 130(Long), 1(Long), 129(Long), 1(Long), 155(Long), 1(Long), 112(Long), 1(Long), 111(Long), 1(Long), 110(Long), 1(Long), 109(Long), 1(Long), 98(Long), 1(Long), 92(Long), 1(Long), 57(Long), 1(Long), 30(Long), 1(Long), 29(Long), 1(Long), 28(Long), 1(Long), 90(Long), 1(Long), 89(Long), 1(Long), 88(Long), 1(Long), 87(Long), 1(Long), 86(Long), 1(Long), 160(Long), 1(Long), 154(Long), 1(Long), 72(Long), 1(Long), 76(Long), 1(Long), 75(Long), 1(Long), 74(Long), 1(Long), 62(Long), 1(Long), 56(Long), 1(Long), 55(Long), 1(Long), 15(Long), 1(Long), 26(Long), 1(Long), 25(Long), 1(Long), 24(Long), 1(Long), 14(Long), 1(Long), 13(Long), 1(Long), 12(Long), 1(Long), 61(Long), 1(Long), 22(Long), 1(Long), 21(Long), 1(Long), 20(Long), 1(Long), 83(Long), 1(Long), 81(Long), 1(Long), 80(Long), 1(Long), 79(Long), 1(Long), 71(Long), 1(Long), 149(Long), 1(Long), 108(Long), 1(Long), 120(Long), 1(Long), 117(Long), 1(Long), 105(Long), 1(Long), 116(Long), 1(Long), 113(Long), 1(Long), 104(Long), 1(Long), 124(Long), 1(Long), 121(Long), 1(Long), 103(Long), 1(Long), 97(Long), 1(Long), 27(Long), 1(Long), 91(Long), 1(Long), 85(Long), 1(Long), 84(Long), 1(Long), 77(Long), 1(Long), 73(Long), 1(Long), 7(Long), 1(Long), 6(Long), 1(Long), 2(Long), 1(Long), 3(Long), 1(Long), 78(Long), 1(Long), 1(Long), 1(Long), 107(Long), 1(Long), 159(Long), 1(Long), 158(Long), 1(Long), 157(Long), 1(Long), 156(Long), 1(Long), 106(Long), 1(Long), -1(Long)
2019-03-19 08:42:58 -<==    Updates: 107
2019-03-19 08:42:58 -耗时 : 227
2019-03-19 08:42:58 -返回值 : {msg=操作成功, code=0}
2019-03-19 08:42:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:42:58 -==> Parameters: 1(Long), admin(String), 更新角色(String), 227(Integer), com.bootdo.system.controller.RoleController.update()(String), null, 127.0.0.1(String), 2019-03-19 08:42:58.551(Timestamp)
2019-03-19 08:42:58 -请求地址 : http://localhost:8081/sys/role/list
2019-03-19 08:42:58 -HTTP METHOD : GET
2019-03-19 08:42:58 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-03-19 08:42:58 -参数 : []
2019-03-19 08:42:58 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-03-19 08:42:58 -==> Parameters: 
2019-03-19 08:42:58 -<==      Total: 10
2019-03-19 08:42:58 -耗时 : 13
2019-03-19 08:42:58 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-03-19 08:42:58 -<==    Updates: 1
2019-03-19 08:43:04 -请求地址 : http://localhost:8081/index
2019-03-19 08:43:04 -HTTP METHOD : GET
2019-03-19 08:43:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 08:43:04 -参数 : [{}]
2019-03-19 08:43:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 08:43:04 -==> Parameters: 1(Long)
2019-03-19 08:43:04 -<==      Total: 46
2019-03-19 08:43:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 08:43:04 -==> Parameters: 138(Long)
2019-03-19 08:43:04 -<==      Total: 1
2019-03-19 08:43:04 -耗时 : 19
2019-03-19 08:43:04 -返回值 : index_v1
2019-03-19 08:43:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:43:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 08:43:04.033(Timestamp)
2019-03-19 08:43:04 -请求地址 : http://localhost:8081/main
2019-03-19 08:43:04 -HTTP METHOD : GET
2019-03-19 08:43:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:43:04 -参数 : []
2019-03-19 08:43:04 -耗时 : 1
2019-03-19 08:43:04 -返回值 : main
2019-03-19 08:43:04 -<==    Updates: 1
2019-03-19 08:43:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 08:43:04 -HTTP METHOD : GET
2019-03-19 08:43:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 08:43:04 -参数 : []
2019-03-19 08:43:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 08:43:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 08:43:04 -<==      Total: 0
2019-03-19 08:43:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 08:43:04 -==> Parameters: 1(Long), 0(String)
2019-03-19 08:43:04 -<==      Total: 1
2019-03-19 08:43:04 -耗时 : 9
2019-03-19 08:43:04 -返回值 : com.bootdo.common.utils.PageUtils@1eae15
2019-03-19 08:43:04 -请求地址 : http://localhost:8081/main
2019-03-19 08:43:04 -HTTP METHOD : GET
2019-03-19 08:43:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:43:04 -参数 : []
2019-03-19 08:43:04 -耗时 : 1
2019-03-19 08:43:04 -返回值 : main
2019-03-19 08:43:07 -Subject does not have permission [moneyLog:elecLog]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [moneyLog:elecLog]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$afce3bbc.moneyLog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-03-19 08:43:26 -请求地址 : http://localhost:8081/sys/menu/
2019-03-19 08:43:26 -HTTP METHOD : GET
2019-03-19 08:43:26 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-03-19 08:43:26 -参数 : [{}]
2019-03-19 08:43:26 -耗时 : 1
2019-03-19 08:43:26 -返回值 : system/menu/menu
2019-03-19 08:43:26 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-19 08:43:26 -HTTP METHOD : GET
2019-03-19 08:43:26 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-19 08:43:26 -参数 : [{sort=order_num}]
2019-03-19 08:43:26 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-19 08:43:26 -==> Parameters: 
2019-03-19 08:43:26 -<==      Total: 106
2019-03-19 08:43:26 -耗时 : 21
2019-03-19 08:43:26 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-19 08:43:32 -请求地址 : http://localhost:8081/sys/menu/edit/107
2019-03-19 08:43:32 -HTTP METHOD : GET
2019-03-19 08:43:32 -CLASS_METHOD : com.bootdo.system.controller.MenuController.edit
2019-03-19 08:43:32 -参数 : [{}, 107]
2019-03-19 08:43:32 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-19 08:43:32 -==> Parameters: 107(Long)
2019-03-19 08:43:32 -<==      Total: 1
2019-03-19 08:43:32 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu where menu_id = ? 
2019-03-19 08:43:32 -==> Parameters: 106(Long)
2019-03-19 08:43:32 -<==      Total: 1
2019-03-19 08:43:32 -耗时 : 14
2019-03-19 08:43:32 -返回值 : system/menu/edit
2019-03-19 08:43:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:43:32 -==> Parameters: 1(Long), admin(String), 编辑菜单(String), 14(Integer), com.bootdo.system.controller.MenuController.edit()(String), null, 127.0.0.1(String), 2019-03-19 08:43:32.761(Timestamp)
2019-03-19 08:43:32 -<==    Updates: 1
2019-03-19 08:43:44 -请求地址 : http://localhost:8081/sys/role
2019-03-19 08:43:44 -HTTP METHOD : GET
2019-03-19 08:43:44 -CLASS_METHOD : com.bootdo.system.controller.RoleController.role
2019-03-19 08:43:44 -参数 : []
2019-03-19 08:43:44 -耗时 : 1
2019-03-19 08:43:44 -返回值 : system/role/role
2019-03-19 08:43:44 -请求地址 : http://localhost:8081/sys/role/list
2019-03-19 08:43:44 -HTTP METHOD : GET
2019-03-19 08:43:44 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-03-19 08:43:44 -参数 : []
2019-03-19 08:43:44 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-03-19 08:43:44 -==> Parameters: 
2019-03-19 08:43:44 -<==      Total: 10
2019-03-19 08:43:44 -耗时 : 5
2019-03-19 08:43:44 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-03-19 08:43:48 -请求地址 : http://localhost:8081/sys/role/edit/1
2019-03-19 08:43:48 -HTTP METHOD : GET
2019-03-19 08:43:48 -CLASS_METHOD : com.bootdo.system.controller.RoleController.edit
2019-03-19 08:43:48 -参数 : [1, {}]
2019-03-19 08:43:48 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role where role_id = ? 
2019-03-19 08:43:48 -==> Parameters: 1(Long)
2019-03-19 08:43:48 -<==      Total: 1
2019-03-19 08:43:48 -耗时 : 5
2019-03-19 08:43:48 -返回值 : system/role/edit
2019-03-19 08:43:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:43:48 -==> Parameters: 1(Long), admin(String), 编辑角色(String), 6(Integer), com.bootdo.system.controller.RoleController.edit()(String), null, 127.0.0.1(String), 2019-03-19 08:43:48.315(Timestamp)
2019-03-19 08:43:48 -<==    Updates: 1
2019-03-19 08:43:48 -请求地址 : http://localhost:8081/sys/menu/tree/1
2019-03-19 08:43:48 -HTTP METHOD : GET
2019-03-19 08:43:48 -CLASS_METHOD : com.bootdo.system.controller.MenuController.tree
2019-03-19 08:43:48 -参数 : [1]
2019-03-19 08:43:48 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by menu_id desc 
2019-03-19 08:43:48 -==> Parameters: 
2019-03-19 08:43:48 -<==      Total: 106
2019-03-19 08:43:48 -==>  Preparing: select menu_id from sys_role_menu WHERE role_id = ? 
2019-03-19 08:43:48 -==> Parameters: 1(Long)
2019-03-19 08:43:48 -<==      Total: 107
2019-03-19 08:43:48 -耗时 : 45
2019-03-19 08:43:48 -返回值 : {"checked":true,"children":[{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"153","parentId":"149","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"152","parentId":"149","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"151","parentId":"149","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"150","parentId":"149","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"149","parentId":"108","state":{"selected":false},"text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","state":{"selected":false},"text":"票据管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"159","parentId":"107","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"158","parentId":"107","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"157","parentId":"107","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"156","parentId":"107","state":{"selected":true},"text":"添加"}],"hasChildren":true,"hasParent":true,"id":"107","parentId":"106","state":{"selected":false},"text":"缴费记录"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","state":{"selected":true},"text":"现金缴费"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","state":{"selected":false},"text":"收费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"141","parentId":"120","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"140","parentId":"120","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"139","parentId":"120","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"138","parentId":"120","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"120","parentId":"105","state":{"selected":false},"text":"水价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","state":{"selected":true},"text":"水费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"145","parentId":"117","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"144","parentId":"117","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"143","parentId":"117","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"142","parentId":"117","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"117","parentId":"105","state":{"selected":false},"text":"水费用户"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","state":{"selected":false},"text":"水费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"136","parentId":"116","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"135","parentId":"116","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"134","parentId":"116","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"133","parentId":"116","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"116","parentId":"104","state":{"selected":false},"text":"暖价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","state":{"selected":true},"text":"暖费生成"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"148","parentId":"113","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"147","parentId":"113","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"146","parentId":"113","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"137","parentId":"113","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"113","parentId":"104","state":{"selected":false},"text":"暖费用户"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","state":{"selected":false},"text":"暖费管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"128","parentId":"124","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"127","parentId":"124","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"126","parentId":"124","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"125","parentId":"124","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"124","parentId":"103","state":{"selected":false},"text":"电价管理"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","state":{"selected":true},"text":"电表上传"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","state":{"selected":true},"text":"工资代扣"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"132","parentId":"121","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"131","parentId":"121","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"130","parentId":"121","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"129","parentId":"121","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"121","parentId":"103","state":{"selected":false},"text":"电费用户"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","state":{"selected":false},"text":"电费管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","state":{"selected":true},"text":"欠费报表图"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","state":{"selected":true},"text":"走势图报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","state":{"selected":true},"text":"年统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","state":{"selected":true},"text":"月统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","state":{"selected":true},"text":"日统计报表"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","state":{"selected":true},"text":"百度chart"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","state":{"selected":false},"text":"统计管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"92","parentId":"91","state":{"selected":true},"text":"在线用户"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"57","parentId":"91","state":{"selected":true},"text":"运行监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"30","parentId":"27","state":{"selected":true},"text":"清空"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"29","parentId":"27","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"28","parentId":"27","state":{"selected":true},"text":"刷新"}],"hasChildren":true,"hasParent":true,"id":"27","parentId":"91","state":{"selected":false},"text":"系统日志"}],"hasChildren":true,"hasParent":false,"id":"91","parentId":"0","state":{"selected":false},"text":"系统监控"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"90","parentId":"84","state":{"selected":true},"text":"我的通知"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"89","parentId":"85","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"88","parentId":"85","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"87","parentId":"85","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"86","parentId":"85","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"85","parentId":"84","state":{"selected":false},"text":"通知公告"}],"hasChildren":true,"hasParent":false,"id":"84","parentId":"0","state":{"selected":false},"text":"办公管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"160","parentId":"77","state":{"selected":true},"text":"3D龙卷风"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"154","parentId":"77","state":{"selected":true},"text":"时钟"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"72","parentId":"77","state":{"selected":true},"text":"计算器"}],"hasChildren":true,"hasParent":false,"id":"77","parentId":"0","state":{"selected":false},"text":"系统工具"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"76","parentId":"73","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"75","parentId":"73","state":{"selected":true},"text":"刪除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"74","parentId":"73","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"73","parentId":"3","state":{"selected":false},"text":"组织管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"62","parentId":"7","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"56","parentId":"7","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"55","parentId":"7","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"15","parentId":"7","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"7","parentId":"3","state":{"selected":false},"text":"角色管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"26","parentId":"6","state":{"selected":true},"text":"重置密码"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"25","parentId":"6","state":{"selected":true},"text":"停用"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"24","parentId":"6","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"14","parentId":"6","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"13","parentId":"6","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"12","parentId":"6","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"6","parentId":"3","state":{"selected":false},"text":"用户管理"},{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"61","parentId":"2","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"22","parentId":"2","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"21","parentId":"2","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"20","parentId":"2","state":{"selected":true},"text":"新增"}],"hasChildren":true,"hasParent":true,"id":"2","parentId":"3","state":{"selected":false},"text":"系统菜单"}],"hasChildren":true,"hasParent":false,"id":"3","parentId":"0","state":{"selected":false},"text":"系统管理"},{"checked":false,"children":[{"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"83","parentId":"78","state":{"selected":true},"text":"批量删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"81","parentId":"78","state":{"selected":true},"text":"删除"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"80","parentId":"78","state":{"selected":true},"text":"编辑"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"79","parentId":"78","state":{"selected":true},"text":"增加"}],"hasChildren":true,"hasParent":true,"id":"78","parentId":"1","state":{"selected":false},"text":"数据字典"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","state":{"selected":true},"text":"文件管理"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"selected":false},"text":"基础管理"}],"hasChildren":true,"hasParent":false,"id":"-1","parentId":"","state":{"opened":true},"text":"顶级节点"}
2019-03-19 08:44:07 -请求地址 : http://localhost:8081/sys/role/update
2019-03-19 08:44:07 -HTTP METHOD : POST
2019-03-19 08:44:07 -CLASS_METHOD : com.bootdo.system.controller.RoleController.update
2019-03-19 08:44:07 -参数 : [RoleDO{roleId=1, roleName='超级用户角色', roleSign='null', remark='拥有最高权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=[159, 158, 157, 156, 102, 141, 140, 139, 138, 119, 118, 145, 144, 143, 142, 136, 135, 134, 133, 115, 114, 148, 147, 146, 137, 128, 127, 126, 125, 123, 122, 132, 131, 130, 129, 155, 112, 111, 110, 109, 98, 92, 57, 30, 29, 28, 90, 89, 88, 87, 86, 160, 154, 72, 76, 75, 74, 62, 56, 55, 15, 26, 25, 24, 14, 13, 12, 61, 22, 21, 20, 83, 81, 80, 79, 71, 107, 106, 120, 117, 105, 116, 113, 104, 124, 121, 103, 97, 27, 91, 85, 84, 77, 73, 7, 6, 2, 3, 78, 1, 108, 153, 152, 151, 150, 149, -1]}]
2019-03-19 08:44:07 -==>  Preparing: update sys_role SET `role_name` = ?, `remark` = ? where role_id = ? 
2019-03-19 08:44:07 -==> Parameters: 超级用户角色(String), 拥有最高权限(String), 1(Long)
2019-03-19 08:44:07 -<==    Updates: 1
2019-03-19 08:44:07 -==>  Preparing: DELETE FROM sys_role_menu WHERE role_id=? 
2019-03-19 08:44:07 -==> Parameters: 1(Long)
2019-03-19 08:44:07 -<==    Updates: 107
2019-03-19 08:44:07 -==>  Preparing: INSERT INTO sys_role_menu(role_id, menu_id) values
2019-03-19 08:44:07 -==> Parameters: 1(Long), 159(Long), 1(Long), 158(Long), 1(Long), 157(Long), 1(Long), 156(Long), 1(Long), 102(Long), 1(Long), 141(Long), 1(Long), 140(Long), 1(Long), 139(Long), 1(Long), 138(Long), 1(Long), 119(Long), 1(Long), 118(Long), 1(Long), 145(Long), 1(Long), 144(Long), 1(Long), 143(Long), 1(Long), 142(Long), 1(Long), 136(Long), 1(Long), 135(Long), 1(Long), 134(Long), 1(Long), 133(Long), 1(Long), 115(Long), 1(Long), 114(Long), 1(Long), 148(Long), 1(Long), 147(Long), 1(Long), 146(Long), 1(Long), 137(Long), 1(Long), 128(Long), 1(Long), 127(Long), 1(Long), 126(Long), 1(Long), 125(Long), 1(Long), 123(Long), 1(Long), 122(Long), 1(Long), 132(Long), 1(Long), 131(Long), 1(Long), 130(Long), 1(Long), 129(Long), 1(Long), 155(Long), 1(Long), 112(Long), 1(Long), 111(Long), 1(Long), 110(Long), 1(Long), 109(Long), 1(Long), 98(Long), 1(Long), 92(Long), 1(Long), 57(Long), 1(Long), 30(Long), 1(Long), 29(Long), 1(Long), 28(Long), 1(Long), 90(Long), 1(Long), 89(Long), 1(Long), 88(Long), 1(Long), 87(Long), 1(Long), 86(Long), 1(Long), 160(Long), 1(Long), 154(Long), 1(Long), 72(Long), 1(Long), 76(Long), 1(Long), 75(Long), 1(Long), 74(Long), 1(Long), 62(Long), 1(Long), 56(Long), 1(Long), 55(Long), 1(Long), 15(Long), 1(Long), 26(Long), 1(Long), 25(Long), 1(Long), 24(Long), 1(Long), 14(Long), 1(Long), 13(Long), 1(Long), 12(Long), 1(Long), 61(Long), 1(Long), 22(Long), 1(Long), 21(Long), 1(Long), 20(Long), 1(Long), 83(Long), 1(Long), 81(Long), 1(Long), 80(Long), 1(Long), 79(Long), 1(Long), 71(Long), 1(Long), 107(Long), 1(Long), 106(Long), 1(Long), 120(Long), 1(Long), 117(Long), 1(Long), 105(Long), 1(Long), 116(Long), 1(Long), 113(Long), 1(Long), 104(Long), 1(Long), 124(Long), 1(Long), 121(Long), 1(Long), 103(Long), 1(Long), 97(Long), 1(Long), 27(Long), 1(Long), 91(Long), 1(Long), 85(Long), 1(Long), 84(Long), 1(Long), 77(Long), 1(Long), 73(Long), 1(Long), 7(Long), 1(Long), 6(Long), 1(Long), 2(Long), 1(Long), 3(Long), 1(Long), 78(Long), 1(Long), 1(Long), 1(Long), 108(Long), 1(Long), 153(Long), 1(Long), 152(Long), 1(Long), 151(Long), 1(Long), 150(Long), 1(Long), 149(Long), 1(Long), -1(Long)
2019-03-19 08:44:07 -<==    Updates: 107
2019-03-19 08:44:07 -耗时 : 292
2019-03-19 08:44:07 -返回值 : {msg=操作成功, code=0}
2019-03-19 08:44:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:44:07 -==> Parameters: 1(Long), admin(String), 更新角色(String), 292(Integer), com.bootdo.system.controller.RoleController.update()(String), null, 127.0.0.1(String), 2019-03-19 08:44:07.309(Timestamp)
2019-03-19 08:44:07 -请求地址 : http://localhost:8081/sys/role/list
2019-03-19 08:44:07 -HTTP METHOD : GET
2019-03-19 08:44:07 -CLASS_METHOD : com.bootdo.system.controller.RoleController.list
2019-03-19 08:44:07 -参数 : []
2019-03-19 08:44:07 -==>  Preparing: select `role_id`,`role_name`,`role_sign`,`remark`,`user_id_create`,`gmt_create`,`gmt_modified` from sys_role order by role_id desc 
2019-03-19 08:44:07 -==> Parameters: 
2019-03-19 08:44:07 -<==      Total: 10
2019-03-19 08:44:07 -耗时 : 6
2019-03-19 08:44:07 -返回值 : [RoleDO{roleId=10, roleName='录入人员(牙星)', roleSign='null', remark='牙星电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=9, roleName='录入人员(五九)', roleSign='null', remark='五九电表上传权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=8, roleName='HR人员(牙星)', roleSign='null', remark='牙星工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=7, roleName='HR人员(五九)', roleSign='null', remark='五九工资代扣权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=6, roleName='收费人员(牙星)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=5, roleName='收费人员(五九)', roleSign='null', remark='五九收费权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=4, roleName='收费主管(牙星)', roleSign='null', remark='牙星缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=3, roleName='收费主管(五九)', roleSign='null', remark='五九缴费所有权限', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=2, roleName='总公司领导', roleSign='null', remark='总公司领导', userIdCreate=null, gmtCreate=null, gmtModified=null, menuIds=null}, RoleDO{roleId=1, roleName='超级用户角色', roleSign='admin', remark='拥有最高权限', userIdCreate=2, gmtCreate=2017-08-12 00:43:52.0, gmtModified=2017-08-12 19:14:59.0, menuIds=null}]
2019-03-19 08:44:07 -<==    Updates: 1
2019-03-19 08:44:10 -请求地址 : http://localhost:8081/index
2019-03-19 08:44:10 -HTTP METHOD : GET
2019-03-19 08:44:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 08:44:10 -参数 : [{}]
2019-03-19 08:44:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 08:44:10 -==> Parameters: 1(Long)
2019-03-19 08:44:10 -<==      Total: 46
2019-03-19 08:44:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 08:44:10 -==> Parameters: 138(Long)
2019-03-19 08:44:10 -<==      Total: 1
2019-03-19 08:44:10 -耗时 : 21
2019-03-19 08:44:10 -返回值 : index_v1
2019-03-19 08:44:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:44:10 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 08:44:10.408(Timestamp)
2019-03-19 08:44:10 -<==    Updates: 1
2019-03-19 08:44:10 -请求地址 : http://localhost:8081/main
2019-03-19 08:44:10 -HTTP METHOD : GET
2019-03-19 08:44:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:44:10 -参数 : []
2019-03-19 08:44:10 -耗时 : 1
2019-03-19 08:44:10 -返回值 : main
2019-03-19 08:44:10 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 08:44:10 -HTTP METHOD : GET
2019-03-19 08:44:10 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 08:44:10 -参数 : []
2019-03-19 08:44:10 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 08:44:10 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 08:44:10 -<==      Total: 0
2019-03-19 08:44:10 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 08:44:10 -==> Parameters: 1(Long), 0(String)
2019-03-19 08:44:10 -<==      Total: 1
2019-03-19 08:44:10 -耗时 : 7
2019-03-19 08:44:10 -返回值 : com.bootdo.common.utils.PageUtils@1d28cceb
2019-03-19 08:44:10 -请求地址 : http://localhost:8081/main
2019-03-19 08:44:10 -HTTP METHOD : GET
2019-03-19 08:44:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:44:10 -参数 : []
2019-03-19 08:44:10 -耗时 : 1
2019-03-19 08:44:10 -返回值 : main
2019-03-19 08:44:21 -Subject does not have permission [moneyLog:elecLog]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [moneyLog:elecLog]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.moneyLog.controller.ElecLogController$$EnhancerBySpringCGLIB$$afce3bbc.moneyLog(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-03-19 08:44:59 -Starting BootdoApplication on ZJZL-20180906VX with PID 13828 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-19 08:44:59 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-19 08:44:59 -The following profiles are active: dev
2019-03-19 08:44:59 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72445aba: startup date [Tue Mar 19 08:44:59 CST 2019]; root of context hierarchy
2019-03-19 08:45:04 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-19 08:45:07 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$73cc3471] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:45:08 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$66256318] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:45:09 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:45:09 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:45:09 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:45:09 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-19 08:45:09 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-19 08:45:09 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:45:09 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:45:10 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:45:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 08:45:11 -Tomcat initialized with port(s): 8081 (http)
2019-03-19 08:45:11 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-19 08:45:11 -Starting service [Tomcat]
2019-03-19 08:45:11 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-19 08:45:11 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-19 08:45:11 -Initializing Spring embedded WebApplicationContext
2019-03-19 08:45:11 -Root WebApplicationContext: initialization completed in 12011 ms
2019-03-19 08:45:12 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-19 08:45:12 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-19 08:45:12 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-19 08:45:12 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-19 08:45:12 -Filter xssFilter was not registered (disabled)
2019-03-19 08:45:12 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-19 08:45:12 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-19 08:45:12 -Servlet statViewServlet mapped to [/druid/*]
2019-03-19 08:45:12 -Servlet dispatcherServlet mapped to [/]
2019-03-19 08:45:15 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72445aba: startup date [Tue Mar 19 08:44:59 CST 2019]; root of context hierarchy
2019-03-19 08:45:16 -Using default implementation for ThreadExecutor
2019-03-19 08:45:16 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-19 08:45:16 -Quartz Scheduler v.2.2.1 created.
2019-03-19 08:45:16 -RAMJobStore initialized.
2019-03-19 08:45:16 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-19 08:45:16 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-19 08:45:16 -Quartz scheduler version: 2.2.1
2019-03-19 08:45:16 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@174cb0d8
2019-03-19 08:45:17 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-19 08:45:18 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-19 08:45:22 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-19 08:45:22 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 08:45:22 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-19 08:45:22 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-19 08:45:22 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-19 08:45:22 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-19 08:45:22 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-19 08:45:22 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-19 08:45:22 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-19 08:45:22 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-19 08:45:22 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-19 08:45:22 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-19 08:45:22 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-19 08:45:22 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-19 08:45:22 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-19 08:45:22 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-19 08:45:22 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-19 08:45:22 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-19 08:45:22 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-19 08:45:22 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-19 08:45:22 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-19 08:45:22 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-19 08:45:22 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 08:45:22 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-19 08:45:22 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 08:45:22 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-19 08:45:22 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-19 08:45:22 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-19 08:45:22 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-19 08:45:22 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-19 08:45:22 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-19 08:45:22 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-19 08:45:22 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-19 08:45:22 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-19 08:45:22 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-19 08:45:22 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 08:45:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 08:45:22 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-19 08:45:22 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-19 08:45:22 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-19 08:45:22 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-19 08:45:22 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-19 08:45:22 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 08:45:22 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-19 08:45:22 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 08:45:22 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-19 08:45:22 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-19 08:45:22 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-19 08:45:22 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-19 08:45:22 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 08:45:22 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 08:45:22 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-19 08:45:22 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-19 08:45:22 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 08:45:22 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-19 08:45:22 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-19 08:45:22 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-19 08:45:22 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-19 08:45:22 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-19 08:45:22 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 08:45:22 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-19 08:45:22 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 08:45:22 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-19 08:45:22 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-19 08:45:22 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-19 08:45:22 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 08:45:22 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 08:45:22 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-19 08:45:22 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-19 08:45:22 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-19 08:45:22 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 08:45:22 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-19 08:45:22 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-19 08:45:22 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-19 08:45:22 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-19 08:45:22 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 08:45:22 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 08:45:22 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-19 08:45:22 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-19 08:45:22 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-19 08:45:22 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 08:45:22 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 08:45:22 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-19 08:45:22 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-19 08:45:22 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-19 08:45:22 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 08:45:22 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 08:45:22 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-19 08:45:22 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-19 08:45:22 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-19 08:45:22 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-19 08:45:22 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-19 08:45:22 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-19 08:45:22 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-19 08:45:22 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-19 08:45:22 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-19 08:45:22 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-19 08:45:22 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-19 08:45:22 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-19 08:45:22 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-19 08:45:22 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-19 08:45:22 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-19 08:45:22 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-19 08:45:22 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-19 08:45:22 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-19 08:45:22 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-19 08:45:22 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-19 08:45:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-19 08:45:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-19 08:45:22 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 08:45:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 08:45:22 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-19 08:45:22 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-19 08:45:22 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-19 08:45:22 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-19 08:45:22 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-19 08:45:22 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-19 08:45:22 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-19 08:45:22 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-19 08:45:22 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-19 08:45:22 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-19 08:45:22 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-19 08:45:22 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-19 08:45:22 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-19 08:45:22 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-19 08:45:22 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-19 08:45:22 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-19 08:45:22 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-19 08:45:22 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-19 08:45:22 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-19 08:45:22 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 08:45:22 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 08:45:22 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 08:45:22 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-19 08:45:22 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-19 08:45:22 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-19 08:45:22 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-19 08:45:22 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-19 08:45:22 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 08:45:22 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-19 08:45:22 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 08:45:22 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-19 08:45:22 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-19 08:45:22 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-19 08:45:22 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-19 08:45:22 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 08:45:22 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 08:45:22 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 08:45:22 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-19 08:45:22 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-19 08:45:22 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 08:45:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 08:45:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-19 08:45:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-19 08:45:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-19 08:45:23 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-19 08:45:23 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-19 08:45:23 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-19 08:45:24 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 08:45:25 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@72445aba: startup date [Tue Mar 19 08:44:59 CST 2019]; root of context hierarchy
2019-03-19 08:45:25 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 08:45:25 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 08:45:25 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 08:45:25 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-19 08:45:25 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-19 08:45:29 -Registering beans for JMX exposure on startup
2019-03-19 08:45:29 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-19 08:45:29 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-19 08:45:29 -Starting beans in phase 2147483647
2019-03-19 08:45:29 -Context refreshed
2019-03-19 08:45:29 -Found 1 custom documentation plugin(s)
2019-03-19 08:45:30 -Scanning for api listing references
2019-03-19 08:45:31 -Generating unique operation named: removeUsingPOST_1
2019-03-19 08:45:31 -Generating unique operation named: addUsingGET_1
2019-03-19 08:45:31 -Generating unique operation named: editUsingGET_1
2019-03-19 08:45:31 -Generating unique operation named: listUsingGET_1
2019-03-19 08:45:31 -Generating unique operation named: removeUsingPOST_2
2019-03-19 08:45:31 -Generating unique operation named: removeUsingPOST_3
2019-03-19 08:45:31 -Generating unique operation named: saveUsingPOST_1
2019-03-19 08:45:31 -Generating unique operation named: updateUsingGET_1
2019-03-19 08:45:31 -Generating unique operation named: updateUsingHEAD_1
2019-03-19 08:45:31 -Generating unique operation named: updateUsingPOST_1
2019-03-19 08:45:31 -Generating unique operation named: updateUsingPUT_1
2019-03-19 08:45:31 -Generating unique operation named: updateUsingPATCH_1
2019-03-19 08:45:31 -Generating unique operation named: updateUsingDELETE_1
2019-03-19 08:45:31 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-19 08:45:31 -Generating unique operation named: updateUsingTRACE_1
2019-03-19 08:45:31 -Generating unique operation named: addUsingGET_2
2019-03-19 08:45:31 -Generating unique operation named: editUsingGET_2
2019-03-19 08:45:31 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-19 08:45:31 -Generating unique operation named: listUsingGET_2
2019-03-19 08:45:31 -Generating unique operation named: removeUsingPOST_4
2019-03-19 08:45:31 -Generating unique operation named: removeUsingPOST_5
2019-03-19 08:45:31 -Generating unique operation named: saveUsingPOST_2
2019-03-19 08:45:31 -Generating unique operation named: updateUsingGET_2
2019-03-19 08:45:31 -Generating unique operation named: updateUsingHEAD_2
2019-03-19 08:45:31 -Generating unique operation named: updateUsingPOST_2
2019-03-19 08:45:31 -Generating unique operation named: updateUsingPUT_2
2019-03-19 08:45:31 -Generating unique operation named: updateUsingPATCH_2
2019-03-19 08:45:31 -Generating unique operation named: updateUsingDELETE_2
2019-03-19 08:45:31 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-19 08:45:31 -Generating unique operation named: updateUsingTRACE_2
2019-03-19 08:45:31 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-19 08:45:31 -Generating unique operation named: addUsingGET_3
2019-03-19 08:45:31 -Generating unique operation named: editUsingGET_3
2019-03-19 08:45:31 -Generating unique operation named: listUsingGET_3
2019-03-19 08:45:31 -Generating unique operation named: removeUsingPOST_6
2019-03-19 08:45:31 -Generating unique operation named: removeUsingPOST_7
2019-03-19 08:45:31 -Generating unique operation named: saveUsingPOST_3
2019-03-19 08:45:31 -Generating unique operation named: updateUsingGET_3
2019-03-19 08:45:32 -Generating unique operation named: updateUsingHEAD_3
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPOST_3
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPUT_3
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPATCH_3
2019-03-19 08:45:32 -Generating unique operation named: updateUsingDELETE_3
2019-03-19 08:45:32 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-19 08:45:32 -Generating unique operation named: updateUsingTRACE_3
2019-03-19 08:45:32 -Generating unique operation named: addUsingGET_4
2019-03-19 08:45:32 -Generating unique operation named: editUsingGET_4
2019-03-19 08:45:32 -Generating unique operation named: listUsingGET_4
2019-03-19 08:45:32 -Generating unique operation named: removeUsingPOST_8
2019-03-19 08:45:32 -Generating unique operation named: removeUsingPOST_9
2019-03-19 08:45:32 -Generating unique operation named: saveUsingPOST_4
2019-03-19 08:45:32 -Generating unique operation named: updateUsingGET_4
2019-03-19 08:45:32 -Generating unique operation named: updateUsingHEAD_4
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPOST_4
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPUT_4
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPATCH_4
2019-03-19 08:45:32 -Generating unique operation named: updateUsingDELETE_4
2019-03-19 08:45:32 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-19 08:45:32 -Generating unique operation named: updateUsingTRACE_4
2019-03-19 08:45:32 -Generating unique operation named: ElecUsingGET_1
2019-03-19 08:45:32 -Generating unique operation named: addUsingGET_5
2019-03-19 08:45:32 -Generating unique operation named: editUsingGET_5
2019-03-19 08:45:32 -Generating unique operation named: listUsingGET_5
2019-03-19 08:45:32 -Generating unique operation named: removeUsingPOST_10
2019-03-19 08:45:32 -Generating unique operation named: removeUsingPOST_11
2019-03-19 08:45:32 -Generating unique operation named: saveUsingPOST_5
2019-03-19 08:45:32 -Generating unique operation named: updateUsingGET_5
2019-03-19 08:45:32 -Generating unique operation named: updateUsingHEAD_5
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPOST_5
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPUT_5
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPATCH_5
2019-03-19 08:45:32 -Generating unique operation named: updateUsingDELETE_5
2019-03-19 08:45:32 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-19 08:45:32 -Generating unique operation named: updateUsingTRACE_5
2019-03-19 08:45:32 -Generating unique operation named: editUsingGET_6
2019-03-19 08:45:32 -Generating unique operation named: listUsingGET_6
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPOST_6
2019-03-19 08:45:32 -Generating unique operation named: addUsingGET_6
2019-03-19 08:45:32 -Generating unique operation named: editUsingGET_7
2019-03-19 08:45:32 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-19 08:45:32 -Generating unique operation named: listUsingGET_7
2019-03-19 08:45:32 -Generating unique operation named: removeUsingPOST_12
2019-03-19 08:45:32 -Generating unique operation named: removeUsingPOST_13
2019-03-19 08:45:32 -Generating unique operation named: saveUsingPOST_6
2019-03-19 08:45:32 -Generating unique operation named: updateUsingGET_6
2019-03-19 08:45:32 -Generating unique operation named: updateUsingHEAD_6
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPOST_7
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPUT_6
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPATCH_6
2019-03-19 08:45:32 -Generating unique operation named: updateUsingDELETE_6
2019-03-19 08:45:32 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-19 08:45:32 -Generating unique operation named: updateUsingTRACE_6
2019-03-19 08:45:32 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-19 08:45:32 -Generating unique operation named: addUsingGET_7
2019-03-19 08:45:32 -Generating unique operation named: editUsingGET_8
2019-03-19 08:45:32 -Generating unique operation named: listUsingGET_8
2019-03-19 08:45:32 -Generating unique operation named: removeUsingPOST_14
2019-03-19 08:45:32 -Generating unique operation named: removeUsingPOST_15
2019-03-19 08:45:32 -Generating unique operation named: saveUsingPOST_7
2019-03-19 08:45:32 -Generating unique operation named: updateUsingGET_7
2019-03-19 08:45:32 -Generating unique operation named: updateUsingHEAD_7
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPOST_8
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPUT_7
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPATCH_7
2019-03-19 08:45:32 -Generating unique operation named: updateUsingDELETE_7
2019-03-19 08:45:32 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-19 08:45:32 -Generating unique operation named: updateUsingTRACE_7
2019-03-19 08:45:32 -Generating unique operation named: addUsingGET_8
2019-03-19 08:45:32 -Generating unique operation named: editUsingGET_9
2019-03-19 08:45:32 -Generating unique operation named: listUsingGET_9
2019-03-19 08:45:32 -Generating unique operation named: removeUsingPOST_16
2019-03-19 08:45:32 -Generating unique operation named: removeUsingPOST_17
2019-03-19 08:45:32 -Generating unique operation named: saveUsingPOST_8
2019-03-19 08:45:32 -Generating unique operation named: updateUsingGET_8
2019-03-19 08:45:32 -Generating unique operation named: updateUsingHEAD_8
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPOST_9
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPUT_8
2019-03-19 08:45:32 -Generating unique operation named: updateUsingPATCH_8
2019-03-19 08:45:32 -Generating unique operation named: updateUsingDELETE_8
2019-03-19 08:45:32 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-19 08:45:32 -Generating unique operation named: updateUsingTRACE_8
2019-03-19 08:45:32 -Generating unique operation named: addUsingGET_9
2019-03-19 08:45:33 -Generating unique operation named: editUsingGET_10
2019-03-19 08:45:33 -Generating unique operation named: infoUsingGET_1
2019-03-19 08:45:33 -Generating unique operation named: infoUsingHEAD_1
2019-03-19 08:45:33 -Generating unique operation named: infoUsingPOST_1
2019-03-19 08:45:33 -Generating unique operation named: infoUsingPUT_1
2019-03-19 08:45:33 -Generating unique operation named: infoUsingPATCH_1
2019-03-19 08:45:33 -Generating unique operation named: infoUsingDELETE_1
2019-03-19 08:45:33 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-19 08:45:33 -Generating unique operation named: infoUsingTRACE_1
2019-03-19 08:45:33 -Generating unique operation named: listUsingGET_10
2019-03-19 08:45:33 -Generating unique operation named: removeUsingPOST_18
2019-03-19 08:45:33 -Generating unique operation named: removeUsingPOST_19
2019-03-19 08:45:33 -Generating unique operation named: saveUsingPOST_9
2019-03-19 08:45:33 -Generating unique operation named: updateUsingPOST_10
2019-03-19 08:45:33 -Generating unique operation named: listUsingGET_11
2019-03-19 08:45:33 -Generating unique operation named: removeUsingPOST_20
2019-03-19 08:45:33 -Generating unique operation named: welcomeUsingGET_1
2019-03-19 08:45:33 -Generating unique operation named: addUsingGET_10
2019-03-19 08:45:33 -Generating unique operation named: editUsingGET_11
2019-03-19 08:45:33 -Generating unique operation named: listUsingGET_12
2019-03-19 08:45:33 -Generating unique operation named: removeUsingPOST_21
2019-03-19 08:45:33 -Generating unique operation named: saveUsingPOST_10
2019-03-19 08:45:33 -Generating unique operation named: treeUsingGET_1
2019-03-19 08:45:33 -Generating unique operation named: treeUsingGET_2
2019-03-19 08:45:33 -Generating unique operation named: updateUsingPOST_11
2019-03-19 08:45:33 -Generating unique operation named: addUsingGET_11
2019-03-19 08:45:33 -Generating unique operation named: editUsingGET_12
2019-03-19 08:45:33 -Generating unique operation named: listUsingGET_13
2019-03-19 08:45:33 -Generating unique operation named: removeUsingPOST_22
2019-03-19 08:45:33 -Generating unique operation named: removeUsingPOST_23
2019-03-19 08:45:33 -Generating unique operation named: saveUsingPOST_11
2019-03-19 08:45:33 -Generating unique operation named: updateUsingGET_9
2019-03-19 08:45:33 -Generating unique operation named: updateUsingHEAD_9
2019-03-19 08:45:33 -Generating unique operation named: updateUsingPOST_12
2019-03-19 08:45:33 -Generating unique operation named: updateUsingPUT_9
2019-03-19 08:45:33 -Generating unique operation named: updateUsingPATCH_9
2019-03-19 08:45:33 -Generating unique operation named: updateUsingDELETE_9
2019-03-19 08:45:33 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-19 08:45:33 -Generating unique operation named: updateUsingTRACE_9
2019-03-19 08:45:33 -Generating unique operation named: addUsingGET_12
2019-03-19 08:45:33 -Generating unique operation named: editUsingGET_13
2019-03-19 08:45:33 -Generating unique operation named: listUsingGET_14
2019-03-19 08:45:33 -Generating unique operation named: removeUsingPOST_24
2019-03-19 08:45:33 -Generating unique operation named: removeUsingPOST_25
2019-03-19 08:45:33 -Generating unique operation named: saveUsingPOST_12
2019-03-19 08:45:33 -Generating unique operation named: updateUsingGET_10
2019-03-19 08:45:33 -Generating unique operation named: updateUsingHEAD_10
2019-03-19 08:45:33 -Generating unique operation named: updateUsingPOST_13
2019-03-19 08:45:33 -Generating unique operation named: updateUsingPUT_10
2019-03-19 08:45:33 -Generating unique operation named: updateUsingPATCH_10
2019-03-19 08:45:33 -Generating unique operation named: updateUsingDELETE_10
2019-03-19 08:45:33 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-19 08:45:33 -Generating unique operation named: updateUsingTRACE_10
2019-03-19 08:45:33 -Generating unique operation named: addUsingGET_13
2019-03-19 08:45:33 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-19 08:45:33 -Generating unique operation named: editUsingGET_14
2019-03-19 08:45:33 -Generating unique operation named: listUsingGET_15
2019-03-19 08:45:34 -Generating unique operation named: saveUsingPOST_13
2019-03-19 08:45:34 -Generating unique operation named: saveUsingPOST_14
2019-03-19 08:45:34 -Generating unique operation named: updateUsingPOST_14
2019-03-19 08:45:34 -Generating unique operation named: listUsingGET_16
2019-03-19 08:45:34 -Generating unique operation named: listUsingHEAD_1
2019-03-19 08:45:34 -Generating unique operation named: listUsingPOST_1
2019-03-19 08:45:34 -Generating unique operation named: listUsingPUT_1
2019-03-19 08:45:34 -Generating unique operation named: listUsingPATCH_1
2019-03-19 08:45:34 -Generating unique operation named: listUsingDELETE_1
2019-03-19 08:45:34 -Generating unique operation named: listUsingOPTIONS_1
2019-03-19 08:45:34 -Generating unique operation named: listUsingTRACE_1
2019-03-19 08:45:34 -Generating unique operation named: addUsingGET_14
2019-03-19 08:45:34 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-19 08:45:34 -Generating unique operation named: editUsingGET_15
2019-03-19 08:45:34 -Generating unique operation named: listUsingGET_17
2019-03-19 08:45:34 -Generating unique operation named: removeUsingPOST_26
2019-03-19 08:45:34 -Generating unique operation named: saveUsingPOST_15
2019-03-19 08:45:34 -Generating unique operation named: treeUsingGET_3
2019-03-19 08:45:34 -Generating unique operation named: treeViewUsingGET_1
2019-03-19 08:45:34 -Generating unique operation named: updateUsingPOST_15
2019-03-19 08:45:34 -Generating unique operation named: addUsingGET_15
2019-03-19 08:45:34 -Generating unique operation named: editUsingGET_16
2019-03-19 08:45:34 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-19 08:45:34 -Generating unique operation named: listUsingGET_18
2019-03-19 08:45:34 -Generating unique operation named: removeUsingPOST_27
2019-03-19 08:45:34 -Generating unique operation named: removeUsingPOST_28
2019-03-19 08:45:34 -Generating unique operation named: saveUsingPOST_16
2019-03-19 08:45:34 -Generating unique operation named: updateUsingGET_11
2019-03-19 08:45:34 -Generating unique operation named: updateUsingHEAD_11
2019-03-19 08:45:34 -Generating unique operation named: updateUsingPOST_16
2019-03-19 08:45:34 -Generating unique operation named: updateUsingPUT_11
2019-03-19 08:45:34 -Generating unique operation named: updateUsingPATCH_11
2019-03-19 08:45:34 -Generating unique operation named: updateUsingDELETE_11
2019-03-19 08:45:34 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-19 08:45:34 -Generating unique operation named: updateUsingTRACE_11
2019-03-19 08:45:34 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-19 08:45:34 -Generating unique operation named: addUsingGET_16
2019-03-19 08:45:34 -Generating unique operation named: editUsingGET_17
2019-03-19 08:45:34 -Generating unique operation named: listUsingGET_19
2019-03-19 08:45:34 -Generating unique operation named: removeUsingPOST_29
2019-03-19 08:45:34 -Generating unique operation named: removeUsingPOST_30
2019-03-19 08:45:34 -Generating unique operation named: saveUsingPOST_17
2019-03-19 08:45:34 -Generating unique operation named: updateUsingGET_12
2019-03-19 08:45:34 -Generating unique operation named: updateUsingHEAD_12
2019-03-19 08:45:34 -Generating unique operation named: updateUsingPOST_17
2019-03-19 08:45:34 -Generating unique operation named: updateUsingPUT_12
2019-03-19 08:45:34 -Generating unique operation named: updateUsingPATCH_12
2019-03-19 08:45:34 -Generating unique operation named: updateUsingDELETE_12
2019-03-19 08:45:34 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-19 08:45:34 -Generating unique operation named: updateUsingTRACE_12
2019-03-19 08:45:34 -Generating unique operation named: addUsingGET_17
2019-03-19 08:45:34 -Generating unique operation named: editUsingGET_18
2019-03-19 08:45:34 -Generating unique operation named: listUsingGET_20
2019-03-19 08:45:34 -Generating unique operation named: removeUsingPOST_31
2019-03-19 08:45:34 -Generating unique operation named: removeUsingPOST_32
2019-03-19 08:45:34 -Generating unique operation named: saveUsingPOST_18
2019-03-19 08:45:34 -Generating unique operation named: updateUsingGET_13
2019-03-19 08:45:34 -Generating unique operation named: updateUsingHEAD_13
2019-03-19 08:45:34 -Generating unique operation named: updateUsingPOST_18
2019-03-19 08:45:34 -Generating unique operation named: updateUsingPUT_13
2019-03-19 08:45:34 -Generating unique operation named: updateUsingPATCH_13
2019-03-19 08:45:34 -Generating unique operation named: updateUsingDELETE_13
2019-03-19 08:45:34 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-19 08:45:34 -Generating unique operation named: updateUsingTRACE_13
2019-03-19 08:45:34 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-19 08:45:34 -Starting Quartz Scheduler now
2019-03-19 08:45:34 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-19 08:45:34 -Starting...
2019-03-19 08:45:34 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 08:45:34 -Started.
2019-03-19 08:45:34 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-19 08:45:34 -Using a shared selector for servlet write/read
2019-03-19 08:45:34 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-19 08:45:34 -Started BootdoApplication in 37.272 seconds (JVM running for 39.06)
2019-03-19 08:45:35 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-19 08:45:35 -==> Parameters: 
2019-03-19 08:45:35 -<==      Total: 1
2019-03-19 08:45:37 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-19 08:45:37 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-19 08:45:37 -FrameworkServlet 'dispatcherServlet': initialization completed in 106 ms
2019-03-19 08:45:37 -Enabling session validation scheduler...
2019-03-19 08:45:37 -请求地址 : http://localhost:8081/login;JSESSIONID=99820146-ebf6-4041-a4f1-11db90b70595
2019-03-19 08:45:37 -HTTP METHOD : GET
2019-03-19 08:45:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 08:45:37 -参数 : [{}]
2019-03-19 08:45:37 -耗时 : 6
2019-03-19 08:45:37 -返回值 : login
2019-03-19 08:45:38 -请求地址 : http://localhost:8081/getVerify
2019-03-19 08:45:38 -HTTP METHOD : GET
2019-03-19 08:45:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 08:45:38 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7d4e8751, org.apache.shiro.web.servlet.ShiroHttpServletResponse@73897688]
2019-03-19 08:45:39 -1477
2019-03-19 08:45:39 -耗时 : 625
2019-03-19 08:45:39 -返回值 : null
2019-03-19 08:45:44 -请求地址 : http://localhost:8081/login
2019-03-19 08:45:44 -HTTP METHOD : POST
2019-03-19 08:45:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 08:45:44 -参数 : [admin, 111111, 1477, org.apache.shiro.web.servlet.ShiroHttpServletRequest@71b575fc]
2019-03-19 08:45:44 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 08:45:44 -==> Parameters: admin(String)
2019-03-19 08:45:44 -<==      Total: 1
2019-03-19 08:45:44 -耗时 : 153
2019-03-19 08:45:44 -返回值 : {msg=操作成功, code=0}
2019-03-19 08:45:44 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-19 08:45:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:45:44 -==> Parameters: 1(Long), admin(String), 登录(String), 153(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 08:45:44.478(Timestamp)
2019-03-19 08:45:44 -请求地址 : http://localhost:8081/index
2019-03-19 08:45:44 -HTTP METHOD : GET
2019-03-19 08:45:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 08:45:44 -参数 : [{}]
2019-03-19 08:45:44 -<==    Updates: 1
2019-03-19 08:45:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 08:45:44 -==> Parameters: 1(Long)
2019-03-19 08:45:44 -<==      Total: 46
2019-03-19 08:45:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 08:45:44 -==> Parameters: 138(Long)
2019-03-19 08:45:44 -<==      Total: 1
2019-03-19 08:45:44 -耗时 : 216
2019-03-19 08:45:44 -返回值 : index_v1
2019-03-19 08:45:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:45:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 216(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 08:45:44.872(Timestamp)
2019-03-19 08:45:44 -<==    Updates: 1
2019-03-19 08:45:45 -请求地址 : http://localhost:8081/main
2019-03-19 08:45:45 -HTTP METHOD : GET
2019-03-19 08:45:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:45:45 -参数 : []
2019-03-19 08:45:45 -耗时 : 0
2019-03-19 08:45:45 -返回值 : main
2019-03-19 08:45:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 08:45:45 -HTTP METHOD : GET
2019-03-19 08:45:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 08:45:45 -参数 : []
2019-03-19 08:45:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 08:45:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 08:45:45 -<==      Total: 0
2019-03-19 08:45:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 08:45:45 -==> Parameters: 1(Long), 0(String)
2019-03-19 08:45:45 -<==      Total: 1
2019-03-19 08:45:45 -耗时 : 39
2019-03-19 08:45:45 -返回值 : com.bootdo.common.utils.PageUtils@cfed3e6
2019-03-19 08:45:45 -请求地址 : http://localhost:8081/main
2019-03-19 08:45:45 -HTTP METHOD : GET
2019-03-19 08:45:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:45:45 -参数 : []
2019-03-19 08:45:45 -耗时 : 0
2019-03-19 08:45:45 -返回值 : main
2019-03-19 08:45:49 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 08:45:49 -==> Parameters: 1(Long)
2019-03-19 08:45:49 -<==      Total: 90
2019-03-19 08:45:49 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:45:49 -HTTP METHOD : GET
2019-03-19 08:45:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:45:49 -参数 : []
2019-03-19 08:45:49 -耗时 : 1
2019-03-19 08:45:49 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:45:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:45:50 -HTTP METHOD : GET
2019-03-19 08:45:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:45:50 -参数 : [userType]
2019-03-19 08:45:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:45:50 -==> Parameters: userType(String)
2019-03-19 08:45:50 -<==      Total: 2
2019-03-19 08:45:50 -耗时 : 28
2019-03-19 08:45:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:45:51 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:45:51 -HTTP METHOD : GET
2019-03-19 08:45:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:45:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:45:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:45:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:45:51 -<==      Total: 3
2019-03-19 08:45:51 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:45:51 -==> Parameters: 
2019-03-19 08:45:51 -<==      Total: 1
2019-03-19 08:45:51 -耗时 : 142
2019-03-19 08:45:51 -返回值 : com.bootdo.common.utils.PageUtils@357369b
2019-03-19 08:45:52 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:45:52 -HTTP METHOD : GET
2019-03-19 08:45:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:45:52 -参数 : []
2019-03-19 08:45:52 -耗时 : 1
2019-03-19 08:45:52 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:45:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:45:52 -HTTP METHOD : GET
2019-03-19 08:45:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:45:52 -参数 : [userType]
2019-03-19 08:45:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:45:52 -==> Parameters: userType(String)
2019-03-19 08:45:52 -<==      Total: 2
2019-03-19 08:45:52 -耗时 : 5
2019-03-19 08:45:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:45:52 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:45:52 -HTTP METHOD : GET
2019-03-19 08:45:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:45:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:45:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:45:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:45:52 -<==      Total: 3
2019-03-19 08:45:52 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:45:52 -==> Parameters: 
2019-03-19 08:45:52 -<==      Total: 1
2019-03-19 08:45:52 -耗时 : 32
2019-03-19 08:45:52 -返回值 : com.bootdo.common.utils.PageUtils@6e4b1cb2
2019-03-19 08:45:53 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 08:45:53 -HTTP METHOD : GET
2019-03-19 08:45:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 08:45:53 -参数 : []
2019-03-19 08:45:53 -耗时 : 0
2019-03-19 08:45:53 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 08:45:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:45:53 -HTTP METHOD : GET
2019-03-19 08:45:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:45:53 -参数 : [userType]
2019-03-19 08:45:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:45:53 -==> Parameters: userType(String)
2019-03-19 08:45:53 -<==      Total: 2
2019-03-19 08:45:53 -耗时 : 9
2019-03-19 08:45:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:45:53 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 08:45:53 -HTTP METHOD : GET
2019-03-19 08:45:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 08:45:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 08:45:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 08:45:53 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:45:53 -<==      Total: 3
2019-03-19 08:45:53 -==>  Preparing: select count(*) from water_log 
2019-03-19 08:45:53 -==> Parameters: 
2019-03-19 08:45:53 -<==      Total: 1
2019-03-19 08:45:53 -耗时 : 30
2019-03-19 08:45:53 -返回值 : com.bootdo.common.utils.PageUtils@391021f9
2019-03-19 08:45:54 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:45:54 -HTTP METHOD : GET
2019-03-19 08:45:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:45:54 -参数 : []
2019-03-19 08:45:54 -耗时 : 0
2019-03-19 08:45:54 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:45:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:45:54 -HTTP METHOD : GET
2019-03-19 08:45:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:45:54 -参数 : [userType]
2019-03-19 08:45:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:45:54 -==> Parameters: userType(String)
2019-03-19 08:45:54 -<==      Total: 2
2019-03-19 08:45:54 -耗时 : 8
2019-03-19 08:45:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:45:54 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:45:54 -HTTP METHOD : GET
2019-03-19 08:45:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:45:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:45:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:45:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:45:54 -<==      Total: 3
2019-03-19 08:45:54 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:45:54 -==> Parameters: 
2019-03-19 08:45:54 -<==      Total: 1
2019-03-19 08:45:54 -耗时 : 9
2019-03-19 08:45:54 -返回值 : com.bootdo.common.utils.PageUtils@54e8b77
2019-03-19 08:45:54 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:45:54 -HTTP METHOD : GET
2019-03-19 08:45:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:45:54 -参数 : []
2019-03-19 08:45:54 -耗时 : 1
2019-03-19 08:45:54 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:45:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:45:55 -HTTP METHOD : GET
2019-03-19 08:45:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:45:55 -参数 : [userType]
2019-03-19 08:45:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:45:55 -==> Parameters: userType(String)
2019-03-19 08:45:55 -<==      Total: 2
2019-03-19 08:45:55 -耗时 : 4
2019-03-19 08:45:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:45:55 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:45:55 -HTTP METHOD : GET
2019-03-19 08:45:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:45:55 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:45:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:45:55 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:45:55 -<==      Total: 3
2019-03-19 08:45:55 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:45:55 -==> Parameters: 
2019-03-19 08:45:55 -<==      Total: 1
2019-03-19 08:45:55 -耗时 : 7
2019-03-19 08:45:55 -返回值 : com.bootdo.common.utils.PageUtils@50f68931
2019-03-19 08:45:55 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:45:55 -HTTP METHOD : GET
2019-03-19 08:45:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:45:55 -参数 : []
2019-03-19 08:45:55 -耗时 : 1
2019-03-19 08:45:55 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:45:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:45:55 -HTTP METHOD : GET
2019-03-19 08:45:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:45:55 -参数 : [userType]
2019-03-19 08:45:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:45:55 -==> Parameters: userType(String)
2019-03-19 08:45:55 -<==      Total: 2
2019-03-19 08:45:55 -耗时 : 6
2019-03-19 08:45:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:45:55 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:45:55 -HTTP METHOD : GET
2019-03-19 08:45:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:45:55 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:45:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:45:55 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:45:55 -<==      Total: 3
2019-03-19 08:45:55 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:45:55 -==> Parameters: 
2019-03-19 08:45:55 -<==      Total: 1
2019-03-19 08:45:55 -耗时 : 9
2019-03-19 08:45:55 -返回值 : com.bootdo.common.utils.PageUtils@657af4d5
2019-03-19 08:45:56 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 08:45:56 -HTTP METHOD : GET
2019-03-19 08:45:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 08:45:56 -参数 : []
2019-03-19 08:45:56 -耗时 : 1
2019-03-19 08:45:56 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 08:45:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:45:56 -HTTP METHOD : GET
2019-03-19 08:45:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:45:56 -参数 : [userType]
2019-03-19 08:45:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:45:56 -==> Parameters: userType(String)
2019-03-19 08:45:56 -<==      Total: 2
2019-03-19 08:45:56 -耗时 : 6
2019-03-19 08:45:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:45:56 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 08:45:56 -HTTP METHOD : GET
2019-03-19 08:45:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 08:45:56 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 08:45:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 08:45:56 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:45:56 -<==      Total: 3
2019-03-19 08:45:56 -==>  Preparing: select count(*) from water_log 
2019-03-19 08:45:56 -==> Parameters: 
2019-03-19 08:45:56 -<==      Total: 1
2019-03-19 08:45:56 -耗时 : 8
2019-03-19 08:45:56 -返回值 : com.bootdo.common.utils.PageUtils@288381d0
2019-03-19 08:45:57 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:45:57 -HTTP METHOD : GET
2019-03-19 08:45:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:45:57 -参数 : []
2019-03-19 08:45:57 -耗时 : 0
2019-03-19 08:45:57 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:45:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:45:57 -HTTP METHOD : GET
2019-03-19 08:45:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:45:57 -参数 : [userType]
2019-03-19 08:45:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:45:57 -==> Parameters: userType(String)
2019-03-19 08:45:57 -<==      Total: 2
2019-03-19 08:45:57 -耗时 : 8
2019-03-19 08:45:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:45:57 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:45:57 -HTTP METHOD : GET
2019-03-19 08:45:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:45:57 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:45:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:45:57 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:45:57 -<==      Total: 3
2019-03-19 08:45:57 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:45:57 -==> Parameters: 
2019-03-19 08:45:57 -<==      Total: 1
2019-03-19 08:45:57 -耗时 : 8
2019-03-19 08:45:57 -返回值 : com.bootdo.common.utils.PageUtils@4b7742b
2019-03-19 08:45:57 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:45:57 -HTTP METHOD : GET
2019-03-19 08:45:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:45:57 -参数 : []
2019-03-19 08:45:57 -耗时 : 0
2019-03-19 08:45:57 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:45:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:45:58 -HTTP METHOD : GET
2019-03-19 08:45:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:45:58 -参数 : [userType]
2019-03-19 08:45:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:45:58 -==> Parameters: userType(String)
2019-03-19 08:45:58 -<==      Total: 2
2019-03-19 08:45:58 -耗时 : 6
2019-03-19 08:45:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:45:58 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:45:58 -HTTP METHOD : GET
2019-03-19 08:45:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:45:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:45:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:45:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:45:58 -<==      Total: 3
2019-03-19 08:45:58 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:45:58 -==> Parameters: 
2019-03-19 08:45:58 -<==      Total: 1
2019-03-19 08:45:58 -耗时 : 11
2019-03-19 08:45:58 -返回值 : com.bootdo.common.utils.PageUtils@633da932
2019-03-19 08:45:58 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:45:58 -HTTP METHOD : GET
2019-03-19 08:45:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:45:58 -参数 : []
2019-03-19 08:45:58 -耗时 : 1
2019-03-19 08:45:58 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:45:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:45:59 -HTTP METHOD : GET
2019-03-19 08:45:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:45:59 -参数 : [userType]
2019-03-19 08:45:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:45:59 -==> Parameters: userType(String)
2019-03-19 08:45:59 -<==      Total: 2
2019-03-19 08:45:59 -耗时 : 5
2019-03-19 08:45:59 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:45:59 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:45:59 -HTTP METHOD : GET
2019-03-19 08:45:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:45:59 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:45:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:45:59 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:45:59 -<==      Total: 3
2019-03-19 08:45:59 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:45:59 -==> Parameters: 
2019-03-19 08:45:59 -<==      Total: 1
2019-03-19 08:45:59 -耗时 : 9
2019-03-19 08:45:59 -返回值 : com.bootdo.common.utils.PageUtils@367a5eea
2019-03-19 08:46:07 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 08:46:07 -HTTP METHOD : GET
2019-03-19 08:46:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 08:46:07 -参数 : []
2019-03-19 08:46:07 -耗时 : 0
2019-03-19 08:46:07 -返回值 : system/dept/deptTree
2019-03-19 08:46:07 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 08:46:07 -HTTP METHOD : GET
2019-03-19 08:46:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 08:46:07 -参数 : []
2019-03-19 08:46:07 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 08:46:07 -==> Parameters: 
2019-03-19 08:46:07 -<==      Total: 3
2019-03-19 08:46:07 -耗时 : 17
2019-03-19 08:46:07 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 08:46:12 -请求地址 : http://localhost:8081/moneyLog/heatLog/edit/1
2019-03-19 08:46:12 -HTTP METHOD : GET
2019-03-19 08:46:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.edit
2019-03-19 08:46:12 -参数 : [1, {}]
2019-03-19 08:46:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log where id = ? 
2019-03-19 08:46:12 -==> Parameters: 1(Long)
2019-03-19 08:46:12 -<==      Total: 1
2019-03-19 08:46:12 -耗时 : 14
2019-03-19 08:46:12 -返回值 : moneyLog/heatLog/edit
2019-03-19 08:46:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:46:12 -HTTP METHOD : GET
2019-03-19 08:46:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:46:12 -参数 : [userType]
2019-03-19 08:46:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:46:12 -==> Parameters: userType(String)
2019-03-19 08:46:12 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-19 08:46:12 -HTTP METHOD : GET
2019-03-19 08:46:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:46:12 -参数 : [userArea]
2019-03-19 08:46:12 -<==      Total: 2
2019-03-19 08:46:12 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-19 08:46:12 -HTTP METHOD : GET
2019-03-19 08:46:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:46:12 -参数 : [userOrg]
2019-03-19 08:46:12 -耗时 : 11
2019-03-19 08:46:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:46:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:46:12 -==> Parameters: userOrg(String)
2019-03-19 08:46:12 -<==      Total: 0
2019-03-19 08:46:12 -耗时 : 7
2019-03-19 08:46:12 -返回值 : []
2019-03-19 08:46:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:46:12 -==> Parameters: userArea(String)
2019-03-19 08:46:12 -<==      Total: 0
2019-03-19 08:46:12 -耗时 : 19
2019-03-19 08:46:12 -返回值 : []
2019-03-19 08:46:23 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 9]
2019-03-19 08:46:24 -请求地址 : http://localhost:8081/moneyLog/heatLog/add
2019-03-19 08:46:24 -HTTP METHOD : GET
2019-03-19 08:46:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.add
2019-03-19 08:46:24 -参数 : []
2019-03-19 08:46:24 -耗时 : 1
2019-03-19 08:46:24 -返回值 : moneyLog/heatLog/add
2019-03-19 08:46:40 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 08:46:40 -HTTP METHOD : GET
2019-03-19 08:46:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 08:46:40 -参数 : []
2019-03-19 08:46:40 -耗时 : 0
2019-03-19 08:46:40 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 08:46:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:46:41 -HTTP METHOD : GET
2019-03-19 08:46:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:46:41 -参数 : [userType]
2019-03-19 08:46:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:46:41 -==> Parameters: userType(String)
2019-03-19 08:46:41 -<==      Total: 2
2019-03-19 08:46:41 -耗时 : 8
2019-03-19 08:46:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:46:41 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 08:46:41 -HTTP METHOD : GET
2019-03-19 08:46:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 08:46:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 08:46:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 08:46:41 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:46:41 -<==      Total: 3
2019-03-19 08:46:41 -==>  Preparing: select count(*) from water_log 
2019-03-19 08:46:41 -==> Parameters: 
2019-03-19 08:46:41 -<==      Total: 1
2019-03-19 08:46:41 -耗时 : 6
2019-03-19 08:46:41 -返回值 : com.bootdo.common.utils.PageUtils@36a20d4d
2019-03-19 08:46:41 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:46:41 -HTTP METHOD : GET
2019-03-19 08:46:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:46:41 -参数 : []
2019-03-19 08:46:41 -耗时 : 0
2019-03-19 08:46:41 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:46:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:46:41 -HTTP METHOD : GET
2019-03-19 08:46:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:46:41 -参数 : [userType]
2019-03-19 08:46:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:46:41 -==> Parameters: userType(String)
2019-03-19 08:46:41 -<==      Total: 2
2019-03-19 08:46:41 -耗时 : 4
2019-03-19 08:46:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:46:41 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:46:41 -HTTP METHOD : GET
2019-03-19 08:46:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:46:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:46:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:46:41 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:46:41 -<==      Total: 3
2019-03-19 08:46:41 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:46:41 -==> Parameters: 
2019-03-19 08:46:41 -<==      Total: 1
2019-03-19 08:46:41 -耗时 : 7
2019-03-19 08:46:41 -返回值 : com.bootdo.common.utils.PageUtils@476f530c
2019-03-19 08:46:42 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:46:42 -HTTP METHOD : GET
2019-03-19 08:46:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:46:42 -参数 : []
2019-03-19 08:46:42 -耗时 : 1
2019-03-19 08:46:42 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:46:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:46:42 -HTTP METHOD : GET
2019-03-19 08:46:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:46:42 -参数 : [userType]
2019-03-19 08:46:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:46:42 -==> Parameters: userType(String)
2019-03-19 08:46:42 -<==      Total: 2
2019-03-19 08:46:42 -耗时 : 5
2019-03-19 08:46:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:46:42 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:46:42 -HTTP METHOD : GET
2019-03-19 08:46:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:46:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:46:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:46:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:46:42 -<==      Total: 3
2019-03-19 08:46:42 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:46:42 -==> Parameters: 
2019-03-19 08:46:42 -<==      Total: 1
2019-03-19 08:46:42 -耗时 : 7
2019-03-19 08:46:42 -返回值 : com.bootdo.common.utils.PageUtils@430964d1
2019-03-19 08:46:48 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:46:48 -HTTP METHOD : GET
2019-03-19 08:46:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:46:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-08}]
2019-03-19 08:46:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:46:48 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:46:48 -<==      Total: 1
2019-03-19 08:46:48 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-19 08:46:48 -==> Parameters: 2019-03-08(String)
2019-03-19 08:46:48 -<==      Total: 1
2019-03-19 08:46:48 -耗时 : 82
2019-03-19 08:46:48 -返回值 : com.bootdo.common.utils.PageUtils@57b5ed46
2019-03-19 08:46:50 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:46:50 -HTTP METHOD : GET
2019-03-19 08:46:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:46:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-08}]
2019-03-19 08:46:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:46:50 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:46:50 -<==      Total: 1
2019-03-19 08:46:50 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-19 08:46:50 -==> Parameters: 2019-03-08(String)
2019-03-19 08:46:50 -<==      Total: 1
2019-03-19 08:46:50 -耗时 : 7
2019-03-19 08:46:50 -返回值 : com.bootdo.common.utils.PageUtils@6d4412a0
2019-03-19 08:46:51 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:46:51 -HTTP METHOD : GET
2019-03-19 08:46:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:46:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-08}]
2019-03-19 08:46:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:46:51 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:46:51 -<==      Total: 1
2019-03-19 08:46:51 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-19 08:46:51 -==> Parameters: 2019-03-08(String)
2019-03-19 08:46:51 -<==      Total: 1
2019-03-19 08:46:51 -耗时 : 7
2019-03-19 08:46:51 -返回值 : com.bootdo.common.utils.PageUtils@4f5bc27f
2019-03-19 08:46:52 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:46:52 -HTTP METHOD : GET
2019-03-19 08:46:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:46:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-08}]
2019-03-19 08:46:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:46:52 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:46:52 -<==      Total: 1
2019-03-19 08:46:52 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-19 08:46:52 -==> Parameters: 2019-03-08(String)
2019-03-19 08:46:52 -<==      Total: 1
2019-03-19 08:46:52 -耗时 : 11
2019-03-19 08:46:52 -返回值 : com.bootdo.common.utils.PageUtils@f0d22dc
2019-03-19 08:46:53 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:46:53 -HTTP METHOD : GET
2019-03-19 08:46:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:46:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-08}]
2019-03-19 08:46:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:46:53 -==> Parameters: 2019-03-08 00:00:00(String), 2019-03-08 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:46:53 -<==      Total: 1
2019-03-19 08:46:53 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-19 08:46:53 -==> Parameters: 2019-03-08(String)
2019-03-19 08:46:53 -<==      Total: 1
2019-03-19 08:46:53 -耗时 : 8
2019-03-19 08:46:53 -返回值 : com.bootdo.common.utils.PageUtils@1f6be31d
2019-03-19 08:47:08 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:47:08 -HTTP METHOD : GET
2019-03-19 08:47:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:47:08 -参数 : []
2019-03-19 08:47:08 -耗时 : 1
2019-03-19 08:47:08 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:47:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:47:08 -HTTP METHOD : GET
2019-03-19 08:47:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:47:08 -参数 : [userType]
2019-03-19 08:47:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:47:08 -==> Parameters: userType(String)
2019-03-19 08:47:08 -<==      Total: 2
2019-03-19 08:47:08 -耗时 : 6
2019-03-19 08:47:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:47:08 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:47:08 -HTTP METHOD : GET
2019-03-19 08:47:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:47:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:47:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:47:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:47:08 -<==      Total: 3
2019-03-19 08:47:08 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:47:08 -==> Parameters: 
2019-03-19 08:47:08 -<==      Total: 1
2019-03-19 08:47:08 -耗时 : 8
2019-03-19 08:47:08 -返回值 : com.bootdo.common.utils.PageUtils@6681f94b
2019-03-19 08:47:10 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 08:47:10 -HTTP METHOD : GET
2019-03-19 08:47:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 08:47:10 -参数 : []
2019-03-19 08:47:10 -耗时 : 1
2019-03-19 08:47:10 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 08:47:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:47:10 -HTTP METHOD : GET
2019-03-19 08:47:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:47:10 -参数 : [userType]
2019-03-19 08:47:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:47:10 -==> Parameters: userType(String)
2019-03-19 08:47:10 -<==      Total: 2
2019-03-19 08:47:10 -耗时 : 6
2019-03-19 08:47:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:47:10 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 08:47:10 -HTTP METHOD : GET
2019-03-19 08:47:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 08:47:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 08:47:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 08:47:10 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:47:10 -<==      Total: 3
2019-03-19 08:47:10 -==>  Preparing: select count(*) from water_log 
2019-03-19 08:47:10 -==> Parameters: 
2019-03-19 08:47:10 -<==      Total: 1
2019-03-19 08:47:10 -耗时 : 16
2019-03-19 08:47:10 -返回值 : com.bootdo.common.utils.PageUtils@76ff2d30
2019-03-19 08:47:12 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:47:12 -HTTP METHOD : GET
2019-03-19 08:47:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:47:12 -参数 : []
2019-03-19 08:47:12 -耗时 : 1
2019-03-19 08:47:12 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:47:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:47:12 -HTTP METHOD : GET
2019-03-19 08:47:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:47:12 -参数 : [userType]
2019-03-19 08:47:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:47:12 -==> Parameters: userType(String)
2019-03-19 08:47:12 -<==      Total: 2
2019-03-19 08:47:12 -耗时 : 4
2019-03-19 08:47:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:47:12 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:47:12 -HTTP METHOD : GET
2019-03-19 08:47:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:47:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:47:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:47:12 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:47:12 -<==      Total: 3
2019-03-19 08:47:12 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:47:12 -==> Parameters: 
2019-03-19 08:47:12 -<==      Total: 1
2019-03-19 08:47:12 -耗时 : 6
2019-03-19 08:47:12 -返回值 : com.bootdo.common.utils.PageUtils@c533bec
2019-03-19 08:48:38 -请求地址 : http://localhost:8081/index
2019-03-19 08:48:38 -HTTP METHOD : GET
2019-03-19 08:48:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 08:48:38 -参数 : [{}]
2019-03-19 08:48:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 08:48:38 -==> Parameters: 1(Long)
2019-03-19 08:48:38 -<==      Total: 46
2019-03-19 08:48:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 08:48:38 -==> Parameters: 138(Long)
2019-03-19 08:48:38 -<==      Total: 1
2019-03-19 08:48:38 -耗时 : 22
2019-03-19 08:48:38 -返回值 : index_v1
2019-03-19 08:48:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:48:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 08:48:38.651(Timestamp)
2019-03-19 08:48:38 -请求地址 : http://localhost:8081/main
2019-03-19 08:48:38 -HTTP METHOD : GET
2019-03-19 08:48:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:48:38 -参数 : []
2019-03-19 08:48:38 -耗时 : 3
2019-03-19 08:48:38 -返回值 : main
2019-03-19 08:48:38 -<==    Updates: 1
2019-03-19 08:48:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 08:48:39 -HTTP METHOD : GET
2019-03-19 08:48:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 08:48:39 -参数 : []
2019-03-19 08:48:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 08:48:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 08:48:39 -<==      Total: 0
2019-03-19 08:48:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 08:48:39 -==> Parameters: 1(Long), 0(String)
2019-03-19 08:48:39 -<==      Total: 1
2019-03-19 08:48:39 -耗时 : 7
2019-03-19 08:48:39 -返回值 : com.bootdo.common.utils.PageUtils@7124c786
2019-03-19 08:48:39 -请求地址 : http://localhost:8081/main
2019-03-19 08:48:39 -HTTP METHOD : GET
2019-03-19 08:48:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:48:39 -参数 : []
2019-03-19 08:48:39 -耗时 : 0
2019-03-19 08:48:39 -返回值 : main
2019-03-19 08:48:41 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:48:41 -HTTP METHOD : GET
2019-03-19 08:48:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:48:41 -参数 : []
2019-03-19 08:48:41 -耗时 : 1
2019-03-19 08:48:41 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:48:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:48:42 -HTTP METHOD : GET
2019-03-19 08:48:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:48:42 -参数 : [userType]
2019-03-19 08:48:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:48:42 -==> Parameters: userType(String)
2019-03-19 08:48:42 -<==      Total: 2
2019-03-19 08:48:42 -耗时 : 4
2019-03-19 08:48:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:48:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:48:43 -HTTP METHOD : GET
2019-03-19 08:48:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:48:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:48:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:48:43 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:48:43 -<==      Total: 3
2019-03-19 08:48:43 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:48:43 -==> Parameters: 
2019-03-19 08:48:43 -<==      Total: 1
2019-03-19 08:48:43 -耗时 : 8
2019-03-19 08:48:43 -返回值 : com.bootdo.common.utils.PageUtils@238d861b
2019-03-19 08:48:44 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 08:48:44 -HTTP METHOD : GET
2019-03-19 08:48:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 08:48:44 -参数 : []
2019-03-19 08:48:44 -耗时 : 0
2019-03-19 08:48:44 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 08:48:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:48:44 -HTTP METHOD : GET
2019-03-19 08:48:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:48:44 -参数 : [userType]
2019-03-19 08:48:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:48:44 -==> Parameters: userType(String)
2019-03-19 08:48:44 -<==      Total: 2
2019-03-19 08:48:44 -耗时 : 4
2019-03-19 08:48:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:48:44 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 08:48:44 -HTTP METHOD : GET
2019-03-19 08:48:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 08:48:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 08:48:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 08:48:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:48:44 -<==      Total: 3
2019-03-19 08:48:44 -==>  Preparing: select count(*) from water_log 
2019-03-19 08:48:44 -==> Parameters: 
2019-03-19 08:48:44 -<==      Total: 1
2019-03-19 08:48:44 -耗时 : 7
2019-03-19 08:48:44 -返回值 : com.bootdo.common.utils.PageUtils@45e20ec0
2019-03-19 08:48:48 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:48:48 -HTTP METHOD : GET
2019-03-19 08:48:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:48:48 -参数 : []
2019-03-19 08:48:48 -耗时 : 1
2019-03-19 08:48:48 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:48:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:48:49 -HTTP METHOD : GET
2019-03-19 08:48:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:48:49 -参数 : [userType]
2019-03-19 08:48:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:48:49 -==> Parameters: userType(String)
2019-03-19 08:48:49 -<==      Total: 2
2019-03-19 08:48:49 -耗时 : 3
2019-03-19 08:48:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:48:49 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:48:49 -HTTP METHOD : GET
2019-03-19 08:48:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:48:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:48:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:48:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:48:49 -<==      Total: 3
2019-03-19 08:48:49 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:48:49 -==> Parameters: 
2019-03-19 08:48:49 -<==      Total: 1
2019-03-19 08:48:49 -耗时 : 8
2019-03-19 08:48:49 -返回值 : com.bootdo.common.utils.PageUtils@a49754f
2019-03-19 08:48:51 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 08:48:51 -HTTP METHOD : GET
2019-03-19 08:48:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 08:48:51 -参数 : []
2019-03-19 08:48:51 -耗时 : 1
2019-03-19 08:48:51 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 08:48:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:48:52 -HTTP METHOD : GET
2019-03-19 08:48:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:48:52 -参数 : [userType]
2019-03-19 08:48:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:48:52 -==> Parameters: userType(String)
2019-03-19 08:48:52 -<==      Total: 2
2019-03-19 08:48:52 -耗时 : 4
2019-03-19 08:48:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:48:52 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 08:48:52 -HTTP METHOD : GET
2019-03-19 08:48:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 08:48:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 08:48:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 08:48:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:48:52 -<==      Total: 3
2019-03-19 08:48:52 -==>  Preparing: select count(*) from water_log 
2019-03-19 08:48:52 -==> Parameters: 
2019-03-19 08:48:52 -<==      Total: 1
2019-03-19 08:48:52 -耗时 : 9
2019-03-19 08:48:52 -返回值 : com.bootdo.common.utils.PageUtils@48317211
2019-03-19 08:48:52 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:48:52 -HTTP METHOD : GET
2019-03-19 08:48:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:48:52 -参数 : []
2019-03-19 08:48:52 -耗时 : 0
2019-03-19 08:48:52 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:48:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:48:52 -HTTP METHOD : GET
2019-03-19 08:48:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:48:52 -参数 : [userType]
2019-03-19 08:48:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:48:52 -==> Parameters: userType(String)
2019-03-19 08:48:52 -<==      Total: 2
2019-03-19 08:48:52 -耗时 : 5
2019-03-19 08:48:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:48:52 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:48:52 -HTTP METHOD : GET
2019-03-19 08:48:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:48:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:48:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:48:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:48:52 -<==      Total: 3
2019-03-19 08:48:52 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:48:52 -==> Parameters: 
2019-03-19 08:48:52 -<==      Total: 1
2019-03-19 08:48:52 -耗时 : 8
2019-03-19 08:48:52 -返回值 : com.bootdo.common.utils.PageUtils@7c21bb7c
2019-03-19 08:48:52 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:48:52 -HTTP METHOD : GET
2019-03-19 08:48:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:48:52 -参数 : []
2019-03-19 08:48:52 -耗时 : 0
2019-03-19 08:48:52 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:48:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:48:53 -HTTP METHOD : GET
2019-03-19 08:48:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:48:53 -参数 : [userType]
2019-03-19 08:48:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:48:53 -==> Parameters: userType(String)
2019-03-19 08:48:53 -<==      Total: 2
2019-03-19 08:48:53 -耗时 : 4
2019-03-19 08:48:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:48:53 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:48:53 -HTTP METHOD : GET
2019-03-19 08:48:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:48:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:48:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:48:53 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:48:53 -<==      Total: 3
2019-03-19 08:48:53 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:48:53 -==> Parameters: 
2019-03-19 08:48:53 -<==      Total: 1
2019-03-19 08:48:53 -耗时 : 8
2019-03-19 08:48:53 -返回值 : com.bootdo.common.utils.PageUtils@2df11905
2019-03-19 08:48:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 08:48:55 -HTTP METHOD : GET
2019-03-19 08:48:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 08:48:55 -参数 : []
2019-03-19 08:48:55 -耗时 : 0
2019-03-19 08:48:55 -返回值 : system/dept/deptTree
2019-03-19 08:48:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 08:48:55 -HTTP METHOD : GET
2019-03-19 08:48:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 08:48:55 -参数 : []
2019-03-19 08:48:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 08:48:55 -==> Parameters: 
2019-03-19 08:48:55 -<==      Total: 3
2019-03-19 08:48:55 -耗时 : 4
2019-03-19 08:48:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 08:48:58 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:48:58 -HTTP METHOD : GET
2019-03-19 08:48:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:48:58 -参数 : []
2019-03-19 08:48:58 -耗时 : 0
2019-03-19 08:48:58 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:48:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:48:58 -HTTP METHOD : GET
2019-03-19 08:48:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:48:58 -参数 : [userType]
2019-03-19 08:48:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:48:58 -==> Parameters: userType(String)
2019-03-19 08:48:58 -<==      Total: 2
2019-03-19 08:48:58 -耗时 : 6
2019-03-19 08:48:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:48:58 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:48:58 -HTTP METHOD : GET
2019-03-19 08:48:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:48:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:48:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:48:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:48:58 -<==      Total: 3
2019-03-19 08:48:58 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:48:58 -==> Parameters: 
2019-03-19 08:48:58 -<==      Total: 1
2019-03-19 08:48:58 -耗时 : 6
2019-03-19 08:48:58 -返回值 : com.bootdo.common.utils.PageUtils@b6661ef
2019-03-19 08:49:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 08:49:00 -HTTP METHOD : GET
2019-03-19 08:49:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 08:49:00 -参数 : []
2019-03-19 08:49:00 -耗时 : 1
2019-03-19 08:49:00 -返回值 : system/dept/deptTree
2019-03-19 08:49:00 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 08:49:00 -HTTP METHOD : GET
2019-03-19 08:49:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 08:49:00 -参数 : []
2019-03-19 08:49:00 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 08:49:00 -==> Parameters: 
2019-03-19 08:49:00 -<==      Total: 3
2019-03-19 08:49:00 -耗时 : 6
2019-03-19 08:49:00 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 08:49:02 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 08:49:02 -HTTP METHOD : GET
2019-03-19 08:49:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 08:49:02 -参数 : []
2019-03-19 08:49:02 -耗时 : 1
2019-03-19 08:49:02 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 08:49:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:03 -HTTP METHOD : GET
2019-03-19 08:49:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:03 -参数 : [userType]
2019-03-19 08:49:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:03 -==> Parameters: userType(String)
2019-03-19 08:49:03 -<==      Total: 2
2019-03-19 08:49:03 -耗时 : 5
2019-03-19 08:49:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:03 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 08:49:03 -HTTP METHOD : GET
2019-03-19 08:49:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 08:49:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 08:49:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 08:49:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:03 -<==      Total: 3
2019-03-19 08:49:03 -==>  Preparing: select count(*) from water_log 
2019-03-19 08:49:03 -==> Parameters: 
2019-03-19 08:49:03 -<==      Total: 1
2019-03-19 08:49:03 -耗时 : 7
2019-03-19 08:49:03 -返回值 : com.bootdo.common.utils.PageUtils@5f802e55
2019-03-19 08:49:04 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 08:49:04 -HTTP METHOD : GET
2019-03-19 08:49:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 08:49:04 -参数 : []
2019-03-19 08:49:04 -耗时 : 1
2019-03-19 08:49:04 -返回值 : system/dept/deptTree
2019-03-19 08:49:04 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 08:49:04 -HTTP METHOD : GET
2019-03-19 08:49:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 08:49:04 -参数 : []
2019-03-19 08:49:04 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 08:49:04 -==> Parameters: 
2019-03-19 08:49:04 -<==      Total: 3
2019-03-19 08:49:04 -耗时 : 3
2019-03-19 08:49:04 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 08:49:08 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:49:08 -HTTP METHOD : GET
2019-03-19 08:49:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:49:08 -参数 : []
2019-03-19 08:49:08 -耗时 : 1
2019-03-19 08:49:08 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:49:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:08 -HTTP METHOD : GET
2019-03-19 08:49:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:08 -参数 : [userType]
2019-03-19 08:49:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:08 -==> Parameters: userType(String)
2019-03-19 08:49:08 -<==      Total: 2
2019-03-19 08:49:08 -耗时 : 4
2019-03-19 08:49:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:49:08 -HTTP METHOD : GET
2019-03-19 08:49:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:49:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:49:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:49:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:08 -<==      Total: 3
2019-03-19 08:49:08 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:49:08 -==> Parameters: 
2019-03-19 08:49:08 -<==      Total: 1
2019-03-19 08:49:08 -耗时 : 6
2019-03-19 08:49:08 -返回值 : com.bootdo.common.utils.PageUtils@5ab56bc2
2019-03-19 08:49:11 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:49:11 -HTTP METHOD : GET
2019-03-19 08:49:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:49:11 -参数 : []
2019-03-19 08:49:11 -耗时 : 0
2019-03-19 08:49:11 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:49:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:11 -HTTP METHOD : GET
2019-03-19 08:49:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:11 -参数 : [userType]
2019-03-19 08:49:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:11 -==> Parameters: userType(String)
2019-03-19 08:49:11 -<==      Total: 2
2019-03-19 08:49:11 -耗时 : 7
2019-03-19 08:49:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:11 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:49:11 -HTTP METHOD : GET
2019-03-19 08:49:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:49:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:49:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:49:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:11 -<==      Total: 3
2019-03-19 08:49:11 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:49:11 -==> Parameters: 
2019-03-19 08:49:11 -<==      Total: 1
2019-03-19 08:49:11 -耗时 : 8
2019-03-19 08:49:11 -返回值 : com.bootdo.common.utils.PageUtils@1e379010
2019-03-19 08:49:11 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 08:49:11 -HTTP METHOD : GET
2019-03-19 08:49:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 08:49:11 -参数 : []
2019-03-19 08:49:11 -耗时 : 1
2019-03-19 08:49:11 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 08:49:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:12 -HTTP METHOD : GET
2019-03-19 08:49:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:12 -参数 : [userType]
2019-03-19 08:49:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:12 -==> Parameters: userType(String)
2019-03-19 08:49:12 -<==      Total: 2
2019-03-19 08:49:12 -耗时 : 4
2019-03-19 08:49:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:12 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 08:49:12 -HTTP METHOD : GET
2019-03-19 08:49:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 08:49:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 08:49:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 08:49:12 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:12 -<==      Total: 3
2019-03-19 08:49:12 -==>  Preparing: select count(*) from water_log 
2019-03-19 08:49:12 -==> Parameters: 
2019-03-19 08:49:12 -<==      Total: 1
2019-03-19 08:49:12 -耗时 : 7
2019-03-19 08:49:12 -返回值 : com.bootdo.common.utils.PageUtils@4c0de1aa
2019-03-19 08:49:12 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:49:12 -HTTP METHOD : GET
2019-03-19 08:49:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:49:12 -参数 : []
2019-03-19 08:49:12 -耗时 : 0
2019-03-19 08:49:12 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:49:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:12 -HTTP METHOD : GET
2019-03-19 08:49:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:12 -参数 : [userType]
2019-03-19 08:49:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:12 -==> Parameters: userType(String)
2019-03-19 08:49:12 -<==      Total: 2
2019-03-19 08:49:12 -耗时 : 6
2019-03-19 08:49:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:12 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:49:12 -HTTP METHOD : GET
2019-03-19 08:49:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:49:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:49:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:49:12 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:12 -<==      Total: 3
2019-03-19 08:49:12 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:49:12 -==> Parameters: 
2019-03-19 08:49:12 -<==      Total: 1
2019-03-19 08:49:12 -耗时 : 7
2019-03-19 08:49:12 -返回值 : com.bootdo.common.utils.PageUtils@30dfcc02
2019-03-19 08:49:13 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:49:13 -HTTP METHOD : GET
2019-03-19 08:49:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:49:13 -参数 : []
2019-03-19 08:49:13 -耗时 : 0
2019-03-19 08:49:13 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:49:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:13 -HTTP METHOD : GET
2019-03-19 08:49:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:13 -参数 : [userType]
2019-03-19 08:49:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:13 -==> Parameters: userType(String)
2019-03-19 08:49:13 -<==      Total: 2
2019-03-19 08:49:13 -耗时 : 4
2019-03-19 08:49:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:13 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:49:13 -HTTP METHOD : GET
2019-03-19 08:49:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:49:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:49:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:49:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:13 -<==      Total: 3
2019-03-19 08:49:13 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:49:13 -==> Parameters: 
2019-03-19 08:49:13 -<==      Total: 1
2019-03-19 08:49:13 -耗时 : 6
2019-03-19 08:49:13 -返回值 : com.bootdo.common.utils.PageUtils@75e3d84d
2019-03-19 08:49:13 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:49:13 -HTTP METHOD : GET
2019-03-19 08:49:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:49:13 -参数 : []
2019-03-19 08:49:13 -耗时 : 0
2019-03-19 08:49:13 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:49:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:14 -HTTP METHOD : GET
2019-03-19 08:49:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:14 -参数 : [userType]
2019-03-19 08:49:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:14 -==> Parameters: userType(String)
2019-03-19 08:49:14 -<==      Total: 2
2019-03-19 08:49:14 -耗时 : 5
2019-03-19 08:49:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:14 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:49:14 -HTTP METHOD : GET
2019-03-19 08:49:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:49:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:49:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:49:14 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:14 -<==      Total: 3
2019-03-19 08:49:14 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:49:14 -==> Parameters: 
2019-03-19 08:49:14 -<==      Total: 1
2019-03-19 08:49:14 -耗时 : 6
2019-03-19 08:49:14 -返回值 : com.bootdo.common.utils.PageUtils@51ea54b9
2019-03-19 08:49:14 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 08:49:14 -HTTP METHOD : GET
2019-03-19 08:49:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 08:49:14 -参数 : []
2019-03-19 08:49:14 -耗时 : 0
2019-03-19 08:49:14 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 08:49:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:14 -HTTP METHOD : GET
2019-03-19 08:49:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:14 -参数 : [userType]
2019-03-19 08:49:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:14 -==> Parameters: userType(String)
2019-03-19 08:49:14 -<==      Total: 2
2019-03-19 08:49:14 -耗时 : 4
2019-03-19 08:49:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:14 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 08:49:14 -HTTP METHOD : GET
2019-03-19 08:49:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 08:49:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 08:49:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 08:49:14 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:14 -<==      Total: 3
2019-03-19 08:49:14 -==>  Preparing: select count(*) from water_log 
2019-03-19 08:49:14 -==> Parameters: 
2019-03-19 08:49:14 -<==      Total: 1
2019-03-19 08:49:14 -耗时 : 6
2019-03-19 08:49:14 -返回值 : com.bootdo.common.utils.PageUtils@fb80b2c
2019-03-19 08:49:15 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:49:15 -HTTP METHOD : GET
2019-03-19 08:49:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:49:15 -参数 : []
2019-03-19 08:49:15 -耗时 : 0
2019-03-19 08:49:15 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:49:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:15 -HTTP METHOD : GET
2019-03-19 08:49:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:15 -参数 : [userType]
2019-03-19 08:49:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:15 -==> Parameters: userType(String)
2019-03-19 08:49:15 -<==      Total: 2
2019-03-19 08:49:15 -耗时 : 5
2019-03-19 08:49:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:15 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:49:15 -HTTP METHOD : GET
2019-03-19 08:49:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:49:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:49:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:49:15 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:15 -<==      Total: 3
2019-03-19 08:49:15 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:49:15 -==> Parameters: 
2019-03-19 08:49:15 -<==      Total: 1
2019-03-19 08:49:15 -耗时 : 7
2019-03-19 08:49:15 -返回值 : com.bootdo.common.utils.PageUtils@476b5671
2019-03-19 08:49:15 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:49:15 -HTTP METHOD : GET
2019-03-19 08:49:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:49:15 -参数 : []
2019-03-19 08:49:15 -耗时 : 1
2019-03-19 08:49:15 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:49:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:15 -HTTP METHOD : GET
2019-03-19 08:49:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:15 -参数 : [userType]
2019-03-19 08:49:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:15 -==> Parameters: userType(String)
2019-03-19 08:49:15 -<==      Total: 2
2019-03-19 08:49:15 -耗时 : 4
2019-03-19 08:49:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:15 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:49:15 -HTTP METHOD : GET
2019-03-19 08:49:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:49:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:49:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:49:15 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:15 -<==      Total: 3
2019-03-19 08:49:15 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:49:15 -==> Parameters: 
2019-03-19 08:49:15 -<==      Total: 1
2019-03-19 08:49:15 -耗时 : 5
2019-03-19 08:49:15 -返回值 : com.bootdo.common.utils.PageUtils@622f5f0a
2019-03-19 08:49:15 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:49:15 -HTTP METHOD : GET
2019-03-19 08:49:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:49:15 -参数 : []
2019-03-19 08:49:15 -耗时 : 0
2019-03-19 08:49:15 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:49:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:16 -HTTP METHOD : GET
2019-03-19 08:49:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:16 -参数 : [userType]
2019-03-19 08:49:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:16 -==> Parameters: userType(String)
2019-03-19 08:49:16 -<==      Total: 2
2019-03-19 08:49:16 -耗时 : 3
2019-03-19 08:49:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:16 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:49:16 -HTTP METHOD : GET
2019-03-19 08:49:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:49:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:49:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:49:16 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:16 -<==      Total: 3
2019-03-19 08:49:16 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:49:16 -==> Parameters: 
2019-03-19 08:49:16 -<==      Total: 1
2019-03-19 08:49:16 -耗时 : 5
2019-03-19 08:49:16 -返回值 : com.bootdo.common.utils.PageUtils@6c08fb25
2019-03-19 08:49:16 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 08:49:16 -HTTP METHOD : GET
2019-03-19 08:49:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 08:49:16 -参数 : []
2019-03-19 08:49:16 -耗时 : 0
2019-03-19 08:49:16 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 08:49:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:16 -HTTP METHOD : GET
2019-03-19 08:49:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:16 -参数 : [userType]
2019-03-19 08:49:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:16 -==> Parameters: userType(String)
2019-03-19 08:49:16 -<==      Total: 2
2019-03-19 08:49:16 -耗时 : 4
2019-03-19 08:49:16 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:16 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 08:49:16 -HTTP METHOD : GET
2019-03-19 08:49:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 08:49:16 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 08:49:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 08:49:16 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:16 -<==      Total: 3
2019-03-19 08:49:16 -==>  Preparing: select count(*) from water_log 
2019-03-19 08:49:16 -==> Parameters: 
2019-03-19 08:49:16 -<==      Total: 1
2019-03-19 08:49:16 -耗时 : 7
2019-03-19 08:49:16 -返回值 : com.bootdo.common.utils.PageUtils@5e7f6bc6
2019-03-19 08:49:16 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:49:16 -HTTP METHOD : GET
2019-03-19 08:49:16 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:49:16 -参数 : []
2019-03-19 08:49:16 -耗时 : 1
2019-03-19 08:49:16 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:49:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:17 -HTTP METHOD : GET
2019-03-19 08:49:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:17 -参数 : [userType]
2019-03-19 08:49:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:17 -==> Parameters: userType(String)
2019-03-19 08:49:17 -<==      Total: 2
2019-03-19 08:49:17 -耗时 : 5
2019-03-19 08:49:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:17 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:49:17 -HTTP METHOD : GET
2019-03-19 08:49:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:49:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:49:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:49:17 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:17 -<==      Total: 3
2019-03-19 08:49:17 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:49:17 -==> Parameters: 
2019-03-19 08:49:17 -<==      Total: 1
2019-03-19 08:49:17 -耗时 : 5
2019-03-19 08:49:17 -返回值 : com.bootdo.common.utils.PageUtils@6fa18127
2019-03-19 08:49:17 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:49:17 -HTTP METHOD : GET
2019-03-19 08:49:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:49:17 -参数 : []
2019-03-19 08:49:17 -耗时 : 0
2019-03-19 08:49:17 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:49:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:17 -HTTP METHOD : GET
2019-03-19 08:49:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:17 -参数 : [userType]
2019-03-19 08:49:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:17 -==> Parameters: userType(String)
2019-03-19 08:49:17 -<==      Total: 2
2019-03-19 08:49:17 -耗时 : 5
2019-03-19 08:49:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:17 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:49:17 -HTTP METHOD : GET
2019-03-19 08:49:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:49:17 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:49:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:49:17 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:17 -<==      Total: 3
2019-03-19 08:49:17 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:49:17 -==> Parameters: 
2019-03-19 08:49:17 -<==      Total: 1
2019-03-19 08:49:17 -耗时 : 5
2019-03-19 08:49:17 -返回值 : com.bootdo.common.utils.PageUtils@d19e9a
2019-03-19 08:49:17 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:49:17 -HTTP METHOD : GET
2019-03-19 08:49:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:49:17 -参数 : []
2019-03-19 08:49:17 -耗时 : 0
2019-03-19 08:49:17 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:49:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:17 -HTTP METHOD : GET
2019-03-19 08:49:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:17 -参数 : [userType]
2019-03-19 08:49:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:17 -==> Parameters: userType(String)
2019-03-19 08:49:17 -<==      Total: 2
2019-03-19 08:49:18 -耗时 : 4
2019-03-19 08:49:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:18 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:49:18 -HTTP METHOD : GET
2019-03-19 08:49:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:49:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:49:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:49:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:18 -<==      Total: 3
2019-03-19 08:49:18 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:49:18 -==> Parameters: 
2019-03-19 08:49:18 -<==      Total: 1
2019-03-19 08:49:18 -耗时 : 7
2019-03-19 08:49:18 -返回值 : com.bootdo.common.utils.PageUtils@4b74743c
2019-03-19 08:49:18 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 08:49:18 -HTTP METHOD : GET
2019-03-19 08:49:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 08:49:18 -参数 : []
2019-03-19 08:49:18 -耗时 : 0
2019-03-19 08:49:18 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 08:49:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:18 -HTTP METHOD : GET
2019-03-19 08:49:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:18 -参数 : [userType]
2019-03-19 08:49:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:18 -==> Parameters: userType(String)
2019-03-19 08:49:18 -<==      Total: 2
2019-03-19 08:49:18 -耗时 : 3
2019-03-19 08:49:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:18 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 08:49:18 -HTTP METHOD : GET
2019-03-19 08:49:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 08:49:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 08:49:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 08:49:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:18 -<==      Total: 3
2019-03-19 08:49:18 -==>  Preparing: select count(*) from water_log 
2019-03-19 08:49:18 -==> Parameters: 
2019-03-19 08:49:18 -<==      Total: 1
2019-03-19 08:49:18 -耗时 : 7
2019-03-19 08:49:18 -返回值 : com.bootdo.common.utils.PageUtils@5f2dfff
2019-03-19 08:49:18 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:49:18 -HTTP METHOD : GET
2019-03-19 08:49:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:49:18 -参数 : []
2019-03-19 08:49:18 -耗时 : 0
2019-03-19 08:49:18 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:49:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:19 -HTTP METHOD : GET
2019-03-19 08:49:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:19 -参数 : [userType]
2019-03-19 08:49:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:19 -==> Parameters: userType(String)
2019-03-19 08:49:19 -<==      Total: 2
2019-03-19 08:49:19 -耗时 : 3
2019-03-19 08:49:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:19 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:49:19 -HTTP METHOD : GET
2019-03-19 08:49:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:49:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:49:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:49:19 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:19 -<==      Total: 3
2019-03-19 08:49:19 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:49:19 -==> Parameters: 
2019-03-19 08:49:19 -<==      Total: 1
2019-03-19 08:49:19 -耗时 : 7
2019-03-19 08:49:19 -返回值 : com.bootdo.common.utils.PageUtils@5e04e64b
2019-03-19 08:49:19 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:49:19 -HTTP METHOD : GET
2019-03-19 08:49:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:49:19 -参数 : []
2019-03-19 08:49:19 -耗时 : 0
2019-03-19 08:49:19 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:49:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:19 -HTTP METHOD : GET
2019-03-19 08:49:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:19 -参数 : [userType]
2019-03-19 08:49:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:19 -==> Parameters: userType(String)
2019-03-19 08:49:19 -<==      Total: 2
2019-03-19 08:49:19 -耗时 : 4
2019-03-19 08:49:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:19 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:49:19 -HTTP METHOD : GET
2019-03-19 08:49:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:49:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:49:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:49:19 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:19 -<==      Total: 3
2019-03-19 08:49:19 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:49:19 -==> Parameters: 
2019-03-19 08:49:19 -<==      Total: 1
2019-03-19 08:49:19 -耗时 : 7
2019-03-19 08:49:19 -返回值 : com.bootdo.common.utils.PageUtils@4a73b731
2019-03-19 08:49:19 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:49:19 -HTTP METHOD : GET
2019-03-19 08:49:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:49:19 -参数 : []
2019-03-19 08:49:19 -耗时 : 0
2019-03-19 08:49:19 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:49:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:20 -HTTP METHOD : GET
2019-03-19 08:49:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:20 -参数 : [userType]
2019-03-19 08:49:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:20 -==> Parameters: userType(String)
2019-03-19 08:49:20 -<==      Total: 2
2019-03-19 08:49:20 -耗时 : 3
2019-03-19 08:49:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:20 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:49:20 -HTTP METHOD : GET
2019-03-19 08:49:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:49:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:49:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:49:20 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:20 -<==      Total: 3
2019-03-19 08:49:20 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:49:20 -==> Parameters: 
2019-03-19 08:49:20 -<==      Total: 1
2019-03-19 08:49:20 -耗时 : 5
2019-03-19 08:49:20 -返回值 : com.bootdo.common.utils.PageUtils@10b322c6
2019-03-19 08:49:20 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 08:49:20 -HTTP METHOD : GET
2019-03-19 08:49:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 08:49:20 -参数 : []
2019-03-19 08:49:20 -耗时 : 1
2019-03-19 08:49:20 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 08:49:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:20 -HTTP METHOD : GET
2019-03-19 08:49:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:20 -参数 : [userType]
2019-03-19 08:49:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:20 -==> Parameters: userType(String)
2019-03-19 08:49:20 -<==      Total: 2
2019-03-19 08:49:20 -耗时 : 3
2019-03-19 08:49:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:20 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 08:49:20 -HTTP METHOD : GET
2019-03-19 08:49:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 08:49:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 08:49:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 08:49:20 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:20 -<==      Total: 3
2019-03-19 08:49:20 -==>  Preparing: select count(*) from water_log 
2019-03-19 08:49:20 -==> Parameters: 
2019-03-19 08:49:20 -<==      Total: 1
2019-03-19 08:49:20 -耗时 : 8
2019-03-19 08:49:20 -返回值 : com.bootdo.common.utils.PageUtils@1378bb5e
2019-03-19 08:49:20 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:49:20 -HTTP METHOD : GET
2019-03-19 08:49:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:49:20 -参数 : []
2019-03-19 08:49:20 -耗时 : 0
2019-03-19 08:49:20 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:49:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:20 -HTTP METHOD : GET
2019-03-19 08:49:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:20 -参数 : [userType]
2019-03-19 08:49:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:20 -==> Parameters: userType(String)
2019-03-19 08:49:20 -<==      Total: 2
2019-03-19 08:49:20 -耗时 : 3
2019-03-19 08:49:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:20 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:49:20 -HTTP METHOD : GET
2019-03-19 08:49:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:49:20 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:49:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:49:20 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:20 -<==      Total: 3
2019-03-19 08:49:20 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:49:20 -==> Parameters: 
2019-03-19 08:49:20 -<==      Total: 1
2019-03-19 08:49:20 -耗时 : 5
2019-03-19 08:49:20 -返回值 : com.bootdo.common.utils.PageUtils@1cb42344
2019-03-19 08:49:21 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:49:21 -HTTP METHOD : GET
2019-03-19 08:49:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:49:21 -参数 : []
2019-03-19 08:49:21 -耗时 : 1
2019-03-19 08:49:21 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:49:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:49:21 -HTTP METHOD : GET
2019-03-19 08:49:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:49:21 -参数 : [userType]
2019-03-19 08:49:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:49:21 -==> Parameters: userType(String)
2019-03-19 08:49:21 -<==      Total: 2
2019-03-19 08:49:21 -耗时 : 3
2019-03-19 08:49:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:49:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:49:21 -HTTP METHOD : GET
2019-03-19 08:49:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:49:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:49:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:49:21 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:49:21 -<==      Total: 3
2019-03-19 08:49:21 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:49:21 -==> Parameters: 
2019-03-19 08:49:21 -<==      Total: 1
2019-03-19 08:49:21 -耗时 : 7
2019-03-19 08:49:21 -返回值 : com.bootdo.common.utils.PageUtils@64dd9962
2019-03-19 08:52:00 -请求地址 : http://localhost:8081/index
2019-03-19 08:52:00 -HTTP METHOD : GET
2019-03-19 08:52:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 08:52:00 -参数 : [{}]
2019-03-19 08:52:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 08:52:00 -==> Parameters: 1(Long)
2019-03-19 08:52:00 -<==      Total: 46
2019-03-19 08:52:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 08:52:00 -==> Parameters: 138(Long)
2019-03-19 08:52:00 -<==      Total: 1
2019-03-19 08:52:00 -耗时 : 21
2019-03-19 08:52:00 -返回值 : index_v1
2019-03-19 08:52:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:52:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 08:52:00.599(Timestamp)
2019-03-19 08:52:00 -<==    Updates: 1
2019-03-19 08:52:00 -请求地址 : http://localhost:8081/main
2019-03-19 08:52:00 -HTTP METHOD : GET
2019-03-19 08:52:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:52:00 -参数 : []
2019-03-19 08:52:00 -耗时 : 0
2019-03-19 08:52:00 -返回值 : main
2019-03-19 08:52:01 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 08:52:01 -HTTP METHOD : GET
2019-03-19 08:52:01 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 08:52:01 -参数 : []
2019-03-19 08:52:01 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 08:52:01 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 08:52:01 -<==      Total: 0
2019-03-19 08:52:01 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 08:52:01 -==> Parameters: 1(Long), 0(String)
2019-03-19 08:52:01 -<==      Total: 1
2019-03-19 08:52:01 -耗时 : 7
2019-03-19 08:52:01 -返回值 : com.bootdo.common.utils.PageUtils@19383894
2019-03-19 08:52:01 -请求地址 : http://localhost:8081/main
2019-03-19 08:52:01 -HTTP METHOD : GET
2019-03-19 08:52:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:52:01 -参数 : []
2019-03-19 08:52:01 -耗时 : 0
2019-03-19 08:52:01 -返回值 : main
2019-03-19 08:53:03 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:53:03 -HTTP METHOD : GET
2019-03-19 08:53:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:53:03 -参数 : []
2019-03-19 08:53:03 -耗时 : 0
2019-03-19 08:53:03 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:53:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:53:03 -HTTP METHOD : GET
2019-03-19 08:53:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:53:03 -参数 : [userType]
2019-03-19 08:53:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:53:03 -==> Parameters: userType(String)
2019-03-19 08:53:03 -<==      Total: 2
2019-03-19 08:53:03 -耗时 : 6
2019-03-19 08:53:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:53:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:53:03 -HTTP METHOD : GET
2019-03-19 08:53:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:53:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:53:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:53:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:53:03 -<==      Total: 4
2019-03-19 08:53:03 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:53:03 -==> Parameters: 
2019-03-19 08:53:03 -<==      Total: 1
2019-03-19 08:53:03 -耗时 : 7
2019-03-19 08:53:03 -返回值 : com.bootdo.common.utils.PageUtils@1b90e92e
2019-03-19 08:53:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:53:21 -HTTP METHOD : GET
2019-03-19 08:53:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:53:21 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-19, type=A}]
2019-03-19 08:53:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:53:21 -==> Parameters: A(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:53:21 -<==      Total: 3
2019-03-19 08:53:21 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and elec_date = ? 
2019-03-19 08:53:21 -==> Parameters: A(String), 2019-03-19(String)
2019-03-19 08:53:21 -<==      Total: 1
2019-03-19 08:53:21 -耗时 : 21
2019-03-19 08:53:21 -返回值 : com.bootdo.common.utils.PageUtils@2ee147fd
2019-03-19 08:53:22 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 08:53:22 -HTTP METHOD : GET
2019-03-19 08:53:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 08:53:22 -参数 : []
2019-03-19 08:53:22 -耗时 : 0
2019-03-19 08:53:22 -返回值 : system/dept/deptTree
2019-03-19 08:53:22 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 08:53:22 -HTTP METHOD : GET
2019-03-19 08:53:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 08:53:22 -参数 : []
2019-03-19 08:53:22 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 08:53:22 -==> Parameters: 
2019-03-19 08:53:22 -<==      Total: 3
2019-03-19 08:53:22 -耗时 : 3
2019-03-19 08:53:22 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 08:53:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:53:24 -HTTP METHOD : GET
2019-03-19 08:53:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:53:24 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-03-19 08:53:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:53:24 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:53:24 -<==      Total: 3
2019-03-19 08:53:24 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 08:53:24 -==> Parameters: A(String), 2(String), 2019-03-19(String)
2019-03-19 08:53:24 -<==      Total: 1
2019-03-19 08:53:24 -耗时 : 12
2019-03-19 08:53:24 -返回值 : com.bootdo.common.utils.PageUtils@5485c665
2019-03-19 08:53:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:53:25 -HTTP METHOD : GET
2019-03-19 08:53:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:53:25 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-03-19 08:53:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:53:25 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:53:25 -<==      Total: 3
2019-03-19 08:53:25 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 08:53:25 -==> Parameters: A(String), 2(String), 2019-03-19(String)
2019-03-19 08:53:25 -<==      Total: 1
2019-03-19 08:53:25 -耗时 : 6
2019-03-19 08:53:25 -返回值 : com.bootdo.common.utils.PageUtils@12f2d647
2019-03-19 08:53:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:53:25 -HTTP METHOD : GET
2019-03-19 08:53:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:53:25 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-03-19 08:53:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:53:25 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:53:25 -<==      Total: 3
2019-03-19 08:53:25 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 08:53:25 -==> Parameters: A(String), 2(String), 2019-03-19(String)
2019-03-19 08:53:25 -<==      Total: 1
2019-03-19 08:53:25 -耗时 : 5
2019-03-19 08:53:25 -返回值 : com.bootdo.common.utils.PageUtils@23ee2104
2019-03-19 08:53:26 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:53:26 -HTTP METHOD : GET
2019-03-19 08:53:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:53:26 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-03-19 08:53:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:53:26 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:53:26 -<==      Total: 3
2019-03-19 08:53:26 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 08:53:26 -==> Parameters: A(String), 2(String), 2019-03-19(String)
2019-03-19 08:53:26 -<==      Total: 1
2019-03-19 08:53:26 -耗时 : 6
2019-03-19 08:53:26 -返回值 : com.bootdo.common.utils.PageUtils@6cae2c76
2019-03-19 08:53:26 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:53:26 -HTTP METHOD : GET
2019-03-19 08:53:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:53:26 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-03-19 08:53:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:53:26 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:53:26 -<==      Total: 3
2019-03-19 08:53:26 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 08:53:26 -==> Parameters: A(String), 2(String), 2019-03-19(String)
2019-03-19 08:53:26 -<==      Total: 1
2019-03-19 08:53:26 -耗时 : 6
2019-03-19 08:53:26 -返回值 : com.bootdo.common.utils.PageUtils@7d75aa55
2019-03-19 08:53:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:53:27 -HTTP METHOD : GET
2019-03-19 08:53:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:53:27 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-03-19 08:53:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:53:27 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:53:27 -<==      Total: 3
2019-03-19 08:53:27 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 08:53:27 -==> Parameters: A(String), 2(String), 2019-03-19(String)
2019-03-19 08:53:27 -<==      Total: 1
2019-03-19 08:53:27 -耗时 : 7
2019-03-19 08:53:27 -返回值 : com.bootdo.common.utils.PageUtils@7f51c791
2019-03-19 08:53:28 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:53:28 -HTTP METHOD : GET
2019-03-19 08:53:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:53:28 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-03-19 08:53:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:53:28 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:53:28 -<==      Total: 3
2019-03-19 08:53:28 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 08:53:28 -==> Parameters: A(String), 2(String), 2019-03-19(String)
2019-03-19 08:53:28 -<==      Total: 1
2019-03-19 08:53:28 -耗时 : 6
2019-03-19 08:53:28 -返回值 : com.bootdo.common.utils.PageUtils@46ef64b
2019-03-19 08:53:38 -请求地址 : http://localhost:8081/index
2019-03-19 08:53:38 -HTTP METHOD : GET
2019-03-19 08:53:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 08:53:38 -参数 : [{}]
2019-03-19 08:53:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 08:53:38 -==> Parameters: 1(Long)
2019-03-19 08:53:38 -<==      Total: 46
2019-03-19 08:53:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 08:53:38 -==> Parameters: 138(Long)
2019-03-19 08:53:38 -<==      Total: 1
2019-03-19 08:53:38 -耗时 : 21
2019-03-19 08:53:38 -返回值 : index_v1
2019-03-19 08:53:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:53:38 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 08:53:38.662(Timestamp)
2019-03-19 08:53:38 -请求地址 : http://localhost:8081/main
2019-03-19 08:53:38 -HTTP METHOD : GET
2019-03-19 08:53:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:53:38 -参数 : []
2019-03-19 08:53:38 -耗时 : 1
2019-03-19 08:53:38 -返回值 : main
2019-03-19 08:53:38 -<==    Updates: 1
2019-03-19 08:53:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 08:53:38 -HTTP METHOD : GET
2019-03-19 08:53:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 08:53:38 -参数 : []
2019-03-19 08:53:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 08:53:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 08:53:38 -<==      Total: 0
2019-03-19 08:53:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 08:53:38 -==> Parameters: 1(Long), 0(String)
2019-03-19 08:53:38 -<==      Total: 1
2019-03-19 08:53:38 -耗时 : 6
2019-03-19 08:53:38 -返回值 : com.bootdo.common.utils.PageUtils@74cae3ca
2019-03-19 08:53:38 -请求地址 : http://localhost:8081/main
2019-03-19 08:53:38 -HTTP METHOD : GET
2019-03-19 08:53:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:53:38 -参数 : []
2019-03-19 08:53:38 -耗时 : 1
2019-03-19 08:53:38 -返回值 : main
2019-03-19 08:53:46 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:53:46 -HTTP METHOD : GET
2019-03-19 08:53:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:53:46 -参数 : []
2019-03-19 08:53:46 -耗时 : 0
2019-03-19 08:53:46 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:53:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:53:46 -HTTP METHOD : GET
2019-03-19 08:53:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:53:46 -参数 : [userType]
2019-03-19 08:53:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:53:46 -==> Parameters: userType(String)
2019-03-19 08:53:46 -<==      Total: 2
2019-03-19 08:53:46 -耗时 : 3
2019-03-19 08:53:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:53:46 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:53:46 -HTTP METHOD : GET
2019-03-19 08:53:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:53:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:53:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:53:46 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:53:46 -<==      Total: 4
2019-03-19 08:53:46 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:53:46 -==> Parameters: 
2019-03-19 08:53:46 -<==      Total: 1
2019-03-19 08:53:46 -耗时 : 7
2019-03-19 08:53:46 -返回值 : com.bootdo.common.utils.PageUtils@20400c05
2019-03-19 08:53:59 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:53:59 -HTTP METHOD : GET
2019-03-19 08:53:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:53:59 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-19 08:53:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:53:59 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:53:59 -<==      Total: 3
2019-03-19 08:53:59 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-19 08:53:59 -==> Parameters: 2019-03-19(String)
2019-03-19 08:53:59 -<==      Total: 1
2019-03-19 08:53:59 -耗时 : 9
2019-03-19 08:53:59 -返回值 : com.bootdo.common.utils.PageUtils@70401f51
2019-03-19 08:54:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:54:05 -HTTP METHOD : GET
2019-03-19 08:54:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:54:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-10}]
2019-03-19 08:54:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:54:05 -==> Parameters: 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:54:05 -<==      Total: 1
2019-03-19 08:54:05 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-19 08:54:05 -==> Parameters: 2019-03-10(String)
2019-03-19 08:54:05 -<==      Total: 1
2019-03-19 08:54:05 -耗时 : 6
2019-03-19 08:54:05 -返回值 : com.bootdo.common.utils.PageUtils@39b60541
2019-03-19 08:54:06 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:54:06 -HTTP METHOD : GET
2019-03-19 08:54:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:54:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-10}]
2019-03-19 08:54:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:54:06 -==> Parameters: 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:54:06 -<==      Total: 1
2019-03-19 08:54:06 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-19 08:54:06 -==> Parameters: 2019-03-10(String)
2019-03-19 08:54:06 -<==      Total: 1
2019-03-19 08:54:06 -耗时 : 5
2019-03-19 08:54:06 -返回值 : com.bootdo.common.utils.PageUtils@6de37a88
2019-03-19 08:54:07 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:54:07 -HTTP METHOD : GET
2019-03-19 08:54:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:54:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-10}]
2019-03-19 08:54:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:54:07 -==> Parameters: 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:54:07 -<==      Total: 1
2019-03-19 08:54:07 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-19 08:54:07 -==> Parameters: 2019-03-10(String)
2019-03-19 08:54:07 -<==      Total: 1
2019-03-19 08:54:07 -耗时 : 6
2019-03-19 08:54:07 -返回值 : com.bootdo.common.utils.PageUtils@5457fc
2019-03-19 08:54:29 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:54:29 -HTTP METHOD : GET
2019-03-19 08:54:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:54:29 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-10, type=A}]
2019-03-19 08:54:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:54:29 -==> Parameters: A(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:54:29 -<==      Total: 0
2019-03-19 08:54:29 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and elec_date = ? 
2019-03-19 08:54:29 -==> Parameters: A(String), 2019-03-10(String)
2019-03-19 08:54:29 -<==      Total: 1
2019-03-19 08:54:29 -耗时 : 13
2019-03-19 08:54:29 -返回值 : com.bootdo.common.utils.PageUtils@ddc6057
2019-03-19 08:54:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 08:54:30 -HTTP METHOD : GET
2019-03-19 08:54:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 08:54:30 -参数 : []
2019-03-19 08:54:30 -耗时 : 0
2019-03-19 08:54:30 -返回值 : system/dept/deptTree
2019-03-19 08:54:30 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 08:54:30 -HTTP METHOD : GET
2019-03-19 08:54:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 08:54:30 -参数 : []
2019-03-19 08:54:30 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 08:54:30 -==> Parameters: 
2019-03-19 08:54:30 -<==      Total: 3
2019-03-19 08:54:30 -耗时 : 6
2019-03-19 08:54:30 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 08:54:32 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:54:32 -HTTP METHOD : GET
2019-03-19 08:54:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:54:32 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-10}]
2019-03-19 08:54:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:54:32 -==> Parameters: A(String), 2(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:54:32 -<==      Total: 0
2019-03-19 08:54:32 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 08:54:32 -==> Parameters: A(String), 2(String), 2019-03-10(String)
2019-03-19 08:54:32 -<==      Total: 1
2019-03-19 08:54:32 -耗时 : 6
2019-03-19 08:54:32 -返回值 : com.bootdo.common.utils.PageUtils@22989d0f
2019-03-19 08:54:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 08:54:36 -HTTP METHOD : GET
2019-03-19 08:54:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 08:54:36 -参数 : []
2019-03-19 08:54:36 -耗时 : 1
2019-03-19 08:54:36 -返回值 : system/dept/deptTree
2019-03-19 08:54:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 08:54:36 -HTTP METHOD : GET
2019-03-19 08:54:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 08:54:36 -参数 : []
2019-03-19 08:54:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 08:54:36 -==> Parameters: 
2019-03-19 08:54:36 -<==      Total: 3
2019-03-19 08:54:36 -耗时 : 2
2019-03-19 08:54:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 08:54:38 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:54:38 -HTTP METHOD : GET
2019-03-19 08:54:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:54:38 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, elecDate=2019-03-10}]
2019-03-19 08:54:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:54:38 -==> Parameters: A(String), 3(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:54:38 -<==      Total: 0
2019-03-19 08:54:38 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 08:54:38 -==> Parameters: A(String), 3(String), 2019-03-10(String)
2019-03-19 08:54:38 -<==      Total: 1
2019-03-19 08:54:38 -耗时 : 7
2019-03-19 08:54:38 -返回值 : com.bootdo.common.utils.PageUtils@5ea038e3
2019-03-19 08:54:38 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:54:38 -HTTP METHOD : GET
2019-03-19 08:54:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:54:38 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, elecDate=2019-03-10}]
2019-03-19 08:54:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:54:38 -==> Parameters: A(String), 3(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:54:38 -<==      Total: 0
2019-03-19 08:54:38 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 08:54:38 -==> Parameters: A(String), 3(String), 2019-03-10(String)
2019-03-19 08:54:38 -<==      Total: 1
2019-03-19 08:54:38 -耗时 : 6
2019-03-19 08:54:38 -返回值 : com.bootdo.common.utils.PageUtils@13750893
2019-03-19 08:54:38 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:54:38 -HTTP METHOD : GET
2019-03-19 08:54:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:54:38 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, elecDate=2019-03-10}]
2019-03-19 08:54:38 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:54:38 -==> Parameters: A(String), 3(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:54:38 -<==      Total: 0
2019-03-19 08:54:38 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 08:54:38 -==> Parameters: A(String), 3(String), 2019-03-10(String)
2019-03-19 08:54:38 -<==      Total: 1
2019-03-19 08:54:38 -耗时 : 3
2019-03-19 08:54:38 -返回值 : com.bootdo.common.utils.PageUtils@5c37d42f
2019-03-19 08:54:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:54:39 -HTTP METHOD : GET
2019-03-19 08:54:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:54:39 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, elecDate=2019-03-10}]
2019-03-19 08:54:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:54:39 -==> Parameters: A(String), 3(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:54:39 -<==      Total: 0
2019-03-19 08:54:39 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 08:54:39 -==> Parameters: A(String), 3(String), 2019-03-10(String)
2019-03-19 08:54:39 -<==      Total: 1
2019-03-19 08:54:39 -耗时 : 6
2019-03-19 08:54:39 -返回值 : com.bootdo.common.utils.PageUtils@1c5c7cce
2019-03-19 08:54:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:54:39 -HTTP METHOD : GET
2019-03-19 08:54:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:54:39 -参数 : [{limit=10, offset=0, userType=A, userOrg=3, userId=, elecDate=2019-03-10}]
2019-03-19 08:54:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:54:39 -==> Parameters: A(String), 3(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:54:39 -<==      Total: 0
2019-03-19 08:54:39 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 08:54:39 -==> Parameters: A(String), 3(String), 2019-03-10(String)
2019-03-19 08:54:39 -<==      Total: 1
2019-03-19 08:54:39 -耗时 : 7
2019-03-19 08:54:39 -返回值 : com.bootdo.common.utils.PageUtils@6e1c9c7c
2019-03-19 08:54:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:54:40 -HTTP METHOD : GET
2019-03-19 08:54:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:54:40 -参数 : [{limit=10, offset=0, userType=B, userOrg=3, userId=, elecDate=2019-03-10, type=B}]
2019-03-19 08:54:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:54:40 -==> Parameters: B(String), 3(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:54:40 -<==      Total: 1
2019-03-19 08:54:40 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 08:54:40 -==> Parameters: B(String), 3(String), 2019-03-10(String)
2019-03-19 08:54:40 -<==      Total: 1
2019-03-19 08:54:40 -耗时 : 13
2019-03-19 08:54:40 -返回值 : com.bootdo.common.utils.PageUtils@3492f0ea
2019-03-19 08:54:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:54:43 -HTTP METHOD : GET
2019-03-19 08:54:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:54:43 -参数 : [{limit=10, offset=0, userType=B, userOrg=3, userId=, elecDate=2019-03-10}]
2019-03-19 08:54:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:54:43 -==> Parameters: B(String), 3(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:54:43 -<==      Total: 1
2019-03-19 08:54:43 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 08:54:43 -==> Parameters: B(String), 3(String), 2019-03-10(String)
2019-03-19 08:54:43 -<==      Total: 1
2019-03-19 08:54:43 -耗时 : 6
2019-03-19 08:54:43 -返回值 : com.bootdo.common.utils.PageUtils@5561af66
2019-03-19 08:54:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:54:43 -HTTP METHOD : GET
2019-03-19 08:54:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:54:43 -参数 : [{limit=10, offset=0, userType=B, userOrg=3, userId=, elecDate=2019-03-10}]
2019-03-19 08:54:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:54:43 -==> Parameters: B(String), 3(String), 2019-03-10 00:00:00(String), 2019-03-10 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:54:43 -<==      Total: 1
2019-03-19 08:54:43 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 08:54:43 -==> Parameters: B(String), 3(String), 2019-03-10(String)
2019-03-19 08:54:43 -<==      Total: 1
2019-03-19 08:54:43 -耗时 : 6
2019-03-19 08:54:43 -返回值 : com.bootdo.common.utils.PageUtils@643a193c
2019-03-19 08:56:33 -请求地址 : http://localhost:8081/index
2019-03-19 08:56:33 -HTTP METHOD : GET
2019-03-19 08:56:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 08:56:33 -参数 : [{}]
2019-03-19 08:56:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 08:56:33 -==> Parameters: 1(Long)
2019-03-19 08:56:33 -<==      Total: 46
2019-03-19 08:56:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 08:56:33 -==> Parameters: 138(Long)
2019-03-19 08:56:33 -<==      Total: 1
2019-03-19 08:56:33 -耗时 : 21
2019-03-19 08:56:33 -返回值 : index_v1
2019-03-19 08:56:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 08:56:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 08:56:33.128(Timestamp)
2019-03-19 08:56:33 -<==    Updates: 1
2019-03-19 08:56:33 -请求地址 : http://localhost:8081/main
2019-03-19 08:56:33 -HTTP METHOD : GET
2019-03-19 08:56:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:56:33 -参数 : []
2019-03-19 08:56:33 -耗时 : 1
2019-03-19 08:56:33 -返回值 : main
2019-03-19 08:56:33 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 08:56:33 -HTTP METHOD : GET
2019-03-19 08:56:33 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 08:56:33 -参数 : []
2019-03-19 08:56:33 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 08:56:33 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 08:56:33 -<==      Total: 0
2019-03-19 08:56:33 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 08:56:33 -==> Parameters: 1(Long), 0(String)
2019-03-19 08:56:33 -<==      Total: 1
2019-03-19 08:56:33 -耗时 : 8
2019-03-19 08:56:33 -返回值 : com.bootdo.common.utils.PageUtils@28b8443a
2019-03-19 08:56:33 -请求地址 : http://localhost:8081/main
2019-03-19 08:56:33 -HTTP METHOD : GET
2019-03-19 08:56:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 08:56:33 -参数 : []
2019-03-19 08:56:33 -耗时 : 0
2019-03-19 08:56:33 -返回值 : main
2019-03-19 08:56:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 08:56:37 -==> Parameters: 1(Long)
2019-03-19 08:56:37 -<==      Total: 90
2019-03-19 08:56:37 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:56:37 -HTTP METHOD : GET
2019-03-19 08:56:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:56:37 -参数 : []
2019-03-19 08:56:37 -耗时 : 1
2019-03-19 08:56:37 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:56:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:56:37 -HTTP METHOD : GET
2019-03-19 08:56:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:56:37 -参数 : [userType]
2019-03-19 08:56:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:56:37 -==> Parameters: userType(String)
2019-03-19 08:56:37 -<==      Total: 2
2019-03-19 08:56:37 -耗时 : 4
2019-03-19 08:56:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:56:37 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:56:37 -HTTP METHOD : GET
2019-03-19 08:56:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:56:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:56:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:56:37 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:56:37 -<==      Total: 4
2019-03-19 08:56:37 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:56:37 -==> Parameters: 
2019-03-19 08:56:37 -<==      Total: 1
2019-03-19 08:56:37 -耗时 : 5
2019-03-19 08:56:37 -返回值 : com.bootdo.common.utils.PageUtils@f0fa4a9
2019-03-19 08:56:39 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:56:39 -HTTP METHOD : GET
2019-03-19 08:56:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:56:39 -参数 : []
2019-03-19 08:56:39 -耗时 : 0
2019-03-19 08:56:39 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:56:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:56:39 -HTTP METHOD : GET
2019-03-19 08:56:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:56:39 -参数 : [userType]
2019-03-19 08:56:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:56:39 -==> Parameters: userType(String)
2019-03-19 08:56:39 -<==      Total: 2
2019-03-19 08:56:39 -耗时 : 4
2019-03-19 08:56:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:56:39 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:56:39 -HTTP METHOD : GET
2019-03-19 08:56:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:56:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:56:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:56:39 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:56:39 -<==      Total: 3
2019-03-19 08:56:39 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:56:39 -==> Parameters: 
2019-03-19 08:56:39 -<==      Total: 1
2019-03-19 08:56:39 -耗时 : 6
2019-03-19 08:56:39 -返回值 : com.bootdo.common.utils.PageUtils@503c9894
2019-03-19 08:56:40 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 08:56:40 -HTTP METHOD : GET
2019-03-19 08:56:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 08:56:40 -参数 : []
2019-03-19 08:56:40 -耗时 : 1
2019-03-19 08:56:40 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 08:56:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:56:41 -HTTP METHOD : GET
2019-03-19 08:56:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:56:41 -参数 : [userType]
2019-03-19 08:56:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:56:41 -==> Parameters: userType(String)
2019-03-19 08:56:41 -<==      Total: 2
2019-03-19 08:56:41 -耗时 : 5
2019-03-19 08:56:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:56:41 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 08:56:41 -HTTP METHOD : GET
2019-03-19 08:56:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 08:56:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 08:56:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 08:56:41 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:56:41 -<==      Total: 3
2019-03-19 08:56:41 -==>  Preparing: select count(*) from water_log 
2019-03-19 08:56:41 -==> Parameters: 
2019-03-19 08:56:41 -<==      Total: 1
2019-03-19 08:56:41 -耗时 : 6
2019-03-19 08:56:41 -返回值 : com.bootdo.common.utils.PageUtils@3e9a1626
2019-03-19 08:56:42 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:56:42 -HTTP METHOD : GET
2019-03-19 08:56:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:56:42 -参数 : []
2019-03-19 08:56:42 -耗时 : 1
2019-03-19 08:56:42 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:56:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:56:42 -HTTP METHOD : GET
2019-03-19 08:56:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:56:42 -参数 : [userType]
2019-03-19 08:56:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:56:42 -==> Parameters: userType(String)
2019-03-19 08:56:42 -<==      Total: 2
2019-03-19 08:56:42 -耗时 : 3
2019-03-19 08:56:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:56:42 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:56:42 -HTTP METHOD : GET
2019-03-19 08:56:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:56:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:56:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:56:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:56:42 -<==      Total: 3
2019-03-19 08:56:42 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:56:42 -==> Parameters: 
2019-03-19 08:56:42 -<==      Total: 1
2019-03-19 08:56:42 -耗时 : 7
2019-03-19 08:56:42 -返回值 : com.bootdo.common.utils.PageUtils@3f7d480
2019-03-19 08:56:43 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:56:43 -HTTP METHOD : GET
2019-03-19 08:56:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:56:43 -参数 : []
2019-03-19 08:56:43 -耗时 : 2
2019-03-19 08:56:43 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:56:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:56:43 -HTTP METHOD : GET
2019-03-19 08:56:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:56:43 -参数 : [userType]
2019-03-19 08:56:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:56:43 -==> Parameters: userType(String)
2019-03-19 08:56:43 -<==      Total: 2
2019-03-19 08:56:43 -耗时 : 15
2019-03-19 08:56:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:56:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:56:43 -HTTP METHOD : GET
2019-03-19 08:56:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:56:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:56:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:56:43 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:56:43 -<==      Total: 4
2019-03-19 08:56:43 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:56:43 -==> Parameters: 
2019-03-19 08:56:43 -<==      Total: 1
2019-03-19 08:56:43 -耗时 : 7
2019-03-19 08:56:43 -返回值 : com.bootdo.common.utils.PageUtils@6a23084e
2019-03-19 08:56:44 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:56:44 -HTTP METHOD : GET
2019-03-19 08:56:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:56:44 -参数 : []
2019-03-19 08:56:44 -耗时 : 1
2019-03-19 08:56:44 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:56:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:56:44 -HTTP METHOD : GET
2019-03-19 08:56:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:56:44 -参数 : [userType]
2019-03-19 08:56:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:56:44 -==> Parameters: userType(String)
2019-03-19 08:56:44 -<==      Total: 2
2019-03-19 08:56:44 -耗时 : 4
2019-03-19 08:56:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:56:44 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:56:44 -HTTP METHOD : GET
2019-03-19 08:56:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:56:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:56:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:56:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:56:44 -<==      Total: 3
2019-03-19 08:56:44 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:56:44 -==> Parameters: 
2019-03-19 08:56:44 -<==      Total: 1
2019-03-19 08:56:44 -耗时 : 6
2019-03-19 08:56:44 -返回值 : com.bootdo.common.utils.PageUtils@5e3f34ff
2019-03-19 08:56:45 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 08:56:45 -HTTP METHOD : GET
2019-03-19 08:56:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 08:56:45 -参数 : []
2019-03-19 08:56:45 -耗时 : 0
2019-03-19 08:56:45 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 08:56:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:56:45 -HTTP METHOD : GET
2019-03-19 08:56:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:56:45 -参数 : [userType]
2019-03-19 08:56:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:56:45 -==> Parameters: userType(String)
2019-03-19 08:56:45 -<==      Total: 2
2019-03-19 08:56:45 -耗时 : 3
2019-03-19 08:56:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:56:45 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 08:56:45 -HTTP METHOD : GET
2019-03-19 08:56:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 08:56:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 08:56:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 08:56:45 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:56:45 -<==      Total: 3
2019-03-19 08:56:45 -==>  Preparing: select count(*) from water_log 
2019-03-19 08:56:45 -==> Parameters: 
2019-03-19 08:56:45 -<==      Total: 1
2019-03-19 08:56:45 -耗时 : 7
2019-03-19 08:56:45 -返回值 : com.bootdo.common.utils.PageUtils@fe0c0ad
2019-03-19 08:56:45 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:56:45 -HTTP METHOD : GET
2019-03-19 08:56:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:56:45 -参数 : []
2019-03-19 08:56:45 -耗时 : 1
2019-03-19 08:56:45 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:56:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:56:46 -HTTP METHOD : GET
2019-03-19 08:56:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:56:46 -参数 : [userType]
2019-03-19 08:56:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:56:46 -==> Parameters: userType(String)
2019-03-19 08:56:46 -<==      Total: 2
2019-03-19 08:56:46 -耗时 : 2
2019-03-19 08:56:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:56:46 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:56:46 -HTTP METHOD : GET
2019-03-19 08:56:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:56:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:56:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:56:46 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:56:46 -<==      Total: 3
2019-03-19 08:56:46 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:56:46 -==> Parameters: 
2019-03-19 08:56:46 -<==      Total: 1
2019-03-19 08:56:46 -耗时 : 7
2019-03-19 08:56:46 -返回值 : com.bootdo.common.utils.PageUtils@643b02bc
2019-03-19 08:56:46 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:56:46 -HTTP METHOD : GET
2019-03-19 08:56:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:56:46 -参数 : []
2019-03-19 08:56:46 -耗时 : 0
2019-03-19 08:56:46 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:56:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:56:46 -HTTP METHOD : GET
2019-03-19 08:56:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:56:46 -参数 : [userType]
2019-03-19 08:56:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:56:46 -==> Parameters: userType(String)
2019-03-19 08:56:46 -<==      Total: 2
2019-03-19 08:56:46 -耗时 : 3
2019-03-19 08:56:46 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:56:46 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:56:46 -HTTP METHOD : GET
2019-03-19 08:56:46 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:56:46 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:56:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:56:46 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:56:46 -<==      Total: 4
2019-03-19 08:56:46 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:56:46 -==> Parameters: 
2019-03-19 08:56:46 -<==      Total: 1
2019-03-19 08:56:46 -耗时 : 5
2019-03-19 08:56:46 -返回值 : com.bootdo.common.utils.PageUtils@6f9d1eee
2019-03-19 08:56:47 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 08:56:47 -HTTP METHOD : GET
2019-03-19 08:56:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 08:56:47 -参数 : []
2019-03-19 08:56:47 -耗时 : 0
2019-03-19 08:56:47 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 08:56:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:56:47 -HTTP METHOD : GET
2019-03-19 08:56:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:56:47 -参数 : [userType]
2019-03-19 08:56:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:56:47 -==> Parameters: userType(String)
2019-03-19 08:56:47 -<==      Total: 2
2019-03-19 08:56:47 -耗时 : 3
2019-03-19 08:56:47 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:56:47 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 08:56:47 -HTTP METHOD : GET
2019-03-19 08:56:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 08:56:47 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 08:56:47 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 08:56:47 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:56:47 -<==      Total: 3
2019-03-19 08:56:47 -==>  Preparing: select count(*) from heat_log 
2019-03-19 08:56:47 -==> Parameters: 
2019-03-19 08:56:47 -<==      Total: 1
2019-03-19 08:56:47 -耗时 : 4
2019-03-19 08:56:47 -返回值 : com.bootdo.common.utils.PageUtils@1d615ec7
2019-03-19 08:56:48 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 08:56:48 -HTTP METHOD : GET
2019-03-19 08:56:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 08:56:48 -参数 : []
2019-03-19 08:56:48 -耗时 : 0
2019-03-19 08:56:48 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 08:56:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:56:48 -HTTP METHOD : GET
2019-03-19 08:56:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:56:48 -参数 : [userType]
2019-03-19 08:56:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:56:48 -==> Parameters: userType(String)
2019-03-19 08:56:48 -<==      Total: 2
2019-03-19 08:56:48 -耗时 : 3
2019-03-19 08:56:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:56:48 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 08:56:48 -HTTP METHOD : GET
2019-03-19 08:56:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 08:56:48 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 08:56:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 08:56:48 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:56:48 -<==      Total: 3
2019-03-19 08:56:48 -==>  Preparing: select count(*) from water_log 
2019-03-19 08:56:48 -==> Parameters: 
2019-03-19 08:56:48 -<==      Total: 1
2019-03-19 08:56:48 -耗时 : 8
2019-03-19 08:56:48 -返回值 : com.bootdo.common.utils.PageUtils@bdf7976
2019-03-19 08:56:55 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/1
2019-03-19 08:56:55 -HTTP METHOD : GET
2019-03-19 08:56:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-03-19 08:56:55 -参数 : [1, {}]
2019-03-19 08:56:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-03-19 08:56:55 -==> Parameters: 1(Long)
2019-03-19 08:56:55 -<==      Total: 1
2019-03-19 08:56:55 -耗时 : 7
2019-03-19 08:56:55 -返回值 : moneyLog/waterLog/edit
2019-03-19 08:56:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:56:55 -HTTP METHOD : GET
2019-03-19 08:56:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:56:55 -参数 : [userType]
2019-03-19 08:56:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:56:55 -==> Parameters: userType(String)
2019-03-19 08:56:55 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-19 08:56:55 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-19 08:56:55 -HTTP METHOD : GET
2019-03-19 08:56:55 -HTTP METHOD : GET
2019-03-19 08:56:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:56:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:56:55 -参数 : [userOrg]
2019-03-19 08:56:55 -参数 : [userArea]
2019-03-19 08:56:55 -<==      Total: 2
2019-03-19 08:56:55 -耗时 : 4
2019-03-19 08:56:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:56:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:56:55 -==> Parameters: userOrg(String)
2019-03-19 08:56:55 -<==      Total: 0
2019-03-19 08:56:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:56:55 -耗时 : 7
2019-03-19 08:56:55 -返回值 : []
2019-03-19 08:56:55 -==> Parameters: userArea(String)
2019-03-19 08:56:55 -<==      Total: 0
2019-03-19 08:56:55 -耗时 : 50
2019-03-19 08:56:55 -返回值 : []
2019-03-19 08:57:32 -请求地址 : http://localhost:8081/moneyLog/waterLog/add
2019-03-19 08:57:32 -HTTP METHOD : GET
2019-03-19 08:57:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.add
2019-03-19 08:57:32 -参数 : []
2019-03-19 08:57:32 -耗时 : 0
2019-03-19 08:57:32 -返回值 : moneyLog/waterLog/add
2019-03-19 08:57:45 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 08:57:45 -HTTP METHOD : GET
2019-03-19 08:57:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 08:57:45 -参数 : []
2019-03-19 08:57:45 -耗时 : 1
2019-03-19 08:57:45 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 08:57:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:57:45 -HTTP METHOD : GET
2019-03-19 08:57:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:57:45 -参数 : [userType]
2019-03-19 08:57:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:57:45 -==> Parameters: userType(String)
2019-03-19 08:57:45 -<==      Total: 2
2019-03-19 08:57:45 -耗时 : 5
2019-03-19 08:57:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:57:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:57:45 -HTTP METHOD : GET
2019-03-19 08:57:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:57:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 08:57:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 08:57:45 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:57:45 -<==      Total: 4
2019-03-19 08:57:45 -==>  Preparing: select count(*) from elec_log 
2019-03-19 08:57:45 -==> Parameters: 
2019-03-19 08:57:45 -<==      Total: 1
2019-03-19 08:57:45 -耗时 : 77
2019-03-19 08:57:45 -返回值 : com.bootdo.common.utils.PageUtils@7112525
2019-03-19 08:57:53 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:57:53 -HTTP METHOD : GET
2019-03-19 08:57:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:57:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-19 08:57:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:57:53 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:57:53 -<==      Total: 3
2019-03-19 08:57:53 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-19 08:57:53 -==> Parameters: 2019-03-19(String)
2019-03-19 08:57:53 -<==      Total: 1
2019-03-19 08:57:53 -耗时 : 8
2019-03-19 08:57:53 -返回值 : com.bootdo.common.utils.PageUtils@53c534a2
2019-03-19 08:58:02 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:58:02 -HTTP METHOD : GET
2019-03-19 08:58:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:58:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=1-0004, elecDate=2019-03-19}]
2019-03-19 08:58:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_id = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:58:02 -==> Parameters: 1-0004(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:58:02 -<==      Total: 1
2019-03-19 08:58:02 -==>  Preparing: select count(*) from elec_log WHERE user_id = ? and elec_date = ? 
2019-03-19 08:58:02 -==> Parameters: 1-0004(String), 2019-03-19(String)
2019-03-19 08:58:02 -<==      Total: 1
2019-03-19 08:58:02 -耗时 : 27
2019-03-19 08:58:02 -返回值 : com.bootdo.common.utils.PageUtils@9122e63
2019-03-19 08:58:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 08:58:03 -HTTP METHOD : GET
2019-03-19 08:58:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 08:58:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=1-0004, elecDate=2019-03-19}]
2019-03-19 08:58:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_id = ? and `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 08:58:03 -==> Parameters: 1-0004(String), 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 08:58:03 -<==      Total: 1
2019-03-19 08:58:03 -==>  Preparing: select count(*) from elec_log WHERE user_id = ? and elec_date = ? 
2019-03-19 08:58:03 -==> Parameters: 1-0004(String), 2019-03-19(String)
2019-03-19 08:58:03 -<==      Total: 1
2019-03-19 08:58:03 -耗时 : 5
2019-03-19 08:58:03 -返回值 : com.bootdo.common.utils.PageUtils@56b283e6
2019-03-19 08:58:15 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/4
2019-03-19 08:58:15 -HTTP METHOD : GET
2019-03-19 08:58:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-19 08:58:15 -参数 : [4, {}]
2019-03-19 08:58:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-19 08:58:15 -==> Parameters: 4(Long)
2019-03-19 08:58:15 -<==      Total: 1
2019-03-19 08:58:15 -耗时 : 7
2019-03-19 08:58:15 -返回值 : moneyLog/elecLog/edit
2019-03-19 08:58:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:58:15 -HTTP METHOD : GET
2019-03-19 08:58:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:58:15 -参数 : [userType]
2019-03-19 08:58:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:58:15 -==> Parameters: userType(String)
2019-03-19 08:58:15 -<==      Total: 2
2019-03-19 08:58:15 -耗时 : 3
2019-03-19 08:58:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:58:15 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-19 08:58:15 -HTTP METHOD : GET
2019-03-19 08:58:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:58:15 -参数 : [userOrg]
2019-03-19 08:58:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:58:15 -==> Parameters: userOrg(String)
2019-03-19 08:58:15 -<==      Total: 0
2019-03-19 08:58:15 -耗时 : 12
2019-03-19 08:58:15 -返回值 : []
2019-03-19 08:58:18 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/4
2019-03-19 08:58:18 -HTTP METHOD : GET
2019-03-19 08:58:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-19 08:58:18 -参数 : [4, {}]
2019-03-19 08:58:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-19 08:58:18 -==> Parameters: 4(Long)
2019-03-19 08:58:18 -<==      Total: 1
2019-03-19 08:58:18 -耗时 : 3
2019-03-19 08:58:18 -返回值 : moneyLog/elecLog/edit
2019-03-19 08:58:18 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-19 08:58:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:58:18 -HTTP METHOD : GET
2019-03-19 08:58:18 -HTTP METHOD : GET
2019-03-19 08:58:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:58:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:58:18 -参数 : [userType]
2019-03-19 08:58:18 -参数 : [userOrg]
2019-03-19 08:58:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:58:18 -==> Parameters: userOrg(String)
2019-03-19 08:58:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:58:18 -==> Parameters: userType(String)
2019-03-19 08:58:18 -<==      Total: 0
2019-03-19 08:58:18 -耗时 : 7
2019-03-19 08:58:18 -返回值 : []
2019-03-19 08:58:18 -<==      Total: 2
2019-03-19 08:58:18 -耗时 : 67
2019-03-19 08:58:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:58:51 -请求地址 : http://localhost:8081/elec/elec
2019-03-19 08:58:51 -HTTP METHOD : GET
2019-03-19 08:58:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-19 08:58:51 -参数 : []
2019-03-19 08:58:51 -耗时 : 1
2019-03-19 08:58:51 -返回值 : elec/elec/elec
2019-03-19 08:58:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:58:51 -HTTP METHOD : GET
2019-03-19 08:58:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:58:51 -参数 : [userType]
2019-03-19 08:58:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:58:51 -==> Parameters: userType(String)
2019-03-19 08:58:51 -<==      Total: 2
2019-03-19 08:58:51 -耗时 : 4
2019-03-19 08:58:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:58:51 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-19 08:58:51 -HTTP METHOD : GET
2019-03-19 08:58:51 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-19 08:58:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@4d9d5d0a]
2019-03-19 08:58:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-19 08:58:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 08:58:51 -<==      Total: 10
2019-03-19 08:58:51 -==>  Preparing: select count(*) from elec 
2019-03-19 08:58:51 -==> Parameters: 
2019-03-19 08:58:51 -<==      Total: 1
2019-03-19 08:58:51 -耗时 : 95
2019-03-19 08:58:51 -返回值 : com.bootdo.common.utils.PageUtils@73772b87
2019-03-19 08:58:59 -请求地址 : http://localhost:8081/elec/elec/edit/2
2019-03-19 08:58:59 -HTTP METHOD : GET
2019-03-19 08:58:59 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.edit
2019-03-19 08:58:59 -参数 : [2, {}]
2019-03-19 08:58:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec where id = ? 
2019-03-19 08:58:59 -==> Parameters: 2(Long)
2019-03-19 08:58:59 -<==      Total: 1
2019-03-19 08:58:59 -耗时 : 5
2019-03-19 08:58:59 -返回值 : elec/elec/edit
2019-03-19 08:58:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 08:58:59 -HTTP METHOD : GET
2019-03-19 08:58:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:58:59 -参数 : [userType]
2019-03-19 08:58:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:58:59 -==> Parameters: userType(String)
2019-03-19 08:58:59 -<==      Total: 2
2019-03-19 08:58:59 -耗时 : 5
2019-03-19 08:58:59 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:58:59 -请求地址 : http://localhost:8081/common/dict/list/userState
2019-03-19 08:58:59 -HTTP METHOD : GET
2019-03-19 08:58:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:58:59 -参数 : [userState]
2019-03-19 08:58:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:58:59 -==> Parameters: userState(String)
2019-03-19 08:58:59 -<==      Total: 2
2019-03-19 08:58:59 -耗时 : 4
2019-03-19 08:58:59 -返回值 : [DictDO{id=126, name='使用中', value='1', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=125, name='未使用', value='0', type='userState', description='用户状态', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 08:58:59 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-03-19 08:58:59 -HTTP METHOD : GET
2019-03-19 08:58:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 08:58:59 -参数 : [elecType]
2019-03-19 08:58:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 08:58:59 -==> Parameters: elecType(String)
2019-03-19 08:58:59 -<==      Total: 2
2019-03-19 08:58:59 -耗时 : 3
2019-03-19 08:58:59 -返回值 : [DictDO{id=139, name='民用电', value='1', type='elecType', description='电量性质', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=138, name='商业电', value='0', type='elecType', description='电量类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:06:38 -Starting BootdoApplication on ZJZL-20180906VX with PID 11552 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-19 09:06:38 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-19 09:06:38 -The following profiles are active: dev
2019-03-19 09:06:39 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4504d271: startup date [Tue Mar 19 09:06:39 CST 2019]; root of context hierarchy
2019-03-19 09:06:43 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-19 09:06:45 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$34bbb454] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:06:46 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$2714e2fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:06:46 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:06:47 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:06:47 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:06:47 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-19 09:06:47 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-19 09:06:47 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:06:47 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:06:47 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:06:47 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:06:48 -Tomcat initialized with port(s): 8081 (http)
2019-03-19 09:06:49 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-19 09:06:49 -Starting service [Tomcat]
2019-03-19 09:06:49 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-19 09:06:49 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-19 09:06:49 -Initializing Spring embedded WebApplicationContext
2019-03-19 09:06:49 -Root WebApplicationContext: initialization completed in 10271 ms
2019-03-19 09:06:50 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-19 09:06:50 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-19 09:06:50 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-19 09:06:50 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-19 09:06:50 -Filter xssFilter was not registered (disabled)
2019-03-19 09:06:50 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-19 09:06:50 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-19 09:06:50 -Servlet statViewServlet mapped to [/druid/*]
2019-03-19 09:06:50 -Servlet dispatcherServlet mapped to [/]
2019-03-19 09:06:53 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4504d271: startup date [Tue Mar 19 09:06:39 CST 2019]; root of context hierarchy
2019-03-19 09:06:53 -Using default implementation for ThreadExecutor
2019-03-19 09:06:53 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-19 09:06:53 -Quartz Scheduler v.2.2.1 created.
2019-03-19 09:06:53 -RAMJobStore initialized.
2019-03-19 09:06:53 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-19 09:06:53 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-19 09:06:53 -Quartz scheduler version: 2.2.1
2019-03-19 09:06:53 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@217b0952
2019-03-19 09:06:54 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-19 09:06:54 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-19 09:06:57 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-19 09:06:57 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-19 09:06:57 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 09:06:57 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-19 09:06:57 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-19 09:06:57 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-19 09:06:57 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-19 09:06:57 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-19 09:06:57 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-19 09:06:57 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-19 09:06:57 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-19 09:06:57 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-19 09:06:57 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-19 09:06:57 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-19 09:06:57 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-19 09:06:57 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-19 09:06:57 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-19 09:06:57 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-19 09:06:57 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-19 09:06:57 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-19 09:06:57 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-19 09:06:57 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-19 09:06:57 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 09:06:57 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 09:06:57 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-19 09:06:57 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-19 09:06:57 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-19 09:06:57 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-19 09:06:57 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-19 09:06:57 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-19 09:06:57 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-19 09:06:57 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-19 09:06:57 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-19 09:06:57 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-19 09:06:57 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-19 09:06:57 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 09:06:57 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 09:06:57 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-19 09:06:57 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-19 09:06:57 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-19 09:06:57 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-19 09:06:57 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-19 09:06:57 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-19 09:06:57 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 09:06:57 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-19 09:06:57 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-19 09:06:57 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 09:06:57 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-19 09:06:57 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-19 09:06:57 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 09:06:57 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 09:06:57 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-19 09:06:57 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-19 09:06:57 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 09:06:57 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-19 09:06:57 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-19 09:06:57 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-19 09:06:57 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-19 09:06:57 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-19 09:06:57 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-19 09:06:57 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 09:06:57 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 09:06:57 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-19 09:06:57 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-19 09:06:57 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-19 09:06:57 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 09:06:57 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 09:06:57 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-19 09:06:57 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-19 09:06:57 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-19 09:06:57 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 09:06:57 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-19 09:06:57 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-19 09:06:57 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-19 09:06:57 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-19 09:06:57 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 09:06:57 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 09:06:57 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-19 09:06:57 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-19 09:06:57 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-19 09:06:57 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 09:06:57 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 09:06:57 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-19 09:06:57 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-19 09:06:57 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-19 09:06:57 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 09:06:57 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 09:06:57 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-19 09:06:57 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-19 09:06:57 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-19 09:06:57 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-19 09:06:57 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-19 09:06:57 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-19 09:06:57 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-19 09:06:57 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-19 09:06:57 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-19 09:06:57 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-19 09:06:57 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-19 09:06:57 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-19 09:06:57 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-19 09:06:57 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-19 09:06:57 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-19 09:06:57 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-19 09:06:57 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-19 09:06:57 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-19 09:06:57 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-19 09:06:57 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-19 09:06:57 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-19 09:06:57 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-19 09:06:57 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 09:06:57 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 09:06:57 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-19 09:06:57 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-19 09:06:57 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-19 09:06:57 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-19 09:06:57 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-19 09:06:57 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-19 09:06:57 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-19 09:06:57 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-19 09:06:57 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-19 09:06:57 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-19 09:06:57 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-19 09:06:57 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-19 09:06:57 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-19 09:06:57 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-19 09:06:57 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-19 09:06:57 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-19 09:06:57 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-19 09:06:57 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-19 09:06:57 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 09:06:57 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-19 09:06:57 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 09:06:57 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 09:06:57 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-19 09:06:57 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-19 09:06:57 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-19 09:06:57 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-19 09:06:57 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-19 09:06:57 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 09:06:57 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-19 09:06:57 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 09:06:57 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-19 09:06:57 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-19 09:06:57 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-19 09:06:57 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-19 09:06:57 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 09:06:57 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 09:06:57 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:06:57 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-19 09:06:57 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-19 09:06:57 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:06:57 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 09:06:57 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-19 09:06:57 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-19 09:06:57 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-19 09:06:58 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-19 09:06:58 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-19 09:06:58 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-19 09:06:59 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 09:07:00 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4504d271: startup date [Tue Mar 19 09:06:39 CST 2019]; root of context hierarchy
2019-03-19 09:07:00 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 09:07:00 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 09:07:00 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 09:07:00 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-19 09:07:00 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-19 09:07:04 -Registering beans for JMX exposure on startup
2019-03-19 09:07:04 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-19 09:07:04 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-19 09:07:04 -Starting beans in phase 2147483647
2019-03-19 09:07:04 -Context refreshed
2019-03-19 09:07:04 -Found 1 custom documentation plugin(s)
2019-03-19 09:07:04 -Scanning for api listing references
2019-03-19 09:07:05 -Generating unique operation named: removeUsingPOST_1
2019-03-19 09:07:05 -Generating unique operation named: addUsingGET_1
2019-03-19 09:07:05 -Generating unique operation named: editUsingGET_1
2019-03-19 09:07:05 -Generating unique operation named: listUsingGET_1
2019-03-19 09:07:05 -Generating unique operation named: removeUsingPOST_2
2019-03-19 09:07:05 -Generating unique operation named: removeUsingPOST_3
2019-03-19 09:07:05 -Generating unique operation named: saveUsingPOST_1
2019-03-19 09:07:05 -Generating unique operation named: updateUsingGET_1
2019-03-19 09:07:05 -Generating unique operation named: updateUsingHEAD_1
2019-03-19 09:07:05 -Generating unique operation named: updateUsingPOST_1
2019-03-19 09:07:05 -Generating unique operation named: updateUsingPUT_1
2019-03-19 09:07:05 -Generating unique operation named: updateUsingPATCH_1
2019-03-19 09:07:05 -Generating unique operation named: updateUsingDELETE_1
2019-03-19 09:07:05 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-19 09:07:05 -Generating unique operation named: updateUsingTRACE_1
2019-03-19 09:07:05 -Generating unique operation named: addUsingGET_2
2019-03-19 09:07:05 -Generating unique operation named: editUsingGET_2
2019-03-19 09:07:05 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-19 09:07:05 -Generating unique operation named: listUsingGET_2
2019-03-19 09:07:05 -Generating unique operation named: removeUsingPOST_4
2019-03-19 09:07:05 -Generating unique operation named: removeUsingPOST_5
2019-03-19 09:07:05 -Generating unique operation named: saveUsingPOST_2
2019-03-19 09:07:05 -Generating unique operation named: updateUsingGET_2
2019-03-19 09:07:05 -Generating unique operation named: updateUsingHEAD_2
2019-03-19 09:07:05 -Generating unique operation named: updateUsingPOST_2
2019-03-19 09:07:05 -Generating unique operation named: updateUsingPUT_2
2019-03-19 09:07:05 -Generating unique operation named: updateUsingPATCH_2
2019-03-19 09:07:05 -Generating unique operation named: updateUsingDELETE_2
2019-03-19 09:07:05 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-19 09:07:05 -Generating unique operation named: updateUsingTRACE_2
2019-03-19 09:07:05 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-19 09:07:05 -Generating unique operation named: addUsingGET_3
2019-03-19 09:07:05 -Generating unique operation named: editUsingGET_3
2019-03-19 09:07:05 -Generating unique operation named: listUsingGET_3
2019-03-19 09:07:05 -Generating unique operation named: removeUsingPOST_6
2019-03-19 09:07:05 -Generating unique operation named: removeUsingPOST_7
2019-03-19 09:07:05 -Generating unique operation named: saveUsingPOST_3
2019-03-19 09:07:05 -Generating unique operation named: updateUsingGET_3
2019-03-19 09:07:05 -Generating unique operation named: updateUsingHEAD_3
2019-03-19 09:07:05 -Generating unique operation named: updateUsingPOST_3
2019-03-19 09:07:05 -Generating unique operation named: updateUsingPUT_3
2019-03-19 09:07:05 -Generating unique operation named: updateUsingPATCH_3
2019-03-19 09:07:05 -Generating unique operation named: updateUsingDELETE_3
2019-03-19 09:07:05 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-19 09:07:05 -Generating unique operation named: updateUsingTRACE_3
2019-03-19 09:07:05 -Generating unique operation named: addUsingGET_4
2019-03-19 09:07:05 -Generating unique operation named: editUsingGET_4
2019-03-19 09:07:05 -Generating unique operation named: listUsingGET_4
2019-03-19 09:07:05 -Generating unique operation named: removeUsingPOST_8
2019-03-19 09:07:05 -Generating unique operation named: removeUsingPOST_9
2019-03-19 09:07:05 -Generating unique operation named: saveUsingPOST_4
2019-03-19 09:07:05 -Generating unique operation named: updateUsingGET_4
2019-03-19 09:07:05 -Generating unique operation named: updateUsingHEAD_4
2019-03-19 09:07:05 -Generating unique operation named: updateUsingPOST_4
2019-03-19 09:07:05 -Generating unique operation named: updateUsingPUT_4
2019-03-19 09:07:05 -Generating unique operation named: updateUsingPATCH_4
2019-03-19 09:07:05 -Generating unique operation named: updateUsingDELETE_4
2019-03-19 09:07:05 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-19 09:07:05 -Generating unique operation named: updateUsingTRACE_4
2019-03-19 09:07:05 -Generating unique operation named: ElecUsingGET_1
2019-03-19 09:07:05 -Generating unique operation named: addUsingGET_5
2019-03-19 09:07:05 -Generating unique operation named: editUsingGET_5
2019-03-19 09:07:06 -Generating unique operation named: listUsingGET_5
2019-03-19 09:07:06 -Generating unique operation named: removeUsingPOST_10
2019-03-19 09:07:06 -Generating unique operation named: removeUsingPOST_11
2019-03-19 09:07:06 -Generating unique operation named: saveUsingPOST_5
2019-03-19 09:07:06 -Generating unique operation named: updateUsingGET_5
2019-03-19 09:07:06 -Generating unique operation named: updateUsingHEAD_5
2019-03-19 09:07:06 -Generating unique operation named: updateUsingPOST_5
2019-03-19 09:07:06 -Generating unique operation named: updateUsingPUT_5
2019-03-19 09:07:06 -Generating unique operation named: updateUsingPATCH_5
2019-03-19 09:07:06 -Generating unique operation named: updateUsingDELETE_5
2019-03-19 09:07:06 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-19 09:07:06 -Generating unique operation named: updateUsingTRACE_5
2019-03-19 09:07:06 -Generating unique operation named: editUsingGET_6
2019-03-19 09:07:06 -Generating unique operation named: listUsingGET_6
2019-03-19 09:07:06 -Generating unique operation named: updateUsingPOST_6
2019-03-19 09:07:06 -Generating unique operation named: addUsingGET_6
2019-03-19 09:07:06 -Generating unique operation named: editUsingGET_7
2019-03-19 09:07:06 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-19 09:07:06 -Generating unique operation named: listUsingGET_7
2019-03-19 09:07:06 -Generating unique operation named: removeUsingPOST_12
2019-03-19 09:07:06 -Generating unique operation named: removeUsingPOST_13
2019-03-19 09:07:06 -Generating unique operation named: saveUsingPOST_6
2019-03-19 09:07:06 -Generating unique operation named: updateUsingGET_6
2019-03-19 09:07:06 -Generating unique operation named: updateUsingHEAD_6
2019-03-19 09:07:06 -Generating unique operation named: updateUsingPOST_7
2019-03-19 09:07:06 -Generating unique operation named: updateUsingPUT_6
2019-03-19 09:07:06 -Generating unique operation named: updateUsingPATCH_6
2019-03-19 09:07:06 -Generating unique operation named: updateUsingDELETE_6
2019-03-19 09:07:06 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-19 09:07:06 -Generating unique operation named: updateUsingTRACE_6
2019-03-19 09:07:06 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-19 09:07:06 -Generating unique operation named: addUsingGET_7
2019-03-19 09:07:06 -Generating unique operation named: editUsingGET_8
2019-03-19 09:07:06 -Generating unique operation named: listUsingGET_8
2019-03-19 09:07:06 -Generating unique operation named: removeUsingPOST_14
2019-03-19 09:07:06 -Generating unique operation named: removeUsingPOST_15
2019-03-19 09:07:06 -Generating unique operation named: saveUsingPOST_7
2019-03-19 09:07:06 -Generating unique operation named: updateUsingGET_7
2019-03-19 09:07:06 -Generating unique operation named: updateUsingHEAD_7
2019-03-19 09:07:06 -Generating unique operation named: updateUsingPOST_8
2019-03-19 09:07:06 -Generating unique operation named: updateUsingPUT_7
2019-03-19 09:07:06 -Generating unique operation named: updateUsingPATCH_7
2019-03-19 09:07:06 -Generating unique operation named: updateUsingDELETE_7
2019-03-19 09:07:06 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-19 09:07:06 -Generating unique operation named: updateUsingTRACE_7
2019-03-19 09:07:06 -Generating unique operation named: addUsingGET_8
2019-03-19 09:07:06 -Generating unique operation named: editUsingGET_9
2019-03-19 09:07:06 -Generating unique operation named: listUsingGET_9
2019-03-19 09:07:06 -Generating unique operation named: removeUsingPOST_16
2019-03-19 09:07:06 -Generating unique operation named: removeUsingPOST_17
2019-03-19 09:07:06 -Generating unique operation named: saveUsingPOST_8
2019-03-19 09:07:06 -Generating unique operation named: updateUsingGET_8
2019-03-19 09:07:06 -Generating unique operation named: updateUsingHEAD_8
2019-03-19 09:07:06 -Generating unique operation named: updateUsingPOST_9
2019-03-19 09:07:06 -Generating unique operation named: updateUsingPUT_8
2019-03-19 09:07:06 -Generating unique operation named: updateUsingPATCH_8
2019-03-19 09:07:06 -Generating unique operation named: updateUsingDELETE_8
2019-03-19 09:07:06 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-19 09:07:06 -Generating unique operation named: updateUsingTRACE_8
2019-03-19 09:07:06 -Generating unique operation named: addUsingGET_9
2019-03-19 09:07:07 -Generating unique operation named: editUsingGET_10
2019-03-19 09:07:07 -Generating unique operation named: infoUsingGET_1
2019-03-19 09:07:07 -Generating unique operation named: infoUsingHEAD_1
2019-03-19 09:07:07 -Generating unique operation named: infoUsingPOST_1
2019-03-19 09:07:07 -Generating unique operation named: infoUsingPUT_1
2019-03-19 09:07:07 -Generating unique operation named: infoUsingPATCH_1
2019-03-19 09:07:07 -Generating unique operation named: infoUsingDELETE_1
2019-03-19 09:07:07 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-19 09:07:07 -Generating unique operation named: infoUsingTRACE_1
2019-03-19 09:07:07 -Generating unique operation named: listUsingGET_10
2019-03-19 09:07:07 -Generating unique operation named: removeUsingPOST_18
2019-03-19 09:07:07 -Generating unique operation named: removeUsingPOST_19
2019-03-19 09:07:07 -Generating unique operation named: saveUsingPOST_9
2019-03-19 09:07:07 -Generating unique operation named: updateUsingPOST_10
2019-03-19 09:07:07 -Generating unique operation named: listUsingGET_11
2019-03-19 09:07:07 -Generating unique operation named: removeUsingPOST_20
2019-03-19 09:07:07 -Generating unique operation named: welcomeUsingGET_1
2019-03-19 09:07:07 -Generating unique operation named: addUsingGET_10
2019-03-19 09:07:07 -Generating unique operation named: editUsingGET_11
2019-03-19 09:07:07 -Generating unique operation named: listUsingGET_12
2019-03-19 09:07:07 -Generating unique operation named: removeUsingPOST_21
2019-03-19 09:07:07 -Generating unique operation named: saveUsingPOST_10
2019-03-19 09:07:07 -Generating unique operation named: treeUsingGET_1
2019-03-19 09:07:07 -Generating unique operation named: treeUsingGET_2
2019-03-19 09:07:07 -Generating unique operation named: updateUsingPOST_11
2019-03-19 09:07:07 -Generating unique operation named: addUsingGET_11
2019-03-19 09:07:07 -Generating unique operation named: editUsingGET_12
2019-03-19 09:07:07 -Generating unique operation named: listUsingGET_13
2019-03-19 09:07:07 -Generating unique operation named: removeUsingPOST_22
2019-03-19 09:07:07 -Generating unique operation named: removeUsingPOST_23
2019-03-19 09:07:07 -Generating unique operation named: saveUsingPOST_11
2019-03-19 09:07:07 -Generating unique operation named: updateUsingGET_9
2019-03-19 09:07:07 -Generating unique operation named: updateUsingHEAD_9
2019-03-19 09:07:07 -Generating unique operation named: updateUsingPOST_12
2019-03-19 09:07:07 -Generating unique operation named: updateUsingPUT_9
2019-03-19 09:07:07 -Generating unique operation named: updateUsingPATCH_9
2019-03-19 09:07:07 -Generating unique operation named: updateUsingDELETE_9
2019-03-19 09:07:07 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-19 09:07:07 -Generating unique operation named: updateUsingTRACE_9
2019-03-19 09:07:07 -Generating unique operation named: addUsingGET_12
2019-03-19 09:07:07 -Generating unique operation named: editUsingGET_13
2019-03-19 09:07:07 -Generating unique operation named: listUsingGET_14
2019-03-19 09:07:07 -Generating unique operation named: removeUsingPOST_24
2019-03-19 09:07:07 -Generating unique operation named: removeUsingPOST_25
2019-03-19 09:07:07 -Generating unique operation named: saveUsingPOST_12
2019-03-19 09:07:07 -Generating unique operation named: updateUsingGET_10
2019-03-19 09:07:07 -Generating unique operation named: updateUsingHEAD_10
2019-03-19 09:07:07 -Generating unique operation named: updateUsingPOST_13
2019-03-19 09:07:07 -Generating unique operation named: updateUsingPUT_10
2019-03-19 09:07:07 -Generating unique operation named: updateUsingPATCH_10
2019-03-19 09:07:07 -Generating unique operation named: updateUsingDELETE_10
2019-03-19 09:07:07 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-19 09:07:07 -Generating unique operation named: updateUsingTRACE_10
2019-03-19 09:07:07 -Generating unique operation named: addUsingGET_13
2019-03-19 09:07:07 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-19 09:07:07 -Generating unique operation named: editUsingGET_14
2019-03-19 09:07:07 -Generating unique operation named: listUsingGET_15
2019-03-19 09:07:07 -Generating unique operation named: saveUsingPOST_13
2019-03-19 09:07:07 -Generating unique operation named: saveUsingPOST_14
2019-03-19 09:07:07 -Generating unique operation named: updateUsingPOST_14
2019-03-19 09:07:07 -Generating unique operation named: listUsingGET_16
2019-03-19 09:07:07 -Generating unique operation named: listUsingHEAD_1
2019-03-19 09:07:07 -Generating unique operation named: listUsingPOST_1
2019-03-19 09:07:07 -Generating unique operation named: listUsingPUT_1
2019-03-19 09:07:07 -Generating unique operation named: listUsingPATCH_1
2019-03-19 09:07:07 -Generating unique operation named: listUsingDELETE_1
2019-03-19 09:07:07 -Generating unique operation named: listUsingOPTIONS_1
2019-03-19 09:07:07 -Generating unique operation named: listUsingTRACE_1
2019-03-19 09:07:07 -Generating unique operation named: addUsingGET_14
2019-03-19 09:07:07 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-19 09:07:08 -Generating unique operation named: editUsingGET_15
2019-03-19 09:07:08 -Generating unique operation named: listUsingGET_17
2019-03-19 09:07:08 -Generating unique operation named: removeUsingPOST_26
2019-03-19 09:07:08 -Generating unique operation named: saveUsingPOST_15
2019-03-19 09:07:08 -Generating unique operation named: treeUsingGET_3
2019-03-19 09:07:08 -Generating unique operation named: treeViewUsingGET_1
2019-03-19 09:07:08 -Generating unique operation named: updateUsingPOST_15
2019-03-19 09:07:08 -Generating unique operation named: addUsingGET_15
2019-03-19 09:07:08 -Generating unique operation named: editUsingGET_16
2019-03-19 09:07:08 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-19 09:07:08 -Generating unique operation named: listUsingGET_18
2019-03-19 09:07:08 -Generating unique operation named: removeUsingPOST_27
2019-03-19 09:07:08 -Generating unique operation named: removeUsingPOST_28
2019-03-19 09:07:08 -Generating unique operation named: saveUsingPOST_16
2019-03-19 09:07:08 -Generating unique operation named: updateUsingGET_11
2019-03-19 09:07:08 -Generating unique operation named: updateUsingHEAD_11
2019-03-19 09:07:08 -Generating unique operation named: updateUsingPOST_16
2019-03-19 09:07:08 -Generating unique operation named: updateUsingPUT_11
2019-03-19 09:07:08 -Generating unique operation named: updateUsingPATCH_11
2019-03-19 09:07:08 -Generating unique operation named: updateUsingDELETE_11
2019-03-19 09:07:08 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-19 09:07:08 -Generating unique operation named: updateUsingTRACE_11
2019-03-19 09:07:08 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-19 09:07:08 -Generating unique operation named: addUsingGET_16
2019-03-19 09:07:08 -Generating unique operation named: editUsingGET_17
2019-03-19 09:07:08 -Generating unique operation named: listUsingGET_19
2019-03-19 09:07:08 -Generating unique operation named: removeUsingPOST_29
2019-03-19 09:07:08 -Generating unique operation named: removeUsingPOST_30
2019-03-19 09:07:08 -Generating unique operation named: saveUsingPOST_17
2019-03-19 09:07:08 -Generating unique operation named: updateUsingGET_12
2019-03-19 09:07:08 -Generating unique operation named: updateUsingHEAD_12
2019-03-19 09:07:08 -Generating unique operation named: updateUsingPOST_17
2019-03-19 09:07:08 -Generating unique operation named: updateUsingPUT_12
2019-03-19 09:07:08 -Generating unique operation named: updateUsingPATCH_12
2019-03-19 09:07:08 -Generating unique operation named: updateUsingDELETE_12
2019-03-19 09:07:08 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-19 09:07:08 -Generating unique operation named: updateUsingTRACE_12
2019-03-19 09:07:08 -Generating unique operation named: addUsingGET_17
2019-03-19 09:07:08 -Generating unique operation named: editUsingGET_18
2019-03-19 09:07:08 -Generating unique operation named: listUsingGET_20
2019-03-19 09:07:08 -Generating unique operation named: removeUsingPOST_31
2019-03-19 09:07:08 -Generating unique operation named: removeUsingPOST_32
2019-03-19 09:07:08 -Generating unique operation named: saveUsingPOST_18
2019-03-19 09:07:08 -Generating unique operation named: updateUsingGET_13
2019-03-19 09:07:08 -Generating unique operation named: updateUsingHEAD_13
2019-03-19 09:07:08 -Generating unique operation named: updateUsingPOST_18
2019-03-19 09:07:08 -Generating unique operation named: updateUsingPUT_13
2019-03-19 09:07:08 -Generating unique operation named: updateUsingPATCH_13
2019-03-19 09:07:08 -Generating unique operation named: updateUsingDELETE_13
2019-03-19 09:07:08 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-19 09:07:08 -Generating unique operation named: updateUsingTRACE_13
2019-03-19 09:07:08 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-19 09:07:08 -Starting Quartz Scheduler now
2019-03-19 09:07:08 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-19 09:07:08 -Starting...
2019-03-19 09:07:08 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 09:07:08 -Started.
2019-03-19 09:07:08 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-19 09:07:08 -Using a shared selector for servlet write/read
2019-03-19 09:07:08 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-19 09:07:08 -Started BootdoApplication in 32.097 seconds (JVM running for 34.22)
2019-03-19 09:07:08 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-19 09:07:08 -==> Parameters: 
2019-03-19 09:07:09 -<==      Total: 1
2019-03-19 09:07:12 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-19 09:07:12 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-19 09:07:12 -FrameworkServlet 'dispatcherServlet': initialization completed in 96 ms
2019-03-19 09:07:12 -Enabling session validation scheduler...
2019-03-19 09:07:12 -请求地址 : http://localhost:8081/login;JSESSIONID=b8ec93aa-bf4c-4d61-92d8-7485799c10ed
2019-03-19 09:07:12 -HTTP METHOD : GET
2019-03-19 09:07:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 09:07:12 -参数 : [{}]
2019-03-19 09:07:12 -耗时 : 6
2019-03-19 09:07:12 -返回值 : login
2019-03-19 09:07:14 -请求地址 : http://localhost:8081/getVerify
2019-03-19 09:07:14 -HTTP METHOD : GET
2019-03-19 09:07:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 09:07:14 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5acadd08, org.apache.shiro.web.servlet.ShiroHttpServletResponse@51a73e47]
2019-03-19 09:07:15 -7732
2019-03-19 09:07:15 -耗时 : 620
2019-03-19 09:07:15 -返回值 : null
2019-03-19 09:07:20 -请求地址 : http://localhost:8081/login
2019-03-19 09:07:20 -HTTP METHOD : POST
2019-03-19 09:07:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 09:07:20 -参数 : [admin, 111111, 7732, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7958eaf1]
2019-03-19 09:07:20 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 09:07:20 -==> Parameters: admin(String)
2019-03-19 09:07:20 -<==      Total: 1
2019-03-19 09:07:20 -耗时 : 218
2019-03-19 09:07:20 -返回值 : {msg=操作成功, code=0}
2019-03-19 09:07:20 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-19 09:07:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 09:07:20 -==> Parameters: 1(Long), admin(String), 登录(String), 218(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 09:07:20.403(Timestamp)
2019-03-19 09:07:20 -请求地址 : http://localhost:8081/index
2019-03-19 09:07:20 -HTTP METHOD : GET
2019-03-19 09:07:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 09:07:20 -参数 : [{}]
2019-03-19 09:07:20 -<==    Updates: 1
2019-03-19 09:07:20 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 09:07:20 -==> Parameters: 1(Long)
2019-03-19 09:07:20 -<==      Total: 46
2019-03-19 09:07:20 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 09:07:20 -==> Parameters: 138(Long)
2019-03-19 09:07:20 -<==      Total: 1
2019-03-19 09:07:20 -耗时 : 277
2019-03-19 09:07:20 -返回值 : index_v1
2019-03-19 09:07:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 09:07:20 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 277(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 09:07:20.826(Timestamp)
2019-03-19 09:07:20 -<==    Updates: 1
2019-03-19 09:07:21 -请求地址 : http://localhost:8081/main
2019-03-19 09:07:21 -HTTP METHOD : GET
2019-03-19 09:07:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 09:07:21 -参数 : []
2019-03-19 09:07:21 -耗时 : 1
2019-03-19 09:07:21 -返回值 : main
2019-03-19 09:07:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 09:07:21 -HTTP METHOD : GET
2019-03-19 09:07:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 09:07:21 -参数 : []
2019-03-19 09:07:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 09:07:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 09:07:21 -<==      Total: 0
2019-03-19 09:07:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 09:07:21 -==> Parameters: 1(Long), 0(String)
2019-03-19 09:07:21 -<==      Total: 1
2019-03-19 09:07:21 -耗时 : 43
2019-03-19 09:07:21 -返回值 : com.bootdo.common.utils.PageUtils@38535264
2019-03-19 09:07:21 -请求地址 : http://localhost:8081/main
2019-03-19 09:07:21 -HTTP METHOD : GET
2019-03-19 09:07:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 09:07:21 -参数 : []
2019-03-19 09:07:21 -耗时 : 0
2019-03-19 09:07:21 -返回值 : main
2019-03-19 09:07:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 09:07:28 -==> Parameters: 1(Long)
2019-03-19 09:07:28 -<==      Total: 90
2019-03-19 09:07:28 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 09:07:28 -HTTP METHOD : GET
2019-03-19 09:07:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 09:07:28 -参数 : []
2019-03-19 09:07:28 -耗时 : 0
2019-03-19 09:07:28 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 09:07:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:07:29 -HTTP METHOD : GET
2019-03-19 09:07:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:07:29 -参数 : [userType]
2019-03-19 09:07:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:07:29 -==> Parameters: userType(String)
2019-03-19 09:07:29 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 09:07:29 -HTTP METHOD : GET
2019-03-19 09:07:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 09:07:29 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 09:07:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 09:07:29 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:07:29 -<==      Total: 2
2019-03-19 09:07:29 -耗时 : 115
2019-03-19 09:07:29 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:07:29 -<==      Total: 4
2019-03-19 09:07:29 -==>  Preparing: select count(*) from elec_log 
2019-03-19 09:07:29 -==> Parameters: 
2019-03-19 09:07:29 -<==      Total: 1
2019-03-19 09:07:29 -耗时 : 125
2019-03-19 09:07:29 -返回值 : com.bootdo.common.utils.PageUtils@224cccd2
2019-03-19 09:07:32 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-19 09:07:32 -HTTP METHOD : GET
2019-03-19 09:07:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-19 09:07:32 -参数 : [1, {}]
2019-03-19 09:07:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-19 09:07:32 -==> Parameters: 1(Long)
2019-03-19 09:07:32 -<==      Total: 1
2019-03-19 09:07:32 -耗时 : 12
2019-03-19 09:07:32 -返回值 : moneyLog/elecLog/edit
2019-03-19 09:07:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:07:32 -HTTP METHOD : GET
2019-03-19 09:07:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:07:32 -参数 : [userType]
2019-03-19 09:07:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:07:32 -==> Parameters: userType(String)
2019-03-19 09:07:32 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-19 09:07:32 -HTTP METHOD : GET
2019-03-19 09:07:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:07:32 -参数 : [userOrg]
2019-03-19 09:07:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:07:32 -==> Parameters: userOrg(String)
2019-03-19 09:07:32 -<==      Total: 0
2019-03-19 09:07:32 -耗时 : 10
2019-03-19 09:07:32 -返回值 : []
2019-03-19 09:07:32 -<==      Total: 2
2019-03-19 09:07:32 -耗时 : 45
2019-03-19 09:07:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:07:58 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 9]
2019-03-19 09:14:16 -请求地址 : http://localhost:8081/index
2019-03-19 09:14:16 -HTTP METHOD : GET
2019-03-19 09:14:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 09:14:16 -参数 : [{}]
2019-03-19 09:14:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 09:14:16 -==> Parameters: 1(Long)
2019-03-19 09:14:16 -<==      Total: 46
2019-03-19 09:14:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 09:14:16 -==> Parameters: 138(Long)
2019-03-19 09:14:16 -<==      Total: 1
2019-03-19 09:14:16 -耗时 : 92
2019-03-19 09:14:16 -返回值 : index_v1
2019-03-19 09:14:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 09:14:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 92(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 09:14:16.708(Timestamp)
2019-03-19 09:14:16 -<==    Updates: 1
2019-03-19 09:14:16 -请求地址 : http://localhost:8081/main
2019-03-19 09:14:16 -HTTP METHOD : GET
2019-03-19 09:14:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 09:14:16 -参数 : []
2019-03-19 09:14:16 -耗时 : 15
2019-03-19 09:14:16 -返回值 : main
2019-03-19 09:14:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 09:14:17 -HTTP METHOD : GET
2019-03-19 09:14:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 09:14:17 -参数 : []
2019-03-19 09:14:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 09:14:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 09:14:17 -<==      Total: 0
2019-03-19 09:14:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 09:14:17 -==> Parameters: 1(Long), 0(String)
2019-03-19 09:14:17 -<==      Total: 1
2019-03-19 09:14:17 -耗时 : 12
2019-03-19 09:14:17 -返回值 : com.bootdo.common.utils.PageUtils@7fd33bce
2019-03-19 09:14:17 -请求地址 : http://localhost:8081/main
2019-03-19 09:14:17 -HTTP METHOD : GET
2019-03-19 09:14:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 09:14:17 -参数 : []
2019-03-19 09:14:17 -耗时 : 0
2019-03-19 09:14:17 -返回值 : main
2019-03-19 09:14:19 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 09:14:19 -HTTP METHOD : GET
2019-03-19 09:14:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 09:14:19 -参数 : []
2019-03-19 09:14:19 -耗时 : 0
2019-03-19 09:14:19 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 09:14:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:14:19 -HTTP METHOD : GET
2019-03-19 09:14:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:14:19 -参数 : [userType]
2019-03-19 09:14:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:14:19 -==> Parameters: userType(String)
2019-03-19 09:14:19 -<==      Total: 2
2019-03-19 09:14:19 -耗时 : 5
2019-03-19 09:14:19 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:14:19 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 09:14:19 -HTTP METHOD : GET
2019-03-19 09:14:19 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 09:14:19 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 09:14:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 09:14:19 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:14:19 -<==      Total: 4
2019-03-19 09:14:19 -==>  Preparing: select count(*) from elec_log 
2019-03-19 09:14:19 -==> Parameters: 
2019-03-19 09:14:19 -<==      Total: 1
2019-03-19 09:14:19 -耗时 : 9
2019-03-19 09:14:19 -返回值 : com.bootdo.common.utils.PageUtils@21d3b02f
2019-03-19 09:14:23 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:14:23 -HTTP METHOD : GET
2019-03-19 09:14:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:14:23 -参数 : []
2019-03-19 09:14:23 -耗时 : 1
2019-03-19 09:14:23 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:14:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:14:23 -HTTP METHOD : GET
2019-03-19 09:14:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:14:23 -参数 : [userType]
2019-03-19 09:14:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:14:23 -==> Parameters: userType(String)
2019-03-19 09:14:23 -<==      Total: 2
2019-03-19 09:14:23 -耗时 : 5
2019-03-19 09:14:23 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:14:23 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:14:23 -HTTP METHOD : GET
2019-03-19 09:14:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:14:23 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:14:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:14:23 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:14:23 -<==      Total: 3
2019-03-19 09:14:23 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:14:23 -==> Parameters: 
2019-03-19 09:14:23 -<==      Total: 1
2019-03-19 09:14:23 -耗时 : 75
2019-03-19 09:14:23 -返回值 : com.bootdo.common.utils.PageUtils@2e736c35
2019-03-19 09:14:26 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 09:14:26 -HTTP METHOD : GET
2019-03-19 09:14:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 09:14:26 -参数 : []
2019-03-19 09:14:26 -耗时 : 1
2019-03-19 09:14:26 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 09:14:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:14:26 -HTTP METHOD : GET
2019-03-19 09:14:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:14:26 -参数 : [userType]
2019-03-19 09:14:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:14:26 -==> Parameters: userType(String)
2019-03-19 09:14:26 -<==      Total: 2
2019-03-19 09:14:26 -耗时 : 6
2019-03-19 09:14:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:14:26 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 09:14:26 -HTTP METHOD : GET
2019-03-19 09:14:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 09:14:26 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 09:14:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 09:14:26 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:14:26 -<==      Total: 3
2019-03-19 09:14:26 -==>  Preparing: select count(*) from water_log 
2019-03-19 09:14:26 -==> Parameters: 
2019-03-19 09:14:26 -<==      Total: 1
2019-03-19 09:14:26 -耗时 : 34
2019-03-19 09:14:26 -返回值 : com.bootdo.common.utils.PageUtils@1fc97324
2019-03-19 09:14:29 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:14:29 -HTTP METHOD : GET
2019-03-19 09:14:29 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:14:29 -参数 : []
2019-03-19 09:14:29 -耗时 : 0
2019-03-19 09:14:29 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:14:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:14:30 -HTTP METHOD : GET
2019-03-19 09:14:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:14:30 -参数 : [userType]
2019-03-19 09:14:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:14:30 -==> Parameters: userType(String)
2019-03-19 09:14:30 -<==      Total: 2
2019-03-19 09:14:30 -耗时 : 5
2019-03-19 09:14:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:14:30 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:14:30 -HTTP METHOD : GET
2019-03-19 09:14:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:14:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:14:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:14:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:14:30 -<==      Total: 3
2019-03-19 09:14:30 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:14:30 -==> Parameters: 
2019-03-19 09:14:30 -<==      Total: 1
2019-03-19 09:14:30 -耗时 : 9
2019-03-19 09:14:30 -返回值 : com.bootdo.common.utils.PageUtils@192e7b27
2019-03-19 09:14:30 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 09:14:30 -HTTP METHOD : GET
2019-03-19 09:14:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 09:14:30 -参数 : []
2019-03-19 09:14:30 -耗时 : 0
2019-03-19 09:14:30 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 09:14:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:14:30 -HTTP METHOD : GET
2019-03-19 09:14:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:14:30 -参数 : [userType]
2019-03-19 09:14:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:14:30 -==> Parameters: userType(String)
2019-03-19 09:14:30 -<==      Total: 2
2019-03-19 09:14:30 -耗时 : 4
2019-03-19 09:14:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:14:30 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 09:14:30 -HTTP METHOD : GET
2019-03-19 09:14:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 09:14:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 09:14:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 09:14:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:14:30 -<==      Total: 3
2019-03-19 09:14:30 -==>  Preparing: select count(*) from water_log 
2019-03-19 09:14:30 -==> Parameters: 
2019-03-19 09:14:30 -<==      Total: 1
2019-03-19 09:14:30 -耗时 : 8
2019-03-19 09:14:30 -返回值 : com.bootdo.common.utils.PageUtils@1a19e4a5
2019-03-19 09:14:31 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:14:31 -HTTP METHOD : GET
2019-03-19 09:14:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:14:31 -参数 : []
2019-03-19 09:14:31 -耗时 : 1
2019-03-19 09:14:31 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:14:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:14:31 -HTTP METHOD : GET
2019-03-19 09:14:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:14:31 -参数 : [userType]
2019-03-19 09:14:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:14:31 -==> Parameters: userType(String)
2019-03-19 09:14:31 -<==      Total: 2
2019-03-19 09:14:31 -耗时 : 9
2019-03-19 09:14:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:14:31 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:14:31 -HTTP METHOD : GET
2019-03-19 09:14:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:14:31 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:14:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:14:31 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:14:31 -<==      Total: 3
2019-03-19 09:14:31 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:14:31 -==> Parameters: 
2019-03-19 09:14:31 -<==      Total: 1
2019-03-19 09:14:31 -耗时 : 8
2019-03-19 09:14:31 -返回值 : com.bootdo.common.utils.PageUtils@6cdc3041
2019-03-19 09:14:31 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 09:14:31 -HTTP METHOD : GET
2019-03-19 09:14:31 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 09:14:31 -参数 : []
2019-03-19 09:14:31 -耗时 : 1
2019-03-19 09:14:31 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 09:14:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:14:31 -HTTP METHOD : GET
2019-03-19 09:14:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:14:31 -参数 : [userType]
2019-03-19 09:14:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:14:31 -==> Parameters: userType(String)
2019-03-19 09:14:31 -<==      Total: 2
2019-03-19 09:14:31 -耗时 : 5
2019-03-19 09:14:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:14:32 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 09:14:32 -HTTP METHOD : GET
2019-03-19 09:14:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 09:14:32 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 09:14:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 09:14:32 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:14:32 -<==      Total: 3
2019-03-19 09:14:32 -==>  Preparing: select count(*) from water_log 
2019-03-19 09:14:32 -==> Parameters: 
2019-03-19 09:14:32 -<==      Total: 1
2019-03-19 09:14:32 -耗时 : 9
2019-03-19 09:14:32 -返回值 : com.bootdo.common.utils.PageUtils@4e397858
2019-03-19 09:14:32 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:14:32 -HTTP METHOD : GET
2019-03-19 09:14:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:14:32 -参数 : []
2019-03-19 09:14:32 -耗时 : 0
2019-03-19 09:14:32 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:14:32 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:14:32 -HTTP METHOD : GET
2019-03-19 09:14:32 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:14:32 -参数 : [userType]
2019-03-19 09:14:32 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:14:32 -==> Parameters: userType(String)
2019-03-19 09:14:32 -<==      Total: 2
2019-03-19 09:14:32 -耗时 : 4
2019-03-19 09:14:32 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:14:32 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:14:32 -HTTP METHOD : GET
2019-03-19 09:14:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:14:32 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:14:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:14:32 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:14:32 -<==      Total: 3
2019-03-19 09:14:32 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:14:32 -==> Parameters: 
2019-03-19 09:14:32 -<==      Total: 1
2019-03-19 09:14:32 -耗时 : 8
2019-03-19 09:14:32 -返回值 : com.bootdo.common.utils.PageUtils@19a178f0
2019-03-19 09:14:33 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 09:14:33 -HTTP METHOD : GET
2019-03-19 09:14:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 09:14:33 -参数 : []
2019-03-19 09:14:33 -耗时 : 0
2019-03-19 09:14:33 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 09:14:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:14:33 -HTTP METHOD : GET
2019-03-19 09:14:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:14:33 -参数 : [userType]
2019-03-19 09:14:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:14:33 -==> Parameters: userType(String)
2019-03-19 09:14:33 -<==      Total: 2
2019-03-19 09:14:33 -耗时 : 5
2019-03-19 09:14:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:14:33 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 09:14:33 -HTTP METHOD : GET
2019-03-19 09:14:33 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 09:14:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 09:14:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 09:14:33 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:14:33 -<==      Total: 3
2019-03-19 09:14:33 -==>  Preparing: select count(*) from water_log 
2019-03-19 09:14:33 -==> Parameters: 
2019-03-19 09:14:33 -<==      Total: 1
2019-03-19 09:14:33 -耗时 : 8
2019-03-19 09:14:33 -返回值 : com.bootdo.common.utils.PageUtils@3bc85cfc
2019-03-19 09:14:43 -请求地址 : http://localhost:8081/moneyLog/waterLog/edit/1
2019-03-19 09:14:43 -HTTP METHOD : GET
2019-03-19 09:14:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.edit
2019-03-19 09:14:43 -参数 : [1, {}]
2019-03-19 09:14:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log where id = ? 
2019-03-19 09:14:43 -==> Parameters: 1(Long)
2019-03-19 09:14:43 -<==      Total: 1
2019-03-19 09:14:43 -耗时 : 7
2019-03-19 09:14:43 -返回值 : moneyLog/waterLog/edit
2019-03-19 09:14:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:14:43 -HTTP METHOD : GET
2019-03-19 09:14:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:14:43 -参数 : [userType]
2019-03-19 09:14:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:14:43 -==> Parameters: userType(String)
2019-03-19 09:14:43 -请求地址 : http://localhost:8081/common/dict/list/userArea
2019-03-19 09:14:43 -HTTP METHOD : GET
2019-03-19 09:14:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:14:43 -参数 : [userArea]
2019-03-19 09:14:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:14:43 -<==      Total: 2
2019-03-19 09:14:43 -==> Parameters: userArea(String)
2019-03-19 09:14:43 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-19 09:14:43 -HTTP METHOD : GET
2019-03-19 09:14:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:14:43 -参数 : [userOrg]
2019-03-19 09:14:43 -耗时 : 6
2019-03-19 09:14:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:14:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:14:43 -<==      Total: 0
2019-03-19 09:14:43 -==> Parameters: userOrg(String)
2019-03-19 09:14:43 -耗时 : 5
2019-03-19 09:14:43 -返回值 : []
2019-03-19 09:14:43 -<==      Total: 0
2019-03-19 09:14:43 -耗时 : 4
2019-03-19 09:14:43 -返回值 : []
2019-03-19 09:20:08 -Starting BootdoApplication on ZJZL-20180906VX with PID 13484 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-19 09:20:08 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-19 09:20:08 -The following profiles are active: dev
2019-03-19 09:20:08 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75d0911a: startup date [Tue Mar 19 09:20:08 CST 2019]; root of context hierarchy
2019-03-19 09:20:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-19 09:20:14 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$82c1065] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:20:14 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$fa853f0c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:20:15 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:20:16 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:20:16 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:20:16 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-19 09:20:16 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-19 09:20:16 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:20:16 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:20:16 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:20:16 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 09:20:17 -Tomcat initialized with port(s): 8081 (http)
2019-03-19 09:20:17 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-19 09:20:17 -Starting service [Tomcat]
2019-03-19 09:20:17 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-19 09:20:17 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-19 09:20:18 -Initializing Spring embedded WebApplicationContext
2019-03-19 09:20:18 -Root WebApplicationContext: initialization completed in 9241 ms
2019-03-19 09:20:18 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-19 09:20:18 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-19 09:20:18 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-19 09:20:18 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-19 09:20:18 -Filter xssFilter was not registered (disabled)
2019-03-19 09:20:18 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-19 09:20:18 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-19 09:20:18 -Servlet statViewServlet mapped to [/druid/*]
2019-03-19 09:20:18 -Servlet dispatcherServlet mapped to [/]
2019-03-19 09:20:21 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75d0911a: startup date [Tue Mar 19 09:20:08 CST 2019]; root of context hierarchy
2019-03-19 09:20:22 -Using default implementation for ThreadExecutor
2019-03-19 09:20:22 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-19 09:20:22 -Quartz Scheduler v.2.2.1 created.
2019-03-19 09:20:22 -RAMJobStore initialized.
2019-03-19 09:20:22 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-19 09:20:22 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-19 09:20:22 -Quartz scheduler version: 2.2.1
2019-03-19 09:20:22 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@52035328
2019-03-19 09:20:22 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-19 09:20:22 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-19 09:20:25 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 09:20:25 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-19 09:20:25 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-19 09:20:25 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-19 09:20:25 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-19 09:20:25 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-19 09:20:25 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-19 09:20:25 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-19 09:20:25 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-19 09:20:25 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-19 09:20:25 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-19 09:20:25 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-19 09:20:25 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-19 09:20:25 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-19 09:20:25 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-19 09:20:25 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-19 09:20:25 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-19 09:20:25 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-19 09:20:25 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-19 09:20:25 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-19 09:20:25 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-19 09:20:25 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-19 09:20:25 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 09:20:25 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-19 09:20:25 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 09:20:25 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-19 09:20:25 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-19 09:20:25 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-19 09:20:25 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-19 09:20:25 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-19 09:20:25 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-19 09:20:25 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-19 09:20:25 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-19 09:20:25 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-19 09:20:25 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-19 09:20:25 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 09:20:25 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 09:20:25 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-19 09:20:25 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-19 09:20:25 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-19 09:20:25 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-19 09:20:25 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-19 09:20:25 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 09:20:25 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-19 09:20:25 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 09:20:25 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-19 09:20:25 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-19 09:20:25 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-19 09:20:25 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-19 09:20:25 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 09:20:25 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 09:20:25 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-19 09:20:25 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 09:20:25 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-19 09:20:25 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-19 09:20:25 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-19 09:20:25 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-19 09:20:25 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-19 09:20:25 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-19 09:20:25 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 09:20:25 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-19 09:20:25 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 09:20:25 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-19 09:20:25 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-19 09:20:25 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-19 09:20:25 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 09:20:25 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 09:20:25 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-19 09:20:25 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-19 09:20:25 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-19 09:20:25 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 09:20:25 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-19 09:20:25 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-19 09:20:25 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-19 09:20:25 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-19 09:20:25 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 09:20:25 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 09:20:25 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-19 09:20:25 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-19 09:20:25 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-19 09:20:25 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 09:20:25 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 09:20:25 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-19 09:20:25 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-19 09:20:25 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-19 09:20:25 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 09:20:25 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 09:20:25 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-19 09:20:25 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-19 09:20:25 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-19 09:20:25 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-19 09:20:25 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-19 09:20:25 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-19 09:20:25 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-19 09:20:25 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-19 09:20:25 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-19 09:20:25 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-19 09:20:25 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-19 09:20:25 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-19 09:20:25 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-19 09:20:25 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-19 09:20:25 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-19 09:20:25 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-19 09:20:25 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-19 09:20:25 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-19 09:20:25 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-19 09:20:25 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-19 09:20:25 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-19 09:20:25 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-19 09:20:25 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 09:20:25 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 09:20:25 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-19 09:20:25 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-19 09:20:25 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-19 09:20:25 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-19 09:20:25 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-19 09:20:25 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-19 09:20:25 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-19 09:20:25 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-19 09:20:25 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-19 09:20:25 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-19 09:20:25 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-19 09:20:25 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-19 09:20:25 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-19 09:20:25 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-19 09:20:25 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-19 09:20:25 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-19 09:20:25 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-19 09:20:25 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-19 09:20:25 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-19 09:20:25 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 09:20:25 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 09:20:25 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 09:20:25 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-19 09:20:25 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-19 09:20:25 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-19 09:20:25 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-19 09:20:25 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-19 09:20:25 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 09:20:25 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-19 09:20:25 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 09:20:25 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-19 09:20:25 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-19 09:20:25 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-19 09:20:25 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-19 09:20:25 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 09:20:25 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 09:20:25 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-19 09:20:25 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 09:20:25 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-19 09:20:25 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 09:20:25 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 09:20:25 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-19 09:20:25 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-19 09:20:25 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-19 09:20:26 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-19 09:20:26 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-19 09:20:26 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-19 09:20:26 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 09:20:27 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75d0911a: startup date [Tue Mar 19 09:20:08 CST 2019]; root of context hierarchy
2019-03-19 09:20:27 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 09:20:27 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 09:20:27 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 09:20:27 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-19 09:20:27 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-19 09:20:30 -Registering beans for JMX exposure on startup
2019-03-19 09:20:30 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-19 09:20:30 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-19 09:20:30 -Starting beans in phase 2147483647
2019-03-19 09:20:30 -Context refreshed
2019-03-19 09:20:30 -Found 1 custom documentation plugin(s)
2019-03-19 09:20:30 -Scanning for api listing references
2019-03-19 09:20:30 -Generating unique operation named: removeUsingPOST_1
2019-03-19 09:20:30 -Generating unique operation named: addUsingGET_1
2019-03-19 09:20:30 -Generating unique operation named: editUsingGET_1
2019-03-19 09:20:31 -Generating unique operation named: listUsingGET_1
2019-03-19 09:20:31 -Generating unique operation named: removeUsingPOST_2
2019-03-19 09:20:31 -Generating unique operation named: removeUsingPOST_3
2019-03-19 09:20:31 -Generating unique operation named: saveUsingPOST_1
2019-03-19 09:20:31 -Generating unique operation named: updateUsingGET_1
2019-03-19 09:20:31 -Generating unique operation named: updateUsingHEAD_1
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPOST_1
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPUT_1
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPATCH_1
2019-03-19 09:20:31 -Generating unique operation named: updateUsingDELETE_1
2019-03-19 09:20:31 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-19 09:20:31 -Generating unique operation named: updateUsingTRACE_1
2019-03-19 09:20:31 -Generating unique operation named: addUsingGET_2
2019-03-19 09:20:31 -Generating unique operation named: editUsingGET_2
2019-03-19 09:20:31 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-19 09:20:31 -Generating unique operation named: listUsingGET_2
2019-03-19 09:20:31 -Generating unique operation named: removeUsingPOST_4
2019-03-19 09:20:31 -Generating unique operation named: removeUsingPOST_5
2019-03-19 09:20:31 -Generating unique operation named: saveUsingPOST_2
2019-03-19 09:20:31 -Generating unique operation named: updateUsingGET_2
2019-03-19 09:20:31 -Generating unique operation named: updateUsingHEAD_2
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPOST_2
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPUT_2
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPATCH_2
2019-03-19 09:20:31 -Generating unique operation named: updateUsingDELETE_2
2019-03-19 09:20:31 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-19 09:20:31 -Generating unique operation named: updateUsingTRACE_2
2019-03-19 09:20:31 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-19 09:20:31 -Generating unique operation named: addUsingGET_3
2019-03-19 09:20:31 -Generating unique operation named: editUsingGET_3
2019-03-19 09:20:31 -Generating unique operation named: listUsingGET_3
2019-03-19 09:20:31 -Generating unique operation named: removeUsingPOST_6
2019-03-19 09:20:31 -Generating unique operation named: removeUsingPOST_7
2019-03-19 09:20:31 -Generating unique operation named: saveUsingPOST_3
2019-03-19 09:20:31 -Generating unique operation named: updateUsingGET_3
2019-03-19 09:20:31 -Generating unique operation named: updateUsingHEAD_3
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPOST_3
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPUT_3
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPATCH_3
2019-03-19 09:20:31 -Generating unique operation named: updateUsingDELETE_3
2019-03-19 09:20:31 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-19 09:20:31 -Generating unique operation named: updateUsingTRACE_3
2019-03-19 09:20:31 -Generating unique operation named: addUsingGET_4
2019-03-19 09:20:31 -Generating unique operation named: editUsingGET_4
2019-03-19 09:20:31 -Generating unique operation named: listUsingGET_4
2019-03-19 09:20:31 -Generating unique operation named: removeUsingPOST_8
2019-03-19 09:20:31 -Generating unique operation named: removeUsingPOST_9
2019-03-19 09:20:31 -Generating unique operation named: saveUsingPOST_4
2019-03-19 09:20:31 -Generating unique operation named: updateUsingGET_4
2019-03-19 09:20:31 -Generating unique operation named: updateUsingHEAD_4
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPOST_4
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPUT_4
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPATCH_4
2019-03-19 09:20:31 -Generating unique operation named: updateUsingDELETE_4
2019-03-19 09:20:31 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-19 09:20:31 -Generating unique operation named: updateUsingTRACE_4
2019-03-19 09:20:31 -Generating unique operation named: ElecUsingGET_1
2019-03-19 09:20:31 -Generating unique operation named: addUsingGET_5
2019-03-19 09:20:31 -Generating unique operation named: editUsingGET_5
2019-03-19 09:20:31 -Generating unique operation named: listUsingGET_5
2019-03-19 09:20:31 -Generating unique operation named: removeUsingPOST_10
2019-03-19 09:20:31 -Generating unique operation named: removeUsingPOST_11
2019-03-19 09:20:31 -Generating unique operation named: saveUsingPOST_5
2019-03-19 09:20:31 -Generating unique operation named: updateUsingGET_5
2019-03-19 09:20:31 -Generating unique operation named: updateUsingHEAD_5
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPOST_5
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPUT_5
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPATCH_5
2019-03-19 09:20:31 -Generating unique operation named: updateUsingDELETE_5
2019-03-19 09:20:31 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-19 09:20:31 -Generating unique operation named: updateUsingTRACE_5
2019-03-19 09:20:31 -Generating unique operation named: editUsingGET_6
2019-03-19 09:20:31 -Generating unique operation named: listUsingGET_6
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPOST_6
2019-03-19 09:20:31 -Generating unique operation named: addUsingGET_6
2019-03-19 09:20:31 -Generating unique operation named: editUsingGET_7
2019-03-19 09:20:31 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-19 09:20:31 -Generating unique operation named: listUsingGET_7
2019-03-19 09:20:31 -Generating unique operation named: removeUsingPOST_12
2019-03-19 09:20:31 -Generating unique operation named: removeUsingPOST_13
2019-03-19 09:20:31 -Generating unique operation named: saveUsingPOST_6
2019-03-19 09:20:31 -Generating unique operation named: updateUsingGET_6
2019-03-19 09:20:31 -Generating unique operation named: updateUsingHEAD_6
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPOST_7
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPUT_6
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPATCH_6
2019-03-19 09:20:31 -Generating unique operation named: updateUsingDELETE_6
2019-03-19 09:20:31 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-19 09:20:31 -Generating unique operation named: updateUsingTRACE_6
2019-03-19 09:20:31 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-19 09:20:31 -Generating unique operation named: addUsingGET_7
2019-03-19 09:20:31 -Generating unique operation named: editUsingGET_8
2019-03-19 09:20:31 -Generating unique operation named: listUsingGET_8
2019-03-19 09:20:31 -Generating unique operation named: removeUsingPOST_14
2019-03-19 09:20:31 -Generating unique operation named: removeUsingPOST_15
2019-03-19 09:20:31 -Generating unique operation named: saveUsingPOST_7
2019-03-19 09:20:31 -Generating unique operation named: updateUsingGET_7
2019-03-19 09:20:31 -Generating unique operation named: updateUsingHEAD_7
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPOST_8
2019-03-19 09:20:31 -Generating unique operation named: updateUsingPUT_7
2019-03-19 09:20:32 -Generating unique operation named: updateUsingPATCH_7
2019-03-19 09:20:32 -Generating unique operation named: updateUsingDELETE_7
2019-03-19 09:20:32 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-19 09:20:32 -Generating unique operation named: updateUsingTRACE_7
2019-03-19 09:20:32 -Generating unique operation named: addUsingGET_8
2019-03-19 09:20:32 -Generating unique operation named: editUsingGET_9
2019-03-19 09:20:32 -Generating unique operation named: listUsingGET_9
2019-03-19 09:20:32 -Generating unique operation named: removeUsingPOST_16
2019-03-19 09:20:32 -Generating unique operation named: removeUsingPOST_17
2019-03-19 09:20:32 -Generating unique operation named: saveUsingPOST_8
2019-03-19 09:20:32 -Generating unique operation named: updateUsingGET_8
2019-03-19 09:20:32 -Generating unique operation named: updateUsingHEAD_8
2019-03-19 09:20:32 -Generating unique operation named: updateUsingPOST_9
2019-03-19 09:20:32 -Generating unique operation named: updateUsingPUT_8
2019-03-19 09:20:32 -Generating unique operation named: updateUsingPATCH_8
2019-03-19 09:20:32 -Generating unique operation named: updateUsingDELETE_8
2019-03-19 09:20:32 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-19 09:20:32 -Generating unique operation named: updateUsingTRACE_8
2019-03-19 09:20:32 -Generating unique operation named: addUsingGET_9
2019-03-19 09:20:32 -Generating unique operation named: editUsingGET_10
2019-03-19 09:20:32 -Generating unique operation named: infoUsingGET_1
2019-03-19 09:20:32 -Generating unique operation named: infoUsingHEAD_1
2019-03-19 09:20:32 -Generating unique operation named: infoUsingPOST_1
2019-03-19 09:20:32 -Generating unique operation named: infoUsingPUT_1
2019-03-19 09:20:32 -Generating unique operation named: infoUsingPATCH_1
2019-03-19 09:20:32 -Generating unique operation named: infoUsingDELETE_1
2019-03-19 09:20:32 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-19 09:20:32 -Generating unique operation named: infoUsingTRACE_1
2019-03-19 09:20:32 -Generating unique operation named: listUsingGET_10
2019-03-19 09:20:32 -Generating unique operation named: removeUsingPOST_18
2019-03-19 09:20:32 -Generating unique operation named: removeUsingPOST_19
2019-03-19 09:20:32 -Generating unique operation named: saveUsingPOST_9
2019-03-19 09:20:32 -Generating unique operation named: updateUsingPOST_10
2019-03-19 09:20:32 -Generating unique operation named: listUsingGET_11
2019-03-19 09:20:32 -Generating unique operation named: removeUsingPOST_20
2019-03-19 09:20:32 -Generating unique operation named: welcomeUsingGET_1
2019-03-19 09:20:32 -Generating unique operation named: addUsingGET_10
2019-03-19 09:20:32 -Generating unique operation named: editUsingGET_11
2019-03-19 09:20:32 -Generating unique operation named: listUsingGET_12
2019-03-19 09:20:32 -Generating unique operation named: removeUsingPOST_21
2019-03-19 09:20:32 -Generating unique operation named: saveUsingPOST_10
2019-03-19 09:20:32 -Generating unique operation named: treeUsingGET_1
2019-03-19 09:20:32 -Generating unique operation named: treeUsingGET_2
2019-03-19 09:20:32 -Generating unique operation named: updateUsingPOST_11
2019-03-19 09:20:32 -Generating unique operation named: addUsingGET_11
2019-03-19 09:20:32 -Generating unique operation named: editUsingGET_12
2019-03-19 09:20:32 -Generating unique operation named: listUsingGET_13
2019-03-19 09:20:32 -Generating unique operation named: removeUsingPOST_22
2019-03-19 09:20:32 -Generating unique operation named: removeUsingPOST_23
2019-03-19 09:20:32 -Generating unique operation named: saveUsingPOST_11
2019-03-19 09:20:32 -Generating unique operation named: updateUsingGET_9
2019-03-19 09:20:32 -Generating unique operation named: updateUsingHEAD_9
2019-03-19 09:20:32 -Generating unique operation named: updateUsingPOST_12
2019-03-19 09:20:32 -Generating unique operation named: updateUsingPUT_9
2019-03-19 09:20:32 -Generating unique operation named: updateUsingPATCH_9
2019-03-19 09:20:32 -Generating unique operation named: updateUsingDELETE_9
2019-03-19 09:20:32 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-19 09:20:32 -Generating unique operation named: updateUsingTRACE_9
2019-03-19 09:20:32 -Generating unique operation named: addUsingGET_12
2019-03-19 09:20:32 -Generating unique operation named: editUsingGET_13
2019-03-19 09:20:32 -Generating unique operation named: listUsingGET_14
2019-03-19 09:20:32 -Generating unique operation named: removeUsingPOST_24
2019-03-19 09:20:32 -Generating unique operation named: removeUsingPOST_25
2019-03-19 09:20:32 -Generating unique operation named: saveUsingPOST_12
2019-03-19 09:20:32 -Generating unique operation named: updateUsingGET_10
2019-03-19 09:20:32 -Generating unique operation named: updateUsingHEAD_10
2019-03-19 09:20:32 -Generating unique operation named: updateUsingPOST_13
2019-03-19 09:20:32 -Generating unique operation named: updateUsingPUT_10
2019-03-19 09:20:32 -Generating unique operation named: updateUsingPATCH_10
2019-03-19 09:20:32 -Generating unique operation named: updateUsingDELETE_10
2019-03-19 09:20:32 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-19 09:20:32 -Generating unique operation named: updateUsingTRACE_10
2019-03-19 09:20:32 -Generating unique operation named: addUsingGET_13
2019-03-19 09:20:32 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-19 09:20:32 -Generating unique operation named: editUsingGET_14
2019-03-19 09:20:32 -Generating unique operation named: listUsingGET_15
2019-03-19 09:20:32 -Generating unique operation named: saveUsingPOST_13
2019-03-19 09:20:32 -Generating unique operation named: saveUsingPOST_14
2019-03-19 09:20:32 -Generating unique operation named: updateUsingPOST_14
2019-03-19 09:20:32 -Generating unique operation named: listUsingGET_16
2019-03-19 09:20:32 -Generating unique operation named: listUsingHEAD_1
2019-03-19 09:20:32 -Generating unique operation named: listUsingPOST_1
2019-03-19 09:20:32 -Generating unique operation named: listUsingPUT_1
2019-03-19 09:20:32 -Generating unique operation named: listUsingPATCH_1
2019-03-19 09:20:32 -Generating unique operation named: listUsingDELETE_1
2019-03-19 09:20:32 -Generating unique operation named: listUsingOPTIONS_1
2019-03-19 09:20:32 -Generating unique operation named: listUsingTRACE_1
2019-03-19 09:20:32 -Generating unique operation named: addUsingGET_14
2019-03-19 09:20:32 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-19 09:20:32 -Generating unique operation named: editUsingGET_15
2019-03-19 09:20:32 -Generating unique operation named: listUsingGET_17
2019-03-19 09:20:32 -Generating unique operation named: removeUsingPOST_26
2019-03-19 09:20:32 -Generating unique operation named: saveUsingPOST_15
2019-03-19 09:20:32 -Generating unique operation named: treeUsingGET_3
2019-03-19 09:20:32 -Generating unique operation named: treeViewUsingGET_1
2019-03-19 09:20:32 -Generating unique operation named: updateUsingPOST_15
2019-03-19 09:20:33 -Generating unique operation named: addUsingGET_15
2019-03-19 09:20:33 -Generating unique operation named: editUsingGET_16
2019-03-19 09:20:33 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-19 09:20:33 -Generating unique operation named: listUsingGET_18
2019-03-19 09:20:33 -Generating unique operation named: removeUsingPOST_27
2019-03-19 09:20:33 -Generating unique operation named: removeUsingPOST_28
2019-03-19 09:20:33 -Generating unique operation named: saveUsingPOST_16
2019-03-19 09:20:33 -Generating unique operation named: updateUsingGET_11
2019-03-19 09:20:33 -Generating unique operation named: updateUsingHEAD_11
2019-03-19 09:20:33 -Generating unique operation named: updateUsingPOST_16
2019-03-19 09:20:33 -Generating unique operation named: updateUsingPUT_11
2019-03-19 09:20:33 -Generating unique operation named: updateUsingPATCH_11
2019-03-19 09:20:33 -Generating unique operation named: updateUsingDELETE_11
2019-03-19 09:20:33 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-19 09:20:33 -Generating unique operation named: updateUsingTRACE_11
2019-03-19 09:20:33 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-19 09:20:33 -Generating unique operation named: addUsingGET_16
2019-03-19 09:20:33 -Generating unique operation named: editUsingGET_17
2019-03-19 09:20:33 -Generating unique operation named: listUsingGET_19
2019-03-19 09:20:33 -Generating unique operation named: removeUsingPOST_29
2019-03-19 09:20:33 -Generating unique operation named: removeUsingPOST_30
2019-03-19 09:20:33 -Generating unique operation named: saveUsingPOST_17
2019-03-19 09:20:33 -Generating unique operation named: updateUsingGET_12
2019-03-19 09:20:33 -Generating unique operation named: updateUsingHEAD_12
2019-03-19 09:20:33 -Generating unique operation named: updateUsingPOST_17
2019-03-19 09:20:33 -Generating unique operation named: updateUsingPUT_12
2019-03-19 09:20:33 -Generating unique operation named: updateUsingPATCH_12
2019-03-19 09:20:33 -Generating unique operation named: updateUsingDELETE_12
2019-03-19 09:20:33 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-19 09:20:33 -Generating unique operation named: updateUsingTRACE_12
2019-03-19 09:20:33 -Generating unique operation named: addUsingGET_17
2019-03-19 09:20:33 -Generating unique operation named: editUsingGET_18
2019-03-19 09:20:33 -Generating unique operation named: listUsingGET_20
2019-03-19 09:20:33 -Generating unique operation named: removeUsingPOST_31
2019-03-19 09:20:33 -Generating unique operation named: removeUsingPOST_32
2019-03-19 09:20:33 -Generating unique operation named: saveUsingPOST_18
2019-03-19 09:20:33 -Generating unique operation named: updateUsingGET_13
2019-03-19 09:20:33 -Generating unique operation named: updateUsingHEAD_13
2019-03-19 09:20:33 -Generating unique operation named: updateUsingPOST_18
2019-03-19 09:20:33 -Generating unique operation named: updateUsingPUT_13
2019-03-19 09:20:33 -Generating unique operation named: updateUsingPATCH_13
2019-03-19 09:20:33 -Generating unique operation named: updateUsingDELETE_13
2019-03-19 09:20:33 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-19 09:20:33 -Generating unique operation named: updateUsingTRACE_13
2019-03-19 09:20:33 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-19 09:20:33 -Starting Quartz Scheduler now
2019-03-19 09:20:33 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-19 09:20:33 -Starting...
2019-03-19 09:20:33 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 09:20:33 -Started.
2019-03-19 09:20:33 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-19 09:20:33 -Using a shared selector for servlet write/read
2019-03-19 09:20:33 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-19 09:20:33 -Started BootdoApplication in 26.815 seconds (JVM running for 28.272)
2019-03-19 09:20:33 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-19 09:20:33 -==> Parameters: 
2019-03-19 09:20:33 -<==      Total: 1
2019-03-19 09:21:26 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-19 09:21:32 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-19 09:21:32 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-19 09:21:33 -FrameworkServlet 'dispatcherServlet': initialization completed in 137 ms
2019-03-19 09:21:33 -Enabling session validation scheduler...
2019-03-19 09:21:33 -请求地址 : http://localhost:8081/
2019-03-19 09:21:33 -HTTP METHOD : GET
2019-03-19 09:21:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-19 09:21:33 -参数 : [{}]
2019-03-19 09:21:33 -耗时 : 5
2019-03-19 09:21:33 -返回值 : redirect:/index
2019-03-19 09:21:33 -请求地址 : http://localhost:8081/login;JSESSIONID=c6b2b917-dc7e-4652-a457-ad15cc5e4f4b
2019-03-19 09:21:33 -HTTP METHOD : GET
2019-03-19 09:21:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 09:21:33 -参数 : [{}]
2019-03-19 09:21:33 -耗时 : 1
2019-03-19 09:21:33 -返回值 : login
2019-03-19 09:21:35 -请求地址 : http://localhost:8081/getVerify
2019-03-19 09:21:35 -HTTP METHOD : GET
2019-03-19 09:21:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 09:21:35 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@55167160, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4ba94f4]
2019-03-19 09:21:35 -4230
2019-03-19 09:21:35 -耗时 : 542
2019-03-19 09:21:35 -返回值 : null
2019-03-19 09:21:35 -请求地址 : http://localhost:8081/login
2019-03-19 09:21:35 -HTTP METHOD : GET
2019-03-19 09:21:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 09:21:35 -参数 : [{}]
2019-03-19 09:21:35 -耗时 : 1
2019-03-19 09:21:35 -返回值 : login
2019-03-19 09:21:40 -请求地址 : http://localhost:8081/login
2019-03-19 09:21:40 -HTTP METHOD : POST
2019-03-19 09:21:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 09:21:40 -参数 : [admin, 111111, 4230, org.apache.shiro.web.servlet.ShiroHttpServletRequest@352ea1b]
2019-03-19 09:21:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 09:21:40 -==> Parameters: admin(String)
2019-03-19 09:21:40 -<==      Total: 1
2019-03-19 09:21:40 -耗时 : 141
2019-03-19 09:21:40 -返回值 : {msg=操作成功, code=0}
2019-03-19 09:21:40 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-19 09:21:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 09:21:40 -==> Parameters: 1(Long), admin(String), 登录(String), 141(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 09:21:40.972(Timestamp)
2019-03-19 09:21:41 -请求地址 : http://localhost:8081/index
2019-03-19 09:21:41 -HTTP METHOD : GET
2019-03-19 09:21:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 09:21:41 -参数 : [{}]
2019-03-19 09:21:41 -<==    Updates: 1
2019-03-19 09:21:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 09:21:41 -==> Parameters: 1(Long)
2019-03-19 09:21:41 -<==      Total: 46
2019-03-19 09:21:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 09:21:41 -==> Parameters: 138(Long)
2019-03-19 09:21:41 -<==      Total: 1
2019-03-19 09:21:41 -耗时 : 203
2019-03-19 09:21:41 -返回值 : index_v1
2019-03-19 09:21:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 09:21:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 203(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 09:21:41.374(Timestamp)
2019-03-19 09:21:41 -<==    Updates: 1
2019-03-19 09:21:41 -请求地址 : http://localhost:8081/main
2019-03-19 09:21:41 -HTTP METHOD : GET
2019-03-19 09:21:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 09:21:41 -参数 : []
2019-03-19 09:21:41 -耗时 : 1
2019-03-19 09:21:41 -返回值 : main
2019-03-19 09:21:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 09:21:42 -HTTP METHOD : GET
2019-03-19 09:21:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 09:21:42 -参数 : []
2019-03-19 09:21:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 09:21:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 09:21:42 -<==      Total: 0
2019-03-19 09:21:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 09:21:42 -==> Parameters: 1(Long), 0(String)
2019-03-19 09:21:42 -<==      Total: 1
2019-03-19 09:21:42 -耗时 : 45
2019-03-19 09:21:42 -返回值 : com.bootdo.common.utils.PageUtils@60cf9dec
2019-03-19 09:21:42 -请求地址 : http://localhost:8081/main
2019-03-19 09:21:42 -HTTP METHOD : GET
2019-03-19 09:21:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 09:21:42 -参数 : []
2019-03-19 09:21:42 -耗时 : 0
2019-03-19 09:21:42 -返回值 : main
2019-03-19 09:21:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 09:21:47 -==> Parameters: 1(Long)
2019-03-19 09:21:47 -<==      Total: 90
2019-03-19 09:21:47 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 09:21:47 -HTTP METHOD : GET
2019-03-19 09:21:47 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 09:21:47 -参数 : []
2019-03-19 09:21:47 -耗时 : 1
2019-03-19 09:21:47 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 09:21:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:21:49 -HTTP METHOD : GET
2019-03-19 09:21:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:21:49 -参数 : [userType]
2019-03-19 09:21:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:21:49 -==> Parameters: userType(String)
2019-03-19 09:21:49 -<==      Total: 2
2019-03-19 09:21:49 -耗时 : 42
2019-03-19 09:21:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:21:49 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 09:21:49 -HTTP METHOD : GET
2019-03-19 09:21:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 09:21:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 09:21:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 09:21:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:21:49 -<==      Total: 4
2019-03-19 09:21:49 -==>  Preparing: select count(*) from elec_log 
2019-03-19 09:21:49 -==> Parameters: 
2019-03-19 09:21:49 -<==      Total: 1
2019-03-19 09:21:49 -耗时 : 48
2019-03-19 09:21:49 -返回值 : com.bootdo.common.utils.PageUtils@50d2106f
2019-03-19 09:21:50 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:21:50 -HTTP METHOD : GET
2019-03-19 09:21:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:21:50 -参数 : []
2019-03-19 09:21:50 -耗时 : 0
2019-03-19 09:21:50 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:21:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:21:50 -HTTP METHOD : GET
2019-03-19 09:21:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:21:50 -参数 : [userType]
2019-03-19 09:21:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:21:50 -==> Parameters: userType(String)
2019-03-19 09:21:50 -<==      Total: 2
2019-03-19 09:21:50 -耗时 : 6
2019-03-19 09:21:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:21:50 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:21:50 -HTTP METHOD : GET
2019-03-19 09:21:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:21:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:21:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:21:50 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:21:50 -<==      Total: 3
2019-03-19 09:21:50 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:21:50 -==> Parameters: 
2019-03-19 09:21:50 -<==      Total: 1
2019-03-19 09:21:50 -耗时 : 57
2019-03-19 09:21:50 -返回值 : com.bootdo.common.utils.PageUtils@7ec0b609
2019-03-19 09:21:55 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 09:21:55 -HTTP METHOD : GET
2019-03-19 09:21:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 09:21:55 -参数 : []
2019-03-19 09:21:55 -耗时 : 0
2019-03-19 09:21:55 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 09:21:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:21:55 -HTTP METHOD : GET
2019-03-19 09:21:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:21:55 -参数 : [userType]
2019-03-19 09:21:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:21:55 -==> Parameters: userType(String)
2019-03-19 09:21:55 -<==      Total: 2
2019-03-19 09:21:55 -耗时 : 9
2019-03-19 09:21:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:21:55 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 09:21:55 -HTTP METHOD : GET
2019-03-19 09:21:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 09:21:55 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 09:21:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 09:21:55 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:21:55 -<==      Total: 3
2019-03-19 09:21:55 -==>  Preparing: select count(*) from water_log 
2019-03-19 09:21:55 -==> Parameters: 
2019-03-19 09:21:55 -<==      Total: 1
2019-03-19 09:21:55 -耗时 : 32
2019-03-19 09:21:55 -返回值 : com.bootdo.common.utils.PageUtils@9d6b606
2019-03-19 09:22:00 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 09:22:00 -HTTP METHOD : GET
2019-03-19 09:22:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 09:22:00 -参数 : []
2019-03-19 09:22:00 -耗时 : 1
2019-03-19 09:22:00 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 09:22:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:00 -HTTP METHOD : GET
2019-03-19 09:22:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:00 -参数 : [userType]
2019-03-19 09:22:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:00 -==> Parameters: userType(String)
2019-03-19 09:22:00 -<==      Total: 2
2019-03-19 09:22:00 -耗时 : 5
2019-03-19 09:22:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 09:22:00 -HTTP METHOD : GET
2019-03-19 09:22:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 09:22:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 09:22:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 09:22:00 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:00 -<==      Total: 4
2019-03-19 09:22:00 -==>  Preparing: select count(*) from elec_log 
2019-03-19 09:22:00 -==> Parameters: 
2019-03-19 09:22:00 -<==      Total: 1
2019-03-19 09:22:00 -耗时 : 12
2019-03-19 09:22:00 -返回值 : com.bootdo.common.utils.PageUtils@134b0aaa
2019-03-19 09:22:01 -请求地址 : http://localhost:8081/moneyLog/elecLog/edit/1
2019-03-19 09:22:01 -HTTP METHOD : GET
2019-03-19 09:22:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.edit
2019-03-19 09:22:01 -参数 : [1, {}]
2019-03-19 09:22:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log where id = ? 
2019-03-19 09:22:01 -==> Parameters: 1(Long)
2019-03-19 09:22:01 -<==      Total: 1
2019-03-19 09:22:01 -耗时 : 8
2019-03-19 09:22:01 -返回值 : moneyLog/elecLog/edit
2019-03-19 09:22:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:02 -HTTP METHOD : GET
2019-03-19 09:22:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:02 -参数 : [userType]
2019-03-19 09:22:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:02 -==> Parameters: userType(String)
2019-03-19 09:22:02 -请求地址 : http://localhost:8081/common/dict/list/userOrg
2019-03-19 09:22:02 -HTTP METHOD : GET
2019-03-19 09:22:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:02 -参数 : [userOrg]
2019-03-19 09:22:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:02 -<==      Total: 2
2019-03-19 09:22:02 -耗时 : 4
2019-03-19 09:22:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:02 -==> Parameters: userOrg(String)
2019-03-19 09:22:02 -<==      Total: 0
2019-03-19 09:22:02 -耗时 : 12
2019-03-19 09:22:02 -返回值 : []
2019-03-19 09:22:41 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:22:41 -HTTP METHOD : GET
2019-03-19 09:22:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:22:41 -参数 : []
2019-03-19 09:22:41 -耗时 : 1
2019-03-19 09:22:41 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:22:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:41 -HTTP METHOD : GET
2019-03-19 09:22:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:41 -参数 : [userType]
2019-03-19 09:22:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:41 -==> Parameters: userType(String)
2019-03-19 09:22:41 -<==      Total: 2
2019-03-19 09:22:41 -耗时 : 5
2019-03-19 09:22:41 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:41 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:22:41 -HTTP METHOD : GET
2019-03-19 09:22:41 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:22:41 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:22:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:22:41 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:41 -<==      Total: 3
2019-03-19 09:22:41 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:22:41 -==> Parameters: 
2019-03-19 09:22:41 -<==      Total: 1
2019-03-19 09:22:41 -耗时 : 21
2019-03-19 09:22:41 -返回值 : com.bootdo.common.utils.PageUtils@6854b367
2019-03-19 09:22:42 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 09:22:42 -HTTP METHOD : GET
2019-03-19 09:22:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 09:22:42 -参数 : []
2019-03-19 09:22:42 -耗时 : 0
2019-03-19 09:22:42 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 09:22:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:42 -HTTP METHOD : GET
2019-03-19 09:22:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:42 -参数 : [userType]
2019-03-19 09:22:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:42 -==> Parameters: userType(String)
2019-03-19 09:22:42 -<==      Total: 2
2019-03-19 09:22:42 -耗时 : 4
2019-03-19 09:22:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:42 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 09:22:42 -HTTP METHOD : GET
2019-03-19 09:22:42 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 09:22:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 09:22:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 09:22:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:42 -<==      Total: 4
2019-03-19 09:22:42 -==>  Preparing: select count(*) from elec_log 
2019-03-19 09:22:42 -==> Parameters: 
2019-03-19 09:22:42 -<==      Total: 1
2019-03-19 09:22:42 -耗时 : 79
2019-03-19 09:22:42 -返回值 : com.bootdo.common.utils.PageUtils@7bdd0425
2019-03-19 09:22:43 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:22:43 -HTTP METHOD : GET
2019-03-19 09:22:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:22:43 -参数 : []
2019-03-19 09:22:43 -耗时 : 0
2019-03-19 09:22:43 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:22:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:43 -HTTP METHOD : GET
2019-03-19 09:22:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:43 -参数 : [userType]
2019-03-19 09:22:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:43 -==> Parameters: userType(String)
2019-03-19 09:22:43 -<==      Total: 2
2019-03-19 09:22:43 -耗时 : 8
2019-03-19 09:22:43 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:43 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:22:43 -HTTP METHOD : GET
2019-03-19 09:22:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:22:43 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:22:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:22:43 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:43 -<==      Total: 3
2019-03-19 09:22:43 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:22:43 -==> Parameters: 
2019-03-19 09:22:43 -<==      Total: 1
2019-03-19 09:22:43 -耗时 : 8
2019-03-19 09:22:43 -返回值 : com.bootdo.common.utils.PageUtils@3c25e914
2019-03-19 09:22:44 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 09:22:44 -HTTP METHOD : GET
2019-03-19 09:22:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 09:22:44 -参数 : []
2019-03-19 09:22:44 -耗时 : 0
2019-03-19 09:22:44 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 09:22:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:44 -HTTP METHOD : GET
2019-03-19 09:22:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:44 -参数 : [userType]
2019-03-19 09:22:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:44 -==> Parameters: userType(String)
2019-03-19 09:22:44 -<==      Total: 2
2019-03-19 09:22:44 -耗时 : 4
2019-03-19 09:22:44 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:44 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 09:22:44 -HTTP METHOD : GET
2019-03-19 09:22:44 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 09:22:44 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 09:22:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 09:22:44 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:44 -<==      Total: 3
2019-03-19 09:22:44 -==>  Preparing: select count(*) from water_log 
2019-03-19 09:22:44 -==> Parameters: 
2019-03-19 09:22:44 -<==      Total: 1
2019-03-19 09:22:44 -耗时 : 9
2019-03-19 09:22:44 -返回值 : com.bootdo.common.utils.PageUtils@12edd86
2019-03-19 09:22:45 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:22:45 -HTTP METHOD : GET
2019-03-19 09:22:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:22:45 -参数 : []
2019-03-19 09:22:45 -耗时 : 1
2019-03-19 09:22:45 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:22:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:45 -HTTP METHOD : GET
2019-03-19 09:22:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:45 -参数 : [userType]
2019-03-19 09:22:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:45 -==> Parameters: userType(String)
2019-03-19 09:22:45 -<==      Total: 2
2019-03-19 09:22:45 -耗时 : 4
2019-03-19 09:22:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:45 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:22:45 -HTTP METHOD : GET
2019-03-19 09:22:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:22:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:22:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:22:45 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:45 -<==      Total: 3
2019-03-19 09:22:45 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:22:45 -==> Parameters: 
2019-03-19 09:22:45 -<==      Total: 1
2019-03-19 09:22:45 -耗时 : 8
2019-03-19 09:22:45 -返回值 : com.bootdo.common.utils.PageUtils@774d88b5
2019-03-19 09:22:45 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 09:22:45 -HTTP METHOD : GET
2019-03-19 09:22:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 09:22:45 -参数 : []
2019-03-19 09:22:45 -耗时 : 0
2019-03-19 09:22:45 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 09:22:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:45 -HTTP METHOD : GET
2019-03-19 09:22:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:45 -参数 : [userType]
2019-03-19 09:22:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:45 -==> Parameters: userType(String)
2019-03-19 09:22:45 -<==      Total: 2
2019-03-19 09:22:45 -耗时 : 4
2019-03-19 09:22:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:45 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 09:22:45 -HTTP METHOD : GET
2019-03-19 09:22:45 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 09:22:45 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 09:22:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 09:22:45 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:45 -<==      Total: 4
2019-03-19 09:22:45 -==>  Preparing: select count(*) from elec_log 
2019-03-19 09:22:45 -==> Parameters: 
2019-03-19 09:22:45 -<==      Total: 1
2019-03-19 09:22:45 -耗时 : 14
2019-03-19 09:22:45 -返回值 : com.bootdo.common.utils.PageUtils@58d175a
2019-03-19 09:22:49 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 09:22:49 -HTTP METHOD : GET
2019-03-19 09:22:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 09:22:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19}]
2019-03-19 09:22:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE `elec_date` >= ? and `elec_date` <= ? order by id asc limit ?, ? 
2019-03-19 09:22:49 -==> Parameters: 2019-03-19 00:00:00(String), 2019-03-19 23:59:59(String), 0(Integer), 10(Integer)
2019-03-19 09:22:49 -<==      Total: 3
2019-03-19 09:22:49 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-19 09:22:49 -==> Parameters: 2019-03-19(String)
2019-03-19 09:22:49 -<==      Total: 1
2019-03-19 09:22:49 -耗时 : 12
2019-03-19 09:22:49 -返回值 : com.bootdo.common.utils.PageUtils@1aa2a63a
2019-03-19 09:22:52 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:22:52 -HTTP METHOD : GET
2019-03-19 09:22:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:22:52 -参数 : []
2019-03-19 09:22:52 -耗时 : 0
2019-03-19 09:22:52 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:22:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:52 -HTTP METHOD : GET
2019-03-19 09:22:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:52 -参数 : [userType]
2019-03-19 09:22:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:52 -==> Parameters: userType(String)
2019-03-19 09:22:52 -<==      Total: 2
2019-03-19 09:22:52 -耗时 : 5
2019-03-19 09:22:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:52 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:22:52 -HTTP METHOD : GET
2019-03-19 09:22:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:22:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:22:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:22:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:52 -<==      Total: 3
2019-03-19 09:22:52 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:22:52 -==> Parameters: 
2019-03-19 09:22:52 -<==      Total: 1
2019-03-19 09:22:52 -耗时 : 6
2019-03-19 09:22:52 -返回值 : com.bootdo.common.utils.PageUtils@64f0026e
2019-03-19 09:22:52 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 09:22:52 -HTTP METHOD : GET
2019-03-19 09:22:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 09:22:52 -参数 : []
2019-03-19 09:22:52 -耗时 : 1
2019-03-19 09:22:52 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 09:22:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:52 -HTTP METHOD : GET
2019-03-19 09:22:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:52 -参数 : [userType]
2019-03-19 09:22:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:52 -==> Parameters: userType(String)
2019-03-19 09:22:52 -<==      Total: 2
2019-03-19 09:22:52 -耗时 : 5
2019-03-19 09:22:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:52 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 09:22:52 -HTTP METHOD : GET
2019-03-19 09:22:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 09:22:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 09:22:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 09:22:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:52 -<==      Total: 4
2019-03-19 09:22:52 -==>  Preparing: select count(*) from elec_log 
2019-03-19 09:22:52 -==> Parameters: 
2019-03-19 09:22:52 -<==      Total: 1
2019-03-19 09:22:52 -耗时 : 7
2019-03-19 09:22:52 -返回值 : com.bootdo.common.utils.PageUtils@1f12bd26
2019-03-19 09:22:53 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:22:53 -HTTP METHOD : GET
2019-03-19 09:22:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:22:53 -参数 : []
2019-03-19 09:22:53 -耗时 : 0
2019-03-19 09:22:53 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:22:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:53 -HTTP METHOD : GET
2019-03-19 09:22:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:53 -参数 : [userType]
2019-03-19 09:22:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:53 -==> Parameters: userType(String)
2019-03-19 09:22:53 -<==      Total: 2
2019-03-19 09:22:53 -耗时 : 4
2019-03-19 09:22:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:53 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:22:53 -HTTP METHOD : GET
2019-03-19 09:22:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:22:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:22:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:22:53 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:53 -<==      Total: 3
2019-03-19 09:22:53 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:22:53 -==> Parameters: 
2019-03-19 09:22:53 -<==      Total: 1
2019-03-19 09:22:53 -耗时 : 12
2019-03-19 09:22:53 -返回值 : com.bootdo.common.utils.PageUtils@24d265f5
2019-03-19 09:22:53 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 09:22:53 -HTTP METHOD : GET
2019-03-19 09:22:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 09:22:53 -参数 : []
2019-03-19 09:22:53 -耗时 : 0
2019-03-19 09:22:53 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 09:22:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:54 -HTTP METHOD : GET
2019-03-19 09:22:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:54 -参数 : [userType]
2019-03-19 09:22:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:54 -==> Parameters: userType(String)
2019-03-19 09:22:54 -<==      Total: 2
2019-03-19 09:22:54 -耗时 : 3
2019-03-19 09:22:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:54 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 09:22:54 -HTTP METHOD : GET
2019-03-19 09:22:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 09:22:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 09:22:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 09:22:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:54 -<==      Total: 3
2019-03-19 09:22:54 -==>  Preparing: select count(*) from water_log 
2019-03-19 09:22:54 -==> Parameters: 
2019-03-19 09:22:54 -<==      Total: 1
2019-03-19 09:22:54 -耗时 : 9
2019-03-19 09:22:54 -返回值 : com.bootdo.common.utils.PageUtils@67ad1dbf
2019-03-19 09:22:54 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:22:54 -HTTP METHOD : GET
2019-03-19 09:22:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:22:54 -参数 : []
2019-03-19 09:22:54 -耗时 : 0
2019-03-19 09:22:54 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:22:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:54 -HTTP METHOD : GET
2019-03-19 09:22:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:54 -参数 : [userType]
2019-03-19 09:22:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:54 -==> Parameters: userType(String)
2019-03-19 09:22:54 -<==      Total: 2
2019-03-19 09:22:54 -耗时 : 4
2019-03-19 09:22:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:54 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:22:54 -HTTP METHOD : GET
2019-03-19 09:22:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:22:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:22:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:22:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:54 -<==      Total: 3
2019-03-19 09:22:54 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:22:54 -==> Parameters: 
2019-03-19 09:22:54 -<==      Total: 1
2019-03-19 09:22:54 -耗时 : 6
2019-03-19 09:22:54 -返回值 : com.bootdo.common.utils.PageUtils@3cf4bcdb
2019-03-19 09:22:55 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 09:22:55 -HTTP METHOD : GET
2019-03-19 09:22:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 09:22:55 -参数 : []
2019-03-19 09:22:55 -耗时 : 0
2019-03-19 09:22:55 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 09:22:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:55 -HTTP METHOD : GET
2019-03-19 09:22:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:55 -参数 : [userType]
2019-03-19 09:22:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:55 -==> Parameters: userType(String)
2019-03-19 09:22:55 -<==      Total: 2
2019-03-19 09:22:55 -耗时 : 4
2019-03-19 09:22:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:55 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 09:22:55 -HTTP METHOD : GET
2019-03-19 09:22:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 09:22:55 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 09:22:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 09:22:55 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:55 -<==      Total: 4
2019-03-19 09:22:55 -==>  Preparing: select count(*) from elec_log 
2019-03-19 09:22:55 -==> Parameters: 
2019-03-19 09:22:55 -<==      Total: 1
2019-03-19 09:22:55 -耗时 : 8
2019-03-19 09:22:55 -返回值 : com.bootdo.common.utils.PageUtils@29102afc
2019-03-19 09:22:56 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:22:56 -HTTP METHOD : GET
2019-03-19 09:22:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:22:56 -参数 : []
2019-03-19 09:22:56 -耗时 : 1
2019-03-19 09:22:56 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:22:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:56 -HTTP METHOD : GET
2019-03-19 09:22:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:56 -参数 : [userType]
2019-03-19 09:22:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:56 -==> Parameters: userType(String)
2019-03-19 09:22:56 -<==      Total: 2
2019-03-19 09:22:56 -耗时 : 3
2019-03-19 09:22:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:56 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:22:56 -HTTP METHOD : GET
2019-03-19 09:22:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:22:56 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:22:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:22:56 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:56 -<==      Total: 3
2019-03-19 09:22:56 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:22:56 -==> Parameters: 
2019-03-19 09:22:56 -<==      Total: 1
2019-03-19 09:22:56 -耗时 : 10
2019-03-19 09:22:56 -返回值 : com.bootdo.common.utils.PageUtils@78324b59
2019-03-19 09:22:57 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 09:22:57 -HTTP METHOD : GET
2019-03-19 09:22:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 09:22:57 -参数 : []
2019-03-19 09:22:57 -耗时 : 1
2019-03-19 09:22:57 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 09:22:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:57 -HTTP METHOD : GET
2019-03-19 09:22:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:57 -参数 : [userType]
2019-03-19 09:22:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:57 -==> Parameters: userType(String)
2019-03-19 09:22:57 -<==      Total: 2
2019-03-19 09:22:57 -耗时 : 4
2019-03-19 09:22:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:57 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 09:22:57 -HTTP METHOD : GET
2019-03-19 09:22:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 09:22:57 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 09:22:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 09:22:57 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:57 -<==      Total: 3
2019-03-19 09:22:57 -==>  Preparing: select count(*) from water_log 
2019-03-19 09:22:57 -==> Parameters: 
2019-03-19 09:22:57 -<==      Total: 1
2019-03-19 09:22:57 -耗时 : 8
2019-03-19 09:22:57 -返回值 : com.bootdo.common.utils.PageUtils@4a04624d
2019-03-19 09:22:58 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:22:58 -HTTP METHOD : GET
2019-03-19 09:22:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:22:58 -参数 : []
2019-03-19 09:22:58 -耗时 : 1
2019-03-19 09:22:58 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:22:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:58 -HTTP METHOD : GET
2019-03-19 09:22:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:58 -参数 : [userType]
2019-03-19 09:22:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:58 -==> Parameters: userType(String)
2019-03-19 09:22:58 -<==      Total: 2
2019-03-19 09:22:58 -耗时 : 14
2019-03-19 09:22:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:58 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:22:58 -HTTP METHOD : GET
2019-03-19 09:22:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:22:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:22:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:22:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:58 -<==      Total: 3
2019-03-19 09:22:58 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:22:58 -==> Parameters: 
2019-03-19 09:22:58 -<==      Total: 1
2019-03-19 09:22:58 -耗时 : 7
2019-03-19 09:22:58 -返回值 : com.bootdo.common.utils.PageUtils@cabc6b6
2019-03-19 09:22:58 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 09:22:58 -HTTP METHOD : GET
2019-03-19 09:22:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 09:22:58 -参数 : []
2019-03-19 09:22:58 -耗时 : 0
2019-03-19 09:22:58 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 09:22:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:58 -HTTP METHOD : GET
2019-03-19 09:22:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:58 -参数 : [userType]
2019-03-19 09:22:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:58 -==> Parameters: userType(String)
2019-03-19 09:22:58 -<==      Total: 2
2019-03-19 09:22:58 -耗时 : 3
2019-03-19 09:22:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:58 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 09:22:58 -HTTP METHOD : GET
2019-03-19 09:22:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 09:22:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 09:22:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 09:22:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:58 -<==      Total: 3
2019-03-19 09:22:58 -==>  Preparing: select count(*) from water_log 
2019-03-19 09:22:58 -==> Parameters: 
2019-03-19 09:22:58 -<==      Total: 1
2019-03-19 09:22:58 -耗时 : 7
2019-03-19 09:22:58 -返回值 : com.bootdo.common.utils.PageUtils@7173565c
2019-03-19 09:22:58 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:22:58 -HTTP METHOD : GET
2019-03-19 09:22:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:22:58 -参数 : []
2019-03-19 09:22:58 -耗时 : 0
2019-03-19 09:22:58 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:22:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:22:59 -HTTP METHOD : GET
2019-03-19 09:22:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:22:59 -参数 : [userType]
2019-03-19 09:22:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:22:59 -==> Parameters: userType(String)
2019-03-19 09:22:59 -<==      Total: 2
2019-03-19 09:22:59 -耗时 : 4
2019-03-19 09:22:59 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:22:59 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:22:59 -HTTP METHOD : GET
2019-03-19 09:22:59 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:22:59 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:22:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:22:59 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:22:59 -<==      Total: 3
2019-03-19 09:22:59 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:22:59 -==> Parameters: 
2019-03-19 09:22:59 -<==      Total: 1
2019-03-19 09:22:59 -耗时 : 6
2019-03-19 09:22:59 -返回值 : com.bootdo.common.utils.PageUtils@16302d22
2019-03-19 09:23:00 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 09:23:00 -HTTP METHOD : GET
2019-03-19 09:23:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 09:23:00 -参数 : []
2019-03-19 09:23:00 -耗时 : 0
2019-03-19 09:23:00 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 09:23:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:00 -HTTP METHOD : GET
2019-03-19 09:23:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:00 -参数 : [userType]
2019-03-19 09:23:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:00 -==> Parameters: userType(String)
2019-03-19 09:23:00 -<==      Total: 2
2019-03-19 09:23:00 -耗时 : 5
2019-03-19 09:23:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:00 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 09:23:00 -HTTP METHOD : GET
2019-03-19 09:23:00 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 09:23:00 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 09:23:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 09:23:00 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:00 -<==      Total: 4
2019-03-19 09:23:00 -==>  Preparing: select count(*) from elec_log 
2019-03-19 09:23:00 -==> Parameters: 
2019-03-19 09:23:00 -<==      Total: 1
2019-03-19 09:23:00 -耗时 : 6
2019-03-19 09:23:00 -返回值 : com.bootdo.common.utils.PageUtils@49430666
2019-03-19 09:23:01 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:23:01 -HTTP METHOD : GET
2019-03-19 09:23:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:23:01 -参数 : []
2019-03-19 09:23:01 -耗时 : 1
2019-03-19 09:23:01 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:23:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:01 -HTTP METHOD : GET
2019-03-19 09:23:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:01 -参数 : [userType]
2019-03-19 09:23:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:01 -==> Parameters: userType(String)
2019-03-19 09:23:01 -<==      Total: 2
2019-03-19 09:23:01 -耗时 : 4
2019-03-19 09:23:01 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:01 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:23:01 -HTTP METHOD : GET
2019-03-19 09:23:01 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:23:01 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:23:01 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:23:01 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:01 -<==      Total: 3
2019-03-19 09:23:01 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:23:01 -==> Parameters: 
2019-03-19 09:23:01 -<==      Total: 1
2019-03-19 09:23:01 -耗时 : 5
2019-03-19 09:23:01 -返回值 : com.bootdo.common.utils.PageUtils@15bf46bf
2019-03-19 09:23:02 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 09:23:02 -HTTP METHOD : GET
2019-03-19 09:23:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 09:23:02 -参数 : []
2019-03-19 09:23:02 -耗时 : 1
2019-03-19 09:23:02 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 09:23:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:02 -HTTP METHOD : GET
2019-03-19 09:23:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:02 -参数 : [userType]
2019-03-19 09:23:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:02 -==> Parameters: userType(String)
2019-03-19 09:23:02 -<==      Total: 2
2019-03-19 09:23:02 -耗时 : 5
2019-03-19 09:23:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:02 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 09:23:02 -HTTP METHOD : GET
2019-03-19 09:23:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 09:23:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 09:23:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 09:23:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:02 -<==      Total: 3
2019-03-19 09:23:02 -==>  Preparing: select count(*) from water_log 
2019-03-19 09:23:02 -==> Parameters: 
2019-03-19 09:23:02 -<==      Total: 1
2019-03-19 09:23:02 -耗时 : 10
2019-03-19 09:23:02 -返回值 : com.bootdo.common.utils.PageUtils@4303648b
2019-03-19 09:23:02 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:23:02 -HTTP METHOD : GET
2019-03-19 09:23:02 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:23:02 -参数 : []
2019-03-19 09:23:02 -耗时 : 1
2019-03-19 09:23:02 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:23:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:03 -HTTP METHOD : GET
2019-03-19 09:23:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:03 -参数 : [userType]
2019-03-19 09:23:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:03 -==> Parameters: userType(String)
2019-03-19 09:23:03 -<==      Total: 2
2019-03-19 09:23:03 -耗时 : 3
2019-03-19 09:23:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:03 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:23:03 -HTTP METHOD : GET
2019-03-19 09:23:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:23:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:23:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:23:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:03 -<==      Total: 3
2019-03-19 09:23:03 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:23:03 -==> Parameters: 
2019-03-19 09:23:03 -<==      Total: 1
2019-03-19 09:23:03 -耗时 : 7
2019-03-19 09:23:03 -返回值 : com.bootdo.common.utils.PageUtils@1e7a4362
2019-03-19 09:23:03 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 09:23:03 -HTTP METHOD : GET
2019-03-19 09:23:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 09:23:03 -参数 : []
2019-03-19 09:23:03 -耗时 : 3
2019-03-19 09:23:03 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 09:23:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:03 -HTTP METHOD : GET
2019-03-19 09:23:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:03 -参数 : [userType]
2019-03-19 09:23:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:03 -==> Parameters: userType(String)
2019-03-19 09:23:03 -<==      Total: 2
2019-03-19 09:23:03 -耗时 : 5
2019-03-19 09:23:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:03 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 09:23:03 -HTTP METHOD : GET
2019-03-19 09:23:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 09:23:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 09:23:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 09:23:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:03 -<==      Total: 4
2019-03-19 09:23:03 -==>  Preparing: select count(*) from elec_log 
2019-03-19 09:23:03 -==> Parameters: 
2019-03-19 09:23:03 -<==      Total: 1
2019-03-19 09:23:03 -耗时 : 6
2019-03-19 09:23:03 -返回值 : com.bootdo.common.utils.PageUtils@664a669c
2019-03-19 09:23:03 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:23:03 -HTTP METHOD : GET
2019-03-19 09:23:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:23:03 -参数 : []
2019-03-19 09:23:03 -耗时 : 1
2019-03-19 09:23:03 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:23:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:03 -HTTP METHOD : GET
2019-03-19 09:23:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:03 -参数 : [userType]
2019-03-19 09:23:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:03 -==> Parameters: userType(String)
2019-03-19 09:23:03 -<==      Total: 2
2019-03-19 09:23:03 -耗时 : 4
2019-03-19 09:23:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:03 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:23:03 -HTTP METHOD : GET
2019-03-19 09:23:03 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:23:03 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:23:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:23:03 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:03 -<==      Total: 3
2019-03-19 09:23:03 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:23:03 -==> Parameters: 
2019-03-19 09:23:03 -<==      Total: 1
2019-03-19 09:23:03 -耗时 : 8
2019-03-19 09:23:03 -返回值 : com.bootdo.common.utils.PageUtils@379d99cd
2019-03-19 09:23:04 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 09:23:04 -HTTP METHOD : GET
2019-03-19 09:23:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 09:23:04 -参数 : []
2019-03-19 09:23:04 -耗时 : 0
2019-03-19 09:23:04 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 09:23:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:04 -HTTP METHOD : GET
2019-03-19 09:23:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:04 -参数 : [userType]
2019-03-19 09:23:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:04 -==> Parameters: userType(String)
2019-03-19 09:23:04 -<==      Total: 2
2019-03-19 09:23:04 -耗时 : 4
2019-03-19 09:23:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:04 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 09:23:04 -HTTP METHOD : GET
2019-03-19 09:23:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 09:23:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 09:23:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 09:23:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:04 -<==      Total: 3
2019-03-19 09:23:04 -==>  Preparing: select count(*) from water_log 
2019-03-19 09:23:04 -==> Parameters: 
2019-03-19 09:23:04 -<==      Total: 1
2019-03-19 09:23:04 -耗时 : 9
2019-03-19 09:23:04 -返回值 : com.bootdo.common.utils.PageUtils@58e20e7e
2019-03-19 09:23:04 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:23:04 -HTTP METHOD : GET
2019-03-19 09:23:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:23:04 -参数 : []
2019-03-19 09:23:04 -耗时 : 1
2019-03-19 09:23:04 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:23:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:04 -HTTP METHOD : GET
2019-03-19 09:23:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:04 -参数 : [userType]
2019-03-19 09:23:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:04 -==> Parameters: userType(String)
2019-03-19 09:23:04 -<==      Total: 2
2019-03-19 09:23:04 -耗时 : 4
2019-03-19 09:23:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:04 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:23:04 -HTTP METHOD : GET
2019-03-19 09:23:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:23:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:23:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:23:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:04 -<==      Total: 3
2019-03-19 09:23:04 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:23:04 -==> Parameters: 
2019-03-19 09:23:04 -<==      Total: 1
2019-03-19 09:23:04 -耗时 : 7
2019-03-19 09:23:04 -返回值 : com.bootdo.common.utils.PageUtils@5590943e
2019-03-19 09:23:05 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 09:23:05 -HTTP METHOD : GET
2019-03-19 09:23:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 09:23:05 -参数 : []
2019-03-19 09:23:05 -耗时 : 0
2019-03-19 09:23:05 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 09:23:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:05 -HTTP METHOD : GET
2019-03-19 09:23:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:05 -参数 : [userType]
2019-03-19 09:23:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:05 -==> Parameters: userType(String)
2019-03-19 09:23:05 -<==      Total: 2
2019-03-19 09:23:05 -耗时 : 5
2019-03-19 09:23:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 09:23:05 -HTTP METHOD : GET
2019-03-19 09:23:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 09:23:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 09:23:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 09:23:05 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:05 -<==      Total: 4
2019-03-19 09:23:05 -==>  Preparing: select count(*) from elec_log 
2019-03-19 09:23:05 -==> Parameters: 
2019-03-19 09:23:05 -<==      Total: 1
2019-03-19 09:23:05 -耗时 : 9
2019-03-19 09:23:05 -返回值 : com.bootdo.common.utils.PageUtils@3b0f62bb
2019-03-19 09:23:05 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:23:05 -HTTP METHOD : GET
2019-03-19 09:23:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:23:05 -参数 : []
2019-03-19 09:23:05 -耗时 : 0
2019-03-19 09:23:05 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:23:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:06 -HTTP METHOD : GET
2019-03-19 09:23:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:06 -参数 : [userType]
2019-03-19 09:23:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:06 -==> Parameters: userType(String)
2019-03-19 09:23:06 -<==      Total: 2
2019-03-19 09:23:06 -耗时 : 3
2019-03-19 09:23:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:06 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:23:06 -HTTP METHOD : GET
2019-03-19 09:23:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:23:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:23:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:23:06 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:06 -<==      Total: 3
2019-03-19 09:23:06 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:23:06 -==> Parameters: 
2019-03-19 09:23:06 -<==      Total: 1
2019-03-19 09:23:06 -耗时 : 9
2019-03-19 09:23:06 -返回值 : com.bootdo.common.utils.PageUtils@21821b4d
2019-03-19 09:23:06 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 09:23:06 -HTTP METHOD : GET
2019-03-19 09:23:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 09:23:06 -参数 : []
2019-03-19 09:23:06 -耗时 : 31
2019-03-19 09:23:06 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 09:23:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:06 -HTTP METHOD : GET
2019-03-19 09:23:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:06 -参数 : [userType]
2019-03-19 09:23:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:06 -==> Parameters: userType(String)
2019-03-19 09:23:06 -<==      Total: 2
2019-03-19 09:23:06 -耗时 : 4
2019-03-19 09:23:06 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:06 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 09:23:06 -HTTP METHOD : GET
2019-03-19 09:23:06 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 09:23:06 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 09:23:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 09:23:06 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:06 -<==      Total: 3
2019-03-19 09:23:06 -==>  Preparing: select count(*) from water_log 
2019-03-19 09:23:06 -==> Parameters: 
2019-03-19 09:23:06 -<==      Total: 1
2019-03-19 09:23:06 -耗时 : 6
2019-03-19 09:23:06 -返回值 : com.bootdo.common.utils.PageUtils@5b695844
2019-03-19 09:23:07 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:23:07 -HTTP METHOD : GET
2019-03-19 09:23:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:23:07 -参数 : []
2019-03-19 09:23:07 -耗时 : 1
2019-03-19 09:23:07 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:23:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:07 -HTTP METHOD : GET
2019-03-19 09:23:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:07 -参数 : [userType]
2019-03-19 09:23:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:07 -==> Parameters: userType(String)
2019-03-19 09:23:07 -<==      Total: 2
2019-03-19 09:23:07 -耗时 : 3
2019-03-19 09:23:07 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:07 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:23:07 -HTTP METHOD : GET
2019-03-19 09:23:07 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:23:07 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:23:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:23:07 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:07 -<==      Total: 3
2019-03-19 09:23:07 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:23:07 -==> Parameters: 
2019-03-19 09:23:07 -<==      Total: 1
2019-03-19 09:23:07 -耗时 : 5
2019-03-19 09:23:07 -返回值 : com.bootdo.common.utils.PageUtils@63343e48
2019-03-19 09:23:08 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 09:23:08 -HTTP METHOD : GET
2019-03-19 09:23:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 09:23:08 -参数 : []
2019-03-19 09:23:08 -耗时 : 1
2019-03-19 09:23:08 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 09:23:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:08 -HTTP METHOD : GET
2019-03-19 09:23:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:08 -参数 : [userType]
2019-03-19 09:23:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:08 -==> Parameters: userType(String)
2019-03-19 09:23:08 -<==      Total: 2
2019-03-19 09:23:08 -耗时 : 4
2019-03-19 09:23:08 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:08 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 09:23:08 -HTTP METHOD : GET
2019-03-19 09:23:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 09:23:08 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 09:23:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 09:23:08 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:08 -<==      Total: 4
2019-03-19 09:23:08 -==>  Preparing: select count(*) from elec_log 
2019-03-19 09:23:08 -==> Parameters: 
2019-03-19 09:23:08 -<==      Total: 1
2019-03-19 09:23:08 -耗时 : 8
2019-03-19 09:23:08 -返回值 : com.bootdo.common.utils.PageUtils@25d308b0
2019-03-19 09:23:09 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:23:09 -HTTP METHOD : GET
2019-03-19 09:23:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:23:09 -参数 : []
2019-03-19 09:23:09 -耗时 : 1
2019-03-19 09:23:09 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:23:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:09 -HTTP METHOD : GET
2019-03-19 09:23:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:09 -参数 : [userType]
2019-03-19 09:23:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:09 -==> Parameters: userType(String)
2019-03-19 09:23:09 -<==      Total: 2
2019-03-19 09:23:09 -耗时 : 3
2019-03-19 09:23:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:09 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:23:09 -HTTP METHOD : GET
2019-03-19 09:23:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:23:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:23:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:23:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:09 -<==      Total: 3
2019-03-19 09:23:09 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:23:09 -==> Parameters: 
2019-03-19 09:23:09 -<==      Total: 1
2019-03-19 09:23:09 -耗时 : 6
2019-03-19 09:23:09 -返回值 : com.bootdo.common.utils.PageUtils@2a3ba238
2019-03-19 09:23:09 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 09:23:09 -HTTP METHOD : GET
2019-03-19 09:23:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 09:23:09 -参数 : []
2019-03-19 09:23:09 -耗时 : 0
2019-03-19 09:23:09 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 09:23:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:10 -HTTP METHOD : GET
2019-03-19 09:23:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:10 -参数 : [userType]
2019-03-19 09:23:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:10 -==> Parameters: userType(String)
2019-03-19 09:23:10 -<==      Total: 2
2019-03-19 09:23:10 -耗时 : 4
2019-03-19 09:23:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:10 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 09:23:10 -HTTP METHOD : GET
2019-03-19 09:23:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 09:23:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 09:23:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 09:23:10 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:10 -<==      Total: 3
2019-03-19 09:23:10 -==>  Preparing: select count(*) from water_log 
2019-03-19 09:23:10 -==> Parameters: 
2019-03-19 09:23:10 -<==      Total: 1
2019-03-19 09:23:10 -耗时 : 6
2019-03-19 09:23:10 -返回值 : com.bootdo.common.utils.PageUtils@29ddaafd
2019-03-19 09:23:10 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:23:10 -HTTP METHOD : GET
2019-03-19 09:23:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:23:10 -参数 : []
2019-03-19 09:23:10 -耗时 : 0
2019-03-19 09:23:10 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:23:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:10 -HTTP METHOD : GET
2019-03-19 09:23:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:10 -参数 : [userType]
2019-03-19 09:23:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:10 -==> Parameters: userType(String)
2019-03-19 09:23:10 -<==      Total: 2
2019-03-19 09:23:10 -耗时 : 4
2019-03-19 09:23:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:10 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:23:10 -HTTP METHOD : GET
2019-03-19 09:23:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:23:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:23:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:23:10 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:10 -<==      Total: 3
2019-03-19 09:23:10 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:23:10 -==> Parameters: 
2019-03-19 09:23:10 -<==      Total: 1
2019-03-19 09:23:10 -耗时 : 7
2019-03-19 09:23:10 -返回值 : com.bootdo.common.utils.PageUtils@886503d
2019-03-19 09:23:11 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 09:23:11 -HTTP METHOD : GET
2019-03-19 09:23:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 09:23:11 -参数 : []
2019-03-19 09:23:11 -耗时 : 1
2019-03-19 09:23:11 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 09:23:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:11 -HTTP METHOD : GET
2019-03-19 09:23:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:11 -参数 : [userType]
2019-03-19 09:23:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:11 -==> Parameters: userType(String)
2019-03-19 09:23:11 -<==      Total: 2
2019-03-19 09:23:11 -耗时 : 4
2019-03-19 09:23:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:11 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 09:23:11 -HTTP METHOD : GET
2019-03-19 09:23:11 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 09:23:11 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 09:23:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 09:23:11 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:11 -<==      Total: 4
2019-03-19 09:23:11 -==>  Preparing: select count(*) from elec_log 
2019-03-19 09:23:11 -==> Parameters: 
2019-03-19 09:23:11 -<==      Total: 1
2019-03-19 09:23:11 -耗时 : 9
2019-03-19 09:23:11 -返回值 : com.bootdo.common.utils.PageUtils@5e0e086d
2019-03-19 09:23:12 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:23:12 -HTTP METHOD : GET
2019-03-19 09:23:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:23:12 -参数 : []
2019-03-19 09:23:12 -耗时 : 1
2019-03-19 09:23:12 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:23:12 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:12 -HTTP METHOD : GET
2019-03-19 09:23:12 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:12 -参数 : [userType]
2019-03-19 09:23:12 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:12 -==> Parameters: userType(String)
2019-03-19 09:23:12 -<==      Total: 2
2019-03-19 09:23:12 -耗时 : 3
2019-03-19 09:23:12 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:12 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:23:12 -HTTP METHOD : GET
2019-03-19 09:23:12 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:23:12 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:23:12 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:23:12 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:12 -<==      Total: 3
2019-03-19 09:23:12 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:23:12 -==> Parameters: 
2019-03-19 09:23:12 -<==      Total: 1
2019-03-19 09:23:12 -耗时 : 7
2019-03-19 09:23:12 -返回值 : com.bootdo.common.utils.PageUtils@4cc08ed8
2019-03-19 09:23:13 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 09:23:13 -HTTP METHOD : GET
2019-03-19 09:23:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 09:23:13 -参数 : []
2019-03-19 09:23:13 -耗时 : 0
2019-03-19 09:23:13 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 09:23:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:13 -HTTP METHOD : GET
2019-03-19 09:23:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:13 -参数 : [userType]
2019-03-19 09:23:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:13 -==> Parameters: userType(String)
2019-03-19 09:23:13 -<==      Total: 2
2019-03-19 09:23:13 -耗时 : 3
2019-03-19 09:23:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:13 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 09:23:13 -HTTP METHOD : GET
2019-03-19 09:23:13 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 09:23:13 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 09:23:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 09:23:13 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:13 -<==      Total: 3
2019-03-19 09:23:13 -==>  Preparing: select count(*) from water_log 
2019-03-19 09:23:13 -==> Parameters: 
2019-03-19 09:23:13 -<==      Total: 1
2019-03-19 09:23:13 -耗时 : 6
2019-03-19 09:23:13 -返回值 : com.bootdo.common.utils.PageUtils@2fc32885
2019-03-19 09:23:14 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 09:23:14 -HTTP METHOD : GET
2019-03-19 09:23:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 09:23:14 -参数 : []
2019-03-19 09:23:14 -耗时 : 1
2019-03-19 09:23:14 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 09:23:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:14 -HTTP METHOD : GET
2019-03-19 09:23:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:14 -参数 : [userType]
2019-03-19 09:23:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:14 -==> Parameters: userType(String)
2019-03-19 09:23:14 -<==      Total: 2
2019-03-19 09:23:14 -耗时 : 3
2019-03-19 09:23:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:14 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 09:23:14 -HTTP METHOD : GET
2019-03-19 09:23:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 09:23:14 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 09:23:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 09:23:14 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:14 -<==      Total: 3
2019-03-19 09:23:14 -==>  Preparing: select count(*) from heat_log 
2019-03-19 09:23:14 -==> Parameters: 
2019-03-19 09:23:14 -<==      Total: 1
2019-03-19 09:23:14 -耗时 : 4
2019-03-19 09:23:14 -返回值 : com.bootdo.common.utils.PageUtils@843615d
2019-03-19 09:23:15 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 09:23:15 -HTTP METHOD : GET
2019-03-19 09:23:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 09:23:15 -参数 : []
2019-03-19 09:23:15 -耗时 : 0
2019-03-19 09:23:15 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 09:23:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 09:23:15 -HTTP METHOD : GET
2019-03-19 09:23:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 09:23:15 -参数 : [userType]
2019-03-19 09:23:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 09:23:15 -==> Parameters: userType(String)
2019-03-19 09:23:15 -<==      Total: 2
2019-03-19 09:23:15 -耗时 : 3
2019-03-19 09:23:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 09:23:15 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 09:23:15 -HTTP METHOD : GET
2019-03-19 09:23:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 09:23:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 09:23:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 09:23:15 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 09:23:15 -<==      Total: 4
2019-03-19 09:23:15 -==>  Preparing: select count(*) from elec_log 
2019-03-19 09:23:15 -==> Parameters: 
2019-03-19 09:23:15 -<==      Total: 1
2019-03-19 09:23:15 -耗时 : 5
2019-03-19 09:23:15 -返回值 : com.bootdo.common.utils.PageUtils@60088af4
2019-03-19 09:23:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 09:23:26 -HTTP METHOD : GET
2019-03-19 09:23:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 09:23:26 -参数 : []
2019-03-19 09:23:26 -耗时 : 1
2019-03-19 09:23:26 -返回值 : system/dept/deptTree
2019-03-19 09:23:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 09:23:26 -HTTP METHOD : GET
2019-03-19 09:23:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 09:23:26 -参数 : []
2019-03-19 09:23:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 09:23:26 -==> Parameters: 
2019-03-19 09:23:26 -<==      Total: 3
2019-03-19 09:23:26 -耗时 : 21
2019-03-19 09:23:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 09:51:26 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 429]
2019-03-19 10:21:26 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 862]
2019-03-19 10:21:33 -Validating all active sessions...
2019-03-19 10:21:33 -Finished session validation.  [1] sessions were stopped.
2019-03-19 10:26:57 -Starting BootdoApplication on ZJZL-20180906VX with PID 8516 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-19 10:26:57 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-19 10:26:57 -The following profiles are active: dev
2019-03-19 10:26:57 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65b3a85a: startup date [Tue Mar 19 10:26:57 CST 2019]; root of context hierarchy
2019-03-19 10:27:03 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-19 10:27:06 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f130dc28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:27:06 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e38a0acf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:27:07 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:27:08 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:27:08 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:27:08 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-19 10:27:08 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-19 10:27:08 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:27:08 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:27:08 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:27:09 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:27:10 -Tomcat initialized with port(s): 8081 (http)
2019-03-19 10:27:10 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-19 10:27:10 -Starting service [Tomcat]
2019-03-19 10:27:10 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-19 10:27:10 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-19 10:27:10 -Initializing Spring embedded WebApplicationContext
2019-03-19 10:27:10 -Root WebApplicationContext: initialization completed in 13008 ms
2019-03-19 10:27:11 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-19 10:27:11 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-19 10:27:11 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-19 10:27:11 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-19 10:27:11 -Filter xssFilter was not registered (disabled)
2019-03-19 10:27:11 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-19 10:27:11 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-19 10:27:11 -Servlet statViewServlet mapped to [/druid/*]
2019-03-19 10:27:11 -Servlet dispatcherServlet mapped to [/]
2019-03-19 10:27:15 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65b3a85a: startup date [Tue Mar 19 10:26:57 CST 2019]; root of context hierarchy
2019-03-19 10:27:16 -Using default implementation for ThreadExecutor
2019-03-19 10:27:16 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-19 10:27:16 -Quartz Scheduler v.2.2.1 created.
2019-03-19 10:27:16 -RAMJobStore initialized.
2019-03-19 10:27:16 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-19 10:27:16 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-19 10:27:16 -Quartz scheduler version: 2.2.1
2019-03-19 10:27:16 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3abadb65
2019-03-19 10:27:17 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-19 10:27:17 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-19 10:27:20 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:27:20 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-19 10:27:20 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-19 10:27:20 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-19 10:27:20 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-19 10:27:20 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-19 10:27:20 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-19 10:27:20 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-19 10:27:20 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-19 10:27:20 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-19 10:27:20 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-19 10:27:20 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:20 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-19 10:27:20 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-19 10:27:20 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-19 10:27:20 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-19 10:27:20 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:20 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-19 10:27:21 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-19 10:27:21 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-19 10:27:21 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-19 10:27:21 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-19 10:27:21 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-19 10:27:21 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-19 10:27:21 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-19 10:27:21 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 10:27:21 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 10:27:21 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-19 10:27:21 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-19 10:27:21 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-19 10:27:21 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-19 10:27:21 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-19 10:27:21 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-19 10:27:21 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-19 10:27:21 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-19 10:27:21 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-19 10:27:21 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-19 10:27:21 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-19 10:27:21 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 10:27:21 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 10:27:21 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-19 10:27:21 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-19 10:27:21 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-19 10:27:21 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-19 10:27:21 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-19 10:27:21 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:27:21 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-19 10:27:21 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:27:21 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-19 10:27:21 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-19 10:27:21 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-19 10:27:21 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-19 10:27:21 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 10:27:21 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 10:27:21 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-19 10:27:21 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-19 10:27:21 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 10:27:21 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-19 10:27:21 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-19 10:27:21 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-19 10:27:21 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-19 10:27:21 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-19 10:27:21 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-19 10:27:21 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:27:21 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-19 10:27:21 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:27:21 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-19 10:27:21 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-19 10:27:21 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 10:27:21 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 10:27:21 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-19 10:27:21 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-19 10:27:21 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 10:27:21 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-19 10:27:21 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-19 10:27:21 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-19 10:27:21 -Mapped "{[/moneyLog/elecLogLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-19 10:27:21 -Mapped "{[/moneyLog/elecLogLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/moneyLog/elecLogLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-19 10:27:21 -Mapped "{[/moneyLog/elecLogLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 10:27:21 -Mapped "{[/moneyLog/elecLogLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/moneyLog/elecLogLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 10:27:21 -Mapped "{[/moneyLog/elecLogLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-19 10:27:21 -Mapped "{[/moneyLog/elecLogLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:27:21 -Mapped "{[/moneyLog/elecLogLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-19 10:27:21 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-19 10:27:21 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 10:27:21 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 10:27:21 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-19 10:27:21 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-19 10:27:21 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-19 10:27:21 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 10:27:21 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 10:27:21 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-19 10:27:21 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-19 10:27:21 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-19 10:27:21 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-19 10:27:21 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-19 10:27:21 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-19 10:27:21 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-19 10:27:21 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-19 10:27:21 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-19 10:27:21 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-19 10:27:21 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-19 10:27:21 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-19 10:27:21 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-19 10:27:21 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-19 10:27:21 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-19 10:27:21 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-19 10:27:21 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-19 10:27:21 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-19 10:27:21 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-19 10:27:21 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-19 10:27:21 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-19 10:27:21 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 10:27:21 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 10:27:21 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-19 10:27:21 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-19 10:27:21 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-19 10:27:21 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-19 10:27:21 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-19 10:27:21 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-19 10:27:21 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-19 10:27:21 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-19 10:27:21 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-19 10:27:21 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-19 10:27:21 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-19 10:27:21 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-19 10:27:21 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-19 10:27:21 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-19 10:27:21 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-19 10:27:21 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-19 10:27:21 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-19 10:27:21 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-19 10:27:21 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 10:27:21 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 10:27:21 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 10:27:21 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-19 10:27:21 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-19 10:27:21 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-19 10:27:21 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-19 10:27:21 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-19 10:27:21 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-19 10:27:21 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-19 10:27:21 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-19 10:27:21 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:27:21 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-19 10:27:21 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:27:21 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-19 10:27:21 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-19 10:27:21 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-19 10:27:21 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 10:27:21 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 10:27:21 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-19 10:27:21 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:27:21 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:27:21 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-19 10:27:21 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 10:27:21 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-19 10:27:21 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-19 10:27:21 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-19 10:27:22 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-19 10:27:22 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-19 10:27:22 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-19 10:27:23 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 10:27:23 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@65b3a85a: startup date [Tue Mar 19 10:26:57 CST 2019]; root of context hierarchy
2019-03-19 10:27:24 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 10:27:24 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 10:27:24 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 10:27:24 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-19 10:27:24 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-19 10:27:27 -Registering beans for JMX exposure on startup
2019-03-19 10:27:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-19 10:27:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-19 10:27:27 -Starting beans in phase 2147483647
2019-03-19 10:27:27 -Context refreshed
2019-03-19 10:27:27 -Found 1 custom documentation plugin(s)
2019-03-19 10:27:27 -Scanning for api listing references
2019-03-19 10:27:28 -Generating unique operation named: removeUsingPOST_1
2019-03-19 10:27:28 -Generating unique operation named: addUsingGET_1
2019-03-19 10:27:28 -Generating unique operation named: editUsingGET_1
2019-03-19 10:27:28 -Generating unique operation named: listUsingGET_1
2019-03-19 10:27:28 -Generating unique operation named: removeUsingPOST_2
2019-03-19 10:27:28 -Generating unique operation named: removeUsingPOST_3
2019-03-19 10:27:28 -Generating unique operation named: saveUsingPOST_1
2019-03-19 10:27:28 -Generating unique operation named: updateUsingGET_1
2019-03-19 10:27:28 -Generating unique operation named: updateUsingHEAD_1
2019-03-19 10:27:28 -Generating unique operation named: updateUsingPOST_1
2019-03-19 10:27:28 -Generating unique operation named: updateUsingPUT_1
2019-03-19 10:27:28 -Generating unique operation named: updateUsingPATCH_1
2019-03-19 10:27:28 -Generating unique operation named: updateUsingDELETE_1
2019-03-19 10:27:28 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-19 10:27:28 -Generating unique operation named: updateUsingTRACE_1
2019-03-19 10:27:28 -Generating unique operation named: addUsingGET_2
2019-03-19 10:27:28 -Generating unique operation named: editUsingGET_2
2019-03-19 10:27:28 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-19 10:27:28 -Generating unique operation named: listUsingGET_2
2019-03-19 10:27:28 -Generating unique operation named: removeUsingPOST_4
2019-03-19 10:27:28 -Generating unique operation named: removeUsingPOST_5
2019-03-19 10:27:28 -Generating unique operation named: saveUsingPOST_2
2019-03-19 10:27:28 -Generating unique operation named: updateUsingGET_2
2019-03-19 10:27:28 -Generating unique operation named: updateUsingHEAD_2
2019-03-19 10:27:28 -Generating unique operation named: updateUsingPOST_2
2019-03-19 10:27:29 -Generating unique operation named: updateUsingPUT_2
2019-03-19 10:27:29 -Generating unique operation named: updateUsingPATCH_2
2019-03-19 10:27:29 -Generating unique operation named: updateUsingDELETE_2
2019-03-19 10:27:29 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-19 10:27:29 -Generating unique operation named: updateUsingTRACE_2
2019-03-19 10:27:29 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-19 10:27:29 -Generating unique operation named: addUsingGET_3
2019-03-19 10:27:29 -Generating unique operation named: editUsingGET_3
2019-03-19 10:27:29 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-19 10:27:29 -Generating unique operation named: listUsingGET_3
2019-03-19 10:27:29 -Generating unique operation named: removeUsingPOST_6
2019-03-19 10:27:29 -Generating unique operation named: removeUsingPOST_7
2019-03-19 10:27:29 -Generating unique operation named: saveUsingPOST_3
2019-03-19 10:27:29 -Generating unique operation named: updateUsingGET_3
2019-03-19 10:27:29 -Generating unique operation named: updateUsingHEAD_3
2019-03-19 10:27:29 -Generating unique operation named: updateUsingPOST_3
2019-03-19 10:27:29 -Generating unique operation named: updateUsingPUT_3
2019-03-19 10:27:29 -Generating unique operation named: updateUsingPATCH_3
2019-03-19 10:27:29 -Generating unique operation named: updateUsingDELETE_3
2019-03-19 10:27:29 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-19 10:27:29 -Generating unique operation named: updateUsingTRACE_3
2019-03-19 10:27:29 -Generating unique operation named: addUsingGET_4
2019-03-19 10:27:29 -Generating unique operation named: editUsingGET_4
2019-03-19 10:27:29 -Generating unique operation named: listUsingGET_4
2019-03-19 10:27:29 -Generating unique operation named: removeUsingPOST_8
2019-03-19 10:27:29 -Generating unique operation named: removeUsingPOST_9
2019-03-19 10:27:29 -Generating unique operation named: saveUsingPOST_4
2019-03-19 10:27:29 -Generating unique operation named: updateUsingGET_4
2019-03-19 10:27:29 -Generating unique operation named: updateUsingHEAD_4
2019-03-19 10:27:29 -Generating unique operation named: updateUsingPOST_4
2019-03-19 10:27:29 -Generating unique operation named: updateUsingPUT_4
2019-03-19 10:27:29 -Generating unique operation named: updateUsingPATCH_4
2019-03-19 10:27:29 -Generating unique operation named: updateUsingDELETE_4
2019-03-19 10:27:29 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-19 10:27:29 -Generating unique operation named: updateUsingTRACE_4
2019-03-19 10:27:29 -Generating unique operation named: ElecUsingGET_1
2019-03-19 10:27:29 -Generating unique operation named: addUsingGET_5
2019-03-19 10:27:29 -Generating unique operation named: editUsingGET_5
2019-03-19 10:27:29 -Generating unique operation named: listUsingGET_5
2019-03-19 10:27:29 -Generating unique operation named: removeUsingPOST_10
2019-03-19 10:27:29 -Generating unique operation named: removeUsingPOST_11
2019-03-19 10:27:29 -Generating unique operation named: saveUsingPOST_5
2019-03-19 10:27:29 -Generating unique operation named: updateUsingGET_5
2019-03-19 10:27:29 -Generating unique operation named: updateUsingHEAD_5
2019-03-19 10:27:29 -Generating unique operation named: updateUsingPOST_5
2019-03-19 10:27:29 -Generating unique operation named: updateUsingPUT_5
2019-03-19 10:27:29 -Generating unique operation named: updateUsingPATCH_5
2019-03-19 10:27:29 -Generating unique operation named: updateUsingDELETE_5
2019-03-19 10:27:29 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-19 10:27:29 -Generating unique operation named: updateUsingTRACE_5
2019-03-19 10:27:29 -Generating unique operation named: editUsingGET_6
2019-03-19 10:27:29 -Generating unique operation named: listUsingGET_6
2019-03-19 10:27:29 -Generating unique operation named: updateUsingPOST_6
2019-03-19 10:27:29 -Generating unique operation named: addUsingGET_6
2019-03-19 10:27:29 -Generating unique operation named: editUsingGET_7
2019-03-19 10:27:29 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-19 10:27:29 -Generating unique operation named: listUsingGET_7
2019-03-19 10:27:29 -Generating unique operation named: removeUsingPOST_12
2019-03-19 10:27:29 -Generating unique operation named: removeUsingPOST_13
2019-03-19 10:27:29 -Generating unique operation named: saveUsingPOST_6
2019-03-19 10:27:29 -Generating unique operation named: updateUsingGET_6
2019-03-19 10:27:29 -Generating unique operation named: updateUsingHEAD_6
2019-03-19 10:27:29 -Generating unique operation named: updateUsingPOST_7
2019-03-19 10:27:29 -Generating unique operation named: updateUsingPUT_6
2019-03-19 10:27:29 -Generating unique operation named: updateUsingPATCH_6
2019-03-19 10:27:29 -Generating unique operation named: updateUsingDELETE_6
2019-03-19 10:27:30 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-19 10:27:30 -Generating unique operation named: updateUsingTRACE_6
2019-03-19 10:27:30 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-19 10:27:30 -Generating unique operation named: addUsingGET_7
2019-03-19 10:27:30 -Generating unique operation named: editUsingGET_8
2019-03-19 10:27:30 -Generating unique operation named: listUsingGET_8
2019-03-19 10:27:30 -Generating unique operation named: removeUsingPOST_14
2019-03-19 10:27:30 -Generating unique operation named: removeUsingPOST_15
2019-03-19 10:27:30 -Generating unique operation named: saveUsingPOST_7
2019-03-19 10:27:30 -Generating unique operation named: updateUsingGET_7
2019-03-19 10:27:30 -Generating unique operation named: updateUsingHEAD_7
2019-03-19 10:27:30 -Generating unique operation named: updateUsingPOST_8
2019-03-19 10:27:30 -Generating unique operation named: updateUsingPUT_7
2019-03-19 10:27:30 -Generating unique operation named: updateUsingPATCH_7
2019-03-19 10:27:30 -Generating unique operation named: updateUsingDELETE_7
2019-03-19 10:27:30 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-19 10:27:30 -Generating unique operation named: updateUsingTRACE_7
2019-03-19 10:27:30 -Generating unique operation named: addUsingGET_8
2019-03-19 10:27:30 -Generating unique operation named: editUsingGET_9
2019-03-19 10:27:30 -Generating unique operation named: listUsingGET_9
2019-03-19 10:27:30 -Generating unique operation named: removeUsingPOST_16
2019-03-19 10:27:30 -Generating unique operation named: removeUsingPOST_17
2019-03-19 10:27:30 -Generating unique operation named: saveUsingPOST_8
2019-03-19 10:27:30 -Generating unique operation named: updateUsingGET_8
2019-03-19 10:27:30 -Generating unique operation named: updateUsingHEAD_8
2019-03-19 10:27:30 -Generating unique operation named: updateUsingPOST_9
2019-03-19 10:27:30 -Generating unique operation named: updateUsingPUT_8
2019-03-19 10:27:30 -Generating unique operation named: updateUsingPATCH_8
2019-03-19 10:27:30 -Generating unique operation named: updateUsingDELETE_8
2019-03-19 10:27:30 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-19 10:27:30 -Generating unique operation named: updateUsingTRACE_8
2019-03-19 10:27:30 -Generating unique operation named: addUsingGET_9
2019-03-19 10:27:30 -Generating unique operation named: editUsingGET_10
2019-03-19 10:27:30 -Generating unique operation named: infoUsingGET_1
2019-03-19 10:27:30 -Generating unique operation named: infoUsingHEAD_1
2019-03-19 10:27:30 -Generating unique operation named: infoUsingPOST_1
2019-03-19 10:27:30 -Generating unique operation named: infoUsingPUT_1
2019-03-19 10:27:30 -Generating unique operation named: infoUsingPATCH_1
2019-03-19 10:27:30 -Generating unique operation named: infoUsingDELETE_1
2019-03-19 10:27:30 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-19 10:27:30 -Generating unique operation named: infoUsingTRACE_1
2019-03-19 10:27:30 -Generating unique operation named: listUsingGET_10
2019-03-19 10:27:30 -Generating unique operation named: removeUsingPOST_18
2019-03-19 10:27:30 -Generating unique operation named: removeUsingPOST_19
2019-03-19 10:27:30 -Generating unique operation named: saveUsingPOST_9
2019-03-19 10:27:30 -Generating unique operation named: updateUsingPOST_10
2019-03-19 10:27:30 -Generating unique operation named: listUsingGET_11
2019-03-19 10:27:30 -Generating unique operation named: removeUsingPOST_20
2019-03-19 10:27:30 -Generating unique operation named: welcomeUsingGET_1
2019-03-19 10:27:30 -Generating unique operation named: addUsingGET_10
2019-03-19 10:27:30 -Generating unique operation named: editUsingGET_11
2019-03-19 10:27:30 -Generating unique operation named: listUsingGET_12
2019-03-19 10:27:30 -Generating unique operation named: removeUsingPOST_21
2019-03-19 10:27:30 -Generating unique operation named: saveUsingPOST_10
2019-03-19 10:27:30 -Generating unique operation named: treeUsingGET_1
2019-03-19 10:27:30 -Generating unique operation named: treeUsingGET_2
2019-03-19 10:27:30 -Generating unique operation named: updateUsingPOST_11
2019-03-19 10:27:30 -Generating unique operation named: addUsingGET_11
2019-03-19 10:27:30 -Generating unique operation named: editUsingGET_12
2019-03-19 10:27:30 -Generating unique operation named: listUsingGET_13
2019-03-19 10:27:30 -Generating unique operation named: removeUsingPOST_22
2019-03-19 10:27:30 -Generating unique operation named: removeUsingPOST_23
2019-03-19 10:27:30 -Generating unique operation named: saveUsingPOST_11
2019-03-19 10:27:30 -Generating unique operation named: updateUsingGET_9
2019-03-19 10:27:30 -Generating unique operation named: updateUsingHEAD_9
2019-03-19 10:27:30 -Generating unique operation named: updateUsingPOST_12
2019-03-19 10:27:30 -Generating unique operation named: updateUsingPUT_9
2019-03-19 10:27:30 -Generating unique operation named: updateUsingPATCH_9
2019-03-19 10:27:30 -Generating unique operation named: updateUsingDELETE_9
2019-03-19 10:27:30 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-19 10:27:30 -Generating unique operation named: updateUsingTRACE_9
2019-03-19 10:27:30 -Generating unique operation named: addUsingGET_12
2019-03-19 10:27:30 -Generating unique operation named: editUsingGET_13
2019-03-19 10:27:30 -Generating unique operation named: listUsingGET_14
2019-03-19 10:27:31 -Generating unique operation named: removeUsingPOST_24
2019-03-19 10:27:31 -Generating unique operation named: removeUsingPOST_25
2019-03-19 10:27:31 -Generating unique operation named: saveUsingPOST_12
2019-03-19 10:27:31 -Generating unique operation named: updateUsingGET_10
2019-03-19 10:27:31 -Generating unique operation named: updateUsingHEAD_10
2019-03-19 10:27:31 -Generating unique operation named: updateUsingPOST_13
2019-03-19 10:27:31 -Generating unique operation named: updateUsingPUT_10
2019-03-19 10:27:31 -Generating unique operation named: updateUsingPATCH_10
2019-03-19 10:27:31 -Generating unique operation named: updateUsingDELETE_10
2019-03-19 10:27:31 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-19 10:27:31 -Generating unique operation named: updateUsingTRACE_10
2019-03-19 10:27:31 -Generating unique operation named: addUsingGET_13
2019-03-19 10:27:31 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-19 10:27:31 -Generating unique operation named: editUsingGET_14
2019-03-19 10:27:31 -Generating unique operation named: listUsingGET_15
2019-03-19 10:27:31 -Generating unique operation named: saveUsingPOST_13
2019-03-19 10:27:31 -Generating unique operation named: saveUsingPOST_14
2019-03-19 10:27:31 -Generating unique operation named: updateUsingPOST_14
2019-03-19 10:27:31 -Generating unique operation named: listUsingGET_16
2019-03-19 10:27:31 -Generating unique operation named: listUsingHEAD_1
2019-03-19 10:27:31 -Generating unique operation named: listUsingPOST_1
2019-03-19 10:27:31 -Generating unique operation named: listUsingPUT_1
2019-03-19 10:27:31 -Generating unique operation named: listUsingPATCH_1
2019-03-19 10:27:31 -Generating unique operation named: listUsingDELETE_1
2019-03-19 10:27:31 -Generating unique operation named: listUsingOPTIONS_1
2019-03-19 10:27:31 -Generating unique operation named: listUsingTRACE_1
2019-03-19 10:27:31 -Generating unique operation named: addUsingGET_14
2019-03-19 10:27:31 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-19 10:27:31 -Generating unique operation named: editUsingGET_15
2019-03-19 10:27:31 -Generating unique operation named: listUsingGET_17
2019-03-19 10:27:31 -Generating unique operation named: removeUsingPOST_26
2019-03-19 10:27:31 -Generating unique operation named: saveUsingPOST_15
2019-03-19 10:27:31 -Generating unique operation named: treeUsingGET_3
2019-03-19 10:27:31 -Generating unique operation named: treeViewUsingGET_1
2019-03-19 10:27:31 -Generating unique operation named: updateUsingPOST_15
2019-03-19 10:27:31 -Generating unique operation named: addUsingGET_15
2019-03-19 10:27:31 -Generating unique operation named: editUsingGET_16
2019-03-19 10:27:31 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-19 10:27:31 -Generating unique operation named: listUsingGET_18
2019-03-19 10:27:31 -Generating unique operation named: removeUsingPOST_27
2019-03-19 10:27:31 -Generating unique operation named: removeUsingPOST_28
2019-03-19 10:27:31 -Generating unique operation named: saveUsingPOST_16
2019-03-19 10:27:31 -Generating unique operation named: updateUsingGET_11
2019-03-19 10:27:31 -Generating unique operation named: updateUsingHEAD_11
2019-03-19 10:27:31 -Generating unique operation named: updateUsingPOST_16
2019-03-19 10:27:31 -Generating unique operation named: updateUsingPUT_11
2019-03-19 10:27:31 -Generating unique operation named: updateUsingPATCH_11
2019-03-19 10:27:31 -Generating unique operation named: updateUsingDELETE_11
2019-03-19 10:27:31 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-19 10:27:31 -Generating unique operation named: updateUsingTRACE_11
2019-03-19 10:27:31 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-19 10:27:31 -Generating unique operation named: addUsingGET_16
2019-03-19 10:27:31 -Generating unique operation named: editUsingGET_17
2019-03-19 10:27:31 -Generating unique operation named: listUsingGET_19
2019-03-19 10:27:31 -Generating unique operation named: removeUsingPOST_29
2019-03-19 10:27:31 -Generating unique operation named: removeUsingPOST_30
2019-03-19 10:27:31 -Generating unique operation named: saveUsingPOST_17
2019-03-19 10:27:31 -Generating unique operation named: updateUsingGET_12
2019-03-19 10:27:31 -Generating unique operation named: updateUsingHEAD_12
2019-03-19 10:27:31 -Generating unique operation named: updateUsingPOST_17
2019-03-19 10:27:31 -Generating unique operation named: updateUsingPUT_12
2019-03-19 10:27:31 -Generating unique operation named: updateUsingPATCH_12
2019-03-19 10:27:31 -Generating unique operation named: updateUsingDELETE_12
2019-03-19 10:27:31 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-19 10:27:31 -Generating unique operation named: updateUsingTRACE_12
2019-03-19 10:27:31 -Generating unique operation named: addUsingGET_17
2019-03-19 10:27:31 -Generating unique operation named: editUsingGET_18
2019-03-19 10:27:31 -Generating unique operation named: listUsingGET_20
2019-03-19 10:27:31 -Generating unique operation named: removeUsingPOST_31
2019-03-19 10:27:31 -Generating unique operation named: removeUsingPOST_32
2019-03-19 10:27:31 -Generating unique operation named: saveUsingPOST_18
2019-03-19 10:27:31 -Generating unique operation named: updateUsingGET_13
2019-03-19 10:27:31 -Generating unique operation named: updateUsingHEAD_13
2019-03-19 10:27:31 -Generating unique operation named: updateUsingPOST_18
2019-03-19 10:27:31 -Generating unique operation named: updateUsingPUT_13
2019-03-19 10:27:31 -Generating unique operation named: updateUsingPATCH_13
2019-03-19 10:27:31 -Generating unique operation named: updateUsingDELETE_13
2019-03-19 10:27:31 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-19 10:27:31 -Generating unique operation named: updateUsingTRACE_13
2019-03-19 10:27:31 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-19 10:27:31 -Starting Quartz Scheduler now
2019-03-19 10:27:31 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-19 10:27:31 -Starting...
2019-03-19 10:27:31 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 10:27:31 -Started.
2019-03-19 10:27:31 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-19 10:27:31 -Using a shared selector for servlet write/read
2019-03-19 10:27:31 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-19 10:27:31 -Started BootdoApplication in 36.956 seconds (JVM running for 38.828)
2019-03-19 10:27:32 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-19 10:27:32 -==> Parameters: 
2019-03-19 10:27:32 -<==      Total: 1
2019-03-19 10:28:01 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-19 10:28:01 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-19 10:28:01 -FrameworkServlet 'dispatcherServlet': initialization completed in 102 ms
2019-03-19 10:28:01 -Enabling session validation scheduler...
2019-03-19 10:28:01 -请求地址 : http://localhost:8081/login;JSESSIONID=598881ce-594b-44ac-b3af-fca4ac9376a1
2019-03-19 10:28:01 -HTTP METHOD : GET
2019-03-19 10:28:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 10:28:01 -参数 : [{}]
2019-03-19 10:28:01 -耗时 : 3
2019-03-19 10:28:01 -返回值 : login
2019-03-19 10:28:02 -请求地址 : http://localhost:8081/getVerify
2019-03-19 10:28:02 -HTTP METHOD : GET
2019-03-19 10:28:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 10:28:02 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5d258642, org.apache.shiro.web.servlet.ShiroHttpServletResponse@53e26396]
2019-03-19 10:28:05 -8172
2019-03-19 10:28:05 -耗时 : 2537
2019-03-19 10:28:05 -返回值 : null
2019-03-19 10:28:22 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-19 10:28:31 -请求地址 : http://localhost:8081/login
2019-03-19 10:28:31 -HTTP METHOD : POST
2019-03-19 10:28:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 10:28:31 -参数 : [admin, 111111, 8172, org.apache.shiro.web.servlet.ShiroHttpServletRequest@345ab2f7]
2019-03-19 10:28:31 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 10:28:31 -==> Parameters: admin(String)
2019-03-19 10:28:31 -<==      Total: 1
2019-03-19 10:28:31 -耗时 : 155
2019-03-19 10:28:31 -返回值 : {msg=操作成功, code=0}
2019-03-19 10:28:31 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-19 10:28:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 10:28:31 -==> Parameters: 1(Long), admin(String), 登录(String), 155(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 10:28:31.356(Timestamp)
2019-03-19 10:28:31 -请求地址 : http://localhost:8081/index
2019-03-19 10:28:31 -HTTP METHOD : GET
2019-03-19 10:28:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 10:28:31 -参数 : [{}]
2019-03-19 10:28:31 -<==    Updates: 1
2019-03-19 10:28:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 10:28:31 -==> Parameters: 1(Long)
2019-03-19 10:28:31 -<==      Total: 46
2019-03-19 10:28:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 10:28:31 -==> Parameters: 138(Long)
2019-03-19 10:28:31 -<==      Total: 1
2019-03-19 10:28:31 -耗时 : 293
2019-03-19 10:28:31 -返回值 : index_v1
2019-03-19 10:28:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 10:28:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 293(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 10:28:31.788(Timestamp)
2019-03-19 10:28:31 -<==    Updates: 1
2019-03-19 10:28:32 -请求地址 : http://localhost:8081/main
2019-03-19 10:28:32 -HTTP METHOD : GET
2019-03-19 10:28:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:28:32 -参数 : []
2019-03-19 10:28:32 -耗时 : 1
2019-03-19 10:28:32 -返回值 : main
2019-03-19 10:28:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 10:28:32 -HTTP METHOD : GET
2019-03-19 10:28:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 10:28:32 -参数 : []
2019-03-19 10:28:32 -请求地址 : http://localhost:8081/main
2019-03-19 10:28:32 -HTTP METHOD : GET
2019-03-19 10:28:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:28:32 -参数 : []
2019-03-19 10:28:32 -耗时 : 1
2019-03-19 10:28:32 -返回值 : main
2019-03-19 10:28:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 10:28:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 10:28:32 -<==      Total: 0
2019-03-19 10:28:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 10:28:32 -==> Parameters: 1(Long), 0(String)
2019-03-19 10:28:32 -<==      Total: 1
2019-03-19 10:28:32 -耗时 : 171
2019-03-19 10:28:32 -返回值 : com.bootdo.common.utils.PageUtils@254db641
2019-03-19 10:28:44 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 10:28:44 -==> Parameters: 1(Long)
2019-03-19 10:28:44 -<==      Total: 90
2019-03-19 10:28:44 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-19 10:28:44 -HTTP METHOD : GET
2019-03-19 10:28:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-19 10:28:44 -参数 : []
2019-03-19 10:28:44 -耗时 : 0
2019-03-19 10:28:44 -返回值 : /moneyList/moneyList
2019-03-19 10:29:53 -请求地址 : http://localhost:8081/
2019-03-19 10:29:53 -HTTP METHOD : GET
2019-03-19 10:29:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-19 10:29:53 -参数 : [{}]
2019-03-19 10:29:53 -耗时 : 0
2019-03-19 10:29:53 -返回值 : redirect:/index
2019-03-19 10:29:53 -请求地址 : http://localhost:8081/login;JSESSIONID=5c9eebc6-9fa0-4c6e-8f6d-7edc70fe7d35
2019-03-19 10:29:53 -HTTP METHOD : GET
2019-03-19 10:29:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 10:29:53 -参数 : [{}]
2019-03-19 10:29:53 -耗时 : 0
2019-03-19 10:29:53 -返回值 : login
2019-03-19 10:29:54 -请求地址 : http://localhost:8081/getVerify
2019-03-19 10:29:54 -HTTP METHOD : GET
2019-03-19 10:29:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 10:29:54 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5554f975, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6c495708]
2019-03-19 10:29:54 -4435
2019-03-19 10:29:54 -耗时 : 34
2019-03-19 10:29:54 -返回值 : null
2019-03-19 10:29:54 -请求地址 : http://localhost:8081/login
2019-03-19 10:29:54 -HTTP METHOD : GET
2019-03-19 10:29:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 10:29:54 -参数 : [{}]
2019-03-19 10:29:54 -耗时 : 1
2019-03-19 10:29:54 -返回值 : login
2019-03-19 10:30:00 -请求地址 : http://localhost:8081/login
2019-03-19 10:30:00 -HTTP METHOD : POST
2019-03-19 10:30:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 10:30:00 -参数 : [admin, 111111, 4435, org.apache.shiro.web.servlet.ShiroHttpServletRequest@29a9943]
2019-03-19 10:30:00 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 10:30:00 -==> Parameters: admin(String)
2019-03-19 10:30:00 -<==      Total: 1
2019-03-19 10:30:00 -耗时 : 7
2019-03-19 10:30:00 -返回值 : {msg=操作成功, code=0}
2019-03-19 10:30:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 10:30:00 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 10:30:00.37(Timestamp)
2019-03-19 10:30:00 -请求地址 : http://localhost:8081/index
2019-03-19 10:30:00 -HTTP METHOD : GET
2019-03-19 10:30:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 10:30:00 -参数 : [{}]
2019-03-19 10:30:00 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 10:30:00 -==> Parameters: 1(Long)
2019-03-19 10:30:00 -<==      Total: 46
2019-03-19 10:30:00 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 10:30:00 -==> Parameters: 138(Long)
2019-03-19 10:30:00 -<==      Total: 1
2019-03-19 10:30:00 -耗时 : 70
2019-03-19 10:30:00 -返回值 : index_v1
2019-03-19 10:30:00 -<==    Updates: 1
2019-03-19 10:30:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 10:30:00 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 71(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 10:30:00.473(Timestamp)
2019-03-19 10:30:00 -请求地址 : http://localhost:8081/main
2019-03-19 10:30:00 -HTTP METHOD : GET
2019-03-19 10:30:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:30:00 -参数 : []
2019-03-19 10:30:00 -耗时 : 0
2019-03-19 10:30:00 -返回值 : main
2019-03-19 10:30:01 -<==    Updates: 1
2019-03-19 10:30:02 -请求地址 : http://localhost:8081/main
2019-03-19 10:30:02 -HTTP METHOD : GET
2019-03-19 10:30:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:30:02 -参数 : []
2019-03-19 10:30:02 -耗时 : 2
2019-03-19 10:30:02 -返回值 : main
2019-03-19 10:30:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 10:30:02 -HTTP METHOD : GET
2019-03-19 10:30:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 10:30:02 -参数 : []
2019-03-19 10:30:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 10:30:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 10:30:02 -<==      Total: 0
2019-03-19 10:30:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 10:30:02 -==> Parameters: 1(Long), 0(String)
2019-03-19 10:30:02 -<==      Total: 1
2019-03-19 10:30:02 -耗时 : 13
2019-03-19 10:30:02 -返回值 : com.bootdo.common.utils.PageUtils@3a12c489
2019-03-19 10:30:09 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 10:30:09 -==> Parameters: 1(Long)
2019-03-19 10:30:09 -<==      Total: 90
2019-03-19 10:30:09 -请求地址 : http://localhost:8081/elec/elec
2019-03-19 10:30:09 -HTTP METHOD : GET
2019-03-19 10:30:09 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-19 10:30:09 -参数 : []
2019-03-19 10:30:09 -耗时 : 1
2019-03-19 10:30:09 -返回值 : elec/elec/elec
2019-03-19 10:30:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 10:30:10 -HTTP METHOD : GET
2019-03-19 10:30:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 10:30:10 -参数 : [userType]
2019-03-19 10:30:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 10:30:10 -==> Parameters: userType(String)
2019-03-19 10:30:10 -<==      Total: 2
2019-03-19 10:30:10 -耗时 : 59
2019-03-19 10:30:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 10:30:10 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-19 10:30:10 -HTTP METHOD : GET
2019-03-19 10:30:10 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-19 10:30:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@3cd20687]
2019-03-19 10:30:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-19 10:30:10 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 10:30:10 -<==      Total: 10
2019-03-19 10:30:10 -==>  Preparing: select count(*) from elec 
2019-03-19 10:30:10 -==> Parameters: 
2019-03-19 10:30:10 -<==      Total: 1
2019-03-19 10:30:10 -耗时 : 217
2019-03-19 10:30:10 -返回值 : com.bootdo.common.utils.PageUtils@1873582b
2019-03-19 10:31:37 -请求地址 : http://localhost:8081/index
2019-03-19 10:31:37 -HTTP METHOD : GET
2019-03-19 10:31:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 10:31:37 -参数 : [{}]
2019-03-19 10:31:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 10:31:37 -==> Parameters: 1(Long)
2019-03-19 10:31:37 -<==      Total: 46
2019-03-19 10:31:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 10:31:37 -==> Parameters: 138(Long)
2019-03-19 10:31:37 -<==      Total: 1
2019-03-19 10:31:37 -耗时 : 38
2019-03-19 10:31:37 -返回值 : index_v1
2019-03-19 10:31:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 10:31:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 38(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 10:31:37.782(Timestamp)
2019-03-19 10:31:37 -请求地址 : http://localhost:8081/main
2019-03-19 10:31:37 -HTTP METHOD : GET
2019-03-19 10:31:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:31:37 -参数 : []
2019-03-19 10:31:37 -耗时 : 0
2019-03-19 10:31:37 -返回值 : main
2019-03-19 10:31:37 -<==    Updates: 1
2019-03-19 10:31:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 10:31:38 -HTTP METHOD : GET
2019-03-19 10:31:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 10:31:38 -参数 : []
2019-03-19 10:31:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 10:31:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 10:31:38 -<==      Total: 0
2019-03-19 10:31:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 10:31:38 -==> Parameters: 1(Long), 0(String)
2019-03-19 10:31:38 -<==      Total: 1
2019-03-19 10:31:38 -耗时 : 7
2019-03-19 10:31:38 -返回值 : com.bootdo.common.utils.PageUtils@2bcfc9df
2019-03-19 10:31:38 -请求地址 : http://localhost:8081/main
2019-03-19 10:31:38 -HTTP METHOD : GET
2019-03-19 10:31:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:31:38 -参数 : []
2019-03-19 10:31:38 -耗时 : 0
2019-03-19 10:31:38 -返回值 : main
2019-03-19 10:32:36 -Starting BootdoApplication on ZJZL-20180906VX with PID 11948 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-19 10:32:36 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-19 10:32:36 -The following profiles are active: dev
2019-03-19 10:32:37 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75390459: startup date [Tue Mar 19 10:32:37 CST 2019]; root of context hierarchy
2019-03-19 10:32:41 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-19 10:32:44 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a5e5d79e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:32:45 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$983f0645] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:32:46 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:32:47 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:32:47 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:32:47 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-19 10:32:47 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-19 10:32:47 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:32:47 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:32:47 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:32:47 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:32:48 -Tomcat initialized with port(s): 8081 (http)
2019-03-19 10:32:48 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-19 10:32:48 -Starting service [Tomcat]
2019-03-19 10:32:48 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-19 10:32:49 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-19 10:32:49 -Initializing Spring embedded WebApplicationContext
2019-03-19 10:32:49 -Root WebApplicationContext: initialization completed in 12454 ms
2019-03-19 10:32:50 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-19 10:32:50 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-19 10:32:50 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-19 10:32:50 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-19 10:32:50 -Filter xssFilter was not registered (disabled)
2019-03-19 10:32:50 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-19 10:32:50 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-19 10:32:50 -Servlet statViewServlet mapped to [/druid/*]
2019-03-19 10:32:50 -Servlet dispatcherServlet mapped to [/]
2019-03-19 10:32:53 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75390459: startup date [Tue Mar 19 10:32:37 CST 2019]; root of context hierarchy
2019-03-19 10:32:54 -Using default implementation for ThreadExecutor
2019-03-19 10:32:54 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-19 10:32:54 -Quartz Scheduler v.2.2.1 created.
2019-03-19 10:32:54 -RAMJobStore initialized.
2019-03-19 10:32:54 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-19 10:32:54 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-19 10:32:54 -Quartz scheduler version: 2.2.1
2019-03-19 10:32:54 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1fcc3461
2019-03-19 10:32:55 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-19 10:32:55 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-19 10:32:59 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-19 10:32:59 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-19 10:32:59 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:32:59 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-19 10:32:59 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-19 10:32:59 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-19 10:32:59 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-19 10:32:59 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-19 10:32:59 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-19 10:32:59 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-19 10:32:59 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-19 10:32:59 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:32:59 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-19 10:32:59 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-19 10:32:59 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-19 10:32:59 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-19 10:32:59 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-19 10:32:59 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:32:59 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-19 10:32:59 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-19 10:32:59 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-19 10:32:59 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-19 10:32:59 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:32:59 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-19 10:32:59 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-19 10:32:59 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-19 10:32:59 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-19 10:32:59 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:32:59 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:32:59 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-19 10:32:59 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 10:32:59 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-19 10:32:59 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 10:32:59 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-19 10:32:59 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-19 10:32:59 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-19 10:32:59 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-19 10:32:59 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-19 10:32:59 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:32:59 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-19 10:32:59 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-19 10:32:59 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:32:59 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-19 10:32:59 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-19 10:32:59 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-19 10:32:59 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-19 10:32:59 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:32:59 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-19 10:32:59 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-19 10:32:59 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-19 10:32:59 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 10:32:59 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 10:32:59 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-19 10:32:59 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-19 10:32:59 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-19 10:32:59 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-19 10:32:59 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-19 10:32:59 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-19 10:32:59 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:32:59 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:32:59 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-19 10:32:59 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-19 10:32:59 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:32:59 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-19 10:32:59 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-19 10:32:59 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-19 10:32:59 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-19 10:32:59 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 10:32:59 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:32:59 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 10:32:59 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:32:59 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-19 10:32:59 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-19 10:32:59 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 10:32:59 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-19 10:32:59 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-19 10:32:59 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-19 10:32:59 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-19 10:32:59 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:32:59 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-19 10:32:59 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:32:59 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-19 10:32:59 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-19 10:32:59 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:32:59 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-19 10:32:59 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-19 10:32:59 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-19 10:32:59 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-19 10:32:59 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 10:32:59 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:32:59 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 10:32:59 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:32:59 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-19 10:32:59 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-19 10:32:59 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 10:32:59 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-19 10:32:59 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-19 10:32:59 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-19 10:32:59 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-19 10:32:59 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-19 10:32:59 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-19 10:32:59 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 10:32:59 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:32:59 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 10:32:59 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:32:59 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:32:59 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-19 10:32:59 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-19 10:32:59 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-19 10:32:59 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-19 10:32:59 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 10:32:59 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:32:59 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 10:32:59 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:32:59 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-19 10:32:59 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-19 10:32:59 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-19 10:32:59 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-19 10:32:59 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 10:32:59 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:32:59 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 10:32:59 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:32:59 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-19 10:32:59 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-19 10:32:59 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-19 10:32:59 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-19 10:32:59 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-19 10:32:59 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:32:59 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:32:59 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-19 10:32:59 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-19 10:32:59 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:32:59 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-19 10:32:59 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:32:59 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-19 10:32:59 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-19 10:32:59 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-19 10:32:59 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-19 10:32:59 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-19 10:33:00 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:33:00 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-19 10:33:00 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:33:00 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-19 10:33:00 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:33:00 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:33:00 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-19 10:33:00 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-19 10:33:00 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-19 10:33:00 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-19 10:33:00 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-19 10:33:00 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-19 10:33:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-19 10:33:00 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-19 10:33:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:33:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-19 10:33:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-19 10:33:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-19 10:33:00 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 10:33:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-19 10:33:00 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 10:33:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-19 10:33:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-19 10:33:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-19 10:33:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-19 10:33:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:33:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-19 10:33:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-19 10:33:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-19 10:33:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-19 10:33:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 10:33:00 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-19 10:33:00 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-19 10:33:00 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-19 10:33:00 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-19 10:33:00 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-19 10:33:00 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-19 10:33:00 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-19 10:33:00 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:33:00 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-19 10:33:00 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-19 10:33:00 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-19 10:33:00 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-19 10:33:00 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:33:00 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-19 10:33:00 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-19 10:33:00 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-19 10:33:00 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:33:00 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-19 10:33:00 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-19 10:33:00 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-19 10:33:00 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-19 10:33:00 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-19 10:33:00 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 10:33:00 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:33:00 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-19 10:33:00 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 10:33:00 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 10:33:00 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-19 10:33:00 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 10:33:00 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-19 10:33:00 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-19 10:33:00 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-19 10:33:00 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-19 10:33:00 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-19 10:33:00 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:33:00 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-19 10:33:00 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:33:00 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-19 10:33:00 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:33:00 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:33:00 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-19 10:33:00 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:33:00 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-19 10:33:00 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-19 10:33:00 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-19 10:33:00 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 10:33:00 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:33:00 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 10:33:00 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-19 10:33:00 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:33:00 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:33:00 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-19 10:33:00 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 10:33:00 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-19 10:33:00 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-19 10:33:00 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-19 10:33:00 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-19 10:33:00 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-19 10:33:00 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-19 10:33:01 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 10:33:02 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75390459: startup date [Tue Mar 19 10:32:37 CST 2019]; root of context hierarchy
2019-03-19 10:33:02 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 10:33:02 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 10:33:02 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 10:33:02 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-19 10:33:03 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-19 10:33:05 -Registering beans for JMX exposure on startup
2019-03-19 10:33:05 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-19 10:33:05 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-19 10:33:05 -Starting beans in phase 2147483647
2019-03-19 10:33:05 -Context refreshed
2019-03-19 10:33:05 -Found 1 custom documentation plugin(s)
2019-03-19 10:33:05 -Scanning for api listing references
2019-03-19 10:33:06 -Generating unique operation named: removeUsingPOST_1
2019-03-19 10:33:06 -Generating unique operation named: addUsingGET_1
2019-03-19 10:33:06 -Generating unique operation named: editUsingGET_1
2019-03-19 10:33:06 -Generating unique operation named: listUsingGET_1
2019-03-19 10:33:06 -Generating unique operation named: removeUsingPOST_2
2019-03-19 10:33:07 -Generating unique operation named: removeUsingPOST_3
2019-03-19 10:33:07 -Generating unique operation named: saveUsingPOST_1
2019-03-19 10:33:07 -Generating unique operation named: updateUsingGET_1
2019-03-19 10:33:07 -Generating unique operation named: updateUsingHEAD_1
2019-03-19 10:33:07 -Generating unique operation named: updateUsingPOST_1
2019-03-19 10:33:07 -Generating unique operation named: updateUsingPUT_1
2019-03-19 10:33:07 -Generating unique operation named: updateUsingPATCH_1
2019-03-19 10:33:07 -Generating unique operation named: updateUsingDELETE_1
2019-03-19 10:33:07 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-19 10:33:07 -Generating unique operation named: updateUsingTRACE_1
2019-03-19 10:33:07 -Generating unique operation named: addUsingGET_2
2019-03-19 10:33:07 -Generating unique operation named: editUsingGET_2
2019-03-19 10:33:07 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-19 10:33:07 -Generating unique operation named: listUsingGET_2
2019-03-19 10:33:07 -Generating unique operation named: removeUsingPOST_4
2019-03-19 10:33:07 -Generating unique operation named: removeUsingPOST_5
2019-03-19 10:33:07 -Generating unique operation named: saveUsingPOST_2
2019-03-19 10:33:07 -Generating unique operation named: updateUsingGET_2
2019-03-19 10:33:07 -Generating unique operation named: updateUsingHEAD_2
2019-03-19 10:33:07 -Generating unique operation named: updateUsingPOST_2
2019-03-19 10:33:07 -Generating unique operation named: updateUsingPUT_2
2019-03-19 10:33:07 -Generating unique operation named: updateUsingPATCH_2
2019-03-19 10:33:07 -Generating unique operation named: updateUsingDELETE_2
2019-03-19 10:33:07 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-19 10:33:07 -Generating unique operation named: updateUsingTRACE_2
2019-03-19 10:33:07 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-19 10:33:07 -Generating unique operation named: addUsingGET_3
2019-03-19 10:33:07 -Generating unique operation named: editUsingGET_3
2019-03-19 10:33:07 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-19 10:33:07 -Generating unique operation named: listUsingGET_3
2019-03-19 10:33:07 -Generating unique operation named: removeUsingPOST_6
2019-03-19 10:33:07 -Generating unique operation named: removeUsingPOST_7
2019-03-19 10:33:07 -Generating unique operation named: saveUsingPOST_3
2019-03-19 10:33:07 -Generating unique operation named: updateUsingGET_3
2019-03-19 10:33:07 -Generating unique operation named: updateUsingHEAD_3
2019-03-19 10:33:07 -Generating unique operation named: updateUsingPOST_3
2019-03-19 10:33:07 -Generating unique operation named: updateUsingPUT_3
2019-03-19 10:33:07 -Generating unique operation named: updateUsingPATCH_3
2019-03-19 10:33:07 -Generating unique operation named: updateUsingDELETE_3
2019-03-19 10:33:07 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-19 10:33:07 -Generating unique operation named: updateUsingTRACE_3
2019-03-19 10:33:07 -Generating unique operation named: addUsingGET_4
2019-03-19 10:33:07 -Generating unique operation named: editUsingGET_4
2019-03-19 10:33:07 -Generating unique operation named: listUsingGET_4
2019-03-19 10:33:07 -Generating unique operation named: removeUsingPOST_8
2019-03-19 10:33:07 -Generating unique operation named: removeUsingPOST_9
2019-03-19 10:33:07 -Generating unique operation named: saveUsingPOST_4
2019-03-19 10:33:07 -Generating unique operation named: updateUsingGET_4
2019-03-19 10:33:07 -Generating unique operation named: updateUsingHEAD_4
2019-03-19 10:33:07 -Generating unique operation named: updateUsingPOST_4
2019-03-19 10:33:07 -Generating unique operation named: updateUsingPUT_4
2019-03-19 10:33:07 -Generating unique operation named: updateUsingPATCH_4
2019-03-19 10:33:07 -Generating unique operation named: updateUsingDELETE_4
2019-03-19 10:33:07 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-19 10:33:07 -Generating unique operation named: updateUsingTRACE_4
2019-03-19 10:33:07 -Generating unique operation named: ElecUsingGET_1
2019-03-19 10:33:07 -Generating unique operation named: addUsingGET_5
2019-03-19 10:33:07 -Generating unique operation named: editUsingGET_5
2019-03-19 10:33:07 -Generating unique operation named: listUsingGET_5
2019-03-19 10:33:07 -Generating unique operation named: removeUsingPOST_10
2019-03-19 10:33:07 -Generating unique operation named: removeUsingPOST_11
2019-03-19 10:33:07 -Generating unique operation named: saveUsingPOST_5
2019-03-19 10:33:07 -Generating unique operation named: updateUsingGET_5
2019-03-19 10:33:07 -Generating unique operation named: updateUsingHEAD_5
2019-03-19 10:33:07 -Generating unique operation named: updateUsingPOST_5
2019-03-19 10:33:07 -Generating unique operation named: updateUsingPUT_5
2019-03-19 10:33:07 -Generating unique operation named: updateUsingPATCH_5
2019-03-19 10:33:07 -Generating unique operation named: updateUsingDELETE_5
2019-03-19 10:33:07 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-19 10:33:07 -Generating unique operation named: updateUsingTRACE_5
2019-03-19 10:33:07 -Generating unique operation named: editUsingGET_6
2019-03-19 10:33:07 -Generating unique operation named: listUsingGET_6
2019-03-19 10:33:07 -Generating unique operation named: updateUsingPOST_6
2019-03-19 10:33:07 -Generating unique operation named: addUsingGET_6
2019-03-19 10:33:07 -Generating unique operation named: editUsingGET_7
2019-03-19 10:33:07 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-19 10:33:07 -Generating unique operation named: listUsingGET_7
2019-03-19 10:33:07 -Generating unique operation named: removeUsingPOST_12
2019-03-19 10:33:07 -Generating unique operation named: removeUsingPOST_13
2019-03-19 10:33:07 -Generating unique operation named: saveUsingPOST_6
2019-03-19 10:33:08 -Generating unique operation named: updateUsingGET_6
2019-03-19 10:33:08 -Generating unique operation named: updateUsingHEAD_6
2019-03-19 10:33:08 -Generating unique operation named: updateUsingPOST_7
2019-03-19 10:33:08 -Generating unique operation named: updateUsingPUT_6
2019-03-19 10:33:08 -Generating unique operation named: updateUsingPATCH_6
2019-03-19 10:33:08 -Generating unique operation named: updateUsingDELETE_6
2019-03-19 10:33:08 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-19 10:33:08 -Generating unique operation named: updateUsingTRACE_6
2019-03-19 10:33:08 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-19 10:33:08 -Generating unique operation named: addUsingGET_7
2019-03-19 10:33:08 -Generating unique operation named: editUsingGET_8
2019-03-19 10:33:08 -Generating unique operation named: listUsingGET_8
2019-03-19 10:33:08 -Generating unique operation named: removeUsingPOST_14
2019-03-19 10:33:08 -Generating unique operation named: removeUsingPOST_15
2019-03-19 10:33:08 -Generating unique operation named: saveUsingPOST_7
2019-03-19 10:33:08 -Generating unique operation named: updateUsingGET_7
2019-03-19 10:33:08 -Generating unique operation named: updateUsingHEAD_7
2019-03-19 10:33:08 -Generating unique operation named: updateUsingPOST_8
2019-03-19 10:33:08 -Generating unique operation named: updateUsingPUT_7
2019-03-19 10:33:08 -Generating unique operation named: updateUsingPATCH_7
2019-03-19 10:33:08 -Generating unique operation named: updateUsingDELETE_7
2019-03-19 10:33:08 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-19 10:33:08 -Generating unique operation named: updateUsingTRACE_7
2019-03-19 10:33:08 -Generating unique operation named: addUsingGET_8
2019-03-19 10:33:08 -Generating unique operation named: editUsingGET_9
2019-03-19 10:33:08 -Generating unique operation named: listUsingGET_9
2019-03-19 10:33:08 -Generating unique operation named: removeUsingPOST_16
2019-03-19 10:33:08 -Generating unique operation named: removeUsingPOST_17
2019-03-19 10:33:08 -Generating unique operation named: saveUsingPOST_8
2019-03-19 10:33:08 -Generating unique operation named: updateUsingGET_8
2019-03-19 10:33:08 -Generating unique operation named: updateUsingHEAD_8
2019-03-19 10:33:08 -Generating unique operation named: updateUsingPOST_9
2019-03-19 10:33:08 -Generating unique operation named: updateUsingPUT_8
2019-03-19 10:33:08 -Generating unique operation named: updateUsingPATCH_8
2019-03-19 10:33:08 -Generating unique operation named: updateUsingDELETE_8
2019-03-19 10:33:08 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-19 10:33:08 -Generating unique operation named: updateUsingTRACE_8
2019-03-19 10:33:08 -Generating unique operation named: addUsingGET_9
2019-03-19 10:33:08 -Generating unique operation named: editUsingGET_10
2019-03-19 10:33:08 -Generating unique operation named: infoUsingGET_1
2019-03-19 10:33:08 -Generating unique operation named: infoUsingHEAD_1
2019-03-19 10:33:08 -Generating unique operation named: infoUsingPOST_1
2019-03-19 10:33:08 -Generating unique operation named: infoUsingPUT_1
2019-03-19 10:33:08 -Generating unique operation named: infoUsingPATCH_1
2019-03-19 10:33:08 -Generating unique operation named: infoUsingDELETE_1
2019-03-19 10:33:08 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-19 10:33:08 -Generating unique operation named: infoUsingTRACE_1
2019-03-19 10:33:08 -Generating unique operation named: listUsingGET_10
2019-03-19 10:33:08 -Generating unique operation named: removeUsingPOST_18
2019-03-19 10:33:08 -Generating unique operation named: removeUsingPOST_19
2019-03-19 10:33:08 -Generating unique operation named: saveUsingPOST_9
2019-03-19 10:33:08 -Generating unique operation named: updateUsingPOST_10
2019-03-19 10:33:08 -Generating unique operation named: listUsingGET_11
2019-03-19 10:33:08 -Generating unique operation named: removeUsingPOST_20
2019-03-19 10:33:08 -Generating unique operation named: welcomeUsingGET_1
2019-03-19 10:33:08 -Generating unique operation named: addUsingGET_10
2019-03-19 10:33:08 -Generating unique operation named: editUsingGET_11
2019-03-19 10:33:08 -Generating unique operation named: listUsingGET_12
2019-03-19 10:33:08 -Generating unique operation named: removeUsingPOST_21
2019-03-19 10:33:08 -Generating unique operation named: saveUsingPOST_10
2019-03-19 10:33:08 -Generating unique operation named: treeUsingGET_1
2019-03-19 10:33:08 -Generating unique operation named: treeUsingGET_2
2019-03-19 10:33:08 -Generating unique operation named: updateUsingPOST_11
2019-03-19 10:33:08 -Generating unique operation named: addUsingGET_11
2019-03-19 10:33:08 -Generating unique operation named: editUsingGET_12
2019-03-19 10:33:08 -Generating unique operation named: listUsingGET_13
2019-03-19 10:33:08 -Generating unique operation named: removeUsingPOST_22
2019-03-19 10:33:08 -Generating unique operation named: removeUsingPOST_23
2019-03-19 10:33:08 -Generating unique operation named: saveUsingPOST_11
2019-03-19 10:33:08 -Generating unique operation named: updateUsingGET_9
2019-03-19 10:33:08 -Generating unique operation named: updateUsingHEAD_9
2019-03-19 10:33:08 -Generating unique operation named: updateUsingPOST_12
2019-03-19 10:33:08 -Generating unique operation named: updateUsingPUT_9
2019-03-19 10:33:08 -Generating unique operation named: updateUsingPATCH_9
2019-03-19 10:33:08 -Generating unique operation named: updateUsingDELETE_9
2019-03-19 10:33:08 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-19 10:33:08 -Generating unique operation named: updateUsingTRACE_9
2019-03-19 10:33:08 -Generating unique operation named: addUsingGET_12
2019-03-19 10:33:08 -Generating unique operation named: editUsingGET_13
2019-03-19 10:33:08 -Generating unique operation named: listUsingGET_14
2019-03-19 10:33:08 -Generating unique operation named: removeUsingPOST_24
2019-03-19 10:33:08 -Generating unique operation named: removeUsingPOST_25
2019-03-19 10:33:08 -Generating unique operation named: saveUsingPOST_12
2019-03-19 10:33:08 -Generating unique operation named: updateUsingGET_10
2019-03-19 10:33:08 -Generating unique operation named: updateUsingHEAD_10
2019-03-19 10:33:08 -Generating unique operation named: updateUsingPOST_13
2019-03-19 10:33:08 -Generating unique operation named: updateUsingPUT_10
2019-03-19 10:33:08 -Generating unique operation named: updateUsingPATCH_10
2019-03-19 10:33:08 -Generating unique operation named: updateUsingDELETE_10
2019-03-19 10:33:08 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-19 10:33:08 -Generating unique operation named: updateUsingTRACE_10
2019-03-19 10:33:08 -Generating unique operation named: addUsingGET_13
2019-03-19 10:33:08 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-19 10:33:09 -Generating unique operation named: editUsingGET_14
2019-03-19 10:33:09 -Generating unique operation named: listUsingGET_15
2019-03-19 10:33:09 -Generating unique operation named: saveUsingPOST_13
2019-03-19 10:33:09 -Generating unique operation named: saveUsingPOST_14
2019-03-19 10:33:09 -Generating unique operation named: updateUsingPOST_14
2019-03-19 10:33:09 -Generating unique operation named: listUsingGET_16
2019-03-19 10:33:09 -Generating unique operation named: listUsingHEAD_1
2019-03-19 10:33:09 -Generating unique operation named: listUsingPOST_1
2019-03-19 10:33:09 -Generating unique operation named: listUsingPUT_1
2019-03-19 10:33:09 -Generating unique operation named: listUsingPATCH_1
2019-03-19 10:33:09 -Generating unique operation named: listUsingDELETE_1
2019-03-19 10:33:09 -Generating unique operation named: listUsingOPTIONS_1
2019-03-19 10:33:09 -Generating unique operation named: listUsingTRACE_1
2019-03-19 10:33:09 -Generating unique operation named: addUsingGET_14
2019-03-19 10:33:09 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-19 10:33:09 -Generating unique operation named: editUsingGET_15
2019-03-19 10:33:09 -Generating unique operation named: listUsingGET_17
2019-03-19 10:33:09 -Generating unique operation named: removeUsingPOST_26
2019-03-19 10:33:09 -Generating unique operation named: saveUsingPOST_15
2019-03-19 10:33:09 -Generating unique operation named: treeUsingGET_3
2019-03-19 10:33:09 -Generating unique operation named: treeViewUsingGET_1
2019-03-19 10:33:09 -Generating unique operation named: updateUsingPOST_15
2019-03-19 10:33:09 -Generating unique operation named: addUsingGET_15
2019-03-19 10:33:09 -Generating unique operation named: editUsingGET_16
2019-03-19 10:33:09 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-19 10:33:09 -Generating unique operation named: listUsingGET_18
2019-03-19 10:33:09 -Generating unique operation named: removeUsingPOST_27
2019-03-19 10:33:09 -Generating unique operation named: removeUsingPOST_28
2019-03-19 10:33:09 -Generating unique operation named: saveUsingPOST_16
2019-03-19 10:33:09 -Generating unique operation named: updateUsingGET_11
2019-03-19 10:33:09 -Generating unique operation named: updateUsingHEAD_11
2019-03-19 10:33:09 -Generating unique operation named: updateUsingPOST_16
2019-03-19 10:33:09 -Generating unique operation named: updateUsingPUT_11
2019-03-19 10:33:09 -Generating unique operation named: updateUsingPATCH_11
2019-03-19 10:33:09 -Generating unique operation named: updateUsingDELETE_11
2019-03-19 10:33:09 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-19 10:33:09 -Generating unique operation named: updateUsingTRACE_11
2019-03-19 10:33:09 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-19 10:33:09 -Generating unique operation named: addUsingGET_16
2019-03-19 10:33:09 -Generating unique operation named: editUsingGET_17
2019-03-19 10:33:09 -Generating unique operation named: listUsingGET_19
2019-03-19 10:33:09 -Generating unique operation named: removeUsingPOST_29
2019-03-19 10:33:09 -Generating unique operation named: removeUsingPOST_30
2019-03-19 10:33:09 -Generating unique operation named: saveUsingPOST_17
2019-03-19 10:33:09 -Generating unique operation named: updateUsingGET_12
2019-03-19 10:33:09 -Generating unique operation named: updateUsingHEAD_12
2019-03-19 10:33:09 -Generating unique operation named: updateUsingPOST_17
2019-03-19 10:33:09 -Generating unique operation named: updateUsingPUT_12
2019-03-19 10:33:09 -Generating unique operation named: updateUsingPATCH_12
2019-03-19 10:33:09 -Generating unique operation named: updateUsingDELETE_12
2019-03-19 10:33:09 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-19 10:33:09 -Generating unique operation named: updateUsingTRACE_12
2019-03-19 10:33:09 -Generating unique operation named: addUsingGET_17
2019-03-19 10:33:09 -Generating unique operation named: editUsingGET_18
2019-03-19 10:33:09 -Generating unique operation named: listUsingGET_20
2019-03-19 10:33:09 -Generating unique operation named: removeUsingPOST_31
2019-03-19 10:33:09 -Generating unique operation named: removeUsingPOST_32
2019-03-19 10:33:09 -Generating unique operation named: saveUsingPOST_18
2019-03-19 10:33:09 -Generating unique operation named: updateUsingGET_13
2019-03-19 10:33:09 -Generating unique operation named: updateUsingHEAD_13
2019-03-19 10:33:09 -Generating unique operation named: updateUsingPOST_18
2019-03-19 10:33:09 -Generating unique operation named: updateUsingPUT_13
2019-03-19 10:33:09 -Generating unique operation named: updateUsingPATCH_13
2019-03-19 10:33:09 -Generating unique operation named: updateUsingDELETE_13
2019-03-19 10:33:09 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-19 10:33:09 -Generating unique operation named: updateUsingTRACE_13
2019-03-19 10:33:09 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-19 10:33:09 -Starting Quartz Scheduler now
2019-03-19 10:33:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-19 10:33:09 -Starting...
2019-03-19 10:33:09 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 10:33:09 -Started.
2019-03-19 10:33:10 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-19 10:33:10 -Using a shared selector for servlet write/read
2019-03-19 10:33:10 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-19 10:33:10 -Started BootdoApplication in 35.907 seconds (JVM running for 37.938)
2019-03-19 10:33:10 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-19 10:33:10 -==> Parameters: 
2019-03-19 10:33:10 -<==      Total: 1
2019-03-19 10:33:16 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-19 10:33:16 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-19 10:33:16 -FrameworkServlet 'dispatcherServlet': initialization completed in 48 ms
2019-03-19 10:33:17 -Enabling session validation scheduler...
2019-03-19 10:33:17 -请求地址 : http://localhost:8081/login;JSESSIONID=e759b612-b426-4b6d-9d27-9b02669b7fab
2019-03-19 10:33:17 -HTTP METHOD : GET
2019-03-19 10:33:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 10:33:17 -参数 : [{}]
2019-03-19 10:33:17 -耗时 : 4
2019-03-19 10:33:17 -返回值 : login
2019-03-19 10:33:18 -请求地址 : http://localhost:8081/getVerify
2019-03-19 10:33:18 -HTTP METHOD : GET
2019-03-19 10:33:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 10:33:18 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5e8f5af4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@276589cf]
2019-03-19 10:33:19 -3483
2019-03-19 10:33:19 -耗时 : 554
2019-03-19 10:33:19 -返回值 : null
2019-03-19 10:33:19 -请求地址 : http://localhost:8081/login
2019-03-19 10:33:19 -HTTP METHOD : GET
2019-03-19 10:33:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 10:33:19 -参数 : [{}]
2019-03-19 10:33:19 -耗时 : 1
2019-03-19 10:33:19 -返回值 : login
2019-03-19 10:33:24 -请求地址 : http://localhost:8081/login
2019-03-19 10:33:24 -HTTP METHOD : POST
2019-03-19 10:33:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 10:33:24 -参数 : [admin, 111111, 3483, org.apache.shiro.web.servlet.ShiroHttpServletRequest@77242e71]
2019-03-19 10:33:24 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 10:33:24 -==> Parameters: admin(String)
2019-03-19 10:33:24 -<==      Total: 1
2019-03-19 10:33:25 -耗时 : 160
2019-03-19 10:33:25 -返回值 : {msg=操作成功, code=0}
2019-03-19 10:33:25 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-19 10:33:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 10:33:25 -==> Parameters: 1(Long), admin(String), 登录(String), 160(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 10:33:25.094(Timestamp)
2019-03-19 10:33:25 -请求地址 : http://localhost:8081/index
2019-03-19 10:33:25 -HTTP METHOD : GET
2019-03-19 10:33:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 10:33:25 -参数 : [{}]
2019-03-19 10:33:25 -<==    Updates: 1
2019-03-19 10:33:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 10:33:25 -==> Parameters: 1(Long)
2019-03-19 10:33:25 -<==      Total: 46
2019-03-19 10:33:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 10:33:25 -==> Parameters: 138(Long)
2019-03-19 10:33:25 -<==      Total: 1
2019-03-19 10:33:25 -耗时 : 115
2019-03-19 10:33:25 -返回值 : index_v1
2019-03-19 10:33:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 10:33:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 115(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 10:33:25.323(Timestamp)
2019-03-19 10:33:25 -<==    Updates: 1
2019-03-19 10:33:25 -请求地址 : http://localhost:8081/main
2019-03-19 10:33:25 -HTTP METHOD : GET
2019-03-19 10:33:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:33:25 -参数 : []
2019-03-19 10:33:25 -耗时 : 1
2019-03-19 10:33:25 -返回值 : main
2019-03-19 10:33:25 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 10:33:25 -HTTP METHOD : GET
2019-03-19 10:33:25 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 10:33:25 -参数 : []
2019-03-19 10:33:25 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 10:33:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 10:33:26 -<==      Total: 0
2019-03-19 10:33:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 10:33:26 -==> Parameters: 1(Long), 0(String)
2019-03-19 10:33:26 -<==      Total: 1
2019-03-19 10:33:26 -耗时 : 68
2019-03-19 10:33:26 -返回值 : com.bootdo.common.utils.PageUtils@79ceb541
2019-03-19 10:33:26 -请求地址 : http://localhost:8081/main
2019-03-19 10:33:26 -HTTP METHOD : GET
2019-03-19 10:33:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:33:26 -参数 : []
2019-03-19 10:33:26 -耗时 : 0
2019-03-19 10:33:26 -返回值 : main
2019-03-19 10:33:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 10:33:34 -==> Parameters: 1(Long)
2019-03-19 10:33:34 -<==      Total: 90
2019-03-19 10:33:34 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 10:33:34 -HTTP METHOD : GET
2019-03-19 10:33:34 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 10:33:34 -参数 : []
2019-03-19 10:33:34 -耗时 : 0
2019-03-19 10:33:34 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 10:33:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 10:33:35 -HTTP METHOD : GET
2019-03-19 10:33:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 10:33:35 -参数 : [userType]
2019-03-19 10:33:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 10:33:35 -==> Parameters: userType(String)
2019-03-19 10:33:35 -<==      Total: 2
2019-03-19 10:33:35 -耗时 : 43
2019-03-19 10:33:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 10:33:35 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 10:33:35 -HTTP METHOD : GET
2019-03-19 10:33:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 10:33:35 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 10:33:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 10:33:35 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 10:33:35 -<==      Total: 4
2019-03-19 10:33:35 -==>  Preparing: select count(*) from elec_log 
2019-03-19 10:33:35 -==> Parameters: 
2019-03-19 10:33:35 -<==      Total: 1
2019-03-19 10:33:35 -耗时 : 67
2019-03-19 10:33:35 -返回值 : com.bootdo.common.utils.PageUtils@58166504
2019-03-19 10:34:00 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-03-19 10:36:08 -请求地址 : http://localhost:8081/
2019-03-19 10:36:08 -HTTP METHOD : GET
2019-03-19 10:36:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-19 10:36:08 -参数 : [{}]
2019-03-19 10:36:08 -耗时 : 1
2019-03-19 10:36:08 -返回值 : redirect:/index
2019-03-19 10:36:08 -请求地址 : http://localhost:8081/login;JSESSIONID=13481141-fd05-4da4-937d-dea51588f906
2019-03-19 10:36:08 -HTTP METHOD : GET
2019-03-19 10:36:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 10:36:08 -参数 : [{}]
2019-03-19 10:36:08 -耗时 : 0
2019-03-19 10:36:08 -返回值 : login
2019-03-19 10:36:09 -请求地址 : http://localhost:8081/getVerify
2019-03-19 10:36:09 -HTTP METHOD : GET
2019-03-19 10:36:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 10:36:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6ae8b980, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5b33cfc5]
2019-03-19 10:36:09 -4990
2019-03-19 10:36:09 -耗时 : 12
2019-03-19 10:36:09 -返回值 : null
2019-03-19 10:36:09 -请求地址 : http://localhost:8081/login
2019-03-19 10:36:09 -HTTP METHOD : GET
2019-03-19 10:36:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 10:36:09 -参数 : [{}]
2019-03-19 10:36:09 -耗时 : 1
2019-03-19 10:36:09 -返回值 : login
2019-03-19 10:36:15 -请求地址 : http://localhost:8081/login
2019-03-19 10:36:15 -HTTP METHOD : POST
2019-03-19 10:36:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 10:36:15 -参数 : [admin, 111111, 4990, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4e412731]
2019-03-19 10:36:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 10:36:15 -==> Parameters: admin(String)
2019-03-19 10:36:15 -<==      Total: 1
2019-03-19 10:36:15 -耗时 : 11
2019-03-19 10:36:15 -返回值 : {msg=操作成功, code=0}
2019-03-19 10:36:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 10:36:15 -==> Parameters: 1(Long), admin(String), 登录(String), 16(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 10:36:15.809(Timestamp)
2019-03-19 10:36:15 -请求地址 : http://localhost:8081/index
2019-03-19 10:36:15 -HTTP METHOD : GET
2019-03-19 10:36:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 10:36:15 -参数 : [{}]
2019-03-19 10:36:15 -<==    Updates: 1
2019-03-19 10:36:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 10:36:15 -==> Parameters: 1(Long)
2019-03-19 10:36:15 -<==      Total: 46
2019-03-19 10:36:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 10:36:15 -==> Parameters: 138(Long)
2019-03-19 10:36:15 -<==      Total: 1
2019-03-19 10:36:15 -耗时 : 59
2019-03-19 10:36:15 -返回值 : index_v1
2019-03-19 10:36:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 10:36:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 59(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 10:36:15.912(Timestamp)
2019-03-19 10:36:16 -<==    Updates: 1
2019-03-19 10:36:16 -请求地址 : http://localhost:8081/main
2019-03-19 10:36:16 -HTTP METHOD : GET
2019-03-19 10:36:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:36:16 -参数 : []
2019-03-19 10:36:16 -耗时 : 1
2019-03-19 10:36:16 -返回值 : main
2019-03-19 10:36:16 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 10:36:16 -HTTP METHOD : GET
2019-03-19 10:36:16 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 10:36:16 -参数 : []
2019-03-19 10:36:16 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 10:36:16 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 10:36:16 -<==      Total: 0
2019-03-19 10:36:16 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 10:36:16 -==> Parameters: 1(Long), 0(String)
2019-03-19 10:36:16 -<==      Total: 1
2019-03-19 10:36:16 -耗时 : 7
2019-03-19 10:36:16 -返回值 : com.bootdo.common.utils.PageUtils@45099d78
2019-03-19 10:36:16 -请求地址 : http://localhost:8081/main
2019-03-19 10:36:16 -HTTP METHOD : GET
2019-03-19 10:36:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:36:16 -参数 : []
2019-03-19 10:36:16 -耗时 : 1
2019-03-19 10:36:16 -返回值 : main
2019-03-19 10:36:23 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 10:36:23 -==> Parameters: 1(Long)
2019-03-19 10:36:23 -<==      Total: 90
2019-03-19 10:36:23 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 10:36:23 -HTTP METHOD : GET
2019-03-19 10:36:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 10:36:23 -参数 : []
2019-03-19 10:36:23 -耗时 : 1
2019-03-19 10:36:23 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 10:36:24 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 10:36:24 -HTTP METHOD : GET
2019-03-19 10:36:24 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 10:36:24 -参数 : [userType]
2019-03-19 10:36:24 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 10:36:24 -==> Parameters: userType(String)
2019-03-19 10:36:24 -<==      Total: 2
2019-03-19 10:36:24 -耗时 : 5
2019-03-19 10:36:24 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 10:36:24 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 10:36:24 -HTTP METHOD : GET
2019-03-19 10:36:24 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 10:36:24 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 10:36:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 10:36:24 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 10:36:24 -<==      Total: 4
2019-03-19 10:36:24 -==>  Preparing: select count(*) from elec_log 
2019-03-19 10:36:24 -==> Parameters: 
2019-03-19 10:36:24 -<==      Total: 1
2019-03-19 10:36:24 -耗时 : 8
2019-03-19 10:36:24 -返回值 : com.bootdo.common.utils.PageUtils@58caeb0c
2019-03-19 10:36:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 10:36:51 -HTTP METHOD : GET
2019-03-19 10:36:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 10:36:51 -参数 : []
2019-03-19 10:36:51 -耗时 : 1
2019-03-19 10:36:51 -返回值 : system/dept/deptTree
2019-03-19 10:36:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 10:36:51 -HTTP METHOD : GET
2019-03-19 10:36:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 10:36:51 -参数 : []
2019-03-19 10:36:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 10:36:52 -==> Parameters: 
2019-03-19 10:36:52 -<==      Total: 3
2019-03-19 10:36:52 -耗时 : 22
2019-03-19 10:36:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 10:38:04 -请求地址 : http://localhost:8081/index
2019-03-19 10:38:04 -HTTP METHOD : GET
2019-03-19 10:38:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 10:38:04 -参数 : [{}]
2019-03-19 10:38:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 10:38:04 -==> Parameters: 1(Long)
2019-03-19 10:38:04 -<==      Total: 46
2019-03-19 10:38:04 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 10:38:04 -==> Parameters: 138(Long)
2019-03-19 10:38:04 -<==      Total: 1
2019-03-19 10:38:04 -耗时 : 33
2019-03-19 10:38:04 -返回值 : index_v1
2019-03-19 10:38:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 10:38:04 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 10:38:04.996(Timestamp)
2019-03-19 10:38:05 -<==    Updates: 1
2019-03-19 10:38:05 -请求地址 : http://localhost:8081/main
2019-03-19 10:38:05 -HTTP METHOD : GET
2019-03-19 10:38:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:38:05 -参数 : []
2019-03-19 10:38:05 -耗时 : 0
2019-03-19 10:38:05 -返回值 : main
2019-03-19 10:38:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 10:38:05 -HTTP METHOD : GET
2019-03-19 10:38:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 10:38:05 -参数 : []
2019-03-19 10:38:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 10:38:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 10:38:05 -<==      Total: 0
2019-03-19 10:38:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 10:38:05 -==> Parameters: 1(Long), 0(String)
2019-03-19 10:38:05 -<==      Total: 1
2019-03-19 10:38:05 -耗时 : 9
2019-03-19 10:38:05 -返回值 : com.bootdo.common.utils.PageUtils@2545b49d
2019-03-19 10:38:05 -请求地址 : http://localhost:8081/main
2019-03-19 10:38:05 -HTTP METHOD : GET
2019-03-19 10:38:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:38:05 -参数 : []
2019-03-19 10:38:05 -耗时 : 0
2019-03-19 10:38:05 -返回值 : main
2019-03-19 10:38:08 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 10:38:08 -HTTP METHOD : GET
2019-03-19 10:38:08 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 10:38:08 -参数 : []
2019-03-19 10:38:08 -耗时 : 0
2019-03-19 10:38:08 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 10:38:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 10:38:09 -HTTP METHOD : GET
2019-03-19 10:38:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 10:38:09 -参数 : [userType]
2019-03-19 10:38:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 10:38:09 -==> Parameters: userType(String)
2019-03-19 10:38:09 -<==      Total: 2
2019-03-19 10:38:09 -耗时 : 5
2019-03-19 10:38:09 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 10:38:09 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 10:38:09 -HTTP METHOD : GET
2019-03-19 10:38:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 10:38:09 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 10:38:09 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 10:38:09 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 10:38:09 -<==      Total: 4
2019-03-19 10:38:09 -==>  Preparing: select count(*) from elec_log 
2019-03-19 10:38:09 -==> Parameters: 
2019-03-19 10:38:09 -<==      Total: 1
2019-03-19 10:38:09 -耗时 : 9
2019-03-19 10:38:09 -返回值 : com.bootdo.common.utils.PageUtils@e2dc20a
2019-03-19 10:38:18 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 10:38:18 -HTTP METHOD : GET
2019-03-19 10:38:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 10:38:18 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-19, type=A}]
2019-03-19 10:38:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-19 10:38:18 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-19 10:38:18 -<==      Total: 3
2019-03-19 10:38:18 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and elec_date = ? 
2019-03-19 10:38:18 -==> Parameters: A(String), 2019-03-19(String)
2019-03-19 10:38:18 -<==      Total: 1
2019-03-19 10:38:18 -耗时 : 23
2019-03-19 10:38:18 -返回值 : com.bootdo.common.utils.PageUtils@71b5e63c
2019-03-19 10:38:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 10:38:25 -HTTP METHOD : GET
2019-03-19 10:38:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 10:38:25 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=2019-03-19, type=}]
2019-03-19 10:38:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 10:38:25 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 10:38:25 -<==      Total: 4
2019-03-19 10:38:25 -==>  Preparing: select count(*) from elec_log WHERE elec_date = ? 
2019-03-19 10:38:25 -==> Parameters: 2019-03-19(String)
2019-03-19 10:38:25 -<==      Total: 1
2019-03-19 10:38:25 -耗时 : 22
2019-03-19 10:38:25 -返回值 : com.bootdo.common.utils.PageUtils@b7463d9
2019-03-19 10:38:26 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 10:38:26 -HTTP METHOD : GET
2019-03-19 10:38:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 10:38:26 -参数 : []
2019-03-19 10:38:26 -耗时 : 1
2019-03-19 10:38:26 -返回值 : system/dept/deptTree
2019-03-19 10:38:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 10:38:26 -HTTP METHOD : GET
2019-03-19 10:38:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 10:38:26 -参数 : []
2019-03-19 10:38:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 10:38:26 -==> Parameters: 
2019-03-19 10:38:26 -<==      Total: 3
2019-03-19 10:38:26 -耗时 : 4
2019-03-19 10:38:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 10:38:32 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 10:38:32 -HTTP METHOD : GET
2019-03-19 10:38:32 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 10:38:32 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19, type=A}]
2019-03-19 10:38:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-03-19 10:38:32 -==> Parameters: A(String), 2(String), 0(Integer), 10(Integer)
2019-03-19 10:38:32 -<==      Total: 3
2019-03-19 10:38:32 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 10:38:32 -==> Parameters: A(String), 2(String), 2019-03-19(String)
2019-03-19 10:38:32 -<==      Total: 1
2019-03-19 10:38:32 -耗时 : 22
2019-03-19 10:38:32 -返回值 : com.bootdo.common.utils.PageUtils@58eb7c91
2019-03-19 10:40:01 -请求地址 : http://localhost:8081/login;JSESSIONID=d7775087-5773-4ecc-81e7-697fbcd12b38
2019-03-19 10:40:01 -HTTP METHOD : GET
2019-03-19 10:40:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 10:40:01 -参数 : [{}]
2019-03-19 10:40:01 -耗时 : 1
2019-03-19 10:40:01 -返回值 : login
2019-03-19 10:40:01 -请求地址 : http://localhost:8081/getVerify
2019-03-19 10:40:01 -HTTP METHOD : GET
2019-03-19 10:40:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 10:40:01 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4791d073, org.apache.shiro.web.servlet.ShiroHttpServletResponse@441d33e4]
2019-03-19 10:40:01 -5929
2019-03-19 10:40:01 -耗时 : 29
2019-03-19 10:40:01 -返回值 : null
2019-03-19 10:40:02 -请求地址 : http://localhost:8081/login
2019-03-19 10:40:02 -HTTP METHOD : GET
2019-03-19 10:40:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 10:40:02 -参数 : [{}]
2019-03-19 10:40:02 -耗时 : 1
2019-03-19 10:40:02 -返回值 : login
2019-03-19 10:40:08 -请求地址 : http://localhost:8081/login
2019-03-19 10:40:08 -HTTP METHOD : POST
2019-03-19 10:40:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 10:40:08 -参数 : [admin, 111111, 5929, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6452163d]
2019-03-19 10:40:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 10:40:08 -==> Parameters: admin(String)
2019-03-19 10:40:08 -<==      Total: 1
2019-03-19 10:40:08 -耗时 : 7
2019-03-19 10:40:08 -返回值 : {msg=操作成功, code=0}
2019-03-19 10:40:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 10:40:08 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 10:40:08.742(Timestamp)
2019-03-19 10:40:08 -请求地址 : http://localhost:8081/index
2019-03-19 10:40:08 -HTTP METHOD : GET
2019-03-19 10:40:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 10:40:08 -参数 : [{}]
2019-03-19 10:40:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 10:40:08 -==> Parameters: 1(Long)
2019-03-19 10:40:08 -<==    Updates: 1
2019-03-19 10:40:08 -<==      Total: 46
2019-03-19 10:40:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 10:40:08 -==> Parameters: 138(Long)
2019-03-19 10:40:09 -<==      Total: 1
2019-03-19 10:40:09 -耗时 : 335
2019-03-19 10:40:09 -返回值 : index_v1
2019-03-19 10:40:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 10:40:09 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 336(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 10:40:09.107(Timestamp)
2019-03-19 10:40:09 -<==    Updates: 1
2019-03-19 10:40:09 -请求地址 : http://localhost:8081/main
2019-03-19 10:40:09 -HTTP METHOD : GET
2019-03-19 10:40:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:40:09 -参数 : []
2019-03-19 10:40:09 -耗时 : 3
2019-03-19 10:40:09 -返回值 : main
2019-03-19 10:40:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 10:40:09 -HTTP METHOD : GET
2019-03-19 10:40:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 10:40:09 -参数 : []
2019-03-19 10:40:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 10:40:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 10:40:09 -请求地址 : http://localhost:8081/main
2019-03-19 10:40:09 -HTTP METHOD : GET
2019-03-19 10:40:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:40:09 -参数 : []
2019-03-19 10:40:09 -<==      Total: 0
2019-03-19 10:40:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 10:40:09 -==> Parameters: 1(Long), 0(String)
2019-03-19 10:40:09 -<==      Total: 1
2019-03-19 10:40:09 -耗时 : 54
2019-03-19 10:40:09 -返回值 : com.bootdo.common.utils.PageUtils@2d44692a
2019-03-19 10:40:09 -耗时 : 34
2019-03-19 10:40:09 -返回值 : main
2019-03-19 10:40:15 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 10:40:15 -==> Parameters: 1(Long)
2019-03-19 10:40:15 -<==      Total: 90
2019-03-19 10:40:15 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 10:40:15 -HTTP METHOD : GET
2019-03-19 10:40:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 10:40:15 -参数 : []
2019-03-19 10:40:15 -耗时 : 0
2019-03-19 10:40:15 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 10:40:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 10:40:15 -HTTP METHOD : GET
2019-03-19 10:40:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 10:40:15 -参数 : [userType]
2019-03-19 10:40:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 10:40:15 -==> Parameters: userType(String)
2019-03-19 10:40:15 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 10:40:15 -HTTP METHOD : GET
2019-03-19 10:40:15 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 10:40:15 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 10:40:15 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 10:40:15 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 10:40:15 -<==      Total: 4
2019-03-19 10:40:15 -==>  Preparing: select count(*) from elec_log 
2019-03-19 10:40:15 -==> Parameters: 
2019-03-19 10:40:15 -<==      Total: 1
2019-03-19 10:40:15 -耗时 : 12
2019-03-19 10:40:15 -返回值 : com.bootdo.common.utils.PageUtils@4db61ae4
2019-03-19 10:40:15 -<==      Total: 2
2019-03-19 10:40:15 -耗时 : 67
2019-03-19 10:40:15 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 10:40:22 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 10:40:22 -HTTP METHOD : GET
2019-03-19 10:40:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 10:40:22 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-19, type=A}]
2019-03-19 10:40:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-19 10:40:22 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-19 10:40:22 -<==      Total: 3
2019-03-19 10:40:22 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and elec_date = ? 
2019-03-19 10:40:22 -==> Parameters: A(String), 2019-03-19(String)
2019-03-19 10:40:22 -<==      Total: 1
2019-03-19 10:40:22 -耗时 : 60
2019-03-19 10:40:22 -返回值 : com.bootdo.common.utils.PageUtils@3b4e87be
2019-03-19 10:40:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 10:40:23 -HTTP METHOD : GET
2019-03-19 10:40:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 10:40:23 -参数 : []
2019-03-19 10:40:23 -耗时 : 1
2019-03-19 10:40:23 -返回值 : system/dept/deptTree
2019-03-19 10:40:23 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 10:40:23 -HTTP METHOD : GET
2019-03-19 10:40:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 10:40:23 -参数 : []
2019-03-19 10:40:23 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 10:40:23 -==> Parameters: 
2019-03-19 10:40:23 -<==      Total: 3
2019-03-19 10:40:23 -耗时 : 4
2019-03-19 10:40:23 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 10:40:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-19 10:40:25 -HTTP METHOD : GET
2019-03-19 10:40:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotExcel
2019-03-19 10:40:25 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@562fbef3, org.apache.shiro.web.servlet.ShiroHttpServletResponse@51bf2109]
2019-03-19 10:40:25 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-19 10:40:25 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00 00:00:00(String), 2019-03-19 00:00:00 23:59:59(String)
2019-03-19 10:40:25 -<==      Total: 0
2019-03-19 10:40:26 -耗时 : 937
2019-03-19 10:40:26 -返回值 : null
2019-03-19 10:42:05 -请求地址 : http://localhost:8081/index
2019-03-19 10:42:05 -HTTP METHOD : GET
2019-03-19 10:42:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 10:42:05 -参数 : [{}]
2019-03-19 10:42:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 10:42:05 -==> Parameters: 1(Long)
2019-03-19 10:42:05 -<==      Total: 46
2019-03-19 10:42:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 10:42:05 -==> Parameters: 138(Long)
2019-03-19 10:42:05 -<==      Total: 1
2019-03-19 10:42:05 -耗时 : 23
2019-03-19 10:42:05 -返回值 : index_v1
2019-03-19 10:42:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 10:42:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 10:42:05.292(Timestamp)
2019-03-19 10:42:05 -<==    Updates: 1
2019-03-19 10:42:05 -请求地址 : http://localhost:8081/main
2019-03-19 10:42:05 -HTTP METHOD : GET
2019-03-19 10:42:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:42:05 -参数 : []
2019-03-19 10:42:05 -耗时 : 1
2019-03-19 10:42:05 -返回值 : main
2019-03-19 10:42:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 10:42:05 -HTTP METHOD : GET
2019-03-19 10:42:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 10:42:05 -参数 : []
2019-03-19 10:42:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 10:42:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 10:42:05 -<==      Total: 0
2019-03-19 10:42:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 10:42:05 -==> Parameters: 1(Long), 0(String)
2019-03-19 10:42:05 -<==      Total: 1
2019-03-19 10:42:05 -耗时 : 28
2019-03-19 10:42:05 -返回值 : com.bootdo.common.utils.PageUtils@32d2a078
2019-03-19 10:42:06 -请求地址 : http://localhost:8081/main
2019-03-19 10:42:06 -HTTP METHOD : GET
2019-03-19 10:42:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:42:06 -参数 : []
2019-03-19 10:42:06 -耗时 : 0
2019-03-19 10:42:06 -返回值 : main
2019-03-19 10:42:09 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 10:42:09 -HTTP METHOD : GET
2019-03-19 10:42:09 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 10:42:09 -参数 : []
2019-03-19 10:42:09 -耗时 : 1
2019-03-19 10:42:09 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 10:42:10 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 10:42:10 -HTTP METHOD : GET
2019-03-19 10:42:10 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 10:42:10 -参数 : [userType]
2019-03-19 10:42:10 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 10:42:10 -==> Parameters: userType(String)
2019-03-19 10:42:10 -<==      Total: 2
2019-03-19 10:42:10 -耗时 : 5
2019-03-19 10:42:10 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 10:42:10 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 10:42:10 -HTTP METHOD : GET
2019-03-19 10:42:10 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 10:42:10 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 10:42:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 10:42:10 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 10:42:10 -<==      Total: 4
2019-03-19 10:42:10 -==>  Preparing: select count(*) from elec_log 
2019-03-19 10:42:10 -==> Parameters: 
2019-03-19 10:42:10 -<==      Total: 1
2019-03-19 10:42:10 -耗时 : 7
2019-03-19 10:42:10 -返回值 : com.bootdo.common.utils.PageUtils@19134f5e
2019-03-19 10:42:14 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 10:42:14 -HTTP METHOD : GET
2019-03-19 10:42:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 10:42:14 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-19, type=A}]
2019-03-19 10:42:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-19 10:42:14 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-19 10:42:14 -<==      Total: 3
2019-03-19 10:42:14 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and elec_date = ? 
2019-03-19 10:42:14 -==> Parameters: A(String), 2019-03-19(String)
2019-03-19 10:42:14 -<==      Total: 1
2019-03-19 10:42:14 -耗时 : 19
2019-03-19 10:42:14 -返回值 : com.bootdo.common.utils.PageUtils@2fd1fe96
2019-03-19 10:42:15 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 10:42:15 -HTTP METHOD : GET
2019-03-19 10:42:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 10:42:15 -参数 : []
2019-03-19 10:42:15 -耗时 : 0
2019-03-19 10:42:15 -返回值 : system/dept/deptTree
2019-03-19 10:42:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 10:42:15 -HTTP METHOD : GET
2019-03-19 10:42:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 10:42:15 -参数 : []
2019-03-19 10:42:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 10:42:15 -==> Parameters: 
2019-03-19 10:42:15 -<==      Total: 3
2019-03-19 10:42:15 -耗时 : 5
2019-03-19 10:42:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 10:42:17 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-19 10:42:17 -HTTP METHOD : GET
2019-03-19 10:42:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotExcel
2019-03-19 10:42:17 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@378b2f46, org.apache.shiro.web.servlet.ShiroHttpServletResponse@40889067]
2019-03-19 10:42:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? and `elec_date` >= ? and `elec_date` <= ? 
2019-03-19 10:42:17 -==> Parameters: A(String), 2(String), 2019-03-19 00:00:00 00:00:00(String), 2019-03-19 00:00:00 23:59:59(String)
2019-03-19 10:42:17 -<==      Total: 0
2019-03-19 10:42:17 -耗时 : 291
2019-03-19 10:42:17 -返回值 : null
2019-03-19 10:48:25 -Starting BootdoApplication on ZJZL-20180906VX with PID 12528 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-19 10:48:25 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-19 10:48:25 -The following profiles are active: dev
2019-03-19 10:48:26 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5316e95f: startup date [Tue Mar 19 10:48:26 CST 2019]; root of context hierarchy
2019-03-19 10:48:29 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-19 10:48:32 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dfdf01e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:48:33 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d2383089] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:48:34 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:48:35 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:48:35 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:48:35 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-19 10:48:35 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-19 10:48:35 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:48:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:48:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:48:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 10:48:36 -Tomcat initialized with port(s): 8081 (http)
2019-03-19 10:48:36 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-19 10:48:36 -Starting service [Tomcat]
2019-03-19 10:48:36 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-19 10:48:37 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-19 10:48:37 -Initializing Spring embedded WebApplicationContext
2019-03-19 10:48:37 -Root WebApplicationContext: initialization completed in 11444 ms
2019-03-19 10:48:38 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-19 10:48:38 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-19 10:48:38 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-19 10:48:38 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-19 10:48:38 -Filter xssFilter was not registered (disabled)
2019-03-19 10:48:38 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-19 10:48:38 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-19 10:48:38 -Servlet statViewServlet mapped to [/druid/*]
2019-03-19 10:48:38 -Servlet dispatcherServlet mapped to [/]
2019-03-19 10:48:42 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5316e95f: startup date [Tue Mar 19 10:48:26 CST 2019]; root of context hierarchy
2019-03-19 10:48:43 -Using default implementation for ThreadExecutor
2019-03-19 10:48:43 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-19 10:48:43 -Quartz Scheduler v.2.2.1 created.
2019-03-19 10:48:43 -RAMJobStore initialized.
2019-03-19 10:48:43 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-19 10:48:43 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-19 10:48:43 -Quartz scheduler version: 2.2.1
2019-03-19 10:48:43 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1b841e7d
2019-03-19 10:48:43 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-19 10:48:44 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-19 10:48:48 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:48:48 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-19 10:48:48 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-19 10:48:48 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-19 10:48:48 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-19 10:48:48 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-19 10:48:48 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-19 10:48:48 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-19 10:48:48 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-19 10:48:48 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-19 10:48:48 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-19 10:48:48 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-19 10:48:48 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-19 10:48:48 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-19 10:48:48 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-19 10:48:48 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-19 10:48:48 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-19 10:48:48 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-19 10:48:48 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-19 10:48:48 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-19 10:48:48 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-19 10:48:48 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-19 10:48:48 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 10:48:48 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-19 10:48:48 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 10:48:48 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-19 10:48:48 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-19 10:48:48 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-19 10:48:48 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-19 10:48:48 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-19 10:48:48 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-19 10:48:48 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-19 10:48:48 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-19 10:48:48 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-19 10:48:48 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-19 10:48:48 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 10:48:48 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 10:48:48 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-19 10:48:48 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-19 10:48:48 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-19 10:48:48 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-19 10:48:48 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-19 10:48:48 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:48:48 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-19 10:48:48 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:48:48 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-19 10:48:48 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-19 10:48:48 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-19 10:48:48 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-19 10:48:48 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 10:48:48 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 10:48:48 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-19 10:48:48 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-19 10:48:48 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 10:48:48 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-19 10:48:48 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-19 10:48:48 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-19 10:48:48 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-19 10:48:48 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-19 10:48:48 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:48:48 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-19 10:48:48 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:48:48 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-19 10:48:48 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-19 10:48:48 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-19 10:48:48 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 10:48:48 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 10:48:48 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-19 10:48:48 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-19 10:48:48 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-19 10:48:48 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 10:48:48 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-19 10:48:48 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-19 10:48:48 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-19 10:48:48 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-19 10:48:48 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 10:48:48 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 10:48:48 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:48:48 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-19 10:48:48 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-19 10:48:48 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-19 10:48:48 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 10:48:48 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 10:48:48 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-19 10:48:48 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-19 10:48:48 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-19 10:48:48 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 10:48:48 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 10:48:48 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-19 10:48:48 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-19 10:48:48 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-19 10:48:48 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-19 10:48:48 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-19 10:48:48 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-19 10:48:48 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-19 10:48:48 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-19 10:48:48 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-19 10:48:48 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-19 10:48:48 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-19 10:48:48 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-19 10:48:48 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-19 10:48:48 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-19 10:48:48 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-19 10:48:48 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-19 10:48:48 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-19 10:48:48 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-19 10:48:48 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-19 10:48:48 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-19 10:48:48 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-19 10:48:48 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-19 10:48:48 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 10:48:48 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 10:48:48 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-19 10:48:48 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-19 10:48:48 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-19 10:48:48 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-19 10:48:48 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-19 10:48:48 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-19 10:48:48 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-19 10:48:48 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-19 10:48:48 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-19 10:48:48 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-19 10:48:48 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-19 10:48:48 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-19 10:48:48 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-19 10:48:48 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-19 10:48:48 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-19 10:48:48 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-19 10:48:48 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-19 10:48:48 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-19 10:48:48 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-19 10:48:48 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 10:48:48 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 10:48:48 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 10:48:48 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-19 10:48:48 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-19 10:48:48 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-19 10:48:48 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-19 10:48:48 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-19 10:48:48 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:48:48 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-19 10:48:48 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 10:48:48 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-19 10:48:48 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-19 10:48:48 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-19 10:48:48 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-19 10:48:48 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 10:48:48 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 10:48:48 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 10:48:48 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-19 10:48:48 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 10:48:48 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-19 10:48:48 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 10:48:48 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-19 10:48:48 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-19 10:48:48 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-19 10:48:49 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-19 10:48:49 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-19 10:48:49 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-19 10:48:50 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 10:48:51 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5316e95f: startup date [Tue Mar 19 10:48:26 CST 2019]; root of context hierarchy
2019-03-19 10:48:51 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 10:48:51 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 10:48:51 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 10:48:51 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-19 10:48:52 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-19 10:48:55 -Registering beans for JMX exposure on startup
2019-03-19 10:48:55 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-19 10:48:55 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-19 10:48:55 -Starting beans in phase 2147483647
2019-03-19 10:48:55 -Context refreshed
2019-03-19 10:48:56 -Found 1 custom documentation plugin(s)
2019-03-19 10:48:56 -Scanning for api listing references
2019-03-19 10:48:57 -Generating unique operation named: removeUsingPOST_1
2019-03-19 10:48:57 -Generating unique operation named: addUsingGET_1
2019-03-19 10:48:57 -Generating unique operation named: editUsingGET_1
2019-03-19 10:48:57 -Generating unique operation named: listUsingGET_1
2019-03-19 10:48:57 -Generating unique operation named: removeUsingPOST_2
2019-03-19 10:48:57 -Generating unique operation named: removeUsingPOST_3
2019-03-19 10:48:57 -Generating unique operation named: saveUsingPOST_1
2019-03-19 10:48:57 -Generating unique operation named: updateUsingGET_1
2019-03-19 10:48:57 -Generating unique operation named: updateUsingHEAD_1
2019-03-19 10:48:57 -Generating unique operation named: updateUsingPOST_1
2019-03-19 10:48:57 -Generating unique operation named: updateUsingPUT_1
2019-03-19 10:48:57 -Generating unique operation named: updateUsingPATCH_1
2019-03-19 10:48:57 -Generating unique operation named: updateUsingDELETE_1
2019-03-19 10:48:57 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-19 10:48:57 -Generating unique operation named: updateUsingTRACE_1
2019-03-19 10:48:57 -Generating unique operation named: addUsingGET_2
2019-03-19 10:48:57 -Generating unique operation named: editUsingGET_2
2019-03-19 10:48:57 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-19 10:48:57 -Generating unique operation named: listUsingGET_2
2019-03-19 10:48:57 -Generating unique operation named: removeUsingPOST_4
2019-03-19 10:48:57 -Generating unique operation named: removeUsingPOST_5
2019-03-19 10:48:57 -Generating unique operation named: saveUsingPOST_2
2019-03-19 10:48:57 -Generating unique operation named: updateUsingGET_2
2019-03-19 10:48:57 -Generating unique operation named: updateUsingHEAD_2
2019-03-19 10:48:57 -Generating unique operation named: updateUsingPOST_2
2019-03-19 10:48:57 -Generating unique operation named: updateUsingPUT_2
2019-03-19 10:48:57 -Generating unique operation named: updateUsingPATCH_2
2019-03-19 10:48:57 -Generating unique operation named: updateUsingDELETE_2
2019-03-19 10:48:57 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-19 10:48:57 -Generating unique operation named: updateUsingTRACE_2
2019-03-19 10:48:57 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-19 10:48:57 -Generating unique operation named: addUsingGET_3
2019-03-19 10:48:57 -Generating unique operation named: editUsingGET_3
2019-03-19 10:48:57 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-19 10:48:57 -Generating unique operation named: listUsingGET_3
2019-03-19 10:48:57 -Generating unique operation named: removeUsingPOST_6
2019-03-19 10:48:57 -Generating unique operation named: removeUsingPOST_7
2019-03-19 10:48:57 -Generating unique operation named: saveUsingPOST_3
2019-03-19 10:48:57 -Generating unique operation named: updateUsingGET_3
2019-03-19 10:48:57 -Generating unique operation named: updateUsingHEAD_3
2019-03-19 10:48:57 -Generating unique operation named: updateUsingPOST_3
2019-03-19 10:48:57 -Generating unique operation named: updateUsingPUT_3
2019-03-19 10:48:57 -Generating unique operation named: updateUsingPATCH_3
2019-03-19 10:48:57 -Generating unique operation named: updateUsingDELETE_3
2019-03-19 10:48:57 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-19 10:48:57 -Generating unique operation named: updateUsingTRACE_3
2019-03-19 10:48:57 -Generating unique operation named: addUsingGET_4
2019-03-19 10:48:57 -Generating unique operation named: editUsingGET_4
2019-03-19 10:48:57 -Generating unique operation named: listUsingGET_4
2019-03-19 10:48:57 -Generating unique operation named: removeUsingPOST_8
2019-03-19 10:48:57 -Generating unique operation named: removeUsingPOST_9
2019-03-19 10:48:57 -Generating unique operation named: saveUsingPOST_4
2019-03-19 10:48:57 -Generating unique operation named: updateUsingGET_4
2019-03-19 10:48:57 -Generating unique operation named: updateUsingHEAD_4
2019-03-19 10:48:57 -Generating unique operation named: updateUsingPOST_4
2019-03-19 10:48:57 -Generating unique operation named: updateUsingPUT_4
2019-03-19 10:48:57 -Generating unique operation named: updateUsingPATCH_4
2019-03-19 10:48:57 -Generating unique operation named: updateUsingDELETE_4
2019-03-19 10:48:57 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-19 10:48:57 -Generating unique operation named: updateUsingTRACE_4
2019-03-19 10:48:58 -Generating unique operation named: ElecUsingGET_1
2019-03-19 10:48:58 -Generating unique operation named: addUsingGET_5
2019-03-19 10:48:58 -Generating unique operation named: editUsingGET_5
2019-03-19 10:48:58 -Generating unique operation named: listUsingGET_5
2019-03-19 10:48:58 -Generating unique operation named: removeUsingPOST_10
2019-03-19 10:48:58 -Generating unique operation named: removeUsingPOST_11
2019-03-19 10:48:58 -Generating unique operation named: saveUsingPOST_5
2019-03-19 10:48:58 -Generating unique operation named: updateUsingGET_5
2019-03-19 10:48:58 -Generating unique operation named: updateUsingHEAD_5
2019-03-19 10:48:58 -Generating unique operation named: updateUsingPOST_5
2019-03-19 10:48:58 -Generating unique operation named: updateUsingPUT_5
2019-03-19 10:48:58 -Generating unique operation named: updateUsingPATCH_5
2019-03-19 10:48:58 -Generating unique operation named: updateUsingDELETE_5
2019-03-19 10:48:58 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-19 10:48:58 -Generating unique operation named: updateUsingTRACE_5
2019-03-19 10:48:58 -Generating unique operation named: editUsingGET_6
2019-03-19 10:48:58 -Generating unique operation named: listUsingGET_6
2019-03-19 10:48:58 -Generating unique operation named: updateUsingPOST_6
2019-03-19 10:48:58 -Generating unique operation named: addUsingGET_6
2019-03-19 10:48:58 -Generating unique operation named: editUsingGET_7
2019-03-19 10:48:58 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-19 10:48:58 -Generating unique operation named: listUsingGET_7
2019-03-19 10:48:58 -Generating unique operation named: removeUsingPOST_12
2019-03-19 10:48:58 -Generating unique operation named: removeUsingPOST_13
2019-03-19 10:48:58 -Generating unique operation named: saveUsingPOST_6
2019-03-19 10:48:58 -Generating unique operation named: updateUsingGET_6
2019-03-19 10:48:58 -Generating unique operation named: updateUsingHEAD_6
2019-03-19 10:48:58 -Generating unique operation named: updateUsingPOST_7
2019-03-19 10:48:58 -Generating unique operation named: updateUsingPUT_6
2019-03-19 10:48:58 -Generating unique operation named: updateUsingPATCH_6
2019-03-19 10:48:58 -Generating unique operation named: updateUsingDELETE_6
2019-03-19 10:48:58 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-19 10:48:58 -Generating unique operation named: updateUsingTRACE_6
2019-03-19 10:48:58 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-19 10:48:58 -Generating unique operation named: addUsingGET_7
2019-03-19 10:48:58 -Generating unique operation named: editUsingGET_8
2019-03-19 10:48:58 -Generating unique operation named: listUsingGET_8
2019-03-19 10:48:58 -Generating unique operation named: removeUsingPOST_14
2019-03-19 10:48:58 -Generating unique operation named: removeUsingPOST_15
2019-03-19 10:48:58 -Generating unique operation named: saveUsingPOST_7
2019-03-19 10:48:58 -Generating unique operation named: updateUsingGET_7
2019-03-19 10:48:58 -Generating unique operation named: updateUsingHEAD_7
2019-03-19 10:48:58 -Generating unique operation named: updateUsingPOST_8
2019-03-19 10:48:58 -Generating unique operation named: updateUsingPUT_7
2019-03-19 10:48:58 -Generating unique operation named: updateUsingPATCH_7
2019-03-19 10:48:58 -Generating unique operation named: updateUsingDELETE_7
2019-03-19 10:48:58 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-19 10:48:58 -Generating unique operation named: updateUsingTRACE_7
2019-03-19 10:48:58 -Generating unique operation named: addUsingGET_8
2019-03-19 10:48:58 -Generating unique operation named: editUsingGET_9
2019-03-19 10:48:58 -Generating unique operation named: listUsingGET_9
2019-03-19 10:48:58 -Generating unique operation named: removeUsingPOST_16
2019-03-19 10:48:58 -Generating unique operation named: removeUsingPOST_17
2019-03-19 10:48:58 -Generating unique operation named: saveUsingPOST_8
2019-03-19 10:48:58 -Generating unique operation named: updateUsingGET_8
2019-03-19 10:48:58 -Generating unique operation named: updateUsingHEAD_8
2019-03-19 10:48:58 -Generating unique operation named: updateUsingPOST_9
2019-03-19 10:48:58 -Generating unique operation named: updateUsingPUT_8
2019-03-19 10:48:58 -Generating unique operation named: updateUsingPATCH_8
2019-03-19 10:48:58 -Generating unique operation named: updateUsingDELETE_8
2019-03-19 10:48:58 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-19 10:48:58 -Generating unique operation named: updateUsingTRACE_8
2019-03-19 10:48:58 -Generating unique operation named: addUsingGET_9
2019-03-19 10:48:58 -Generating unique operation named: editUsingGET_10
2019-03-19 10:48:58 -Generating unique operation named: infoUsingGET_1
2019-03-19 10:48:58 -Generating unique operation named: infoUsingHEAD_1
2019-03-19 10:48:58 -Generating unique operation named: infoUsingPOST_1
2019-03-19 10:48:58 -Generating unique operation named: infoUsingPUT_1
2019-03-19 10:48:58 -Generating unique operation named: infoUsingPATCH_1
2019-03-19 10:48:58 -Generating unique operation named: infoUsingDELETE_1
2019-03-19 10:48:58 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-19 10:48:58 -Generating unique operation named: infoUsingTRACE_1
2019-03-19 10:48:58 -Generating unique operation named: listUsingGET_10
2019-03-19 10:48:58 -Generating unique operation named: removeUsingPOST_18
2019-03-19 10:48:59 -Generating unique operation named: removeUsingPOST_19
2019-03-19 10:48:59 -Generating unique operation named: saveUsingPOST_9
2019-03-19 10:48:59 -Generating unique operation named: updateUsingPOST_10
2019-03-19 10:48:59 -Generating unique operation named: listUsingGET_11
2019-03-19 10:48:59 -Generating unique operation named: removeUsingPOST_20
2019-03-19 10:48:59 -Generating unique operation named: welcomeUsingGET_1
2019-03-19 10:48:59 -Generating unique operation named: addUsingGET_10
2019-03-19 10:48:59 -Generating unique operation named: editUsingGET_11
2019-03-19 10:48:59 -Generating unique operation named: listUsingGET_12
2019-03-19 10:48:59 -Generating unique operation named: removeUsingPOST_21
2019-03-19 10:48:59 -Generating unique operation named: saveUsingPOST_10
2019-03-19 10:48:59 -Generating unique operation named: treeUsingGET_1
2019-03-19 10:48:59 -Generating unique operation named: treeUsingGET_2
2019-03-19 10:48:59 -Generating unique operation named: updateUsingPOST_11
2019-03-19 10:48:59 -Generating unique operation named: addUsingGET_11
2019-03-19 10:48:59 -Generating unique operation named: editUsingGET_12
2019-03-19 10:48:59 -Generating unique operation named: listUsingGET_13
2019-03-19 10:48:59 -Generating unique operation named: removeUsingPOST_22
2019-03-19 10:48:59 -Generating unique operation named: removeUsingPOST_23
2019-03-19 10:48:59 -Generating unique operation named: saveUsingPOST_11
2019-03-19 10:48:59 -Generating unique operation named: updateUsingGET_9
2019-03-19 10:48:59 -Generating unique operation named: updateUsingHEAD_9
2019-03-19 10:48:59 -Generating unique operation named: updateUsingPOST_12
2019-03-19 10:48:59 -Generating unique operation named: updateUsingPUT_9
2019-03-19 10:48:59 -Generating unique operation named: updateUsingPATCH_9
2019-03-19 10:48:59 -Generating unique operation named: updateUsingDELETE_9
2019-03-19 10:48:59 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-19 10:48:59 -Generating unique operation named: updateUsingTRACE_9
2019-03-19 10:48:59 -Generating unique operation named: addUsingGET_12
2019-03-19 10:48:59 -Generating unique operation named: editUsingGET_13
2019-03-19 10:48:59 -Generating unique operation named: listUsingGET_14
2019-03-19 10:48:59 -Generating unique operation named: removeUsingPOST_24
2019-03-19 10:48:59 -Generating unique operation named: removeUsingPOST_25
2019-03-19 10:48:59 -Generating unique operation named: saveUsingPOST_12
2019-03-19 10:48:59 -Generating unique operation named: updateUsingGET_10
2019-03-19 10:48:59 -Generating unique operation named: updateUsingHEAD_10
2019-03-19 10:48:59 -Generating unique operation named: updateUsingPOST_13
2019-03-19 10:48:59 -Generating unique operation named: updateUsingPUT_10
2019-03-19 10:48:59 -Generating unique operation named: updateUsingPATCH_10
2019-03-19 10:48:59 -Generating unique operation named: updateUsingDELETE_10
2019-03-19 10:48:59 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-19 10:48:59 -Generating unique operation named: updateUsingTRACE_10
2019-03-19 10:48:59 -Generating unique operation named: addUsingGET_13
2019-03-19 10:48:59 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-19 10:48:59 -Generating unique operation named: editUsingGET_14
2019-03-19 10:48:59 -Generating unique operation named: listUsingGET_15
2019-03-19 10:48:59 -Generating unique operation named: saveUsingPOST_13
2019-03-19 10:48:59 -Generating unique operation named: saveUsingPOST_14
2019-03-19 10:48:59 -Generating unique operation named: updateUsingPOST_14
2019-03-19 10:48:59 -Generating unique operation named: listUsingGET_16
2019-03-19 10:48:59 -Generating unique operation named: listUsingHEAD_1
2019-03-19 10:48:59 -Generating unique operation named: listUsingPOST_1
2019-03-19 10:48:59 -Generating unique operation named: listUsingPUT_1
2019-03-19 10:48:59 -Generating unique operation named: listUsingPATCH_1
2019-03-19 10:48:59 -Generating unique operation named: listUsingDELETE_1
2019-03-19 10:48:59 -Generating unique operation named: listUsingOPTIONS_1
2019-03-19 10:48:59 -Generating unique operation named: listUsingTRACE_1
2019-03-19 10:49:00 -Generating unique operation named: addUsingGET_14
2019-03-19 10:49:00 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-19 10:49:00 -Generating unique operation named: editUsingGET_15
2019-03-19 10:49:00 -Generating unique operation named: listUsingGET_17
2019-03-19 10:49:00 -Generating unique operation named: removeUsingPOST_26
2019-03-19 10:49:00 -Generating unique operation named: saveUsingPOST_15
2019-03-19 10:49:00 -Generating unique operation named: treeUsingGET_3
2019-03-19 10:49:00 -Generating unique operation named: treeViewUsingGET_1
2019-03-19 10:49:00 -Generating unique operation named: updateUsingPOST_15
2019-03-19 10:49:00 -Generating unique operation named: addUsingGET_15
2019-03-19 10:49:00 -Generating unique operation named: editUsingGET_16
2019-03-19 10:49:00 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-19 10:49:00 -Generating unique operation named: listUsingGET_18
2019-03-19 10:49:00 -Generating unique operation named: removeUsingPOST_27
2019-03-19 10:49:00 -Generating unique operation named: removeUsingPOST_28
2019-03-19 10:49:00 -Generating unique operation named: saveUsingPOST_16
2019-03-19 10:49:00 -Generating unique operation named: updateUsingGET_11
2019-03-19 10:49:00 -Generating unique operation named: updateUsingHEAD_11
2019-03-19 10:49:00 -Generating unique operation named: updateUsingPOST_16
2019-03-19 10:49:00 -Generating unique operation named: updateUsingPUT_11
2019-03-19 10:49:00 -Generating unique operation named: updateUsingPATCH_11
2019-03-19 10:49:00 -Generating unique operation named: updateUsingDELETE_11
2019-03-19 10:49:00 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-19 10:49:00 -Generating unique operation named: updateUsingTRACE_11
2019-03-19 10:49:00 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-19 10:49:00 -Generating unique operation named: addUsingGET_16
2019-03-19 10:49:00 -Generating unique operation named: editUsingGET_17
2019-03-19 10:49:00 -Generating unique operation named: listUsingGET_19
2019-03-19 10:49:00 -Generating unique operation named: removeUsingPOST_29
2019-03-19 10:49:00 -Generating unique operation named: removeUsingPOST_30
2019-03-19 10:49:00 -Generating unique operation named: saveUsingPOST_17
2019-03-19 10:49:00 -Generating unique operation named: updateUsingGET_12
2019-03-19 10:49:00 -Generating unique operation named: updateUsingHEAD_12
2019-03-19 10:49:00 -Generating unique operation named: updateUsingPOST_17
2019-03-19 10:49:00 -Generating unique operation named: updateUsingPUT_12
2019-03-19 10:49:00 -Generating unique operation named: updateUsingPATCH_12
2019-03-19 10:49:00 -Generating unique operation named: updateUsingDELETE_12
2019-03-19 10:49:00 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-19 10:49:00 -Generating unique operation named: updateUsingTRACE_12
2019-03-19 10:49:00 -Generating unique operation named: addUsingGET_17
2019-03-19 10:49:00 -Generating unique operation named: editUsingGET_18
2019-03-19 10:49:00 -Generating unique operation named: listUsingGET_20
2019-03-19 10:49:00 -Generating unique operation named: removeUsingPOST_31
2019-03-19 10:49:00 -Generating unique operation named: removeUsingPOST_32
2019-03-19 10:49:00 -Generating unique operation named: saveUsingPOST_18
2019-03-19 10:49:00 -Generating unique operation named: updateUsingGET_13
2019-03-19 10:49:00 -Generating unique operation named: updateUsingHEAD_13
2019-03-19 10:49:00 -Generating unique operation named: updateUsingPOST_18
2019-03-19 10:49:00 -Generating unique operation named: updateUsingPUT_13
2019-03-19 10:49:00 -Generating unique operation named: updateUsingPATCH_13
2019-03-19 10:49:00 -Generating unique operation named: updateUsingDELETE_13
2019-03-19 10:49:00 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-19 10:49:00 -Generating unique operation named: updateUsingTRACE_13
2019-03-19 10:49:00 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-19 10:49:00 -Starting Quartz Scheduler now
2019-03-19 10:49:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-19 10:49:00 -Starting...
2019-03-19 10:49:00 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 10:49:00 -Started.
2019-03-19 10:49:00 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-19 10:49:01 -Using a shared selector for servlet write/read
2019-03-19 10:49:01 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-19 10:49:01 -Started BootdoApplication in 37.266 seconds (JVM running for 39.047)
2019-03-19 10:49:01 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-19 10:49:01 -==> Parameters: 
2019-03-19 10:49:01 -<==      Total: 1
2019-03-19 10:49:10 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-19 10:49:10 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-19 10:49:10 -FrameworkServlet 'dispatcherServlet': initialization completed in 54 ms
2019-03-19 10:49:10 -Enabling session validation scheduler...
2019-03-19 10:49:10 -请求地址 : http://localhost:8081/login;JSESSIONID=4dacd3a5-90c0-477c-b7f5-7f8c912a0e2f
2019-03-19 10:49:10 -HTTP METHOD : GET
2019-03-19 10:49:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 10:49:10 -参数 : [{}]
2019-03-19 10:49:10 -耗时 : 3
2019-03-19 10:49:10 -返回值 : login
2019-03-19 10:49:11 -请求地址 : http://localhost:8081/getVerify
2019-03-19 10:49:11 -HTTP METHOD : GET
2019-03-19 10:49:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 10:49:11 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@ef9346c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7371371]
2019-03-19 10:49:14 -8813
2019-03-19 10:49:15 -耗时 : 3086
2019-03-19 10:49:15 -返回值 : null
2019-03-19 10:49:19 -请求地址 : http://localhost:8081/login
2019-03-19 10:49:19 -HTTP METHOD : POST
2019-03-19 10:49:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 10:49:19 -参数 : [admin, 111111, 8813, org.apache.shiro.web.servlet.ShiroHttpServletRequest@606cbf80]
2019-03-19 10:49:19 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 10:49:19 -==> Parameters: admin(String)
2019-03-19 10:49:19 -<==      Total: 1
2019-03-19 10:49:19 -耗时 : 156
2019-03-19 10:49:19 -返回值 : {msg=操作成功, code=0}
2019-03-19 10:49:19 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-19 10:49:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 10:49:19 -==> Parameters: 1(Long), admin(String), 登录(String), 156(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 10:49:19.425(Timestamp)
2019-03-19 10:49:19 -<==    Updates: 1
2019-03-19 10:49:19 -请求地址 : http://localhost:8081/index
2019-03-19 10:49:19 -HTTP METHOD : GET
2019-03-19 10:49:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 10:49:19 -参数 : [{}]
2019-03-19 10:49:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 10:49:19 -==> Parameters: 1(Long)
2019-03-19 10:49:19 -<==      Total: 46
2019-03-19 10:49:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 10:49:19 -==> Parameters: 138(Long)
2019-03-19 10:49:19 -<==      Total: 1
2019-03-19 10:49:19 -耗时 : 217
2019-03-19 10:49:19 -返回值 : index_v1
2019-03-19 10:49:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 10:49:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 217(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 10:49:19.809(Timestamp)
2019-03-19 10:49:19 -<==    Updates: 1
2019-03-19 10:49:20 -请求地址 : http://localhost:8081/main
2019-03-19 10:49:20 -HTTP METHOD : GET
2019-03-19 10:49:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:49:20 -参数 : []
2019-03-19 10:49:20 -耗时 : 0
2019-03-19 10:49:20 -返回值 : main
2019-03-19 10:49:20 -请求地址 : http://localhost:8081/main
2019-03-19 10:49:20 -HTTP METHOD : GET
2019-03-19 10:49:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 10:49:20 -参数 : []
2019-03-19 10:49:20 -耗时 : 2
2019-03-19 10:49:20 -返回值 : main
2019-03-19 10:49:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 10:49:20 -HTTP METHOD : GET
2019-03-19 10:49:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 10:49:20 -参数 : []
2019-03-19 10:49:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 10:49:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 10:49:20 -<==      Total: 0
2019-03-19 10:49:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 10:49:20 -==> Parameters: 1(Long), 0(String)
2019-03-19 10:49:20 -<==      Total: 1
2019-03-19 10:49:20 -耗时 : 97
2019-03-19 10:49:20 -返回值 : com.bootdo.common.utils.PageUtils@353ee1e5
2019-03-19 10:49:27 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 10:49:27 -==> Parameters: 1(Long)
2019-03-19 10:49:27 -<==      Total: 90
2019-03-19 10:49:27 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 10:49:27 -HTTP METHOD : GET
2019-03-19 10:49:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 10:49:27 -参数 : []
2019-03-19 10:49:27 -耗时 : 2
2019-03-19 10:49:27 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 10:49:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 10:49:28 -HTTP METHOD : GET
2019-03-19 10:49:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 10:49:28 -参数 : [userType]
2019-03-19 10:49:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 10:49:28 -==> Parameters: userType(String)
2019-03-19 10:49:28 -<==      Total: 2
2019-03-19 10:49:28 -耗时 : 71
2019-03-19 10:49:28 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 10:49:28 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 10:49:28 -HTTP METHOD : GET
2019-03-19 10:49:28 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 10:49:28 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 10:49:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 10:49:28 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 10:49:28 -<==      Total: 4
2019-03-19 10:49:28 -==>  Preparing: select count(*) from elec_log 
2019-03-19 10:49:28 -==> Parameters: 
2019-03-19 10:49:28 -<==      Total: 1
2019-03-19 10:49:28 -耗时 : 47
2019-03-19 10:49:28 -返回值 : com.bootdo.common.utils.PageUtils@4c6e2e
2019-03-19 10:49:37 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 10:49:37 -HTTP METHOD : GET
2019-03-19 10:49:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 10:49:37 -参数 : []
2019-03-19 10:49:37 -耗时 : 0
2019-03-19 10:49:37 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 10:49:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 10:49:37 -HTTP METHOD : GET
2019-03-19 10:49:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 10:49:37 -参数 : [userType]
2019-03-19 10:49:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 10:49:37 -==> Parameters: userType(String)
2019-03-19 10:49:37 -<==      Total: 2
2019-03-19 10:49:37 -耗时 : 5
2019-03-19 10:49:37 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 10:49:37 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 10:49:37 -HTTP METHOD : GET
2019-03-19 10:49:37 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 10:49:37 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 10:49:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 10:49:37 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 10:49:37 -<==      Total: 3
2019-03-19 10:49:37 -==>  Preparing: select count(*) from water_log 
2019-03-19 10:49:37 -==> Parameters: 
2019-03-19 10:49:37 -<==      Total: 1
2019-03-19 10:49:37 -耗时 : 32
2019-03-19 10:49:37 -返回值 : com.bootdo.common.utils.PageUtils@23dd6971
2019-03-19 10:49:38 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 10:49:38 -HTTP METHOD : GET
2019-03-19 10:49:38 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 10:49:38 -参数 : []
2019-03-19 10:49:38 -耗时 : 1
2019-03-19 10:49:38 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 10:49:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 10:49:39 -HTTP METHOD : GET
2019-03-19 10:49:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 10:49:39 -参数 : [userType]
2019-03-19 10:49:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 10:49:39 -==> Parameters: userType(String)
2019-03-19 10:49:39 -<==      Total: 2
2019-03-19 10:49:39 -耗时 : 10
2019-03-19 10:49:39 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 10:49:39 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 10:49:39 -HTTP METHOD : GET
2019-03-19 10:49:39 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 10:49:39 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 10:49:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 10:49:39 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 10:49:39 -<==      Total: 4
2019-03-19 10:49:39 -==>  Preparing: select count(*) from elec_log 
2019-03-19 10:49:39 -==> Parameters: 
2019-03-19 10:49:39 -<==      Total: 1
2019-03-19 10:49:39 -耗时 : 16
2019-03-19 10:49:39 -返回值 : com.bootdo.common.utils.PageUtils@f4f1ab5
2019-03-19 10:49:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-03-19 10:54:23 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 10:54:23 -HTTP METHOD : GET
2019-03-19 10:54:23 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 10:54:23 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-19, type=A}]
2019-03-19 10:54:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-19 10:54:23 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-19 10:54:23 -<==      Total: 3
2019-03-19 10:54:23 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and elec_date = ? 
2019-03-19 10:54:23 -==> Parameters: A(String), 2019-03-19(String)
2019-03-19 10:54:23 -<==      Total: 1
2019-03-19 10:54:23 -耗时 : 20
2019-03-19 10:54:23 -返回值 : com.bootdo.common.utils.PageUtils@5e122339
2019-03-19 10:54:23 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 10:54:23 -HTTP METHOD : GET
2019-03-19 10:54:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 10:54:23 -参数 : []
2019-03-19 10:54:23 -耗时 : 1
2019-03-19 10:54:23 -返回值 : system/dept/deptTree
2019-03-19 10:54:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 10:54:24 -HTTP METHOD : GET
2019-03-19 10:54:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 10:54:24 -参数 : []
2019-03-19 10:54:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 10:54:24 -==> Parameters: 
2019-03-19 10:54:24 -<==      Total: 3
2019-03-19 10:54:24 -耗时 : 36
2019-03-19 10:54:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 10:54:26 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 10:54:26 -HTTP METHOD : GET
2019-03-19 10:54:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 10:54:26 -参数 : [{limit=10, offset=0, userType=A, userOrg=2, userId=, elecDate=2019-03-19}]
2019-03-19 10:54:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? and user_org = ? order by id asc limit ?, ? 
2019-03-19 10:54:26 -==> Parameters: A(String), 2(String), 0(Integer), 10(Integer)
2019-03-19 10:54:26 -<==      Total: 3
2019-03-19 10:54:26 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and user_org = ? and elec_date = ? 
2019-03-19 10:54:26 -==> Parameters: A(String), 2(String), 2019-03-19(String)
2019-03-19 10:54:26 -<==      Total: 1
2019-03-19 10:54:26 -耗时 : 19
2019-03-19 10:54:26 -返回值 : com.bootdo.common.utils.PageUtils@480d38e4
2019-03-19 10:54:27 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-19 10:54:27 -HTTP METHOD : GET
2019-03-19 10:54:27 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotExcel
2019-03-19 10:54:27 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@1d0ad1dd, org.apache.shiro.web.servlet.ShiroHttpServletResponse@798b1f78]
2019-03-19 10:54:27 -耗时 : 87
2019-03-19 10:54:27 -返回值 : null
2019-03-19 11:14:31 -Starting BootdoApplication on ZJZL-20180906VX with PID 2300 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-19 11:14:31 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-19 11:14:31 -The following profiles are active: dev
2019-03-19 11:14:31 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@346a361: startup date [Tue Mar 19 11:14:31 CST 2019]; root of context hierarchy
2019-03-19 11:14:35 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-19 11:14:37 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$92640269] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:14:37 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$84bd3110] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:14:38 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:14:38 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:14:38 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:14:38 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-19 11:14:38 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-19 11:14:38 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:14:38 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:14:39 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:14:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:14:40 -Tomcat initialized with port(s): 8081 (http)
2019-03-19 11:14:40 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-19 11:14:40 -Starting service [Tomcat]
2019-03-19 11:14:40 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-19 11:14:40 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-19 11:14:40 -Initializing Spring embedded WebApplicationContext
2019-03-19 11:14:40 -Root WebApplicationContext: initialization completed in 8911 ms
2019-03-19 11:14:41 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-19 11:14:41 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-19 11:14:41 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-19 11:14:41 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-19 11:14:41 -Filter xssFilter was not registered (disabled)
2019-03-19 11:14:41 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-19 11:14:41 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-19 11:14:41 -Servlet statViewServlet mapped to [/druid/*]
2019-03-19 11:14:41 -Servlet dispatcherServlet mapped to [/]
2019-03-19 11:14:44 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@346a361: startup date [Tue Mar 19 11:14:31 CST 2019]; root of context hierarchy
2019-03-19 11:14:44 -Using default implementation for ThreadExecutor
2019-03-19 11:14:44 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-19 11:14:44 -Quartz Scheduler v.2.2.1 created.
2019-03-19 11:14:44 -RAMJobStore initialized.
2019-03-19 11:14:44 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-19 11:14:44 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-19 11:14:44 -Quartz scheduler version: 2.2.1
2019-03-19 11:14:44 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3b046e64
2019-03-19 11:14:45 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-19 11:14:45 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-19 11:14:48 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 11:14:48 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-19 11:14:48 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-19 11:14:48 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-19 11:14:48 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-19 11:14:48 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-19 11:14:48 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-19 11:14:48 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-19 11:14:48 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-19 11:14:48 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-19 11:14:48 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-19 11:14:48 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-19 11:14:48 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-19 11:14:48 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-19 11:14:48 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-19 11:14:48 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-19 11:14:48 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-19 11:14:48 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-19 11:14:48 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-19 11:14:48 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-19 11:14:48 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-19 11:14:48 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-19 11:14:48 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 11:14:48 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-19 11:14:48 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 11:14:48 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-19 11:14:48 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-19 11:14:48 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-19 11:14:48 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-19 11:14:48 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-19 11:14:48 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-19 11:14:48 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-19 11:14:48 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-19 11:14:48 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-19 11:14:48 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-19 11:14:48 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 11:14:48 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 11:14:48 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-19 11:14:48 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-19 11:14:48 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-19 11:14:48 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-19 11:14:48 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-19 11:14:48 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-19 11:14:48 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 11:14:48 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-19 11:14:48 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-19 11:14:48 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 11:14:48 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-19 11:14:48 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-19 11:14:48 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 11:14:48 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 11:14:48 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-19 11:14:48 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-19 11:14:48 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 11:14:48 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-19 11:14:48 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-19 11:14:48 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-19 11:14:48 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-19 11:14:48 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-19 11:14:48 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-19 11:14:48 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 11:14:48 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-19 11:14:48 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 11:14:48 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-19 11:14:48 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-19 11:14:48 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 11:14:48 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 11:14:48 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-19 11:14:48 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 11:14:48 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-19 11:14:48 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-19 11:14:48 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-19 11:14:48 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-19 11:14:48 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-19 11:14:48 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-19 11:14:48 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 11:14:48 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 11:14:48 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-19 11:14:48 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 11:14:48 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-19 11:14:48 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-19 11:14:48 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 11:14:48 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 11:14:48 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-19 11:14:48 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-19 11:14:48 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-19 11:14:48 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 11:14:48 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 11:14:48 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-19 11:14:48 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-19 11:14:48 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-19 11:14:48 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-19 11:14:48 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-19 11:14:48 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-19 11:14:48 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-19 11:14:48 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-19 11:14:48 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-19 11:14:48 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-19 11:14:48 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-19 11:14:48 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-19 11:14:48 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-19 11:14:48 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-19 11:14:48 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-19 11:14:48 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-19 11:14:48 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-19 11:14:48 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-19 11:14:48 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-19 11:14:48 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-19 11:14:48 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-19 11:14:48 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-19 11:14:48 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 11:14:48 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 11:14:48 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-19 11:14:48 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-19 11:14:48 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-19 11:14:48 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-19 11:14:48 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-19 11:14:48 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-19 11:14:48 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-19 11:14:48 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-19 11:14:48 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-19 11:14:48 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-19 11:14:48 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-19 11:14:48 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-19 11:14:48 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-19 11:14:48 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-19 11:14:48 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-19 11:14:48 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-19 11:14:48 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-19 11:14:48 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-19 11:14:48 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 11:14:48 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-19 11:14:48 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 11:14:48 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 11:14:48 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-19 11:14:48 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-19 11:14:48 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-19 11:14:48 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-19 11:14:48 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-19 11:14:48 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-19 11:14:48 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 11:14:48 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-19 11:14:48 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 11:14:48 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-19 11:14:48 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-19 11:14:48 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-19 11:14:48 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 11:14:48 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 11:14:48 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-19 11:14:48 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:14:48 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:14:48 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-19 11:14:48 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 11:14:48 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-19 11:14:48 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-19 11:14:48 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-19 11:14:49 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-19 11:14:49 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-19 11:14:49 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-19 11:14:49 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 11:14:50 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@346a361: startup date [Tue Mar 19 11:14:31 CST 2019]; root of context hierarchy
2019-03-19 11:14:50 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 11:14:50 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 11:14:50 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 11:14:50 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-19 11:14:50 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-19 11:14:52 -Registering beans for JMX exposure on startup
2019-03-19 11:14:52 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-19 11:14:52 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-19 11:14:52 -Starting beans in phase 2147483647
2019-03-19 11:14:52 -Context refreshed
2019-03-19 11:14:52 -Found 1 custom documentation plugin(s)
2019-03-19 11:14:52 -Scanning for api listing references
2019-03-19 11:14:53 -Generating unique operation named: removeUsingPOST_1
2019-03-19 11:14:53 -Generating unique operation named: addUsingGET_1
2019-03-19 11:14:53 -Generating unique operation named: editUsingGET_1
2019-03-19 11:14:53 -Generating unique operation named: listUsingGET_1
2019-03-19 11:14:53 -Generating unique operation named: removeUsingPOST_2
2019-03-19 11:14:53 -Generating unique operation named: removeUsingPOST_3
2019-03-19 11:14:53 -Generating unique operation named: saveUsingPOST_1
2019-03-19 11:14:53 -Generating unique operation named: updateUsingGET_1
2019-03-19 11:14:53 -Generating unique operation named: updateUsingHEAD_1
2019-03-19 11:14:53 -Generating unique operation named: updateUsingPOST_1
2019-03-19 11:14:53 -Generating unique operation named: updateUsingPUT_1
2019-03-19 11:14:53 -Generating unique operation named: updateUsingPATCH_1
2019-03-19 11:14:53 -Generating unique operation named: updateUsingDELETE_1
2019-03-19 11:14:53 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-19 11:14:53 -Generating unique operation named: updateUsingTRACE_1
2019-03-19 11:14:53 -Generating unique operation named: addUsingGET_2
2019-03-19 11:14:53 -Generating unique operation named: editUsingGET_2
2019-03-19 11:14:53 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-19 11:14:53 -Generating unique operation named: listUsingGET_2
2019-03-19 11:14:53 -Generating unique operation named: removeUsingPOST_4
2019-03-19 11:14:53 -Generating unique operation named: removeUsingPOST_5
2019-03-19 11:14:53 -Generating unique operation named: saveUsingPOST_2
2019-03-19 11:14:53 -Generating unique operation named: updateUsingGET_2
2019-03-19 11:14:53 -Generating unique operation named: updateUsingHEAD_2
2019-03-19 11:14:53 -Generating unique operation named: updateUsingPOST_2
2019-03-19 11:14:53 -Generating unique operation named: updateUsingPUT_2
2019-03-19 11:14:53 -Generating unique operation named: updateUsingPATCH_2
2019-03-19 11:14:53 -Generating unique operation named: updateUsingDELETE_2
2019-03-19 11:14:53 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-19 11:14:53 -Generating unique operation named: updateUsingTRACE_2
2019-03-19 11:14:53 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-19 11:14:53 -Generating unique operation named: addUsingGET_3
2019-03-19 11:14:53 -Generating unique operation named: editUsingGET_3
2019-03-19 11:14:53 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-19 11:14:53 -Generating unique operation named: listUsingGET_3
2019-03-19 11:14:53 -Generating unique operation named: removeUsingPOST_6
2019-03-19 11:14:53 -Generating unique operation named: removeUsingPOST_7
2019-03-19 11:14:53 -Generating unique operation named: saveUsingPOST_3
2019-03-19 11:14:53 -Generating unique operation named: updateUsingGET_3
2019-03-19 11:14:53 -Generating unique operation named: updateUsingHEAD_3
2019-03-19 11:14:53 -Generating unique operation named: updateUsingPOST_3
2019-03-19 11:14:53 -Generating unique operation named: updateUsingPUT_3
2019-03-19 11:14:53 -Generating unique operation named: updateUsingPATCH_3
2019-03-19 11:14:53 -Generating unique operation named: updateUsingDELETE_3
2019-03-19 11:14:53 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-19 11:14:53 -Generating unique operation named: updateUsingTRACE_3
2019-03-19 11:14:53 -Generating unique operation named: addUsingGET_4
2019-03-19 11:14:53 -Generating unique operation named: editUsingGET_4
2019-03-19 11:14:53 -Generating unique operation named: listUsingGET_4
2019-03-19 11:14:53 -Generating unique operation named: removeUsingPOST_8
2019-03-19 11:14:53 -Generating unique operation named: removeUsingPOST_9
2019-03-19 11:14:53 -Generating unique operation named: saveUsingPOST_4
2019-03-19 11:14:53 -Generating unique operation named: updateUsingGET_4
2019-03-19 11:14:53 -Generating unique operation named: updateUsingHEAD_4
2019-03-19 11:14:53 -Generating unique operation named: updateUsingPOST_4
2019-03-19 11:14:54 -Generating unique operation named: updateUsingPUT_4
2019-03-19 11:14:54 -Generating unique operation named: updateUsingPATCH_4
2019-03-19 11:14:54 -Generating unique operation named: updateUsingDELETE_4
2019-03-19 11:14:54 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-19 11:14:54 -Generating unique operation named: updateUsingTRACE_4
2019-03-19 11:14:54 -Generating unique operation named: ElecUsingGET_1
2019-03-19 11:14:54 -Generating unique operation named: addUsingGET_5
2019-03-19 11:14:54 -Generating unique operation named: editUsingGET_5
2019-03-19 11:14:54 -Generating unique operation named: listUsingGET_5
2019-03-19 11:14:54 -Generating unique operation named: removeUsingPOST_10
2019-03-19 11:14:54 -Generating unique operation named: removeUsingPOST_11
2019-03-19 11:14:54 -Generating unique operation named: saveUsingPOST_5
2019-03-19 11:14:54 -Generating unique operation named: updateUsingGET_5
2019-03-19 11:14:54 -Generating unique operation named: updateUsingHEAD_5
2019-03-19 11:14:54 -Generating unique operation named: updateUsingPOST_5
2019-03-19 11:14:54 -Generating unique operation named: updateUsingPUT_5
2019-03-19 11:14:54 -Generating unique operation named: updateUsingPATCH_5
2019-03-19 11:14:54 -Generating unique operation named: updateUsingDELETE_5
2019-03-19 11:14:54 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-19 11:14:54 -Generating unique operation named: updateUsingTRACE_5
2019-03-19 11:14:54 -Generating unique operation named: editUsingGET_6
2019-03-19 11:14:54 -Generating unique operation named: listUsingGET_6
2019-03-19 11:14:54 -Generating unique operation named: updateUsingPOST_6
2019-03-19 11:14:54 -Generating unique operation named: addUsingGET_6
2019-03-19 11:14:54 -Generating unique operation named: editUsingGET_7
2019-03-19 11:14:54 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-19 11:14:54 -Generating unique operation named: listUsingGET_7
2019-03-19 11:14:54 -Generating unique operation named: removeUsingPOST_12
2019-03-19 11:14:54 -Generating unique operation named: removeUsingPOST_13
2019-03-19 11:14:54 -Generating unique operation named: saveUsingPOST_6
2019-03-19 11:14:54 -Generating unique operation named: updateUsingGET_6
2019-03-19 11:14:54 -Generating unique operation named: updateUsingHEAD_6
2019-03-19 11:14:54 -Generating unique operation named: updateUsingPOST_7
2019-03-19 11:14:54 -Generating unique operation named: updateUsingPUT_6
2019-03-19 11:14:54 -Generating unique operation named: updateUsingPATCH_6
2019-03-19 11:14:54 -Generating unique operation named: updateUsingDELETE_6
2019-03-19 11:14:54 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-19 11:14:54 -Generating unique operation named: updateUsingTRACE_6
2019-03-19 11:14:54 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-19 11:14:54 -Generating unique operation named: addUsingGET_7
2019-03-19 11:14:54 -Generating unique operation named: editUsingGET_8
2019-03-19 11:14:54 -Generating unique operation named: listUsingGET_8
2019-03-19 11:14:54 -Generating unique operation named: removeUsingPOST_14
2019-03-19 11:14:54 -Generating unique operation named: removeUsingPOST_15
2019-03-19 11:14:54 -Generating unique operation named: saveUsingPOST_7
2019-03-19 11:14:54 -Generating unique operation named: updateUsingGET_7
2019-03-19 11:14:54 -Generating unique operation named: updateUsingHEAD_7
2019-03-19 11:14:54 -Generating unique operation named: updateUsingPOST_8
2019-03-19 11:14:54 -Generating unique operation named: updateUsingPUT_7
2019-03-19 11:14:54 -Generating unique operation named: updateUsingPATCH_7
2019-03-19 11:14:54 -Generating unique operation named: updateUsingDELETE_7
2019-03-19 11:14:54 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-19 11:14:54 -Generating unique operation named: updateUsingTRACE_7
2019-03-19 11:14:54 -Generating unique operation named: addUsingGET_8
2019-03-19 11:14:54 -Generating unique operation named: editUsingGET_9
2019-03-19 11:14:54 -Generating unique operation named: listUsingGET_9
2019-03-19 11:14:54 -Generating unique operation named: removeUsingPOST_16
2019-03-19 11:14:54 -Generating unique operation named: removeUsingPOST_17
2019-03-19 11:14:54 -Generating unique operation named: saveUsingPOST_8
2019-03-19 11:14:54 -Generating unique operation named: updateUsingGET_8
2019-03-19 11:14:54 -Generating unique operation named: updateUsingHEAD_8
2019-03-19 11:14:55 -Generating unique operation named: updateUsingPOST_9
2019-03-19 11:14:55 -Generating unique operation named: updateUsingPUT_8
2019-03-19 11:14:55 -Generating unique operation named: updateUsingPATCH_8
2019-03-19 11:14:55 -Generating unique operation named: updateUsingDELETE_8
2019-03-19 11:14:55 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-19 11:14:55 -Generating unique operation named: updateUsingTRACE_8
2019-03-19 11:14:55 -Generating unique operation named: addUsingGET_9
2019-03-19 11:14:55 -Generating unique operation named: editUsingGET_10
2019-03-19 11:14:55 -Generating unique operation named: infoUsingGET_1
2019-03-19 11:14:55 -Generating unique operation named: infoUsingHEAD_1
2019-03-19 11:14:55 -Generating unique operation named: infoUsingPOST_1
2019-03-19 11:14:55 -Generating unique operation named: infoUsingPUT_1
2019-03-19 11:14:55 -Generating unique operation named: infoUsingPATCH_1
2019-03-19 11:14:55 -Generating unique operation named: infoUsingDELETE_1
2019-03-19 11:14:55 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-19 11:14:55 -Generating unique operation named: infoUsingTRACE_1
2019-03-19 11:14:55 -Generating unique operation named: listUsingGET_10
2019-03-19 11:14:55 -Generating unique operation named: removeUsingPOST_18
2019-03-19 11:14:55 -Generating unique operation named: removeUsingPOST_19
2019-03-19 11:14:55 -Generating unique operation named: saveUsingPOST_9
2019-03-19 11:14:55 -Generating unique operation named: updateUsingPOST_10
2019-03-19 11:14:55 -Generating unique operation named: listUsingGET_11
2019-03-19 11:14:55 -Generating unique operation named: removeUsingPOST_20
2019-03-19 11:14:55 -Generating unique operation named: welcomeUsingGET_1
2019-03-19 11:14:55 -Generating unique operation named: addUsingGET_10
2019-03-19 11:14:55 -Generating unique operation named: editUsingGET_11
2019-03-19 11:14:55 -Generating unique operation named: listUsingGET_12
2019-03-19 11:14:55 -Generating unique operation named: removeUsingPOST_21
2019-03-19 11:14:55 -Generating unique operation named: saveUsingPOST_10
2019-03-19 11:14:55 -Generating unique operation named: treeUsingGET_1
2019-03-19 11:14:55 -Generating unique operation named: treeUsingGET_2
2019-03-19 11:14:55 -Generating unique operation named: updateUsingPOST_11
2019-03-19 11:14:55 -Generating unique operation named: addUsingGET_11
2019-03-19 11:14:55 -Generating unique operation named: editUsingGET_12
2019-03-19 11:14:55 -Generating unique operation named: listUsingGET_13
2019-03-19 11:14:55 -Generating unique operation named: removeUsingPOST_22
2019-03-19 11:14:55 -Generating unique operation named: removeUsingPOST_23
2019-03-19 11:14:55 -Generating unique operation named: saveUsingPOST_11
2019-03-19 11:14:55 -Generating unique operation named: updateUsingGET_9
2019-03-19 11:14:55 -Generating unique operation named: updateUsingHEAD_9
2019-03-19 11:14:55 -Generating unique operation named: updateUsingPOST_12
2019-03-19 11:14:55 -Generating unique operation named: updateUsingPUT_9
2019-03-19 11:14:55 -Generating unique operation named: updateUsingPATCH_9
2019-03-19 11:14:55 -Generating unique operation named: updateUsingDELETE_9
2019-03-19 11:14:55 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-19 11:14:55 -Generating unique operation named: updateUsingTRACE_9
2019-03-19 11:14:55 -Generating unique operation named: addUsingGET_12
2019-03-19 11:14:55 -Generating unique operation named: editUsingGET_13
2019-03-19 11:14:55 -Generating unique operation named: listUsingGET_14
2019-03-19 11:14:55 -Generating unique operation named: removeUsingPOST_24
2019-03-19 11:14:55 -Generating unique operation named: removeUsingPOST_25
2019-03-19 11:14:55 -Generating unique operation named: saveUsingPOST_12
2019-03-19 11:14:55 -Generating unique operation named: updateUsingGET_10
2019-03-19 11:14:55 -Generating unique operation named: updateUsingHEAD_10
2019-03-19 11:14:55 -Generating unique operation named: updateUsingPOST_13
2019-03-19 11:14:55 -Generating unique operation named: updateUsingPUT_10
2019-03-19 11:14:55 -Generating unique operation named: updateUsingPATCH_10
2019-03-19 11:14:55 -Generating unique operation named: updateUsingDELETE_10
2019-03-19 11:14:55 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-19 11:14:55 -Generating unique operation named: updateUsingTRACE_10
2019-03-19 11:14:55 -Generating unique operation named: addUsingGET_13
2019-03-19 11:14:55 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-19 11:14:55 -Generating unique operation named: editUsingGET_14
2019-03-19 11:14:55 -Generating unique operation named: listUsingGET_15
2019-03-19 11:14:55 -Generating unique operation named: saveUsingPOST_13
2019-03-19 11:14:55 -Generating unique operation named: saveUsingPOST_14
2019-03-19 11:14:55 -Generating unique operation named: updateUsingPOST_14
2019-03-19 11:14:55 -Generating unique operation named: listUsingGET_16
2019-03-19 11:14:55 -Generating unique operation named: listUsingHEAD_1
2019-03-19 11:14:55 -Generating unique operation named: listUsingPOST_1
2019-03-19 11:14:55 -Generating unique operation named: listUsingPUT_1
2019-03-19 11:14:55 -Generating unique operation named: listUsingPATCH_1
2019-03-19 11:14:55 -Generating unique operation named: listUsingDELETE_1
2019-03-19 11:14:55 -Generating unique operation named: listUsingOPTIONS_1
2019-03-19 11:14:55 -Generating unique operation named: listUsingTRACE_1
2019-03-19 11:14:55 -Generating unique operation named: addUsingGET_14
2019-03-19 11:14:55 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-19 11:14:55 -Generating unique operation named: editUsingGET_15
2019-03-19 11:14:55 -Generating unique operation named: listUsingGET_17
2019-03-19 11:14:55 -Generating unique operation named: removeUsingPOST_26
2019-03-19 11:14:55 -Generating unique operation named: saveUsingPOST_15
2019-03-19 11:14:55 -Generating unique operation named: treeUsingGET_3
2019-03-19 11:14:55 -Generating unique operation named: treeViewUsingGET_1
2019-03-19 11:14:55 -Generating unique operation named: updateUsingPOST_15
2019-03-19 11:14:55 -Generating unique operation named: addUsingGET_15
2019-03-19 11:14:55 -Generating unique operation named: editUsingGET_16
2019-03-19 11:14:55 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-19 11:14:55 -Generating unique operation named: listUsingGET_18
2019-03-19 11:14:55 -Generating unique operation named: removeUsingPOST_27
2019-03-19 11:14:55 -Generating unique operation named: removeUsingPOST_28
2019-03-19 11:14:55 -Generating unique operation named: saveUsingPOST_16
2019-03-19 11:14:55 -Generating unique operation named: updateUsingGET_11
2019-03-19 11:14:55 -Generating unique operation named: updateUsingHEAD_11
2019-03-19 11:14:55 -Generating unique operation named: updateUsingPOST_16
2019-03-19 11:14:55 -Generating unique operation named: updateUsingPUT_11
2019-03-19 11:14:55 -Generating unique operation named: updateUsingPATCH_11
2019-03-19 11:14:55 -Generating unique operation named: updateUsingDELETE_11
2019-03-19 11:14:56 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-19 11:14:56 -Generating unique operation named: updateUsingTRACE_11
2019-03-19 11:14:56 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-19 11:14:56 -Generating unique operation named: addUsingGET_16
2019-03-19 11:14:56 -Generating unique operation named: editUsingGET_17
2019-03-19 11:14:56 -Generating unique operation named: listUsingGET_19
2019-03-19 11:14:56 -Generating unique operation named: removeUsingPOST_29
2019-03-19 11:14:56 -Generating unique operation named: removeUsingPOST_30
2019-03-19 11:14:56 -Generating unique operation named: saveUsingPOST_17
2019-03-19 11:14:56 -Generating unique operation named: updateUsingGET_12
2019-03-19 11:14:56 -Generating unique operation named: updateUsingHEAD_12
2019-03-19 11:14:56 -Generating unique operation named: updateUsingPOST_17
2019-03-19 11:14:56 -Generating unique operation named: updateUsingPUT_12
2019-03-19 11:14:56 -Generating unique operation named: updateUsingPATCH_12
2019-03-19 11:14:56 -Generating unique operation named: updateUsingDELETE_12
2019-03-19 11:14:56 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-19 11:14:56 -Generating unique operation named: updateUsingTRACE_12
2019-03-19 11:14:56 -Generating unique operation named: addUsingGET_17
2019-03-19 11:14:56 -Generating unique operation named: editUsingGET_18
2019-03-19 11:14:56 -Generating unique operation named: listUsingGET_20
2019-03-19 11:14:56 -Generating unique operation named: removeUsingPOST_31
2019-03-19 11:14:56 -Generating unique operation named: removeUsingPOST_32
2019-03-19 11:14:56 -Generating unique operation named: saveUsingPOST_18
2019-03-19 11:14:56 -Generating unique operation named: updateUsingGET_13
2019-03-19 11:14:56 -Generating unique operation named: updateUsingHEAD_13
2019-03-19 11:14:56 -Generating unique operation named: updateUsingPOST_18
2019-03-19 11:14:56 -Generating unique operation named: updateUsingPUT_13
2019-03-19 11:14:56 -Generating unique operation named: updateUsingPATCH_13
2019-03-19 11:14:56 -Generating unique operation named: updateUsingDELETE_13
2019-03-19 11:14:56 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-19 11:14:56 -Generating unique operation named: updateUsingTRACE_13
2019-03-19 11:14:56 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-19 11:14:56 -Starting Quartz Scheduler now
2019-03-19 11:14:56 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-19 11:14:56 -Starting...
2019-03-19 11:14:56 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 11:14:56 -Started.
2019-03-19 11:14:56 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-19 11:14:56 -Using a shared selector for servlet write/read
2019-03-19 11:14:56 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-19 11:14:56 -Started BootdoApplication in 27.042 seconds (JVM running for 28.613)
2019-03-19 11:14:56 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-19 11:14:56 -==> Parameters: 
2019-03-19 11:14:56 -<==      Total: 1
2019-03-19 11:15:07 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-19 11:15:07 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-19 11:15:08 -FrameworkServlet 'dispatcherServlet': initialization completed in 74 ms
2019-03-19 11:15:08 -Enabling session validation scheduler...
2019-03-19 11:15:08 -请求地址 : http://localhost:8081/login;JSESSIONID=d1a78bdd-9c82-4d61-974d-c039eeb54785
2019-03-19 11:15:08 -HTTP METHOD : GET
2019-03-19 11:15:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 11:15:08 -参数 : [{}]
2019-03-19 11:15:08 -耗时 : 3
2019-03-19 11:15:08 -返回值 : login
2019-03-19 11:15:09 -请求地址 : http://localhost:8081/getVerify
2019-03-19 11:15:09 -HTTP METHOD : GET
2019-03-19 11:15:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 11:15:09 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@54c69c29, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5a0178c1]
2019-03-19 11:15:10 -0328
2019-03-19 11:15:10 -耗时 : 611
2019-03-19 11:15:10 -返回值 : null
2019-03-19 11:15:14 -请求地址 : http://localhost:8081/login
2019-03-19 11:15:14 -HTTP METHOD : POST
2019-03-19 11:15:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 11:15:14 -参数 : [admin, 111111, 0328, org.apache.shiro.web.servlet.ShiroHttpServletRequest@10b54da2]
2019-03-19 11:15:14 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 11:15:14 -==> Parameters: admin(String)
2019-03-19 11:15:14 -<==      Total: 1
2019-03-19 11:15:14 -耗时 : 82
2019-03-19 11:15:14 -返回值 : {msg=操作成功, code=0}
2019-03-19 11:15:14 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-19 11:15:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 11:15:14 -==> Parameters: 1(Long), admin(String), 登录(String), 83(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 11:15:14.774(Timestamp)
2019-03-19 11:15:14 -请求地址 : http://localhost:8081/index
2019-03-19 11:15:14 -HTTP METHOD : GET
2019-03-19 11:15:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 11:15:14 -参数 : [{}]
2019-03-19 11:15:14 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 11:15:14 -<==    Updates: 1
2019-03-19 11:15:15 -==> Parameters: 1(Long)
2019-03-19 11:15:15 -<==      Total: 46
2019-03-19 11:15:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 11:15:15 -==> Parameters: 138(Long)
2019-03-19 11:15:15 -<==      Total: 1
2019-03-19 11:15:15 -耗时 : 342
2019-03-19 11:15:15 -返回值 : index_v1
2019-03-19 11:15:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 11:15:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 342(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 11:15:15.244(Timestamp)
2019-03-19 11:15:15 -<==    Updates: 1
2019-03-19 11:15:15 -请求地址 : http://localhost:8081/main
2019-03-19 11:15:15 -HTTP METHOD : GET
2019-03-19 11:15:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 11:15:15 -参数 : []
2019-03-19 11:15:15 -耗时 : 1
2019-03-19 11:15:15 -返回值 : main
2019-03-19 11:15:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 11:15:15 -HTTP METHOD : GET
2019-03-19 11:15:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 11:15:15 -参数 : []
2019-03-19 11:15:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 11:15:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 11:15:15 -<==      Total: 0
2019-03-19 11:15:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 11:15:15 -==> Parameters: 1(Long), 0(String)
2019-03-19 11:15:15 -<==      Total: 1
2019-03-19 11:15:15 -耗时 : 83
2019-03-19 11:15:15 -返回值 : com.bootdo.common.utils.PageUtils@5f2dfff
2019-03-19 11:15:15 -请求地址 : http://localhost:8081/main
2019-03-19 11:15:15 -HTTP METHOD : GET
2019-03-19 11:15:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 11:15:15 -参数 : []
2019-03-19 11:15:15 -耗时 : 0
2019-03-19 11:15:15 -返回值 : main
2019-03-19 11:15:20 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 11:15:20 -==> Parameters: 1(Long)
2019-03-19 11:15:20 -<==      Total: 90
2019-03-19 11:15:20 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 11:15:20 -HTTP METHOD : GET
2019-03-19 11:15:20 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 11:15:20 -参数 : []
2019-03-19 11:15:20 -耗时 : 1
2019-03-19 11:15:20 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 11:15:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 11:15:21 -HTTP METHOD : GET
2019-03-19 11:15:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 11:15:21 -参数 : [userType]
2019-03-19 11:15:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 11:15:21 -==> Parameters: userType(String)
2019-03-19 11:15:21 -<==      Total: 2
2019-03-19 11:15:21 -耗时 : 26
2019-03-19 11:15:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 11:15:21 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 11:15:21 -HTTP METHOD : GET
2019-03-19 11:15:21 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 11:15:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 11:15:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 11:15:21 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 11:15:21 -<==      Total: 4
2019-03-19 11:15:21 -==>  Preparing: select count(*) from elec_log 
2019-03-19 11:15:21 -==> Parameters: 
2019-03-19 11:15:21 -<==      Total: 1
2019-03-19 11:15:21 -耗时 : 70
2019-03-19 11:15:21 -返回值 : com.bootdo.common.utils.PageUtils@6d889425
2019-03-19 11:15:26 -请求地址 : http://localhost:8081/heat/heat
2019-03-19 11:15:26 -HTTP METHOD : GET
2019-03-19 11:15:26 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-19 11:15:26 -参数 : []
2019-03-19 11:15:26 -耗时 : 1
2019-03-19 11:15:26 -返回值 : heat/heat/heat
2019-03-19 11:15:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 11:15:26 -HTTP METHOD : GET
2019-03-19 11:15:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 11:15:26 -参数 : [userType]
2019-03-19 11:15:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 11:15:26 -==> Parameters: userType(String)
2019-03-19 11:15:26 -<==      Total: 2
2019-03-19 11:15:26 -耗时 : 4
2019-03-19 11:15:26 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 11:15:26 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-19 11:15:26 -HTTP METHOD : GET
2019-03-19 11:15:26 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-19 11:15:26 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-19 11:15:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-19 11:15:26 -==> Parameters: 0(Integer), 3(Integer)
2019-03-19 11:15:26 -<==      Total: 3
2019-03-19 11:15:26 -==>  Preparing: select count(*) from heat 
2019-03-19 11:15:26 -==> Parameters: 
2019-03-19 11:15:26 -<==      Total: 1
2019-03-19 11:15:26 -耗时 : 65
2019-03-19 11:15:26 -返回值 : com.bootdo.common.utils.PageUtils@2d5305e6
2019-03-19 11:15:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-03-19 11:16:56 -请求地址 : http://localhost:8081/index
2019-03-19 11:16:56 -HTTP METHOD : GET
2019-03-19 11:16:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 11:16:56 -参数 : [{}]
2019-03-19 11:16:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 11:16:56 -==> Parameters: 1(Long)
2019-03-19 11:16:56 -<==      Total: 46
2019-03-19 11:16:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 11:16:56 -==> Parameters: 138(Long)
2019-03-19 11:16:56 -<==      Total: 1
2019-03-19 11:16:56 -耗时 : 28
2019-03-19 11:16:56 -返回值 : index_v1
2019-03-19 11:16:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 11:16:56 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 11:16:56.071(Timestamp)
2019-03-19 11:16:56 -<==    Updates: 1
2019-03-19 11:16:56 -请求地址 : http://localhost:8081/main
2019-03-19 11:16:56 -HTTP METHOD : GET
2019-03-19 11:16:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 11:16:56 -参数 : []
2019-03-19 11:16:56 -耗时 : 1
2019-03-19 11:16:56 -返回值 : main
2019-03-19 11:16:56 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 11:16:56 -HTTP METHOD : GET
2019-03-19 11:16:56 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 11:16:56 -参数 : []
2019-03-19 11:16:56 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 11:16:56 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 11:16:56 -<==      Total: 0
2019-03-19 11:16:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 11:16:56 -==> Parameters: 1(Long), 0(String)
2019-03-19 11:16:56 -<==      Total: 1
2019-03-19 11:16:56 -耗时 : 10
2019-03-19 11:16:56 -返回值 : com.bootdo.common.utils.PageUtils@1c846a88
2019-03-19 11:16:57 -请求地址 : http://localhost:8081/main
2019-03-19 11:16:57 -HTTP METHOD : GET
2019-03-19 11:16:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 11:16:57 -参数 : []
2019-03-19 11:16:57 -耗时 : 1
2019-03-19 11:16:57 -返回值 : main
2019-03-19 11:17:03 -请求地址 : http://localhost:8081/heat/heat
2019-03-19 11:17:03 -HTTP METHOD : GET
2019-03-19 11:17:03 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-19 11:17:03 -参数 : []
2019-03-19 11:17:03 -耗时 : 0
2019-03-19 11:17:03 -返回值 : heat/heat/heat
2019-03-19 11:17:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 11:17:03 -HTTP METHOD : GET
2019-03-19 11:17:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 11:17:03 -参数 : [userType]
2019-03-19 11:17:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 11:17:03 -==> Parameters: userType(String)
2019-03-19 11:17:03 -<==      Total: 2
2019-03-19 11:17:03 -耗时 : 4
2019-03-19 11:17:03 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 11:17:03 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-19 11:17:03 -HTTP METHOD : GET
2019-03-19 11:17:03 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-19 11:17:03 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-19 11:17:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-19 11:17:03 -==> Parameters: 0(Integer), 3(Integer)
2019-03-19 11:17:03 -<==      Total: 3
2019-03-19 11:17:03 -==>  Preparing: select count(*) from heat 
2019-03-19 11:17:03 -==> Parameters: 
2019-03-19 11:17:03 -<==      Total: 1
2019-03-19 11:17:03 -耗时 : 8
2019-03-19 11:17:03 -返回值 : com.bootdo.common.utils.PageUtils@332183ee
2019-03-19 11:17:05 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-19 11:17:05 -HTTP METHOD : GET
2019-03-19 11:17:05 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-19 11:17:05 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}]
2019-03-19 11:17:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `heat_sum` < 0 order by id asc limit ?, ? 
2019-03-19 11:17:05 -==> Parameters: 0(Integer), 3(Integer)
2019-03-19 11:17:05 -<==      Total: 2
2019-03-19 11:17:05 -==>  Preparing: select count(*) from heat WHERE `heat_sum` < 0 
2019-03-19 11:17:05 -==> Parameters: 
2019-03-19 11:17:05 -<==      Total: 1
2019-03-19 11:17:05 -耗时 : 19
2019-03-19 11:17:05 -返回值 : com.bootdo.common.utils.PageUtils@1d16fa11
2019-03-19 11:17:10 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-19 11:17:10 -HTTP METHOD : GET
2019-03-19 11:17:10 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-19 11:17:10 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-19 11:17:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-19 11:17:10 -==> Parameters: 0(Integer), 3(Integer)
2019-03-19 11:17:10 -<==      Total: 3
2019-03-19 11:17:10 -==>  Preparing: select count(*) from heat 
2019-03-19 11:17:10 -==> Parameters: 
2019-03-19 11:17:10 -<==      Total: 1
2019-03-19 11:17:10 -耗时 : 12
2019-03-19 11:17:10 -返回值 : com.bootdo.common.utils.PageUtils@47aa2a5f
2019-03-19 11:23:46 -Starting BootdoApplication on ZJZL-20180906VX with PID 2564 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-19 11:23:46 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-19 11:23:46 -The following profiles are active: dev
2019-03-19 11:23:47 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cac4385: startup date [Tue Mar 19 11:23:47 CST 2019]; root of context hierarchy
2019-03-19 11:23:50 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-19 11:23:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$febad165] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:23:53 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f114000c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:23:54 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:23:55 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:23:55 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:23:55 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-19 11:23:55 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-19 11:23:55 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:23:55 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:23:55 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:23:55 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 11:23:56 -Tomcat initialized with port(s): 8081 (http)
2019-03-19 11:23:56 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-19 11:23:56 -Starting service [Tomcat]
2019-03-19 11:23:56 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-19 11:23:56 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-19 11:23:57 -Initializing Spring embedded WebApplicationContext
2019-03-19 11:23:57 -Root WebApplicationContext: initialization completed in 9858 ms
2019-03-19 11:23:57 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-19 11:23:57 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-19 11:23:57 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-19 11:23:57 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-19 11:23:57 -Filter xssFilter was not registered (disabled)
2019-03-19 11:23:57 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-19 11:23:57 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-19 11:23:57 -Servlet statViewServlet mapped to [/druid/*]
2019-03-19 11:23:57 -Servlet dispatcherServlet mapped to [/]
2019-03-19 11:24:01 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cac4385: startup date [Tue Mar 19 11:23:47 CST 2019]; root of context hierarchy
2019-03-19 11:24:03 -Using default implementation for ThreadExecutor
2019-03-19 11:24:03 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-19 11:24:03 -Quartz Scheduler v.2.2.1 created.
2019-03-19 11:24:03 -RAMJobStore initialized.
2019-03-19 11:24:03 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-19 11:24:03 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-19 11:24:03 -Quartz scheduler version: 2.2.1
2019-03-19 11:24:03 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@33e8694b
2019-03-19 11:24:04 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-19 11:24:04 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-19 11:24:07 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 11:24:07 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-19 11:24:07 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-19 11:24:07 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-19 11:24:07 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-19 11:24:07 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-19 11:24:07 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-19 11:24:07 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-19 11:24:07 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-19 11:24:07 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-19 11:24:07 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-19 11:24:07 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-19 11:24:07 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-19 11:24:07 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-19 11:24:07 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-19 11:24:07 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-19 11:24:07 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-19 11:24:07 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-19 11:24:07 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-19 11:24:07 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-19 11:24:07 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-19 11:24:07 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-19 11:24:07 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 11:24:07 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-19 11:24:07 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 11:24:07 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-19 11:24:07 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-19 11:24:07 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-19 11:24:07 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-19 11:24:07 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-19 11:24:07 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-19 11:24:07 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-19 11:24:07 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-19 11:24:07 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-19 11:24:07 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-19 11:24:07 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 11:24:07 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 11:24:07 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-19 11:24:07 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-19 11:24:07 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-19 11:24:07 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-19 11:24:07 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-19 11:24:07 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 11:24:07 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-19 11:24:07 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 11:24:07 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-19 11:24:07 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-19 11:24:07 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-19 11:24:07 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-19 11:24:07 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 11:24:07 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 11:24:07 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-19 11:24:07 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-19 11:24:07 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 11:24:07 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-19 11:24:07 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-19 11:24:07 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-19 11:24:07 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-19 11:24:07 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-19 11:24:07 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 11:24:07 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-19 11:24:07 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 11:24:07 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-19 11:24:07 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-19 11:24:07 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-19 11:24:07 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 11:24:07 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 11:24:07 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-19 11:24:07 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-19 11:24:07 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-19 11:24:07 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 11:24:07 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-19 11:24:07 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-19 11:24:07 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-19 11:24:07 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-19 11:24:07 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 11:24:07 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 11:24:07 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 11:24:07 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-19 11:24:07 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-19 11:24:07 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-19 11:24:07 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 11:24:07 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 11:24:07 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-19 11:24:07 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-19 11:24:07 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-19 11:24:07 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 11:24:07 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 11:24:07 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-19 11:24:07 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-19 11:24:07 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-19 11:24:07 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-19 11:24:07 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-19 11:24:07 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-19 11:24:07 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-19 11:24:07 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-19 11:24:07 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-19 11:24:07 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-19 11:24:07 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-19 11:24:07 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-19 11:24:07 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-19 11:24:07 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-19 11:24:07 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-19 11:24:07 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-19 11:24:07 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-19 11:24:07 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-19 11:24:07 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-19 11:24:07 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-19 11:24:07 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-19 11:24:07 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-19 11:24:07 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 11:24:07 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 11:24:07 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-19 11:24:07 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-19 11:24:07 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-19 11:24:07 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-19 11:24:07 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-19 11:24:07 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-19 11:24:07 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-19 11:24:07 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-19 11:24:07 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-19 11:24:07 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-19 11:24:07 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-19 11:24:07 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-19 11:24:07 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-19 11:24:07 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-19 11:24:07 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-19 11:24:07 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-19 11:24:07 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-19 11:24:07 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-19 11:24:07 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-19 11:24:07 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 11:24:07 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 11:24:07 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 11:24:07 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-19 11:24:07 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-19 11:24:07 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-19 11:24:07 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-19 11:24:07 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-19 11:24:07 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 11:24:07 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-19 11:24:07 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 11:24:07 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-19 11:24:07 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-19 11:24:07 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-19 11:24:07 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-19 11:24:07 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 11:24:07 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 11:24:07 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-19 11:24:07 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 11:24:07 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-19 11:24:07 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 11:24:07 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 11:24:07 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-19 11:24:07 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-19 11:24:07 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-19 11:24:08 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-19 11:24:08 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-19 11:24:08 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-19 11:24:08 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 11:24:09 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@2cac4385: startup date [Tue Mar 19 11:23:47 CST 2019]; root of context hierarchy
2019-03-19 11:24:09 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 11:24:09 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 11:24:09 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 11:24:09 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-19 11:24:09 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-19 11:24:12 -Registering beans for JMX exposure on startup
2019-03-19 11:24:12 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-19 11:24:12 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-19 11:24:12 -Starting beans in phase 2147483647
2019-03-19 11:24:12 -Context refreshed
2019-03-19 11:24:12 -Found 1 custom documentation plugin(s)
2019-03-19 11:24:12 -Scanning for api listing references
2019-03-19 11:24:12 -Generating unique operation named: removeUsingPOST_1
2019-03-19 11:24:12 -Generating unique operation named: addUsingGET_1
2019-03-19 11:24:12 -Generating unique operation named: editUsingGET_1
2019-03-19 11:24:12 -Generating unique operation named: listUsingGET_1
2019-03-19 11:24:13 -Generating unique operation named: removeUsingPOST_2
2019-03-19 11:24:13 -Generating unique operation named: removeUsingPOST_3
2019-03-19 11:24:13 -Generating unique operation named: saveUsingPOST_1
2019-03-19 11:24:13 -Generating unique operation named: updateUsingGET_1
2019-03-19 11:24:13 -Generating unique operation named: updateUsingHEAD_1
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPOST_1
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPUT_1
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPATCH_1
2019-03-19 11:24:13 -Generating unique operation named: updateUsingDELETE_1
2019-03-19 11:24:13 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-19 11:24:13 -Generating unique operation named: updateUsingTRACE_1
2019-03-19 11:24:13 -Generating unique operation named: addUsingGET_2
2019-03-19 11:24:13 -Generating unique operation named: editUsingGET_2
2019-03-19 11:24:13 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-19 11:24:13 -Generating unique operation named: listUsingGET_2
2019-03-19 11:24:13 -Generating unique operation named: removeUsingPOST_4
2019-03-19 11:24:13 -Generating unique operation named: removeUsingPOST_5
2019-03-19 11:24:13 -Generating unique operation named: saveUsingPOST_2
2019-03-19 11:24:13 -Generating unique operation named: updateUsingGET_2
2019-03-19 11:24:13 -Generating unique operation named: updateUsingHEAD_2
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPOST_2
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPUT_2
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPATCH_2
2019-03-19 11:24:13 -Generating unique operation named: updateUsingDELETE_2
2019-03-19 11:24:13 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-19 11:24:13 -Generating unique operation named: updateUsingTRACE_2
2019-03-19 11:24:13 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-19 11:24:13 -Generating unique operation named: addUsingGET_3
2019-03-19 11:24:13 -Generating unique operation named: editUsingGET_3
2019-03-19 11:24:13 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-19 11:24:13 -Generating unique operation named: listUsingGET_3
2019-03-19 11:24:13 -Generating unique operation named: removeUsingPOST_6
2019-03-19 11:24:13 -Generating unique operation named: removeUsingPOST_7
2019-03-19 11:24:13 -Generating unique operation named: saveUsingPOST_3
2019-03-19 11:24:13 -Generating unique operation named: updateUsingGET_3
2019-03-19 11:24:13 -Generating unique operation named: updateUsingHEAD_3
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPOST_3
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPUT_3
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPATCH_3
2019-03-19 11:24:13 -Generating unique operation named: updateUsingDELETE_3
2019-03-19 11:24:13 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-19 11:24:13 -Generating unique operation named: updateUsingTRACE_3
2019-03-19 11:24:13 -Generating unique operation named: addUsingGET_4
2019-03-19 11:24:13 -Generating unique operation named: editUsingGET_4
2019-03-19 11:24:13 -Generating unique operation named: listUsingGET_4
2019-03-19 11:24:13 -Generating unique operation named: removeUsingPOST_8
2019-03-19 11:24:13 -Generating unique operation named: removeUsingPOST_9
2019-03-19 11:24:13 -Generating unique operation named: saveUsingPOST_4
2019-03-19 11:24:13 -Generating unique operation named: updateUsingGET_4
2019-03-19 11:24:13 -Generating unique operation named: updateUsingHEAD_4
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPOST_4
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPUT_4
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPATCH_4
2019-03-19 11:24:13 -Generating unique operation named: updateUsingDELETE_4
2019-03-19 11:24:13 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-19 11:24:13 -Generating unique operation named: updateUsingTRACE_4
2019-03-19 11:24:13 -Generating unique operation named: ElecUsingGET_1
2019-03-19 11:24:13 -Generating unique operation named: addUsingGET_5
2019-03-19 11:24:13 -Generating unique operation named: editUsingGET_5
2019-03-19 11:24:13 -Generating unique operation named: listUsingGET_5
2019-03-19 11:24:13 -Generating unique operation named: removeUsingPOST_10
2019-03-19 11:24:13 -Generating unique operation named: removeUsingPOST_11
2019-03-19 11:24:13 -Generating unique operation named: saveUsingPOST_5
2019-03-19 11:24:13 -Generating unique operation named: updateUsingGET_5
2019-03-19 11:24:13 -Generating unique operation named: updateUsingHEAD_5
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPOST_5
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPUT_5
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPATCH_5
2019-03-19 11:24:13 -Generating unique operation named: updateUsingDELETE_5
2019-03-19 11:24:13 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-19 11:24:13 -Generating unique operation named: updateUsingTRACE_5
2019-03-19 11:24:13 -Generating unique operation named: editUsingGET_6
2019-03-19 11:24:13 -Generating unique operation named: listUsingGET_6
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPOST_6
2019-03-19 11:24:13 -Generating unique operation named: addUsingGET_6
2019-03-19 11:24:13 -Generating unique operation named: editUsingGET_7
2019-03-19 11:24:13 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-19 11:24:13 -Generating unique operation named: listUsingGET_7
2019-03-19 11:24:13 -Generating unique operation named: removeUsingPOST_12
2019-03-19 11:24:13 -Generating unique operation named: removeUsingPOST_13
2019-03-19 11:24:13 -Generating unique operation named: saveUsingPOST_6
2019-03-19 11:24:13 -Generating unique operation named: updateUsingGET_6
2019-03-19 11:24:13 -Generating unique operation named: updateUsingHEAD_6
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPOST_7
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPUT_6
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPATCH_6
2019-03-19 11:24:13 -Generating unique operation named: updateUsingDELETE_6
2019-03-19 11:24:13 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-19 11:24:13 -Generating unique operation named: updateUsingTRACE_6
2019-03-19 11:24:13 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-19 11:24:13 -Generating unique operation named: addUsingGET_7
2019-03-19 11:24:13 -Generating unique operation named: editUsingGET_8
2019-03-19 11:24:13 -Generating unique operation named: listUsingGET_8
2019-03-19 11:24:13 -Generating unique operation named: removeUsingPOST_14
2019-03-19 11:24:13 -Generating unique operation named: removeUsingPOST_15
2019-03-19 11:24:13 -Generating unique operation named: saveUsingPOST_7
2019-03-19 11:24:13 -Generating unique operation named: updateUsingGET_7
2019-03-19 11:24:13 -Generating unique operation named: updateUsingHEAD_7
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPOST_8
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPUT_7
2019-03-19 11:24:13 -Generating unique operation named: updateUsingPATCH_7
2019-03-19 11:24:13 -Generating unique operation named: updateUsingDELETE_7
2019-03-19 11:24:13 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-19 11:24:13 -Generating unique operation named: updateUsingTRACE_7
2019-03-19 11:24:13 -Generating unique operation named: addUsingGET_8
2019-03-19 11:24:13 -Generating unique operation named: editUsingGET_9
2019-03-19 11:24:13 -Generating unique operation named: listUsingGET_9
2019-03-19 11:24:13 -Generating unique operation named: removeUsingPOST_16
2019-03-19 11:24:14 -Generating unique operation named: removeUsingPOST_17
2019-03-19 11:24:14 -Generating unique operation named: saveUsingPOST_8
2019-03-19 11:24:14 -Generating unique operation named: updateUsingGET_8
2019-03-19 11:24:14 -Generating unique operation named: updateUsingHEAD_8
2019-03-19 11:24:14 -Generating unique operation named: updateUsingPOST_9
2019-03-19 11:24:14 -Generating unique operation named: updateUsingPUT_8
2019-03-19 11:24:14 -Generating unique operation named: updateUsingPATCH_8
2019-03-19 11:24:14 -Generating unique operation named: updateUsingDELETE_8
2019-03-19 11:24:14 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-19 11:24:14 -Generating unique operation named: updateUsingTRACE_8
2019-03-19 11:24:14 -Generating unique operation named: addUsingGET_9
2019-03-19 11:24:14 -Generating unique operation named: editUsingGET_10
2019-03-19 11:24:14 -Generating unique operation named: infoUsingGET_1
2019-03-19 11:24:14 -Generating unique operation named: infoUsingHEAD_1
2019-03-19 11:24:14 -Generating unique operation named: infoUsingPOST_1
2019-03-19 11:24:14 -Generating unique operation named: infoUsingPUT_1
2019-03-19 11:24:14 -Generating unique operation named: infoUsingPATCH_1
2019-03-19 11:24:14 -Generating unique operation named: infoUsingDELETE_1
2019-03-19 11:24:14 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-19 11:24:14 -Generating unique operation named: infoUsingTRACE_1
2019-03-19 11:24:14 -Generating unique operation named: listUsingGET_10
2019-03-19 11:24:14 -Generating unique operation named: removeUsingPOST_18
2019-03-19 11:24:14 -Generating unique operation named: removeUsingPOST_19
2019-03-19 11:24:14 -Generating unique operation named: saveUsingPOST_9
2019-03-19 11:24:14 -Generating unique operation named: updateUsingPOST_10
2019-03-19 11:24:14 -Generating unique operation named: listUsingGET_11
2019-03-19 11:24:14 -Generating unique operation named: removeUsingPOST_20
2019-03-19 11:24:14 -Generating unique operation named: welcomeUsingGET_1
2019-03-19 11:24:14 -Generating unique operation named: addUsingGET_10
2019-03-19 11:24:14 -Generating unique operation named: editUsingGET_11
2019-03-19 11:24:14 -Generating unique operation named: listUsingGET_12
2019-03-19 11:24:14 -Generating unique operation named: removeUsingPOST_21
2019-03-19 11:24:14 -Generating unique operation named: saveUsingPOST_10
2019-03-19 11:24:14 -Generating unique operation named: treeUsingGET_1
2019-03-19 11:24:14 -Generating unique operation named: treeUsingGET_2
2019-03-19 11:24:14 -Generating unique operation named: updateUsingPOST_11
2019-03-19 11:24:14 -Generating unique operation named: addUsingGET_11
2019-03-19 11:24:14 -Generating unique operation named: editUsingGET_12
2019-03-19 11:24:14 -Generating unique operation named: listUsingGET_13
2019-03-19 11:24:14 -Generating unique operation named: removeUsingPOST_22
2019-03-19 11:24:14 -Generating unique operation named: removeUsingPOST_23
2019-03-19 11:24:14 -Generating unique operation named: saveUsingPOST_11
2019-03-19 11:24:14 -Generating unique operation named: updateUsingGET_9
2019-03-19 11:24:14 -Generating unique operation named: updateUsingHEAD_9
2019-03-19 11:24:14 -Generating unique operation named: updateUsingPOST_12
2019-03-19 11:24:14 -Generating unique operation named: updateUsingPUT_9
2019-03-19 11:24:14 -Generating unique operation named: updateUsingPATCH_9
2019-03-19 11:24:14 -Generating unique operation named: updateUsingDELETE_9
2019-03-19 11:24:14 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-19 11:24:14 -Generating unique operation named: updateUsingTRACE_9
2019-03-19 11:24:14 -Generating unique operation named: addUsingGET_12
2019-03-19 11:24:14 -Generating unique operation named: editUsingGET_13
2019-03-19 11:24:14 -Generating unique operation named: listUsingGET_14
2019-03-19 11:24:14 -Generating unique operation named: removeUsingPOST_24
2019-03-19 11:24:14 -Generating unique operation named: removeUsingPOST_25
2019-03-19 11:24:14 -Generating unique operation named: saveUsingPOST_12
2019-03-19 11:24:14 -Generating unique operation named: updateUsingGET_10
2019-03-19 11:24:14 -Generating unique operation named: updateUsingHEAD_10
2019-03-19 11:24:14 -Generating unique operation named: updateUsingPOST_13
2019-03-19 11:24:14 -Generating unique operation named: updateUsingPUT_10
2019-03-19 11:24:14 -Generating unique operation named: updateUsingPATCH_10
2019-03-19 11:24:14 -Generating unique operation named: updateUsingDELETE_10
2019-03-19 11:24:14 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-19 11:24:14 -Generating unique operation named: updateUsingTRACE_10
2019-03-19 11:24:14 -Generating unique operation named: addUsingGET_13
2019-03-19 11:24:14 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-19 11:24:14 -Generating unique operation named: editUsingGET_14
2019-03-19 11:24:14 -Generating unique operation named: listUsingGET_15
2019-03-19 11:24:14 -Generating unique operation named: saveUsingPOST_13
2019-03-19 11:24:14 -Generating unique operation named: saveUsingPOST_14
2019-03-19 11:24:14 -Generating unique operation named: updateUsingPOST_14
2019-03-19 11:24:14 -Generating unique operation named: listUsingGET_16
2019-03-19 11:24:14 -Generating unique operation named: listUsingHEAD_1
2019-03-19 11:24:14 -Generating unique operation named: listUsingPOST_1
2019-03-19 11:24:14 -Generating unique operation named: listUsingPUT_1
2019-03-19 11:24:14 -Generating unique operation named: listUsingPATCH_1
2019-03-19 11:24:14 -Generating unique operation named: listUsingDELETE_1
2019-03-19 11:24:14 -Generating unique operation named: listUsingOPTIONS_1
2019-03-19 11:24:14 -Generating unique operation named: listUsingTRACE_1
2019-03-19 11:24:14 -Generating unique operation named: addUsingGET_14
2019-03-19 11:24:14 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-19 11:24:14 -Generating unique operation named: editUsingGET_15
2019-03-19 11:24:14 -Generating unique operation named: listUsingGET_17
2019-03-19 11:24:14 -Generating unique operation named: removeUsingPOST_26
2019-03-19 11:24:14 -Generating unique operation named: saveUsingPOST_15
2019-03-19 11:24:14 -Generating unique operation named: treeUsingGET_3
2019-03-19 11:24:14 -Generating unique operation named: treeViewUsingGET_1
2019-03-19 11:24:14 -Generating unique operation named: updateUsingPOST_15
2019-03-19 11:24:14 -Generating unique operation named: addUsingGET_15
2019-03-19 11:24:14 -Generating unique operation named: editUsingGET_16
2019-03-19 11:24:15 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-19 11:24:15 -Generating unique operation named: listUsingGET_18
2019-03-19 11:24:15 -Generating unique operation named: removeUsingPOST_27
2019-03-19 11:24:15 -Generating unique operation named: removeUsingPOST_28
2019-03-19 11:24:15 -Generating unique operation named: saveUsingPOST_16
2019-03-19 11:24:15 -Generating unique operation named: updateUsingGET_11
2019-03-19 11:24:15 -Generating unique operation named: updateUsingHEAD_11
2019-03-19 11:24:15 -Generating unique operation named: updateUsingPOST_16
2019-03-19 11:24:15 -Generating unique operation named: updateUsingPUT_11
2019-03-19 11:24:15 -Generating unique operation named: updateUsingPATCH_11
2019-03-19 11:24:15 -Generating unique operation named: updateUsingDELETE_11
2019-03-19 11:24:15 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-19 11:24:15 -Generating unique operation named: updateUsingTRACE_11
2019-03-19 11:24:15 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-19 11:24:15 -Generating unique operation named: addUsingGET_16
2019-03-19 11:24:15 -Generating unique operation named: editUsingGET_17
2019-03-19 11:24:15 -Generating unique operation named: listUsingGET_19
2019-03-19 11:24:15 -Generating unique operation named: removeUsingPOST_29
2019-03-19 11:24:15 -Generating unique operation named: removeUsingPOST_30
2019-03-19 11:24:15 -Generating unique operation named: saveUsingPOST_17
2019-03-19 11:24:15 -Generating unique operation named: updateUsingGET_12
2019-03-19 11:24:15 -Generating unique operation named: updateUsingHEAD_12
2019-03-19 11:24:15 -Generating unique operation named: updateUsingPOST_17
2019-03-19 11:24:15 -Generating unique operation named: updateUsingPUT_12
2019-03-19 11:24:15 -Generating unique operation named: updateUsingPATCH_12
2019-03-19 11:24:15 -Generating unique operation named: updateUsingDELETE_12
2019-03-19 11:24:15 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-19 11:24:15 -Generating unique operation named: updateUsingTRACE_12
2019-03-19 11:24:15 -Generating unique operation named: addUsingGET_17
2019-03-19 11:24:15 -Generating unique operation named: editUsingGET_18
2019-03-19 11:24:15 -Generating unique operation named: listUsingGET_20
2019-03-19 11:24:15 -Generating unique operation named: removeUsingPOST_31
2019-03-19 11:24:15 -Generating unique operation named: removeUsingPOST_32
2019-03-19 11:24:15 -Generating unique operation named: saveUsingPOST_18
2019-03-19 11:24:15 -Generating unique operation named: updateUsingGET_13
2019-03-19 11:24:15 -Generating unique operation named: updateUsingHEAD_13
2019-03-19 11:24:15 -Generating unique operation named: updateUsingPOST_18
2019-03-19 11:24:15 -Generating unique operation named: updateUsingPUT_13
2019-03-19 11:24:15 -Generating unique operation named: updateUsingPATCH_13
2019-03-19 11:24:15 -Generating unique operation named: updateUsingDELETE_13
2019-03-19 11:24:15 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-19 11:24:15 -Generating unique operation named: updateUsingTRACE_13
2019-03-19 11:24:15 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-19 11:24:15 -Starting Quartz Scheduler now
2019-03-19 11:24:15 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-19 11:24:15 -Starting...
2019-03-19 11:24:15 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 11:24:15 -Started.
2019-03-19 11:24:15 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-19 11:24:15 -Using a shared selector for servlet write/read
2019-03-19 11:24:15 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-19 11:24:15 -Started BootdoApplication in 30.379 seconds (JVM running for 32.004)
2019-03-19 11:24:15 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-19 11:24:15 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-19 11:24:15 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-19 11:24:15 -FrameworkServlet 'dispatcherServlet': initialization completed in 97 ms
2019-03-19 11:24:15 -Enabling session validation scheduler...
2019-03-19 11:24:15 -==> Parameters: 
2019-03-19 11:24:15 -请求地址 : http://localhost:8081/login;JSESSIONID=27829c6c-742a-43c0-abfd-0a1168606ad2
2019-03-19 11:24:15 -HTTP METHOD : GET
2019-03-19 11:24:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 11:24:15 -参数 : [{}]
2019-03-19 11:24:15 -耗时 : 3
2019-03-19 11:24:15 -返回值 : login
2019-03-19 11:24:15 -<==      Total: 1
2019-03-19 11:24:17 -请求地址 : http://localhost:8081/getVerify
2019-03-19 11:24:17 -HTTP METHOD : GET
2019-03-19 11:24:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 11:24:17 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@35b6e0b5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3b711873]
2019-03-19 11:24:17 -0991
2019-03-19 11:24:17 -耗时 : 553
2019-03-19 11:24:17 -返回值 : null
2019-03-19 11:24:36 -请求地址 : http://localhost:8081/login
2019-03-19 11:24:36 -HTTP METHOD : POST
2019-03-19 11:24:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 11:24:36 -参数 : [admin, 111111, 0991, org.apache.shiro.web.servlet.ShiroHttpServletRequest@411a8a73]
2019-03-19 11:24:36 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 11:24:36 -==> Parameters: admin(String)
2019-03-19 11:24:36 -<==      Total: 1
2019-03-19 11:24:36 -耗时 : 117
2019-03-19 11:24:36 -返回值 : {msg=操作成功, code=0}
2019-03-19 11:24:36 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-19 11:24:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 11:24:36 -==> Parameters: 1(Long), admin(String), 登录(String), 117(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 11:24:36.649(Timestamp)
2019-03-19 11:24:36 -请求地址 : http://localhost:8081/index
2019-03-19 11:24:36 -HTTP METHOD : GET
2019-03-19 11:24:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 11:24:36 -参数 : [{}]
2019-03-19 11:24:36 -<==    Updates: 1
2019-03-19 11:24:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 11:24:36 -==> Parameters: 1(Long)
2019-03-19 11:24:36 -<==      Total: 46
2019-03-19 11:24:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 11:24:36 -==> Parameters: 138(Long)
2019-03-19 11:24:36 -<==      Total: 1
2019-03-19 11:24:36 -耗时 : 142
2019-03-19 11:24:36 -返回值 : index_v1
2019-03-19 11:24:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 11:24:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 143(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 11:24:36.911(Timestamp)
2019-03-19 11:24:36 -<==    Updates: 1
2019-03-19 11:24:37 -请求地址 : http://localhost:8081/main
2019-03-19 11:24:37 -HTTP METHOD : GET
2019-03-19 11:24:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 11:24:37 -参数 : []
2019-03-19 11:24:37 -耗时 : 1
2019-03-19 11:24:37 -返回值 : main
2019-03-19 11:24:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 11:24:37 -HTTP METHOD : GET
2019-03-19 11:24:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 11:24:37 -参数 : []
2019-03-19 11:24:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 11:24:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 11:24:37 -<==      Total: 0
2019-03-19 11:24:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 11:24:37 -==> Parameters: 1(Long), 0(String)
2019-03-19 11:24:37 -<==      Total: 1
2019-03-19 11:24:37 -耗时 : 70
2019-03-19 11:24:37 -返回值 : com.bootdo.common.utils.PageUtils@7099b0e7
2019-03-19 11:24:37 -请求地址 : http://localhost:8081/main
2019-03-19 11:24:37 -HTTP METHOD : GET
2019-03-19 11:24:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 11:24:37 -参数 : []
2019-03-19 11:24:37 -耗时 : 1
2019-03-19 11:24:37 -返回值 : main
2019-03-19 11:24:55 -请求地址 : http://localhost:8081/index
2019-03-19 11:24:55 -HTTP METHOD : GET
2019-03-19 11:24:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 11:24:55 -参数 : [{}]
2019-03-19 11:24:55 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 11:24:55 -==> Parameters: 1(Long)
2019-03-19 11:24:55 -<==      Total: 46
2019-03-19 11:24:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 11:24:55 -==> Parameters: 138(Long)
2019-03-19 11:24:55 -<==      Total: 1
2019-03-19 11:24:55 -耗时 : 27
2019-03-19 11:24:55 -返回值 : index_v1
2019-03-19 11:24:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 11:24:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 11:24:55.052(Timestamp)
2019-03-19 11:24:55 -请求地址 : http://localhost:8081/main
2019-03-19 11:24:55 -HTTP METHOD : GET
2019-03-19 11:24:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 11:24:55 -参数 : []
2019-03-19 11:24:55 -耗时 : 0
2019-03-19 11:24:55 -返回值 : main
2019-03-19 11:24:55 -<==    Updates: 1
2019-03-19 11:24:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 11:24:55 -HTTP METHOD : GET
2019-03-19 11:24:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 11:24:55 -参数 : []
2019-03-19 11:24:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 11:24:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 11:24:55 -<==      Total: 0
2019-03-19 11:24:55 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 11:24:55 -==> Parameters: 1(Long), 0(String)
2019-03-19 11:24:55 -<==      Total: 1
2019-03-19 11:24:55 -耗时 : 13
2019-03-19 11:24:55 -返回值 : com.bootdo.common.utils.PageUtils@6b4d38e5
2019-03-19 11:24:56 -请求地址 : http://localhost:8081/main
2019-03-19 11:24:56 -HTTP METHOD : GET
2019-03-19 11:24:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 11:24:56 -参数 : []
2019-03-19 11:24:56 -耗时 : 0
2019-03-19 11:24:56 -返回值 : main
2019-03-19 11:25:08 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 3, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 7]
2019-03-19 11:25:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 11:25:31 -==> Parameters: 1(Long)
2019-03-19 11:25:31 -<==      Total: 90
2019-03-19 11:25:31 -请求地址 : http://localhost:8081/water/water
2019-03-19 11:25:31 -HTTP METHOD : GET
2019-03-19 11:25:31 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-03-19 11:25:31 -参数 : []
2019-03-19 11:25:31 -耗时 : 1
2019-03-19 11:25:31 -返回值 : water/water/water
2019-03-19 11:25:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 11:25:31 -HTTP METHOD : GET
2019-03-19 11:25:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 11:25:31 -参数 : [userType]
2019-03-19 11:25:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 11:25:31 -==> Parameters: userType(String)
2019-03-19 11:25:31 -<==      Total: 2
2019-03-19 11:25:31 -耗时 : 47
2019-03-19 11:25:31 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 11:25:31 -请求地址 : http://localhost:8081/water/water/list
2019-03-19 11:25:31 -HTTP METHOD : GET
2019-03-19 11:25:31 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-19 11:25:31 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-19 11:25:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id desc limit ?, ? 
2019-03-19 11:25:31 -==> Parameters: 0(Integer), 3(Integer)
2019-03-19 11:25:31 -<==      Total: 2
2019-03-19 11:25:31 -==>  Preparing: select count(*) from water 
2019-03-19 11:25:31 -==> Parameters: 
2019-03-19 11:25:31 -<==      Total: 1
2019-03-19 11:25:31 -耗时 : 98
2019-03-19 11:25:31 -返回值 : com.bootdo.common.utils.PageUtils@10de171b
2019-03-19 11:28:10 -请求地址 : http://localhost:8081/index
2019-03-19 11:28:10 -HTTP METHOD : GET
2019-03-19 11:28:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 11:28:10 -参数 : [{}]
2019-03-19 11:28:10 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 11:28:10 -==> Parameters: 1(Long)
2019-03-19 11:28:10 -<==      Total: 46
2019-03-19 11:28:10 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 11:28:10 -==> Parameters: 138(Long)
2019-03-19 11:28:10 -<==      Total: 1
2019-03-19 11:28:11 -耗时 : 27
2019-03-19 11:28:11 -返回值 : index_v1
2019-03-19 11:28:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 11:28:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 11:28:11.002(Timestamp)
2019-03-19 11:28:11 -请求地址 : http://localhost:8081/main
2019-03-19 11:28:11 -HTTP METHOD : GET
2019-03-19 11:28:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 11:28:11 -参数 : []
2019-03-19 11:28:11 -耗时 : 3
2019-03-19 11:28:11 -返回值 : main
2019-03-19 11:28:11 -<==    Updates: 1
2019-03-19 11:28:11 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 11:28:11 -HTTP METHOD : GET
2019-03-19 11:28:11 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 11:28:11 -参数 : []
2019-03-19 11:28:11 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 11:28:11 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 11:28:11 -<==      Total: 0
2019-03-19 11:28:11 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 11:28:11 -==> Parameters: 1(Long), 0(String)
2019-03-19 11:28:11 -<==      Total: 1
2019-03-19 11:28:11 -耗时 : 8
2019-03-19 11:28:11 -返回值 : com.bootdo.common.utils.PageUtils@6a0eeca9
2019-03-19 11:28:11 -请求地址 : http://localhost:8081/main
2019-03-19 11:28:11 -HTTP METHOD : GET
2019-03-19 11:28:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 11:28:11 -参数 : []
2019-03-19 11:28:11 -耗时 : 1
2019-03-19 11:28:11 -返回值 : main
2019-03-19 11:28:17 -请求地址 : http://localhost:8081/water/water
2019-03-19 11:28:17 -HTTP METHOD : GET
2019-03-19 11:28:17 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-03-19 11:28:17 -参数 : []
2019-03-19 11:28:17 -耗时 : 2
2019-03-19 11:28:17 -返回值 : water/water/water
2019-03-19 11:28:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 11:28:17 -HTTP METHOD : GET
2019-03-19 11:28:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 11:28:17 -参数 : [userType]
2019-03-19 11:28:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 11:28:17 -==> Parameters: userType(String)
2019-03-19 11:28:17 -<==      Total: 2
2019-03-19 11:28:17 -耗时 : 5
2019-03-19 11:28:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 11:28:17 -请求地址 : http://localhost:8081/water/water/list
2019-03-19 11:28:17 -HTTP METHOD : GET
2019-03-19 11:28:17 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-19 11:28:17 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-19 11:28:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id desc limit ?, ? 
2019-03-19 11:28:17 -==> Parameters: 0(Integer), 3(Integer)
2019-03-19 11:28:17 -<==      Total: 3
2019-03-19 11:28:17 -==>  Preparing: select count(*) from water 
2019-03-19 11:28:17 -==> Parameters: 
2019-03-19 11:28:17 -<==      Total: 1
2019-03-19 11:28:17 -耗时 : 9
2019-03-19 11:28:17 -返回值 : com.bootdo.common.utils.PageUtils@302b15a2
2019-03-19 11:28:21 -请求地址 : http://localhost:8081/water/water/list
2019-03-19 11:28:21 -HTTP METHOD : GET
2019-03-19 11:28:21 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-19 11:28:21 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}]
2019-03-19 11:28:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 order by id desc limit ?, ? 
2019-03-19 11:28:21 -==> Parameters: 0(Integer), 3(Integer)
2019-03-19 11:28:21 -<==      Total: 2
2019-03-19 11:28:21 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 
2019-03-19 11:28:21 -==> Parameters: 
2019-03-19 11:28:21 -<==      Total: 1
2019-03-19 11:28:21 -耗时 : 19
2019-03-19 11:28:21 -返回值 : com.bootdo.common.utils.PageUtils@b8de41d
2019-03-19 11:28:26 -请求地址 : http://localhost:8081/water/water/list
2019-03-19 11:28:26 -HTTP METHOD : GET
2019-03-19 11:28:26 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-19 11:28:26 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-19 11:28:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id desc limit ?, ? 
2019-03-19 11:28:26 -==> Parameters: 0(Integer), 3(Integer)
2019-03-19 11:28:26 -<==      Total: 3
2019-03-19 11:28:26 -==>  Preparing: select count(*) from water 
2019-03-19 11:28:26 -==> Parameters: 
2019-03-19 11:28:26 -<==      Total: 1
2019-03-19 11:28:26 -耗时 : 8
2019-03-19 11:28:26 -返回值 : com.bootdo.common.utils.PageUtils@416e898e
2019-03-19 11:28:27 -请求地址 : http://localhost:8081/water/water/list
2019-03-19 11:28:27 -HTTP METHOD : GET
2019-03-19 11:28:27 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-19 11:28:27 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}]
2019-03-19 11:28:27 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 order by id desc limit ?, ? 
2019-03-19 11:28:27 -==> Parameters: 0(Integer), 3(Integer)
2019-03-19 11:28:27 -<==      Total: 2
2019-03-19 11:28:27 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 
2019-03-19 11:28:27 -==> Parameters: 
2019-03-19 11:28:27 -<==      Total: 1
2019-03-19 11:28:27 -耗时 : 9
2019-03-19 11:28:27 -返回值 : com.bootdo.common.utils.PageUtils@20113fe4
2019-03-19 11:28:28 -请求地址 : http://localhost:8081/water/water/list
2019-03-19 11:28:28 -HTTP METHOD : GET
2019-03-19 11:28:28 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-19 11:28:28 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-19 11:28:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id desc limit ?, ? 
2019-03-19 11:28:28 -==> Parameters: 0(Integer), 3(Integer)
2019-03-19 11:28:28 -<==      Total: 3
2019-03-19 11:28:28 -==>  Preparing: select count(*) from water 
2019-03-19 11:28:28 -==> Parameters: 
2019-03-19 11:28:28 -<==      Total: 1
2019-03-19 11:28:28 -耗时 : 8
2019-03-19 11:28:28 -返回值 : com.bootdo.common.utils.PageUtils@62b68d63
2019-03-19 11:28:29 -请求地址 : http://localhost:8081/water/water/list
2019-03-19 11:28:29 -HTTP METHOD : GET
2019-03-19 11:28:29 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-19 11:28:29 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}]
2019-03-19 11:28:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 order by id desc limit ?, ? 
2019-03-19 11:28:29 -==> Parameters: 0(Integer), 3(Integer)
2019-03-19 11:28:29 -<==      Total: 2
2019-03-19 11:28:29 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 
2019-03-19 11:28:29 -==> Parameters: 
2019-03-19 11:28:29 -<==      Total: 1
2019-03-19 11:28:29 -耗时 : 14
2019-03-19 11:28:29 -返回值 : com.bootdo.common.utils.PageUtils@25943861
2019-03-19 11:28:29 -请求地址 : http://localhost:8081/water/water/list
2019-03-19 11:28:29 -HTTP METHOD : GET
2019-03-19 11:28:29 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-19 11:28:29 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-19 11:28:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id desc limit ?, ? 
2019-03-19 11:28:29 -==> Parameters: 0(Integer), 3(Integer)
2019-03-19 11:28:29 -<==      Total: 3
2019-03-19 11:28:29 -==>  Preparing: select count(*) from water 
2019-03-19 11:28:29 -==> Parameters: 
2019-03-19 11:28:29 -<==      Total: 1
2019-03-19 11:28:29 -耗时 : 9
2019-03-19 11:28:29 -返回值 : com.bootdo.common.utils.PageUtils@12eb38a2
2019-03-19 11:29:32 -请求地址 : http://localhost:8081/water/water/list
2019-03-19 11:29:32 -HTTP METHOD : GET
2019-03-19 11:29:32 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-19 11:29:32 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}]
2019-03-19 11:29:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 order by id desc limit ?, ? 
2019-03-19 11:29:32 -==> Parameters: 0(Integer), 3(Integer)
2019-03-19 11:29:32 -<==      Total: 2
2019-03-19 11:29:32 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 
2019-03-19 11:29:32 -==> Parameters: 
2019-03-19 11:29:32 -<==      Total: 1
2019-03-19 11:29:32 -耗时 : 13
2019-03-19 11:29:32 -返回值 : com.bootdo.common.utils.PageUtils@72076c66
2019-03-19 11:29:33 -请求地址 : http://localhost:8081/water/water/list
2019-03-19 11:29:33 -HTTP METHOD : GET
2019-03-19 11:29:33 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-19 11:29:33 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-19 11:29:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id desc limit ?, ? 
2019-03-19 11:29:33 -==> Parameters: 0(Integer), 3(Integer)
2019-03-19 11:29:33 -<==      Total: 3
2019-03-19 11:29:33 -==>  Preparing: select count(*) from water 
2019-03-19 11:29:33 -==> Parameters: 
2019-03-19 11:29:33 -<==      Total: 1
2019-03-19 11:29:33 -耗时 : 9
2019-03-19 11:29:33 -返回值 : com.bootdo.common.utils.PageUtils@5414f9fe
2019-03-19 11:29:33 -请求地址 : http://localhost:8081/water/water/list
2019-03-19 11:29:33 -HTTP METHOD : GET
2019-03-19 11:29:33 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-19 11:29:33 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=2}]
2019-03-19 11:29:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `water_sum` < 0 order by id desc limit ?, ? 
2019-03-19 11:29:33 -==> Parameters: 0(Integer), 3(Integer)
2019-03-19 11:29:33 -<==      Total: 2
2019-03-19 11:29:33 -==>  Preparing: select count(*) from water WHERE `water_sum` < 0 
2019-03-19 11:29:33 -==> Parameters: 
2019-03-19 11:29:33 -<==      Total: 1
2019-03-19 11:29:33 -耗时 : 8
2019-03-19 11:29:33 -返回值 : com.bootdo.common.utils.PageUtils@5ec2f5c1
2019-03-19 11:29:34 -请求地址 : http://localhost:8081/water/water/list
2019-03-19 11:29:34 -HTTP METHOD : GET
2019-03-19 11:29:34 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-19 11:29:34 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}]
2019-03-19 11:29:34 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id desc limit ?, ? 
2019-03-19 11:29:34 -==> Parameters: 0(Integer), 3(Integer)
2019-03-19 11:29:34 -<==      Total: 3
2019-03-19 11:29:34 -==>  Preparing: select count(*) from water 
2019-03-19 11:29:34 -==> Parameters: 
2019-03-19 11:29:34 -<==      Total: 1
2019-03-19 11:29:34 -耗时 : 9
2019-03-19 11:29:34 -返回值 : com.bootdo.common.utils.PageUtils@3a6cbb9f
2019-03-19 11:39:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 11:39:50 -==> Parameters: 1(Long)
2019-03-19 11:39:50 -<==      Total: 90
2019-03-19 11:39:50 -请求地址 : http://localhost:8081/print/print
2019-03-19 11:39:50 -HTTP METHOD : GET
2019-03-19 11:39:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-19 11:39:50 -参数 : []
2019-03-19 11:39:50 -耗时 : 0
2019-03-19 11:39:50 -返回值 : print/print/print
2019-03-19 11:39:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 11:39:50 -HTTP METHOD : GET
2019-03-19 11:39:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 11:39:50 -参数 : [userType]
2019-03-19 11:39:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 11:39:50 -==> Parameters: userType(String)
2019-03-19 11:39:50 -<==      Total: 2
2019-03-19 11:39:50 -耗时 : 6
2019-03-19 11:39:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 11:39:50 -请求地址 : http://localhost:8081/print/print/list
2019-03-19 11:39:50 -HTTP METHOD : GET
2019-03-19 11:39:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-19 11:39:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-19 11:39:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-19 11:39:50 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 11:39:50 -<==      Total: 3
2019-03-19 11:39:50 -==>  Preparing: select count(*) from print 
2019-03-19 11:39:50 -==> Parameters: 
2019-03-19 11:39:50 -<==      Total: 1
2019-03-19 11:39:50 -耗时 : 102
2019-03-19 11:39:50 -返回值 : com.bootdo.common.utils.PageUtils@5c8509bd
2019-03-19 11:55:08 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 439]
2019-03-19 12:25:49 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 33], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 4, active threads = 3, queued tasks = 0, completed tasks = 717]
2019-03-19 12:35:26 -请求地址 : http://localhost:8081/login;JSESSIONID=240e1764-40ff-4d88-a43a-7233ee2e67ff
2019-03-19 12:35:26 -HTTP METHOD : GET
2019-03-19 12:35:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 12:35:26 -参数 : [{}]
2019-03-19 12:35:26 -耗时 : 1
2019-03-19 12:35:26 -返回值 : login
2019-03-19 12:35:26 -请求地址 : http://localhost:8081/login;JSESSIONID=240e1764-40ff-4d88-a43a-7233ee2e67ff
2019-03-19 12:35:26 -HTTP METHOD : GET
2019-03-19 12:35:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 12:35:26 -参数 : [{}]
2019-03-19 12:35:26 -耗时 : 0
2019-03-19 12:35:26 -返回值 : login
2019-03-19 12:35:27 -请求地址 : http://localhost:8081/getVerify
2019-03-19 12:35:27 -HTTP METHOD : GET
2019-03-19 12:35:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 12:35:27 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@bc1fd8c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5cf33888]
2019-03-19 12:35:27 -5548
2019-03-19 12:35:27 -耗时 : 19
2019-03-19 12:35:27 -返回值 : null
2019-03-19 12:35:27 -请求地址 : http://localhost:8081/getVerify
2019-03-19 12:35:27 -HTTP METHOD : GET
2019-03-19 12:35:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 12:35:27 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@23004635, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2c04f379]
2019-03-19 12:35:27 -7226
2019-03-19 12:35:27 -耗时 : 14
2019-03-19 12:35:27 -返回值 : null
2019-03-19 12:35:33 -请求地址 : http://localhost:8081/login
2019-03-19 12:35:33 -HTTP METHOD : POST
2019-03-19 12:35:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 12:35:33 -参数 : [admin, 111111, 7226, org.apache.shiro.web.servlet.ShiroHttpServletRequest@17f5c4ef]
2019-03-19 12:35:33 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 12:35:33 -==> Parameters: admin(String)
2019-03-19 12:35:33 -<==      Total: 1
2019-03-19 12:35:33 -耗时 : 8
2019-03-19 12:35:33 -返回值 : {msg=操作成功, code=0}
2019-03-19 12:35:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 12:35:34 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 12:35:33.999(Timestamp)
2019-03-19 12:35:34 -请求地址 : http://localhost:8081/index
2019-03-19 12:35:34 -HTTP METHOD : GET
2019-03-19 12:35:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 12:35:34 -参数 : [{}]
2019-03-19 12:35:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 12:35:34 -==> Parameters: 1(Long)
2019-03-19 12:35:34 -<==    Updates: 1
2019-03-19 12:35:34 -<==      Total: 46
2019-03-19 12:35:34 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 12:35:34 -==> Parameters: 138(Long)
2019-03-19 12:35:34 -<==      Total: 1
2019-03-19 12:35:34 -耗时 : 237
2019-03-19 12:35:34 -返回值 : index_v1
2019-03-19 12:35:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 12:35:34 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 237(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 12:35:34.271(Timestamp)
2019-03-19 12:35:34 -<==    Updates: 1
2019-03-19 12:35:34 -请求地址 : http://localhost:8081/main
2019-03-19 12:35:34 -HTTP METHOD : GET
2019-03-19 12:35:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 12:35:34 -参数 : []
2019-03-19 12:35:34 -耗时 : 1
2019-03-19 12:35:34 -返回值 : main
2019-03-19 12:35:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 12:35:34 -HTTP METHOD : GET
2019-03-19 12:35:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 12:35:34 -参数 : []
2019-03-19 12:35:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 12:35:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 12:35:34 -<==      Total: 0
2019-03-19 12:35:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 12:35:34 -==> Parameters: 1(Long), 0(String)
2019-03-19 12:35:34 -<==      Total: 1
2019-03-19 12:35:34 -耗时 : 30
2019-03-19 12:35:34 -返回值 : com.bootdo.common.utils.PageUtils@2d130225
2019-03-19 12:35:34 -请求地址 : http://localhost:8081/main
2019-03-19 12:35:34 -HTTP METHOD : GET
2019-03-19 12:35:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 12:35:34 -参数 : []
2019-03-19 12:35:34 -耗时 : 1
2019-03-19 12:35:34 -返回值 : main
2019-03-19 12:35:37 -Validating all active sessions...
2019-03-19 12:35:37 -Finished session validation.  No sessions were stopped.
2019-03-19 12:35:48 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 12:35:48 -==> Parameters: 1(Long)
2019-03-19 12:35:48 -<==      Total: 90
2019-03-19 12:35:48 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 12:35:48 -HTTP METHOD : GET
2019-03-19 12:35:48 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 12:35:48 -参数 : []
2019-03-19 12:35:48 -耗时 : 0
2019-03-19 12:35:48 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 12:35:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 12:35:49 -HTTP METHOD : GET
2019-03-19 12:35:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 12:35:49 -参数 : [userType]
2019-03-19 12:35:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 12:35:49 -==> Parameters: userType(String)
2019-03-19 12:35:49 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 12:35:49 -HTTP METHOD : GET
2019-03-19 12:35:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 12:35:49 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 12:35:49 -<==      Total: 2
2019-03-19 12:35:49 -耗时 : 27
2019-03-19 12:35:49 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 12:35:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 12:35:49 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 12:35:49 -<==      Total: 4
2019-03-19 12:35:49 -==>  Preparing: select count(*) from elec_log 
2019-03-19 12:35:49 -==> Parameters: 
2019-03-19 12:35:49 -<==      Total: 1
2019-03-19 12:35:49 -耗时 : 64
2019-03-19 12:35:49 -返回值 : com.bootdo.common.utils.PageUtils@2771d47a
2019-03-19 12:35:49 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 12:35:49 -HTTP METHOD : GET
2019-03-19 12:35:49 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 12:35:49 -参数 : []
2019-03-19 12:35:49 -耗时 : 3
2019-03-19 12:35:49 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 12:35:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 12:35:50 -HTTP METHOD : GET
2019-03-19 12:35:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 12:35:50 -参数 : [userType]
2019-03-19 12:35:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 12:35:50 -==> Parameters: userType(String)
2019-03-19 12:35:50 -<==      Total: 2
2019-03-19 12:35:50 -耗时 : 4
2019-03-19 12:35:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 12:35:50 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 12:35:50 -HTTP METHOD : GET
2019-03-19 12:35:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 12:35:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 12:35:50 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 12:35:50 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 12:35:50 -<==      Total: 3
2019-03-19 12:35:50 -==>  Preparing: select count(*) from heat_log 
2019-03-19 12:35:50 -==> Parameters: 
2019-03-19 12:35:50 -<==      Total: 1
2019-03-19 12:35:50 -耗时 : 34
2019-03-19 12:35:50 -返回值 : com.bootdo.common.utils.PageUtils@1f8c5966
2019-03-19 12:35:50 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 12:35:50 -HTTP METHOD : GET
2019-03-19 12:35:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 12:35:50 -参数 : []
2019-03-19 12:35:50 -耗时 : 1
2019-03-19 12:35:50 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 12:35:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 12:35:51 -HTTP METHOD : GET
2019-03-19 12:35:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 12:35:51 -参数 : [userType]
2019-03-19 12:35:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 12:35:51 -==> Parameters: userType(String)
2019-03-19 12:35:51 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 12:35:51 -HTTP METHOD : GET
2019-03-19 12:35:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 12:35:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 12:35:51 -<==      Total: 2
2019-03-19 12:35:51 -耗时 : 22
2019-03-19 12:35:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 12:35:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 12:35:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 12:35:51 -<==      Total: 3
2019-03-19 12:35:51 -==>  Preparing: select count(*) from water_log 
2019-03-19 12:35:51 -==> Parameters: 
2019-03-19 12:35:51 -<==      Total: 1
2019-03-19 12:35:51 -耗时 : 79
2019-03-19 12:35:51 -返回值 : com.bootdo.common.utils.PageUtils@4d580611
2019-03-19 12:35:51 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 12:35:51 -HTTP METHOD : GET
2019-03-19 12:35:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 12:35:51 -参数 : []
2019-03-19 12:35:51 -耗时 : 0
2019-03-19 12:35:51 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 12:35:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 12:35:51 -HTTP METHOD : GET
2019-03-19 12:35:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 12:35:51 -参数 : [userType]
2019-03-19 12:35:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 12:35:51 -==> Parameters: userType(String)
2019-03-19 12:35:51 -<==      Total: 2
2019-03-19 12:35:51 -耗时 : 4
2019-03-19 12:35:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 12:35:51 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 12:35:51 -HTTP METHOD : GET
2019-03-19 12:35:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 12:35:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 12:35:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 12:35:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 12:35:51 -<==      Total: 3
2019-03-19 12:35:51 -==>  Preparing: select count(*) from heat_log 
2019-03-19 12:35:51 -==> Parameters: 
2019-03-19 12:35:51 -<==      Total: 1
2019-03-19 12:35:51 -耗时 : 7
2019-03-19 12:35:51 -返回值 : com.bootdo.common.utils.PageUtils@14da5e94
2019-03-19 12:35:52 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 12:35:52 -HTTP METHOD : GET
2019-03-19 12:35:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 12:35:52 -参数 : []
2019-03-19 12:35:52 -耗时 : 1
2019-03-19 12:35:52 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 12:35:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 12:35:52 -HTTP METHOD : GET
2019-03-19 12:35:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 12:35:52 -参数 : [userType]
2019-03-19 12:35:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 12:35:52 -==> Parameters: userType(String)
2019-03-19 12:35:52 -<==      Total: 2
2019-03-19 12:35:52 -耗时 : 9
2019-03-19 12:35:52 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 12:35:52 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 12:35:52 -HTTP METHOD : GET
2019-03-19 12:35:52 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 12:35:52 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 12:35:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 12:35:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 12:35:52 -<==      Total: 4
2019-03-19 12:35:52 -==>  Preparing: select count(*) from elec_log 
2019-03-19 12:35:52 -==> Parameters: 
2019-03-19 12:35:52 -<==      Total: 1
2019-03-19 12:35:52 -耗时 : 7
2019-03-19 12:35:52 -返回值 : com.bootdo.common.utils.PageUtils@522a49dc
2019-03-19 12:35:53 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 12:35:53 -HTTP METHOD : GET
2019-03-19 12:35:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 12:35:53 -参数 : []
2019-03-19 12:35:53 -耗时 : 0
2019-03-19 12:35:53 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 12:35:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 12:35:53 -HTTP METHOD : GET
2019-03-19 12:35:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 12:35:53 -参数 : [userType]
2019-03-19 12:35:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 12:35:53 -==> Parameters: userType(String)
2019-03-19 12:35:53 -<==      Total: 2
2019-03-19 12:35:53 -耗时 : 5
2019-03-19 12:35:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 12:35:53 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 12:35:53 -HTTP METHOD : GET
2019-03-19 12:35:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 12:35:53 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 12:35:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 12:35:53 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 12:35:53 -<==      Total: 3
2019-03-19 12:35:53 -==>  Preparing: select count(*) from heat_log 
2019-03-19 12:35:53 -==> Parameters: 
2019-03-19 12:35:53 -<==      Total: 1
2019-03-19 12:35:53 -耗时 : 12
2019-03-19 12:35:53 -返回值 : com.bootdo.common.utils.PageUtils@328e14b9
2019-03-19 12:35:53 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 12:35:53 -HTTP METHOD : GET
2019-03-19 12:35:53 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 12:35:53 -参数 : []
2019-03-19 12:35:53 -耗时 : 0
2019-03-19 12:35:53 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 12:35:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 12:35:53 -HTTP METHOD : GET
2019-03-19 12:35:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 12:35:53 -参数 : [userType]
2019-03-19 12:35:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 12:35:53 -==> Parameters: userType(String)
2019-03-19 12:35:53 -<==      Total: 2
2019-03-19 12:35:53 -耗时 : 5
2019-03-19 12:35:53 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 12:35:54 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 12:35:54 -HTTP METHOD : GET
2019-03-19 12:35:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 12:35:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 12:35:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 12:35:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 12:35:54 -<==      Total: 3
2019-03-19 12:35:54 -==>  Preparing: select count(*) from water_log 
2019-03-19 12:35:54 -==> Parameters: 
2019-03-19 12:35:54 -<==      Total: 1
2019-03-19 12:35:54 -耗时 : 9
2019-03-19 12:35:54 -返回值 : com.bootdo.common.utils.PageUtils@13ef4594
2019-03-19 12:35:54 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 12:35:54 -HTTP METHOD : GET
2019-03-19 12:35:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 12:35:54 -参数 : []
2019-03-19 12:35:54 -耗时 : 1
2019-03-19 12:35:54 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 12:35:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 12:35:54 -HTTP METHOD : GET
2019-03-19 12:35:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 12:35:54 -参数 : [userType]
2019-03-19 12:35:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 12:35:54 -==> Parameters: userType(String)
2019-03-19 12:35:54 -<==      Total: 2
2019-03-19 12:35:54 -耗时 : 20
2019-03-19 12:35:54 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 12:35:54 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 12:35:54 -HTTP METHOD : GET
2019-03-19 12:35:54 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 12:35:54 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 12:35:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 12:35:54 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 12:35:54 -<==      Total: 3
2019-03-19 12:35:54 -==>  Preparing: select count(*) from heat_log 
2019-03-19 12:35:54 -==> Parameters: 
2019-03-19 12:35:54 -<==      Total: 1
2019-03-19 12:35:54 -耗时 : 9
2019-03-19 12:35:54 -返回值 : com.bootdo.common.utils.PageUtils@27c85229
2019-03-19 12:35:55 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 12:35:55 -HTTP METHOD : GET
2019-03-19 12:35:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 12:35:55 -参数 : []
2019-03-19 12:35:55 -耗时 : 0
2019-03-19 12:35:55 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 12:35:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 12:35:55 -HTTP METHOD : GET
2019-03-19 12:35:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 12:35:55 -参数 : [userType]
2019-03-19 12:35:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 12:35:55 -==> Parameters: userType(String)
2019-03-19 12:35:55 -<==      Total: 2
2019-03-19 12:35:55 -耗时 : 6
2019-03-19 12:35:55 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 12:35:55 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 12:35:55 -HTTP METHOD : GET
2019-03-19 12:35:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 12:35:55 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 12:35:55 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 12:35:55 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 12:35:55 -<==      Total: 4
2019-03-19 12:35:55 -==>  Preparing: select count(*) from elec_log 
2019-03-19 12:35:55 -==> Parameters: 
2019-03-19 12:35:55 -<==      Total: 1
2019-03-19 12:35:55 -耗时 : 6
2019-03-19 12:35:55 -返回值 : com.bootdo.common.utils.PageUtils@36462fa6
2019-03-19 12:35:55 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 12:35:55 -HTTP METHOD : GET
2019-03-19 12:35:55 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 12:35:55 -参数 : []
2019-03-19 12:35:55 -耗时 : 1
2019-03-19 12:35:55 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 12:35:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 12:35:56 -HTTP METHOD : GET
2019-03-19 12:35:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 12:35:56 -参数 : [userType]
2019-03-19 12:35:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 12:35:56 -==> Parameters: userType(String)
2019-03-19 12:35:56 -<==      Total: 2
2019-03-19 12:35:56 -耗时 : 3
2019-03-19 12:35:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 12:35:56 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 12:35:56 -HTTP METHOD : GET
2019-03-19 12:35:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 12:35:56 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 12:35:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 12:35:56 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 12:35:56 -<==      Total: 3
2019-03-19 12:35:56 -==>  Preparing: select count(*) from heat_log 
2019-03-19 12:35:56 -==> Parameters: 
2019-03-19 12:35:56 -<==      Total: 1
2019-03-19 12:35:56 -耗时 : 6
2019-03-19 12:35:56 -返回值 : com.bootdo.common.utils.PageUtils@227a1a02
2019-03-19 12:35:56 -请求地址 : http://localhost:8081/moneyLog/waterLog
2019-03-19 12:35:56 -HTTP METHOD : GET
2019-03-19 12:35:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.WaterLog
2019-03-19 12:35:56 -参数 : []
2019-03-19 12:35:56 -耗时 : 1
2019-03-19 12:35:56 -返回值 : /moneyLog/waterLog/waterLog
2019-03-19 12:35:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 12:35:56 -HTTP METHOD : GET
2019-03-19 12:35:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 12:35:56 -参数 : [userType]
2019-03-19 12:35:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 12:35:56 -==> Parameters: userType(String)
2019-03-19 12:35:56 -<==      Total: 2
2019-03-19 12:35:56 -耗时 : 4
2019-03-19 12:35:56 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 12:35:56 -请求地址 : http://localhost:8081/moneyLog/waterLog/list
2019-03-19 12:35:56 -HTTP METHOD : GET
2019-03-19 12:35:56 -CLASS_METHOD : com.bootdo.moneyLog.controller.WaterLogController.list
2019-03-19 12:35:56 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, waterDate=}]
2019-03-19 12:35:56 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`water_money`,`water_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water_log order by id asc limit ?, ? 
2019-03-19 12:35:56 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 12:35:56 -<==      Total: 3
2019-03-19 12:35:56 -==>  Preparing: select count(*) from water_log 
2019-03-19 12:35:56 -==> Parameters: 
2019-03-19 12:35:56 -<==      Total: 1
2019-03-19 12:35:56 -耗时 : 7
2019-03-19 12:35:56 -返回值 : com.bootdo.common.utils.PageUtils@59e21620
2019-03-19 12:35:57 -请求地址 : http://localhost:8081/moneyLog/heatLog
2019-03-19 12:35:57 -HTTP METHOD : GET
2019-03-19 12:35:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.HeatLog
2019-03-19 12:35:57 -参数 : []
2019-03-19 12:35:57 -耗时 : 1
2019-03-19 12:35:57 -返回值 : /moneyLog/heatLog/heatLog
2019-03-19 12:35:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 12:35:57 -HTTP METHOD : GET
2019-03-19 12:35:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 12:35:57 -参数 : [userType]
2019-03-19 12:35:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 12:35:57 -==> Parameters: userType(String)
2019-03-19 12:35:57 -<==      Total: 2
2019-03-19 12:35:57 -耗时 : 4
2019-03-19 12:35:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 12:35:57 -请求地址 : http://localhost:8081/moneyLog/heatLog/list
2019-03-19 12:35:57 -HTTP METHOD : GET
2019-03-19 12:35:57 -CLASS_METHOD : com.bootdo.moneyLog.controller.HeatLogController.list
2019-03-19 12:35:57 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, heatDate=}]
2019-03-19 12:35:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`heat_money`,`heat_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_log order by id asc limit ?, ? 
2019-03-19 12:35:57 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 12:35:57 -<==      Total: 3
2019-03-19 12:35:57 -==>  Preparing: select count(*) from heat_log 
2019-03-19 12:35:57 -==> Parameters: 
2019-03-19 12:35:57 -<==      Total: 1
2019-03-19 12:35:57 -耗时 : 13
2019-03-19 12:35:57 -返回值 : com.bootdo.common.utils.PageUtils@3472c628
2019-03-19 12:35:58 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 12:35:58 -HTTP METHOD : GET
2019-03-19 12:35:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 12:35:58 -参数 : []
2019-03-19 12:35:58 -耗时 : 0
2019-03-19 12:35:58 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 12:35:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 12:35:58 -HTTP METHOD : GET
2019-03-19 12:35:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 12:35:58 -参数 : [userType]
2019-03-19 12:35:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 12:35:58 -==> Parameters: userType(String)
2019-03-19 12:35:58 -<==      Total: 2
2019-03-19 12:35:58 -耗时 : 5
2019-03-19 12:35:58 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 12:35:58 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 12:35:58 -HTTP METHOD : GET
2019-03-19 12:35:58 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 12:35:58 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 12:35:58 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 12:35:58 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 12:35:58 -<==      Total: 4
2019-03-19 12:35:58 -==>  Preparing: select count(*) from elec_log 
2019-03-19 12:35:58 -==> Parameters: 
2019-03-19 12:35:58 -<==      Total: 1
2019-03-19 12:35:58 -耗时 : 12
2019-03-19 12:35:58 -返回值 : com.bootdo.common.utils.PageUtils@7bbcddff
2019-03-19 12:36:27 -请求地址 : http://localhost:8081/sys/menu/
2019-03-19 12:36:27 -HTTP METHOD : GET
2019-03-19 12:36:27 -CLASS_METHOD : com.bootdo.system.controller.MenuController.menu
2019-03-19 12:36:27 -参数 : [{}]
2019-03-19 12:36:27 -耗时 : 0
2019-03-19 12:36:27 -返回值 : system/menu/menu
2019-03-19 12:36:27 -请求地址 : http://localhost:8081/sys/menu/list
2019-03-19 12:36:27 -HTTP METHOD : GET
2019-03-19 12:36:27 -CLASS_METHOD : com.bootdo.system.controller.MenuController.list
2019-03-19 12:36:27 -参数 : [{sort=order_num}]
2019-03-19 12:36:27 -==>  Preparing: select `menu_id`,`parent_id`,`name`,`url`,`perms`,`type`,`icon`,`order_num`,`gmt_create`,`gmt_modified` from sys_menu order by order_num 
2019-03-19 12:36:27 -==> Parameters: 
2019-03-19 12:36:27 -<==      Total: 106
2019-03-19 12:36:27 -耗时 : 36
2019-03-19 12:36:27 -返回值 : [MenuDO{menuId=55, parentId=7, name='编辑', url='', perms='sys:role:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=56, parentId=7, name='删除', url='', perms='sys:role:remove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=61, parentId=2, name='批量删除', url='', perms='sys:menu:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=62, parentId=7, name='批量删除', url='', perms='sys:role:batchRemove', type=2, icon='null', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=85, parentId=84, name='通知公告', url='oa/notify', perms='oa:notify:notify', type=1, icon='fa fa-pencil-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=88, parentId=85, name='删除', url='oa/notify/remove', perms='oa:notify:remove', type=2, icon='fa fa-minus', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=89, parentId=85, name='批量删除', url='oa/notify/batchRemove', perms='oa:notify:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=90, parentId=84, name='我的通知', url='oa/notify/selfNotify', perms='', type=1, icon='fa fa-envelope-square', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=92, parentId=91, name='在线用户', url='sys/online', perms='', type=1, icon='fa fa-user', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=133, parentId=116, name='新增', url='/heat/heatPrice/add', perms='heat:heatPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=134, parentId=116, name='编辑', url='/heat/heatPrice/edit', perms='heat:heatPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=135, parentId=116, name='删除', url='/heat/heatPrice/remove', perms='heat:heatPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=136, parentId=116, name='批量删除', url='/heat/heatPrice/batchRemove', perms='heat:heatPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=137, parentId=113, name='新增', url='/heat/heat/add', perms='heat:heat:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=138, parentId=120, name='新增', url='/water/waterPrice/add', perms='water:waterPrice:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=139, parentId=120, name='编辑', url='/water/waterPrice/edit', perms='water:waterPrice:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=140, parentId=120, name='删除', url='/water/waterPrice/remove', perms='water:waterPrice:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=141, parentId=120, name='批量删除', url='/water/waterPrice/batchRemove', perms='water:waterPrice:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=142, parentId=117, name='新增', url='/water/water/add', perms='water:water:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=143, parentId=117, name='编辑', url='/water/water/edit', perms='water:water:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=144, parentId=117, name='删除', url='/water/wate/remove', perms='water:water:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=145, parentId=117, name='批量删除', url='/water/water/batchRemove', perms='water:water:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=146, parentId=113, name='编辑', url='/heat/heat/edit', perms='heat:heat:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=147, parentId=113, name='删除', url='/heat/heat/remove', perms='heat:heat:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=148, parentId=113, name='批量删除', url='/heat/heat/batchRemove', perms='heat:heat:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=150, parentId=149, name='新增', url='/print/print/add', perms='print:print:add', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=151, parentId=149, name='编辑', url='/print/print/edit', perms='print:print:edit', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=152, parentId=149, name='删除', url='/print/print/remove', perms='print:print:remove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=153, parentId=149, name='批量删除', url='/print/print/batchRemove', perms='print:print:batchRemove', type=2, icon='', orderNum=null, gmtCreate=null, gmtModified=null}, MenuDO{menuId=6, parentId=3, name='用户管理', url='sys/user/', perms='sys:user:user', type=1, icon='fa fa-user', orderNum=0, gmtCreate=Thu Aug 10 14:12:11 CST 2017, gmtModified=null}, MenuDO{menuId=12, parentId=6, name='新增', url='', perms='sys:user:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:51:35 CST 2017, gmtModified=null}, MenuDO{menuId=13, parentId=6, name='编辑', url='', perms='sys:user:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:52:06 CST 2017, gmtModified=null}, MenuDO{menuId=14, parentId=6, name='删除', url='null', perms='sys:user:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 10:52:24 CST 2017, gmtModified=null}, MenuDO{menuId=15, parentId=7, name='新增', url='', perms='sys:role:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:56:37 CST 2017, gmtModified=null}, MenuDO{menuId=20, parentId=2, name='新增', url='', perms='sys:menu:add', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:32 CST 2017, gmtModified=null}, MenuDO{menuId=21, parentId=2, name='编辑', url='', perms='sys:menu:edit', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 10:59:56 CST 2017, gmtModified=null}, MenuDO{menuId=22, parentId=2, name='删除', url='', perms='sys:menu:remove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 11:00:26 CST 2017, gmtModified=null}, MenuDO{menuId=24, parentId=6, name='批量删除', url='', perms='sys:user:batchRemove', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:27:18 CST 2017, gmtModified=null}, MenuDO{menuId=25, parentId=6, name='停用', url='null', perms='sys:user:disable', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 17:27:43 CST 2017, gmtModified=null}, MenuDO{menuId=26, parentId=6, name='重置密码', url='', perms='sys:user:resetPwd', type=2, icon='', orderNum=0, gmtCreate=Mon Aug 14 17:28:34 CST 2017, gmtModified=null}, MenuDO{menuId=27, parentId=91, name='系统日志', url='common/log', perms='common:log', type=1, icon='fa fa-warning', orderNum=0, gmtCreate=Mon Aug 14 22:11:53 CST 2017, gmtModified=null}, MenuDO{menuId=28, parentId=27, name='刷新', url='null', perms='sys:log:list', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:22 CST 2017, gmtModified=null}, MenuDO{menuId=29, parentId=27, name='删除', url='null', perms='sys:log:remove', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:30:43 CST 2017, gmtModified=null}, MenuDO{menuId=30, parentId=27, name='清空', url='null', perms='sys:log:clear', type=2, icon='null', orderNum=0, gmtCreate=Mon Aug 14 22:31:02 CST 2017, gmtModified=null}, MenuDO{menuId=106, parentId=0, name='收费管理', url='', perms='', type=0, icon='fa fa-money', orderNum=0, gmtCreate=null, gmtModified=null}, MenuDO{menuId=7, parentId=3, name='角色管理', url='sys/role', perms='sys:role:role', type=1, icon='fa fa-paw', orderNum=1, gmtCreate=Thu Aug 10 14:13:19 CST 2017, gmtModified=null}, MenuDO{menuId=57, parentId=91, name='运行监控', url='/druid/index.html', perms='', type=1, icon='fa fa-caret-square-o-right', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=72, parentId=77, name='计算器', url='common/job', perms='', type=1, icon='fa fa-calculator', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=74, parentId=73, name='增加', url='/system/sysDept/add', perms='system:sysDept:add', type=2, icon='null', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=78, parentId=1, name='数据字典', url='/common/dict', perms='common:dict:dict', type=1, icon='fa fa-book', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=86, parentId=85, name='新增', url='oa/notify/add', perms='oa:notify:add', type=2, icon='fa fa-plus', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=98, parentId=97, name='百度chart', url='/chart/graph_echarts.html', perms='', type=1, icon='fa fa-area-chart', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=102, parentId=106, name='现金缴费', url='/moneyList/moneyList', perms='moneyList:moneyList', type=1, icon='fa fa-money', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=103, parentId=0, name='电费管理', url='', perms='', type=0, icon='fa fa-lightbulb-o', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=113, parentId=104, name='暖费用户', url='/heat/heat', perms='heat:heat:heat', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=117, parentId=105, name='水费用户', url='/water/water', perms='water:water:water', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=121, parentId=103, name='电费用户', url='/elec/elec', perms='elec:elec:elec', type=1, icon='fa fa-user-secret', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=125, parentId=124, name='新增', url='/elec/elecPrice/add', perms='elec:elecPrice:add', type=2, icon='', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=129, parentId=121, name='新增', url='/elec/elec/add', perms='elec:elec:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=149, parentId=108, name='票据记录', url='/print/print', perms='print:print:print', type=1, icon='fa fa-bomb', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=156, parentId=107, name='添加', url='moneyLog/elecLog/add', perms='moneyLog:elecLog:add', type=2, icon='fa fa-plus-square', orderNum=1, gmtCreate=null, gmtModified=null}, MenuDO{menuId=2, parentId=3, name='系统菜单', url='sys/menu/', perms='sys:menu:menu', type=1, icon='fa fa-th-list', orderNum=2, gmtCreate=Wed Aug 09 22:55:15 CST 2017, gmtModified=null}, MenuDO{menuId=71, parentId=1, name='文件管理', url='/common/sysFile', perms='common:sysFile:sysFile', type=1, icon='fa fa-folder-open', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=75, parentId=73, name='刪除', url='system/sysDept/remove', perms='system:sysDept:remove', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=79, parentId=78, name='增加', url='/common/dict/add', perms='common:dict:add', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=80, parentId=78, name='编辑', url='/common/dict/edit', perms='common:dict:edit', type=2, icon='null', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=87, parentId=85, name='编辑', url='oa/notify/edit', perms='oa:notify:edit', type=2, icon='fa fa-pencil-square-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=105, parentId=0, name='水费管理', url='', perms='', type=0, icon='fa fa-tint', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=107, parentId=106, name='缴费记录', url='/moneyLog/elecLog', perms='moneyLog:elecLog', type=1, icon='fa fa-book', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=109, parentId=97, name='日统计报表', url='charts/countDD', perms='charts:countDD', type=1, icon='fa fa-sun-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=114, parentId=104, name='工资代扣', url='heat/heatInto', perms='heat:heatInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=118, parentId=105, name='工资代扣', url='water/waterInto', perms='water:waterInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=122, parentId=103, name='工资代扣', url='elec/elecInto', perms='elec:elecInto:elecInto', type=1, icon='fa fa-file-excel-o', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=126, parentId=124, name='编辑', url='/elec/elecPrice/edit', perms='elec:elecPrice:edit', type=2, icon='', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=131, parentId=121, name='删除', url='/elec/elec/remove', perms='elec:elec:remove', type=2, icon='fa fa-remove', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=154, parentId=77, name='时钟', url='common/time', perms='', type=1, icon='fa fa-hourglass-1', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=157, parentId=107, name='删除', url='moneyLog/elecLog/remove', perms='moneyLog:elecLog:remove', type=2, icon='fa fa-close', orderNum=2, gmtCreate=null, gmtModified=null}, MenuDO{menuId=73, parentId=3, name='组织管理', url='/system/sysDept', perms='system:sysDept:sysDept', type=1, icon='fa fa-users', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=76, parentId=73, name='编辑', url='/system/sysDept/edit', perms='system:sysDept:edit', type=2, icon='null', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=81, parentId=78, name='删除', url='/common/dict/remove', perms='common:dict:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=104, parentId=0, name='暖费管理', url='', perms='', type=0, icon='fa fa-fire', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=110, parentId=97, name='月统计报表', url='charts/countMM', perms='charts:countMM', type=1, icon='fa fa-registered', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=115, parentId=104, name='暖费生成', url='heat/heatUpLoad', perms='heat:heatUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=119, parentId=105, name='水费生成', url='water/waterUpLoad', perms='water:waterUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=123, parentId=103, name='电表上传', url='elec/elecUpLoad', perms='elec:elecUpLoad:elecUpLoad', type=1, icon='fa fa-cloud-upload', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=127, parentId=124, name='删除', url='/elec/elecPrice/remove', perms='elec:elecPrice:remove', type=2, icon='', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=130, parentId=121, name='编辑', url='/elec/elec/edit', perms='elec:elec:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=158, parentId=107, name='编辑', url='moneyLog/elecLog/edit', perms='moneyLog:elecLog:edit', type=2, icon='fa fa-edit', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=160, parentId=77, name='3D龙卷风', url='common/long', perms='', type=1, icon='fa fa-space-shuttle', orderNum=3, gmtCreate=null, gmtModified=null}, MenuDO{menuId=83, parentId=78, name='批量删除', url='/common/dict/batchRemove', perms='common:dict:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=108, parentId=0, name='票据管理', url='', perms='', type=0, icon='fa fa-vcard-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=111, parentId=97, name='年统计报表', url='charts/countYY', perms='charts:countYY', type=1, icon='fa fa-support', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=116, parentId=104, name='暖价管理', url='/heat/heatPrice', perms='heat:heatPrice:heatPrice', type=1, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=120, parentId=105, name='水价管理', url='/water/waterPrice', perms='water:waterPrice:waterPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=124, parentId=103, name='电价管理', url='/elec/elecPrice', perms='elec:elecPrice:elecPrice', type=1, icon='fa fa-cc', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=128, parentId=124, name='批量删除', url='/elec/elecPrice/batchRemove', perms='elec:elecPrice:batchRemove', type=2, icon='', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=132, parentId=121, name='批量删除', url='/elec/elec/batchRemove', perms='elec:elec:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=155, parentId=97, name='欠费报表图', url='charts/countOwe', perms='charts:countOwe', type=1, icon='fa fa-money', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=159, parentId=107, name='批量删除', url='moneyLog/elecLog/batchRemove', perms='moneyLog:elecLog:batchRemove', type=2, icon='fa fa-file-excel-o', orderNum=4, gmtCreate=null, gmtModified=null}, MenuDO{menuId=97, parentId=0, name='统计管理', url='', perms='', type=0, icon='fa fa-bar-chart', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=112, parentId=97, name='走势图报表', url='charts/countRun', perms='charts:countRun', type=1, icon='fa fa-tachometer', orderNum=5, gmtCreate=null, gmtModified=null}, MenuDO{menuId=1, parentId=0, name='基础管理', url='', perms='', type=0, icon='fa fa-bars', orderNum=6, gmtCreate=Wed Aug 09 22:49:47 CST 2017, gmtModified=null}, MenuDO{menuId=3, parentId=0, name='系统管理', url='null', perms='null', type=0, icon='fa fa-desktop', orderNum=7, gmtCreate=Wed Aug 09 23:06:55 CST 2017, gmtModified=Mon Aug 14 14:13:43 CST 2017}, MenuDO{menuId=77, parentId=0, name='系统工具', url='', perms='', type=0, icon='fa fa-gear', orderNum=8, gmtCreate=null, gmtModified=null}, MenuDO{menuId=84, parentId=0, name='办公管理', url='', perms='', type=0, icon='fa fa-laptop', orderNum=9, gmtCreate=null, gmtModified=null}, MenuDO{menuId=91, parentId=0, name='系统监控', url='', perms='', type=0, icon='fa fa-video-camera', orderNum=10, gmtCreate=null, gmtModified=null}]
2019-03-19 12:36:32 -请求地址 : http://localhost:8081/common/long
2019-03-19 12:36:32 -HTTP METHOD : GET
2019-03-19 12:36:32 -CLASS_METHOD : com.bootdo.common.controller.LongController.Long
2019-03-19 12:36:32 -参数 : []
2019-03-19 12:36:32 -耗时 : 1
2019-03-19 12:36:32 -返回值 : common/job/Long
2019-03-19 12:50:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 12:50:21 -==> Parameters: 1(Long)
2019-03-19 12:50:21 -<==      Total: 90
2019-03-19 12:50:21 -请求地址 : http://localhost:8081/elec/elec
2019-03-19 12:50:21 -HTTP METHOD : GET
2019-03-19 12:50:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-19 12:50:21 -参数 : []
2019-03-19 12:50:21 -耗时 : 0
2019-03-19 12:50:21 -返回值 : elec/elec/elec
2019-03-19 12:50:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 12:50:21 -HTTP METHOD : GET
2019-03-19 12:50:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 12:50:21 -参数 : [userType]
2019-03-19 12:50:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 12:50:21 -==> Parameters: userType(String)
2019-03-19 12:50:21 -<==      Total: 2
2019-03-19 12:50:21 -耗时 : 5
2019-03-19 12:50:21 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 12:50:21 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-19 12:50:21 -HTTP METHOD : GET
2019-03-19 12:50:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-19 12:50:21 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@ab6ffc3]
2019-03-19 12:50:21 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-19 12:50:21 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 12:50:21 -<==      Total: 10
2019-03-19 12:50:21 -==>  Preparing: select count(*) from elec 
2019-03-19 12:50:21 -==> Parameters: 
2019-03-19 12:50:21 -<==      Total: 1
2019-03-19 12:50:21 -耗时 : 76
2019-03-19 12:50:21 -返回值 : com.bootdo.common.utils.PageUtils@11b817aa
2019-03-19 12:50:22 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-19 12:50:22 -HTTP METHOD : GET
2019-03-19 12:50:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-19 12:50:22 -参数 : []
2019-03-19 12:50:22 -耗时 : 0
2019-03-19 12:50:22 -返回值 : elec/elecInto/elecInto
2019-03-19 12:50:23 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-03-19 12:50:23 -HTTP METHOD : GET
2019-03-19 12:50:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-03-19 12:50:23 -参数 : []
2019-03-19 12:50:23 -耗时 : 1
2019-03-19 12:50:23 -返回值 : elec/elecUpLoad/elecUpLoad
2019-03-19 12:50:23 -请求地址 : http://localhost:8081/elec/elecPrice
2019-03-19 12:50:23 -HTTP METHOD : GET
2019-03-19 12:50:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-03-19 12:50:23 -参数 : []
2019-03-19 12:50:23 -耗时 : 1
2019-03-19 12:50:23 -返回值 : elec/elecPrice/elecPrice
2019-03-19 12:50:24 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-03-19 12:50:24 -HTTP METHOD : GET
2019-03-19 12:50:24 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-03-19 12:50:24 -参数 : [{limit=10, offset=0}]
2019-03-19 12:50:24 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`business_elec`,`civil_elec`,`noindustry_elec`,`industry_elec`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_price order by id desc limit ?, ? 
2019-03-19 12:50:24 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 12:50:24 -<==      Total: 2
2019-03-19 12:50:24 -==>  Preparing: select count(*) from elec_price 
2019-03-19 12:50:24 -==> Parameters: 
2019-03-19 12:50:24 -<==      Total: 1
2019-03-19 12:50:24 -耗时 : 55
2019-03-19 12:50:24 -返回值 : com.bootdo.common.utils.PageUtils@18e07149
2019-03-19 13:41:45 -Starting BootdoApplication on ZJZL-20180906VX with PID 6104 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-19 13:41:45 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-19 13:41:45 -The following profiles are active: dev
2019-03-19 13:41:45 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63192798: startup date [Tue Mar 19 13:41:45 CST 2019]; root of context hierarchy
2019-03-19 13:41:54 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-19 13:42:04 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5c0469e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 13:42:05 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$4e5d988d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 13:42:08 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 13:42:18 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 13:42:18 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 13:42:18 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-19 13:42:18 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-19 13:42:18 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 13:42:19 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 13:42:19 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 13:42:19 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 13:42:25 -Tomcat initialized with port(s): 8081 (http)
2019-03-19 13:42:26 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-19 13:42:26 -Starting service [Tomcat]
2019-03-19 13:42:26 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-19 13:42:26 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-19 13:42:27 -Initializing Spring embedded WebApplicationContext
2019-03-19 13:42:27 -Root WebApplicationContext: initialization completed in 42264 ms
2019-03-19 13:42:30 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-19 13:42:30 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-19 13:42:30 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-19 13:42:30 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-19 13:42:30 -Filter xssFilter was not registered (disabled)
2019-03-19 13:42:30 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-19 13:42:30 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-19 13:42:30 -Servlet statViewServlet mapped to [/druid/*]
2019-03-19 13:42:30 -Servlet dispatcherServlet mapped to [/]
2019-03-19 13:42:42 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63192798: startup date [Tue Mar 19 13:41:45 CST 2019]; root of context hierarchy
2019-03-19 13:42:43 -Using default implementation for ThreadExecutor
2019-03-19 13:42:43 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-19 13:42:43 -Quartz Scheduler v.2.2.1 created.
2019-03-19 13:42:43 -RAMJobStore initialized.
2019-03-19 13:42:43 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-19 13:42:43 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-19 13:42:43 -Quartz scheduler version: 2.2.1
2019-03-19 13:42:43 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@33e8694b
2019-03-19 13:42:44 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-19 13:42:44 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-19 13:42:50 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-19 13:42:50 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-19 13:42:50 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 13:42:50 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-19 13:42:50 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-19 13:42:50 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-19 13:42:50 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-19 13:42:50 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-19 13:42:50 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-19 13:42:50 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-19 13:42:50 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-19 13:42:50 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-19 13:42:50 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-19 13:42:50 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-19 13:42:50 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-19 13:42:50 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-19 13:42:50 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-19 13:42:50 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-19 13:42:50 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-19 13:42:50 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-19 13:42:50 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-19 13:42:50 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-19 13:42:50 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 13:42:50 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 13:42:50 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-19 13:42:50 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-19 13:42:50 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-19 13:42:50 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-19 13:42:50 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-19 13:42:50 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-19 13:42:50 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-19 13:42:50 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-19 13:42:50 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-19 13:42:50 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-19 13:42:50 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-19 13:42:50 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 13:42:50 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 13:42:50 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-19 13:42:50 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-19 13:42:50 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-19 13:42:50 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-19 13:42:50 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-19 13:42:50 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 13:42:50 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-19 13:42:50 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-19 13:42:50 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 13:42:50 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-19 13:42:50 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-19 13:42:50 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-19 13:42:50 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 13:42:50 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 13:42:50 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-19 13:42:50 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-19 13:42:50 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 13:42:50 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-19 13:42:50 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-19 13:42:50 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-19 13:42:50 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-19 13:42:50 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-19 13:42:50 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 13:42:50 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-19 13:42:50 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 13:42:50 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-19 13:42:50 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-19 13:42:50 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-19 13:42:50 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 13:42:50 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 13:42:50 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-19 13:42:50 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 13:42:50 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-19 13:42:50 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-19 13:42:50 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-19 13:42:50 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-19 13:42:50 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-19 13:42:50 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-19 13:42:50 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 13:42:50 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 13:42:50 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 13:42:50 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-19 13:42:50 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-19 13:42:50 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-19 13:42:50 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 13:42:50 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 13:42:50 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-19 13:42:50 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-19 13:42:50 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-19 13:42:50 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 13:42:50 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 13:42:50 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-19 13:42:50 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-19 13:42:50 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-19 13:42:50 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-19 13:42:50 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-19 13:42:50 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-19 13:42:50 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-19 13:42:50 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-19 13:42:50 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-19 13:42:50 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-19 13:42:50 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-19 13:42:50 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-19 13:42:50 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-19 13:42:50 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-19 13:42:50 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-19 13:42:50 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-19 13:42:50 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-19 13:42:50 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-19 13:42:50 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-19 13:42:50 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-19 13:42:50 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-19 13:42:50 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-19 13:42:50 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 13:42:50 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 13:42:50 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-19 13:42:50 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-19 13:42:50 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-19 13:42:50 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-19 13:42:50 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-19 13:42:50 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-19 13:42:50 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-19 13:42:50 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-19 13:42:50 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-19 13:42:50 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-19 13:42:50 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-19 13:42:50 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-19 13:42:50 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-19 13:42:50 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-19 13:42:50 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-19 13:42:50 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-19 13:42:50 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-19 13:42:50 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-19 13:42:50 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 13:42:50 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-19 13:42:50 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 13:42:50 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 13:42:50 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-19 13:42:50 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-19 13:42:50 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-19 13:42:50 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-19 13:42:50 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-19 13:42:50 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 13:42:50 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-19 13:42:50 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 13:42:50 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-19 13:42:50 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-19 13:42:50 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-19 13:42:50 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-19 13:42:50 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 13:42:50 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 13:42:50 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 13:42:50 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-19 13:42:50 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 13:42:50 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-19 13:42:50 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 13:42:50 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-19 13:42:50 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-19 13:42:50 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-19 13:42:52 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-19 13:42:52 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-19 13:42:52 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-19 13:42:53 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 13:42:54 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@63192798: startup date [Tue Mar 19 13:41:45 CST 2019]; root of context hierarchy
2019-03-19 13:42:54 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 13:42:54 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 13:42:54 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 13:42:54 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-19 13:42:55 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-19 13:43:03 -Registering beans for JMX exposure on startup
2019-03-19 13:43:03 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-19 13:43:03 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-19 13:43:03 -Starting beans in phase 2147483647
2019-03-19 13:43:03 -Context refreshed
2019-03-19 13:43:03 -Found 1 custom documentation plugin(s)
2019-03-19 13:43:03 -Scanning for api listing references
2019-03-19 13:43:05 -Generating unique operation named: removeUsingPOST_1
2019-03-19 13:43:05 -Generating unique operation named: addUsingGET_1
2019-03-19 13:43:05 -Generating unique operation named: editUsingGET_1
2019-03-19 13:43:05 -Generating unique operation named: listUsingGET_1
2019-03-19 13:43:05 -Generating unique operation named: removeUsingPOST_2
2019-03-19 13:43:05 -Generating unique operation named: removeUsingPOST_3
2019-03-19 13:43:05 -Generating unique operation named: saveUsingPOST_1
2019-03-19 13:43:05 -Generating unique operation named: updateUsingGET_1
2019-03-19 13:43:05 -Generating unique operation named: updateUsingHEAD_1
2019-03-19 13:43:05 -Generating unique operation named: updateUsingPOST_1
2019-03-19 13:43:05 -Generating unique operation named: updateUsingPUT_1
2019-03-19 13:43:05 -Generating unique operation named: updateUsingPATCH_1
2019-03-19 13:43:05 -Generating unique operation named: updateUsingDELETE_1
2019-03-19 13:43:05 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-19 13:43:05 -Generating unique operation named: updateUsingTRACE_1
2019-03-19 13:43:05 -Generating unique operation named: addUsingGET_2
2019-03-19 13:43:05 -Generating unique operation named: editUsingGET_2
2019-03-19 13:43:05 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-19 13:43:06 -Generating unique operation named: listUsingGET_2
2019-03-19 13:43:06 -Generating unique operation named: removeUsingPOST_4
2019-03-19 13:43:06 -Generating unique operation named: removeUsingPOST_5
2019-03-19 13:43:06 -Generating unique operation named: saveUsingPOST_2
2019-03-19 13:43:06 -Generating unique operation named: updateUsingGET_2
2019-03-19 13:43:06 -Generating unique operation named: updateUsingHEAD_2
2019-03-19 13:43:06 -Generating unique operation named: updateUsingPOST_2
2019-03-19 13:43:06 -Generating unique operation named: updateUsingPUT_2
2019-03-19 13:43:06 -Generating unique operation named: updateUsingPATCH_2
2019-03-19 13:43:06 -Generating unique operation named: updateUsingDELETE_2
2019-03-19 13:43:06 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-19 13:43:06 -Generating unique operation named: updateUsingTRACE_2
2019-03-19 13:43:06 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-19 13:43:06 -Generating unique operation named: addUsingGET_3
2019-03-19 13:43:06 -Generating unique operation named: editUsingGET_3
2019-03-19 13:43:06 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-19 13:43:06 -Generating unique operation named: listUsingGET_3
2019-03-19 13:43:06 -Generating unique operation named: removeUsingPOST_6
2019-03-19 13:43:06 -Generating unique operation named: removeUsingPOST_7
2019-03-19 13:43:06 -Generating unique operation named: saveUsingPOST_3
2019-03-19 13:43:06 -Generating unique operation named: updateUsingGET_3
2019-03-19 13:43:06 -Generating unique operation named: updateUsingHEAD_3
2019-03-19 13:43:06 -Generating unique operation named: updateUsingPOST_3
2019-03-19 13:43:06 -Generating unique operation named: updateUsingPUT_3
2019-03-19 13:43:06 -Generating unique operation named: updateUsingPATCH_3
2019-03-19 13:43:06 -Generating unique operation named: updateUsingDELETE_3
2019-03-19 13:43:06 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-19 13:43:06 -Generating unique operation named: updateUsingTRACE_3
2019-03-19 13:43:06 -Generating unique operation named: addUsingGET_4
2019-03-19 13:43:06 -Generating unique operation named: editUsingGET_4
2019-03-19 13:43:06 -Generating unique operation named: listUsingGET_4
2019-03-19 13:43:06 -Generating unique operation named: removeUsingPOST_8
2019-03-19 13:43:06 -Generating unique operation named: removeUsingPOST_9
2019-03-19 13:43:06 -Generating unique operation named: saveUsingPOST_4
2019-03-19 13:43:06 -Generating unique operation named: updateUsingGET_4
2019-03-19 13:43:06 -Generating unique operation named: updateUsingHEAD_4
2019-03-19 13:43:06 -Generating unique operation named: updateUsingPOST_4
2019-03-19 13:43:06 -Generating unique operation named: updateUsingPUT_4
2019-03-19 13:43:06 -Generating unique operation named: updateUsingPATCH_4
2019-03-19 13:43:06 -Generating unique operation named: updateUsingDELETE_4
2019-03-19 13:43:06 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-19 13:43:06 -Generating unique operation named: updateUsingTRACE_4
2019-03-19 13:43:06 -Generating unique operation named: ElecUsingGET_1
2019-03-19 13:43:06 -Generating unique operation named: addUsingGET_5
2019-03-19 13:43:06 -Generating unique operation named: editUsingGET_5
2019-03-19 13:43:06 -Generating unique operation named: listUsingGET_5
2019-03-19 13:43:06 -Generating unique operation named: removeUsingPOST_10
2019-03-19 13:43:06 -Generating unique operation named: removeUsingPOST_11
2019-03-19 13:43:06 -Generating unique operation named: saveUsingPOST_5
2019-03-19 13:43:06 -Generating unique operation named: updateUsingGET_5
2019-03-19 13:43:06 -Generating unique operation named: updateUsingHEAD_5
2019-03-19 13:43:06 -Generating unique operation named: updateUsingPOST_5
2019-03-19 13:43:06 -Generating unique operation named: updateUsingPUT_5
2019-03-19 13:43:06 -Generating unique operation named: updateUsingPATCH_5
2019-03-19 13:43:06 -Generating unique operation named: updateUsingDELETE_5
2019-03-19 13:43:06 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-19 13:43:06 -Generating unique operation named: updateUsingTRACE_5
2019-03-19 13:43:06 -Generating unique operation named: editUsingGET_6
2019-03-19 13:43:06 -Generating unique operation named: listUsingGET_6
2019-03-19 13:43:07 -Generating unique operation named: updateUsingPOST_6
2019-03-19 13:43:07 -Generating unique operation named: addUsingGET_6
2019-03-19 13:43:07 -Generating unique operation named: editUsingGET_7
2019-03-19 13:43:07 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-19 13:43:07 -Generating unique operation named: listUsingGET_7
2019-03-19 13:43:07 -Generating unique operation named: removeUsingPOST_12
2019-03-19 13:43:07 -Generating unique operation named: removeUsingPOST_13
2019-03-19 13:43:07 -Generating unique operation named: saveUsingPOST_6
2019-03-19 13:43:07 -Generating unique operation named: updateUsingGET_6
2019-03-19 13:43:07 -Generating unique operation named: updateUsingHEAD_6
2019-03-19 13:43:07 -Generating unique operation named: updateUsingPOST_7
2019-03-19 13:43:07 -Generating unique operation named: updateUsingPUT_6
2019-03-19 13:43:07 -Generating unique operation named: updateUsingPATCH_6
2019-03-19 13:43:07 -Generating unique operation named: updateUsingDELETE_6
2019-03-19 13:43:07 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-19 13:43:07 -Generating unique operation named: updateUsingTRACE_6
2019-03-19 13:43:07 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-19 13:43:07 -Generating unique operation named: addUsingGET_7
2019-03-19 13:43:07 -Generating unique operation named: editUsingGET_8
2019-03-19 13:43:07 -Generating unique operation named: listUsingGET_8
2019-03-19 13:43:07 -Generating unique operation named: removeUsingPOST_14
2019-03-19 13:43:07 -Generating unique operation named: removeUsingPOST_15
2019-03-19 13:43:07 -Generating unique operation named: saveUsingPOST_7
2019-03-19 13:43:07 -Generating unique operation named: updateUsingGET_7
2019-03-19 13:43:07 -Generating unique operation named: updateUsingHEAD_7
2019-03-19 13:43:07 -Generating unique operation named: updateUsingPOST_8
2019-03-19 13:43:07 -Generating unique operation named: updateUsingPUT_7
2019-03-19 13:43:07 -Generating unique operation named: updateUsingPATCH_7
2019-03-19 13:43:07 -Generating unique operation named: updateUsingDELETE_7
2019-03-19 13:43:07 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-19 13:43:07 -Generating unique operation named: updateUsingTRACE_7
2019-03-19 13:43:07 -Generating unique operation named: addUsingGET_8
2019-03-19 13:43:07 -Generating unique operation named: editUsingGET_9
2019-03-19 13:43:07 -Generating unique operation named: listUsingGET_9
2019-03-19 13:43:07 -Generating unique operation named: removeUsingPOST_16
2019-03-19 13:43:07 -Generating unique operation named: removeUsingPOST_17
2019-03-19 13:43:07 -Generating unique operation named: saveUsingPOST_8
2019-03-19 13:43:07 -Generating unique operation named: updateUsingGET_8
2019-03-19 13:43:07 -Generating unique operation named: updateUsingHEAD_8
2019-03-19 13:43:07 -Generating unique operation named: updateUsingPOST_9
2019-03-19 13:43:07 -Generating unique operation named: updateUsingPUT_8
2019-03-19 13:43:07 -Generating unique operation named: updateUsingPATCH_8
2019-03-19 13:43:07 -Generating unique operation named: updateUsingDELETE_8
2019-03-19 13:43:07 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-19 13:43:07 -Generating unique operation named: updateUsingTRACE_8
2019-03-19 13:43:07 -Generating unique operation named: addUsingGET_9
2019-03-19 13:43:07 -Generating unique operation named: editUsingGET_10
2019-03-19 13:43:07 -Generating unique operation named: infoUsingGET_1
2019-03-19 13:43:07 -Generating unique operation named: infoUsingHEAD_1
2019-03-19 13:43:07 -Generating unique operation named: infoUsingPOST_1
2019-03-19 13:43:07 -Generating unique operation named: infoUsingPUT_1
2019-03-19 13:43:07 -Generating unique operation named: infoUsingPATCH_1
2019-03-19 13:43:07 -Generating unique operation named: infoUsingDELETE_1
2019-03-19 13:43:07 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-19 13:43:07 -Generating unique operation named: infoUsingTRACE_1
2019-03-19 13:43:07 -Generating unique operation named: listUsingGET_10
2019-03-19 13:43:07 -Generating unique operation named: removeUsingPOST_18
2019-03-19 13:43:07 -Generating unique operation named: removeUsingPOST_19
2019-03-19 13:43:07 -Generating unique operation named: saveUsingPOST_9
2019-03-19 13:43:07 -Generating unique operation named: updateUsingPOST_10
2019-03-19 13:43:07 -Generating unique operation named: listUsingGET_11
2019-03-19 13:43:07 -Generating unique operation named: removeUsingPOST_20
2019-03-19 13:43:07 -Generating unique operation named: welcomeUsingGET_1
2019-03-19 13:43:08 -Generating unique operation named: addUsingGET_10
2019-03-19 13:43:08 -Generating unique operation named: editUsingGET_11
2019-03-19 13:43:08 -Generating unique operation named: listUsingGET_12
2019-03-19 13:43:08 -Generating unique operation named: removeUsingPOST_21
2019-03-19 13:43:08 -Generating unique operation named: saveUsingPOST_10
2019-03-19 13:43:08 -Generating unique operation named: treeUsingGET_1
2019-03-19 13:43:08 -Generating unique operation named: treeUsingGET_2
2019-03-19 13:43:08 -Generating unique operation named: updateUsingPOST_11
2019-03-19 13:43:08 -Generating unique operation named: addUsingGET_11
2019-03-19 13:43:08 -Generating unique operation named: editUsingGET_12
2019-03-19 13:43:08 -Generating unique operation named: listUsingGET_13
2019-03-19 13:43:08 -Generating unique operation named: removeUsingPOST_22
2019-03-19 13:43:08 -Generating unique operation named: removeUsingPOST_23
2019-03-19 13:43:08 -Generating unique operation named: saveUsingPOST_11
2019-03-19 13:43:08 -Generating unique operation named: updateUsingGET_9
2019-03-19 13:43:08 -Generating unique operation named: updateUsingHEAD_9
2019-03-19 13:43:08 -Generating unique operation named: updateUsingPOST_12
2019-03-19 13:43:08 -Generating unique operation named: updateUsingPUT_9
2019-03-19 13:43:08 -Generating unique operation named: updateUsingPATCH_9
2019-03-19 13:43:08 -Generating unique operation named: updateUsingDELETE_9
2019-03-19 13:43:08 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-19 13:43:08 -Generating unique operation named: updateUsingTRACE_9
2019-03-19 13:43:08 -Generating unique operation named: addUsingGET_12
2019-03-19 13:43:08 -Generating unique operation named: editUsingGET_13
2019-03-19 13:43:08 -Generating unique operation named: listUsingGET_14
2019-03-19 13:43:08 -Generating unique operation named: removeUsingPOST_24
2019-03-19 13:43:08 -Generating unique operation named: removeUsingPOST_25
2019-03-19 13:43:08 -Generating unique operation named: saveUsingPOST_12
2019-03-19 13:43:08 -Generating unique operation named: updateUsingGET_10
2019-03-19 13:43:08 -Generating unique operation named: updateUsingHEAD_10
2019-03-19 13:43:08 -Generating unique operation named: updateUsingPOST_13
2019-03-19 13:43:08 -Generating unique operation named: updateUsingPUT_10
2019-03-19 13:43:08 -Generating unique operation named: updateUsingPATCH_10
2019-03-19 13:43:08 -Generating unique operation named: updateUsingDELETE_10
2019-03-19 13:43:08 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-19 13:43:08 -Generating unique operation named: updateUsingTRACE_10
2019-03-19 13:43:08 -Generating unique operation named: addUsingGET_13
2019-03-19 13:43:08 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-19 13:43:08 -Generating unique operation named: editUsingGET_14
2019-03-19 13:43:08 -Generating unique operation named: listUsingGET_15
2019-03-19 13:43:08 -Generating unique operation named: saveUsingPOST_13
2019-03-19 13:43:08 -Generating unique operation named: saveUsingPOST_14
2019-03-19 13:43:08 -Generating unique operation named: updateUsingPOST_14
2019-03-19 13:43:08 -Generating unique operation named: listUsingGET_16
2019-03-19 13:43:08 -Generating unique operation named: listUsingHEAD_1
2019-03-19 13:43:08 -Generating unique operation named: listUsingPOST_1
2019-03-19 13:43:08 -Generating unique operation named: listUsingPUT_1
2019-03-19 13:43:08 -Generating unique operation named: listUsingPATCH_1
2019-03-19 13:43:08 -Generating unique operation named: listUsingDELETE_1
2019-03-19 13:43:08 -Generating unique operation named: listUsingOPTIONS_1
2019-03-19 13:43:08 -Generating unique operation named: listUsingTRACE_1
2019-03-19 13:43:08 -Generating unique operation named: addUsingGET_14
2019-03-19 13:43:08 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-19 13:43:08 -Generating unique operation named: editUsingGET_15
2019-03-19 13:43:08 -Generating unique operation named: listUsingGET_17
2019-03-19 13:43:08 -Generating unique operation named: removeUsingPOST_26
2019-03-19 13:43:08 -Generating unique operation named: saveUsingPOST_15
2019-03-19 13:43:08 -Generating unique operation named: treeUsingGET_3
2019-03-19 13:43:08 -Generating unique operation named: treeViewUsingGET_1
2019-03-19 13:43:08 -Generating unique operation named: updateUsingPOST_15
2019-03-19 13:43:08 -Generating unique operation named: addUsingGET_15
2019-03-19 13:43:08 -Generating unique operation named: editUsingGET_16
2019-03-19 13:43:08 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-19 13:43:08 -Generating unique operation named: listUsingGET_18
2019-03-19 13:43:08 -Generating unique operation named: removeUsingPOST_27
2019-03-19 13:43:08 -Generating unique operation named: removeUsingPOST_28
2019-03-19 13:43:08 -Generating unique operation named: saveUsingPOST_16
2019-03-19 13:43:08 -Generating unique operation named: updateUsingGET_11
2019-03-19 13:43:08 -Generating unique operation named: updateUsingHEAD_11
2019-03-19 13:43:08 -Generating unique operation named: updateUsingPOST_16
2019-03-19 13:43:08 -Generating unique operation named: updateUsingPUT_11
2019-03-19 13:43:08 -Generating unique operation named: updateUsingPATCH_11
2019-03-19 13:43:08 -Generating unique operation named: updateUsingDELETE_11
2019-03-19 13:43:08 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-19 13:43:08 -Generating unique operation named: updateUsingTRACE_11
2019-03-19 13:43:08 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-19 13:43:08 -Generating unique operation named: addUsingGET_16
2019-03-19 13:43:08 -Generating unique operation named: editUsingGET_17
2019-03-19 13:43:08 -Generating unique operation named: listUsingGET_19
2019-03-19 13:43:08 -Generating unique operation named: removeUsingPOST_29
2019-03-19 13:43:08 -Generating unique operation named: removeUsingPOST_30
2019-03-19 13:43:08 -Generating unique operation named: saveUsingPOST_17
2019-03-19 13:43:08 -Generating unique operation named: updateUsingGET_12
2019-03-19 13:43:08 -Generating unique operation named: updateUsingHEAD_12
2019-03-19 13:43:08 -Generating unique operation named: updateUsingPOST_17
2019-03-19 13:43:08 -Generating unique operation named: updateUsingPUT_12
2019-03-19 13:43:08 -Generating unique operation named: updateUsingPATCH_12
2019-03-19 13:43:08 -Generating unique operation named: updateUsingDELETE_12
2019-03-19 13:43:08 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-19 13:43:08 -Generating unique operation named: updateUsingTRACE_12
2019-03-19 13:43:09 -Generating unique operation named: addUsingGET_17
2019-03-19 13:43:09 -Generating unique operation named: editUsingGET_18
2019-03-19 13:43:09 -Generating unique operation named: listUsingGET_20
2019-03-19 13:43:09 -Generating unique operation named: removeUsingPOST_31
2019-03-19 13:43:09 -Generating unique operation named: removeUsingPOST_32
2019-03-19 13:43:09 -Generating unique operation named: saveUsingPOST_18
2019-03-19 13:43:09 -Generating unique operation named: updateUsingGET_13
2019-03-19 13:43:09 -Generating unique operation named: updateUsingHEAD_13
2019-03-19 13:43:09 -Generating unique operation named: updateUsingPOST_18
2019-03-19 13:43:09 -Generating unique operation named: updateUsingPUT_13
2019-03-19 13:43:09 -Generating unique operation named: updateUsingPATCH_13
2019-03-19 13:43:09 -Generating unique operation named: updateUsingDELETE_13
2019-03-19 13:43:09 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-19 13:43:09 -Generating unique operation named: updateUsingTRACE_13
2019-03-19 13:43:09 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-19 13:43:09 -Starting Quartz Scheduler now
2019-03-19 13:43:09 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-19 13:43:09 -Starting...
2019-03-19 13:43:09 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 13:43:09 -Started.
2019-03-19 13:43:09 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-19 13:43:10 -Using a shared selector for servlet write/read
2019-03-19 13:43:10 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-19 13:43:10 -Started BootdoApplication in 87.75 seconds (JVM running for 89.682)
2019-03-19 13:43:10 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-19 13:43:12 -==> Parameters: 
2019-03-19 13:43:13 -<==      Total: 1
2019-03-19 13:43:15 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-19 13:43:15 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-19 13:43:15 -FrameworkServlet 'dispatcherServlet': initialization completed in 190 ms
2019-03-19 13:43:15 -Enabling session validation scheduler...
2019-03-19 13:43:16 -请求地址 : http://localhost:8081/login;JSESSIONID=a3a647a8-04b0-47e4-bf08-9c628cea0940
2019-03-19 13:43:16 -HTTP METHOD : GET
2019-03-19 13:43:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 13:43:16 -参数 : [{}]
2019-03-19 13:43:16 -耗时 : 9
2019-03-19 13:43:16 -返回值 : login
2019-03-19 13:43:19 -请求地址 : http://localhost:8081/getVerify
2019-03-19 13:43:19 -HTTP METHOD : GET
2019-03-19 13:43:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 13:43:19 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@a2d7f3b, org.apache.shiro.web.servlet.ShiroHttpServletResponse@16cfb4f7]
2019-03-19 13:43:26 -4675
2019-03-19 13:43:27 -耗时 : 7447
2019-03-19 13:43:27 -返回值 : null
2019-03-19 13:43:33 -请求地址 : http://localhost:8081/login
2019-03-19 13:43:33 -HTTP METHOD : POST
2019-03-19 13:43:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 13:43:33 -参数 : [admin, 111111, 4675, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5d5be24a]
2019-03-19 13:43:33 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 13:43:34 -==> Parameters: admin(String)
2019-03-19 13:43:34 -<==      Total: 1
2019-03-19 13:43:34 -耗时 : 590
2019-03-19 13:43:34 -返回值 : {msg=操作成功, code=0}
2019-03-19 13:43:34 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-19 13:43:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 13:43:34 -==> Parameters: 1(Long), admin(String), 登录(String), 590(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 13:43:34.578(Timestamp)
2019-03-19 13:43:34 -<==    Updates: 1
2019-03-19 13:43:35 -请求地址 : http://localhost:8081/index
2019-03-19 13:43:35 -HTTP METHOD : GET
2019-03-19 13:43:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 13:43:35 -参数 : [{}]
2019-03-19 13:43:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 13:43:35 -==> Parameters: 1(Long)
2019-03-19 13:43:35 -<==      Total: 46
2019-03-19 13:43:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 13:43:35 -==> Parameters: 138(Long)
2019-03-19 13:43:35 -<==      Total: 1
2019-03-19 13:43:35 -耗时 : 855
2019-03-19 13:43:35 -返回值 : index_v1
2019-03-19 13:43:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 13:43:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 855(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 13:43:36.119(Timestamp)
2019-03-19 13:43:36 -<==    Updates: 1
2019-03-19 13:43:36 -请求地址 : http://localhost:8081/main
2019-03-19 13:43:36 -HTTP METHOD : GET
2019-03-19 13:43:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 13:43:36 -参数 : []
2019-03-19 13:43:36 -耗时 : 1
2019-03-19 13:43:36 -返回值 : main
2019-03-19 13:43:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 13:43:39 -HTTP METHOD : GET
2019-03-19 13:43:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 13:43:39 -参数 : []
2019-03-19 13:43:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 13:43:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 13:43:39 -请求地址 : http://localhost:8081/main
2019-03-19 13:43:39 -HTTP METHOD : GET
2019-03-19 13:43:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 13:43:39 -参数 : []
2019-03-19 13:43:39 -耗时 : 0
2019-03-19 13:43:39 -返回值 : main
2019-03-19 13:43:39 -<==      Total: 0
2019-03-19 13:43:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 13:43:39 -==> Parameters: 1(Long), 0(String)
2019-03-19 13:43:39 -<==      Total: 1
2019-03-19 13:43:39 -耗时 : 384
2019-03-19 13:43:39 -返回值 : com.bootdo.common.utils.PageUtils@4f0b863a
2019-03-19 13:43:52 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-03-19 14:13:52 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 436]
2019-03-19 14:42:07 -请求地址 : http://localhost:8081/login;JSESSIONID=548b2f1d-8248-42a9-85b6-c09bb2c3bded
2019-03-19 14:42:07 -HTTP METHOD : GET
2019-03-19 14:42:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 14:42:07 -参数 : [{}]
2019-03-19 14:42:07 -耗时 : 2
2019-03-19 14:42:07 -返回值 : login
2019-03-19 14:42:07 -请求地址 : http://localhost:8081/login;JSESSIONID=548b2f1d-8248-42a9-85b6-c09bb2c3bded
2019-03-19 14:42:07 -HTTP METHOD : GET
2019-03-19 14:42:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 14:42:07 -参数 : [{}]
2019-03-19 14:42:07 -耗时 : 0
2019-03-19 14:42:07 -返回值 : login
2019-03-19 14:42:08 -请求地址 : http://localhost:8081/getVerify
2019-03-19 14:42:08 -HTTP METHOD : GET
2019-03-19 14:42:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 14:42:08 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@8c19fde, org.apache.shiro.web.servlet.ShiroHttpServletResponse@669142ff]
2019-03-19 14:42:08 -7882
2019-03-19 14:42:08 -耗时 : 50
2019-03-19 14:42:08 -返回值 : null
2019-03-19 14:42:08 -请求地址 : http://localhost:8081/getVerify
2019-03-19 14:42:08 -HTTP METHOD : GET
2019-03-19 14:42:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 14:42:08 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@609fd80, org.apache.shiro.web.servlet.ShiroHttpServletResponse@8ce0331]
2019-03-19 14:42:08 -3807
2019-03-19 14:42:08 -耗时 : 21
2019-03-19 14:42:08 -返回值 : null
2019-03-19 14:42:15 -请求地址 : http://localhost:8081/login
2019-03-19 14:42:15 -HTTP METHOD : POST
2019-03-19 14:42:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 14:42:15 -参数 : [admin, 111111, 3807, org.apache.shiro.web.servlet.ShiroHttpServletRequest@602a06c8]
2019-03-19 14:42:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 14:42:15 -==> Parameters: admin(String)
2019-03-19 14:42:15 -<==      Total: 1
2019-03-19 14:42:15 -耗时 : 35
2019-03-19 14:42:15 -返回值 : {msg=操作成功, code=0}
2019-03-19 14:42:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 14:42:15 -==> Parameters: 1(Long), admin(String), 登录(String), 36(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 14:42:15.272(Timestamp)
2019-03-19 14:42:15 -请求地址 : http://localhost:8081/index
2019-03-19 14:42:15 -HTTP METHOD : GET
2019-03-19 14:42:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 14:42:15 -参数 : [{}]
2019-03-19 14:42:15 -<==    Updates: 1
2019-03-19 14:42:15 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 14:42:15 -==> Parameters: 1(Long)
2019-03-19 14:42:15 -<==      Total: 46
2019-03-19 14:42:15 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 14:42:15 -==> Parameters: 138(Long)
2019-03-19 14:42:15 -<==      Total: 1
2019-03-19 14:42:15 -耗时 : 209
2019-03-19 14:42:15 -返回值 : index_v1
2019-03-19 14:42:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 14:42:15 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 209(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 14:42:15.527(Timestamp)
2019-03-19 14:42:15 -请求地址 : http://localhost:8081/main
2019-03-19 14:42:15 -HTTP METHOD : GET
2019-03-19 14:42:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 14:42:15 -参数 : []
2019-03-19 14:42:15 -耗时 : 1
2019-03-19 14:42:15 -返回值 : main
2019-03-19 14:42:15 -<==    Updates: 1
2019-03-19 14:42:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 14:42:15 -HTTP METHOD : GET
2019-03-19 14:42:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 14:42:15 -参数 : []
2019-03-19 14:42:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 14:42:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 14:42:15 -请求地址 : http://localhost:8081/main
2019-03-19 14:42:15 -HTTP METHOD : GET
2019-03-19 14:42:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 14:42:15 -参数 : []
2019-03-19 14:42:15 -耗时 : 1
2019-03-19 14:42:15 -返回值 : main
2019-03-19 14:42:15 -<==      Total: 0
2019-03-19 14:42:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 14:42:15 -==> Parameters: 1(Long), 0(String)
2019-03-19 14:42:15 -<==      Total: 1
2019-03-19 14:42:15 -耗时 : 109
2019-03-19 14:42:15 -返回值 : com.bootdo.common.utils.PageUtils@c610cfa
2019-03-19 14:43:15 -Validating all active sessions...
2019-03-19 14:43:15 -Finished session validation.  No sessions were stopped.
2019-03-19 14:43:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 870]
2019-03-19 14:52:49 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 14:52:49 -==> Parameters: 1(Long)
2019-03-19 14:52:49 -<==      Total: 90
2019-03-19 14:52:49 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-19 14:52:49 -HTTP METHOD : GET
2019-03-19 14:52:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-19 14:52:49 -参数 : []
2019-03-19 14:52:49 -耗时 : 1
2019-03-19 14:52:49 -返回值 : elec/elecInto/elecInto
2019-03-19 14:53:18 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 14:53:18 -HTTP METHOD : GET
2019-03-19 14:53:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 14:53:18 -参数 : []
2019-03-19 14:53:18 -耗时 : 1
2019-03-19 14:53:18 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 14:53:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 14:53:18 -HTTP METHOD : GET
2019-03-19 14:53:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 14:53:18 -参数 : [userType]
2019-03-19 14:53:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 14:53:18 -==> Parameters: userType(String)
2019-03-19 14:53:18 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 14:53:18 -HTTP METHOD : GET
2019-03-19 14:53:18 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 14:53:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 14:53:18 -<==      Total: 2
2019-03-19 14:53:18 -耗时 : 116
2019-03-19 14:53:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 14:53:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 14:53:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 14:53:18 -<==      Total: 4
2019-03-19 14:53:18 -==>  Preparing: select count(*) from elec_log 
2019-03-19 14:53:18 -==> Parameters: 
2019-03-19 14:53:19 -<==      Total: 1
2019-03-19 14:53:19 -耗时 : 185
2019-03-19 14:53:19 -返回值 : com.bootdo.common.utils.PageUtils@4b076022
2019-03-19 14:53:26 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 14:53:26 -HTTP METHOD : GET
2019-03-19 14:53:26 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 14:53:26 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-19, type=A}]
2019-03-19 14:53:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-19 14:53:26 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-19 14:53:26 -<==      Total: 3
2019-03-19 14:53:26 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and elec_date = ? 
2019-03-19 14:53:26 -==> Parameters: A(String), 2019-03-19(String)
2019-03-19 14:53:26 -<==      Total: 1
2019-03-19 14:53:26 -耗时 : 16
2019-03-19 14:53:26 -返回值 : com.bootdo.common.utils.PageUtils@71d7b644
2019-03-19 14:53:27 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 14:53:27 -HTTP METHOD : GET
2019-03-19 14:53:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 14:53:27 -参数 : []
2019-03-19 14:53:27 -耗时 : 1
2019-03-19 14:53:27 -返回值 : system/dept/deptTree
2019-03-19 14:53:27 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 14:53:27 -HTTP METHOD : GET
2019-03-19 14:53:27 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 14:53:27 -参数 : []
2019-03-19 14:53:27 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 14:53:27 -==> Parameters: 
2019-03-19 14:53:27 -<==      Total: 3
2019-03-19 14:53:27 -耗时 : 36
2019-03-19 14:53:27 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 14:53:30 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-19 14:53:30 -HTTP METHOD : GET
2019-03-19 14:53:30 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotExcel
2019-03-19 14:53:30 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4ba7393c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@66ee0718]
2019-03-19 14:53:30 -耗时 : 42
2019-03-19 14:53:30 -返回值 : null
2019-03-19 15:01:58 -请求地址 : http://localhost:8081/elec/elecPrice
2019-03-19 15:01:58 -HTTP METHOD : GET
2019-03-19 15:01:58 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-03-19 15:01:58 -参数 : []
2019-03-19 15:01:58 -耗时 : 1
2019-03-19 15:01:58 -返回值 : elec/elecPrice/elecPrice
2019-03-19 15:01:58 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-03-19 15:01:58 -HTTP METHOD : GET
2019-03-19 15:01:58 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-03-19 15:01:58 -参数 : [{limit=10, offset=0}]
2019-03-19 15:01:59 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`business_elec`,`civil_elec`,`noindustry_elec`,`industry_elec`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_price order by id desc limit ?, ? 
2019-03-19 15:01:59 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 15:01:59 -<==      Total: 2
2019-03-19 15:01:59 -==>  Preparing: select count(*) from elec_price 
2019-03-19 15:01:59 -==> Parameters: 
2019-03-19 15:01:59 -<==      Total: 1
2019-03-19 15:01:59 -耗时 : 88
2019-03-19 15:01:59 -返回值 : com.bootdo.common.utils.PageUtils@7599897f
2019-03-19 15:08:05 -Starting BootdoApplication on ZJZL-20180906VX with PID 5840 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-19 15:08:05 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-19 15:08:05 -The following profiles are active: dev
2019-03-19 15:08:06 -Starting BootdoApplication on ZJZL-20180906VX with PID 14536 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-19 15:08:06 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-19 15:08:06 -The following profiles are active: dev
2019-03-19 15:08:06 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ce3db41: startup date [Tue Mar 19 15:08:06 CST 2019]; root of context hierarchy
2019-03-19 15:08:06 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b40ceb: startup date [Tue Mar 19 15:08:06 CST 2019]; root of context hierarchy
2019-03-19 15:08:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-19 15:08:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-19 15:08:33 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5ed4adf0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:33 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fec59b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:33 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$245885c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:33 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$512ddc97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:38 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:38 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:40 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:40 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:41 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:41 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:41 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-19 15:08:41 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-19 15:08:41 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-19 15:08:41 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-19 15:08:41 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:41 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:42 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:42 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:44 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:44 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:44 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:44 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:08:49 -Tomcat initialized with port(s): 8081 (http)
2019-03-19 15:08:49 -Tomcat initialized with port(s): 8081 (http)
2019-03-19 15:08:49 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-19 15:08:49 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-19 15:08:49 -Starting service [Tomcat]
2019-03-19 15:08:49 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-19 15:08:49 -Starting service [Tomcat]
2019-03-19 15:08:49 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-19 15:08:49 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-19 15:08:49 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-19 15:08:50 -Initializing Spring embedded WebApplicationContext
2019-03-19 15:08:50 -Root WebApplicationContext: initialization completed in 44155 ms
2019-03-19 15:08:50 -Initializing Spring embedded WebApplicationContext
2019-03-19 15:08:50 -Root WebApplicationContext: initialization completed in 44388 ms
2019-03-19 15:08:56 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-19 15:08:56 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-19 15:08:56 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-19 15:08:56 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-19 15:08:56 -Filter xssFilter was not registered (disabled)
2019-03-19 15:08:56 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-19 15:08:56 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-19 15:08:56 -Servlet statViewServlet mapped to [/druid/*]
2019-03-19 15:08:56 -Servlet dispatcherServlet mapped to [/]
2019-03-19 15:08:56 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-19 15:08:56 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-19 15:08:56 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-19 15:08:56 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-19 15:08:56 -Filter xssFilter was not registered (disabled)
2019-03-19 15:08:56 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-19 15:08:56 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-19 15:08:56 -Servlet statViewServlet mapped to [/druid/*]
2019-03-19 15:08:56 -Servlet dispatcherServlet mapped to [/]
2019-03-19 15:09:06 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b40ceb: startup date [Tue Mar 19 15:08:06 CST 2019]; root of context hierarchy
2019-03-19 15:09:07 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ce3db41: startup date [Tue Mar 19 15:08:06 CST 2019]; root of context hierarchy
2019-03-19 15:09:10 -Using default implementation for ThreadExecutor
2019-03-19 15:09:10 -Using default implementation for ThreadExecutor
2019-03-19 15:09:10 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-19 15:09:10 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-19 15:09:10 -Quartz Scheduler v.2.2.1 created.
2019-03-19 15:09:10 -Quartz Scheduler v.2.2.1 created.
2019-03-19 15:09:10 -RAMJobStore initialized.
2019-03-19 15:09:10 -RAMJobStore initialized.
2019-03-19 15:09:10 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-19 15:09:10 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-19 15:09:10 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-19 15:09:10 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-19 15:09:10 -Quartz scheduler version: 2.2.1
2019-03-19 15:09:10 -Quartz scheduler version: 2.2.1
2019-03-19 15:09:10 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@78e97d4d
2019-03-19 15:09:10 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5d6d424d
2019-03-19 15:09:13 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-19 15:09:13 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-19 15:09:14 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-19 15:09:14 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-19 15:09:28 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-19 15:09:28 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-19 15:09:28 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:28 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-19 15:09:28 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-19 15:09:28 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-19 15:09:28 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-19 15:09:28 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-19 15:09:28 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-19 15:09:28 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-19 15:09:28 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-19 15:09:28 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:28 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-19 15:09:28 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-19 15:09:28 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-19 15:09:28 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-19 15:09:28 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-19 15:09:28 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-19 15:09:29 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-19 15:09:29 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-19 15:09:29 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-19 15:09:29 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-19 15:09:29 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-19 15:09:29 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-19 15:09:29 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-19 15:09:29 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-19 15:09:29 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-19 15:09:29 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-19 15:09:29 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-19 15:09:29 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-19 15:09:29 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-19 15:09:29 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 15:09:29 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 15:09:29 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-19 15:09:29 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-19 15:09:29 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-19 15:09:29 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 15:09:29 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 15:09:29 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-19 15:09:29 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-19 15:09:29 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-19 15:09:29 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-19 15:09:29 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-19 15:09:29 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-19 15:09:29 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-19 15:09:29 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-19 15:09:29 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-19 15:09:29 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-19 15:09:29 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-19 15:09:29 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-19 15:09:29 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-19 15:09:29 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-19 15:09:29 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-19 15:09:29 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-19 15:09:29 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-19 15:09:29 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 15:09:29 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 15:09:29 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-19 15:09:29 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-19 15:09:29 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-19 15:09:29 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-19 15:09:29 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-19 15:09:29 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-19 15:09:29 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-19 15:09:29 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-19 15:09:29 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-19 15:09:29 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-19 15:09:29 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-19 15:09:29 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-19 15:09:29 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-19 15:09:29 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-19 15:09:29 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-19 15:09:29 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 15:09:29 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 15:09:29 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-19 15:09:29 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-19 15:09:29 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 15:09:29 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-19 15:09:29 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-19 15:09:29 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-19 15:09:29 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-19 15:09:29 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-19 15:09:29 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-19 15:09:29 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-19 15:09:29 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-19 15:09:29 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 15:09:29 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 15:09:29 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-19 15:09:29 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-19 15:09:29 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 15:09:29 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-19 15:09:29 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-19 15:09:29 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-19 15:09:29 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-19 15:09:29 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-19 15:09:29 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-19 15:09:29 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-19 15:09:29 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-19 15:09:29 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-19 15:09:29 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-19 15:09:29 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-19 15:09:29 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-19 15:09:29 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-19 15:09:29 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-19 15:09:29 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-19 15:09:29 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-19 15:09:29 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-19 15:09:29 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-19 15:09:29 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-19 15:09:29 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-19 15:09:29 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:09:29 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-19 15:09:29 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-19 15:09:29 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-19 15:09:29 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-19 15:09:29 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-19 15:09:29 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-19 15:09:29 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-19 15:09:29 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-19 15:09:29 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-19 15:09:29 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-19 15:09:29 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-19 15:09:29 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-19 15:09:29 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 15:09:29 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-19 15:09:29 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-19 15:09:29 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-19 15:09:29 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-19 15:09:29 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-19 15:09:29 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-19 15:09:29 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-19 15:09:29 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-19 15:09:29 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 15:09:29 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 15:09:29 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-19 15:09:29 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-19 15:09:29 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-19 15:09:29 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 15:09:29 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-19 15:09:29 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-19 15:09:29 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-19 15:09:29 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-19 15:09:29 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-19 15:09:29 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-19 15:09:29 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-19 15:09:29 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-19 15:09:29 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-19 15:09:29 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-19 15:09:29 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-19 15:09:29 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-19 15:09:29 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-19 15:09:29 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-19 15:09:29 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-19 15:09:29 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-19 15:09:29 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-19 15:09:29 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-19 15:09:29 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-19 15:09:29 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-19 15:09:29 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-19 15:09:29 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 15:09:29 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 15:09:29 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-19 15:09:29 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:09:29 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-19 15:09:29 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-19 15:09:29 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-19 15:09:29 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-19 15:09:29 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:09:29 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-19 15:09:29 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-19 15:09:29 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-19 15:09:29 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-19 15:09:29 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-19 15:09:29 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-19 15:09:29 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-19 15:09:29 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-19 15:09:29 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-19 15:09:29 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-19 15:09:29 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-19 15:09:29 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-19 15:09:29 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-19 15:09:29 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-19 15:09:29 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-19 15:09:29 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-19 15:09:29 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 15:09:29 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 15:09:29 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-19 15:09:29 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:09:29 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-19 15:09:29 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-19 15:09:29 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-19 15:09:29 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-19 15:09:29 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-19 15:09:29 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-19 15:09:29 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-19 15:09:29 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 15:09:29 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 15:09:29 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-19 15:09:29 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-19 15:09:29 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:09:29 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-19 15:09:29 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-19 15:09:29 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-19 15:09:29 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-19 15:09:29 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-19 15:09:29 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-19 15:09:29 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-19 15:09:29 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:29 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-19 15:09:29 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:09:29 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-19 15:09:29 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-19 15:09:29 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-19 15:09:29 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-19 15:09:29 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 15:09:29 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:29 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 15:09:30 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:09:30 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-19 15:09:30 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-19 15:09:30 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:09:30 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:09:30 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-19 15:09:30 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-19 15:09:30 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-19 15:09:31 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-19 15:09:31 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-19 15:09:32 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-19 15:09:32 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-19 15:09:32 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-19 15:09:32 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-19 15:09:36 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:09:36 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:09:36 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ce3db41: startup date [Tue Mar 19 15:08:06 CST 2019]; root of context hierarchy
2019-03-19 15:09:36 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b40ceb: startup date [Tue Mar 19 15:08:06 CST 2019]; root of context hierarchy
2019-03-19 15:09:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:09:37 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:09:37 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:09:37 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-19 15:09:37 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:09:37 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:09:37 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:09:37 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-19 15:09:38 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-19 15:09:38 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-19 15:09:45 -Registering beans for JMX exposure on startup
2019-03-19 15:09:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-19 15:09:45 -Registering beans for JMX exposure on startup
2019-03-19 15:09:45 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-19 15:09:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-19 15:09:46 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-19 15:09:46 -Starting beans in phase 2147483647
2019-03-19 15:09:46 -Context refreshed
2019-03-19 15:09:46 -Starting beans in phase 2147483647
2019-03-19 15:09:46 -Context refreshed
2019-03-19 15:09:46 -Found 1 custom documentation plugin(s)
2019-03-19 15:09:46 -Found 1 custom documentation plugin(s)
2019-03-19 15:09:46 -Scanning for api listing references
2019-03-19 15:09:46 -Scanning for api listing references
2019-03-19 15:09:47 -Generating unique operation named: removeUsingPOST_1
2019-03-19 15:09:47 -Generating unique operation named: removeUsingPOST_1
2019-03-19 15:09:49 -Generating unique operation named: addUsingGET_1
2019-03-19 15:09:49 -Generating unique operation named: addUsingGET_1
2019-03-19 15:09:49 -Generating unique operation named: editUsingGET_1
2019-03-19 15:09:49 -Generating unique operation named: editUsingGET_1
2019-03-19 15:09:49 -Generating unique operation named: listUsingGET_1
2019-03-19 15:09:49 -Generating unique operation named: listUsingGET_1
2019-03-19 15:09:49 -Generating unique operation named: removeUsingPOST_2
2019-03-19 15:09:49 -Generating unique operation named: removeUsingPOST_3
2019-03-19 15:09:49 -Generating unique operation named: removeUsingPOST_2
2019-03-19 15:09:49 -Generating unique operation named: saveUsingPOST_1
2019-03-19 15:09:49 -Generating unique operation named: removeUsingPOST_3
2019-03-19 15:09:49 -Generating unique operation named: updateUsingGET_1
2019-03-19 15:09:49 -Generating unique operation named: updateUsingHEAD_1
2019-03-19 15:09:49 -Generating unique operation named: updateUsingPOST_1
2019-03-19 15:09:49 -Generating unique operation named: saveUsingPOST_1
2019-03-19 15:09:49 -Generating unique operation named: updateUsingPUT_1
2019-03-19 15:09:49 -Generating unique operation named: updateUsingGET_1
2019-03-19 15:09:49 -Generating unique operation named: updateUsingPATCH_1
2019-03-19 15:09:49 -Generating unique operation named: updateUsingHEAD_1
2019-03-19 15:09:49 -Generating unique operation named: updateUsingDELETE_1
2019-03-19 15:09:49 -Generating unique operation named: updateUsingPOST_1
2019-03-19 15:09:49 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-19 15:09:49 -Generating unique operation named: updateUsingPUT_1
2019-03-19 15:09:49 -Generating unique operation named: updateUsingPATCH_1
2019-03-19 15:09:49 -Generating unique operation named: updateUsingTRACE_1
2019-03-19 15:09:49 -Generating unique operation named: updateUsingDELETE_1
2019-03-19 15:09:50 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-19 15:09:50 -Generating unique operation named: updateUsingTRACE_1
2019-03-19 15:09:50 -Generating unique operation named: addUsingGET_2
2019-03-19 15:09:50 -Generating unique operation named: addUsingGET_2
2019-03-19 15:09:50 -Generating unique operation named: editUsingGET_2
2019-03-19 15:09:50 -Generating unique operation named: editUsingGET_2
2019-03-19 15:09:50 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-19 15:09:50 -Generating unique operation named: listUsingGET_2
2019-03-19 15:09:50 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-19 15:09:50 -Generating unique operation named: listUsingGET_2
2019-03-19 15:09:50 -Generating unique operation named: removeUsingPOST_4
2019-03-19 15:09:50 -Generating unique operation named: removeUsingPOST_4
2019-03-19 15:09:50 -Generating unique operation named: removeUsingPOST_5
2019-03-19 15:09:50 -Generating unique operation named: saveUsingPOST_2
2019-03-19 15:09:50 -Generating unique operation named: updateUsingGET_2
2019-03-19 15:09:51 -Generating unique operation named: removeUsingPOST_5
2019-03-19 15:09:51 -Generating unique operation named: saveUsingPOST_2
2019-03-19 15:09:51 -Generating unique operation named: updateUsingHEAD_2
2019-03-19 15:09:51 -Generating unique operation named: updateUsingPOST_2
2019-03-19 15:09:51 -Generating unique operation named: updateUsingPUT_2
2019-03-19 15:09:51 -Generating unique operation named: updateUsingPATCH_2
2019-03-19 15:09:51 -Generating unique operation named: updateUsingDELETE_2
2019-03-19 15:09:51 -Generating unique operation named: updateUsingGET_2
2019-03-19 15:09:51 -Generating unique operation named: updateUsingHEAD_2
2019-03-19 15:09:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-19 15:09:51 -Generating unique operation named: updateUsingPOST_2
2019-03-19 15:09:51 -Generating unique operation named: updateUsingTRACE_2
2019-03-19 15:09:51 -Generating unique operation named: updateUsingPUT_2
2019-03-19 15:09:51 -Generating unique operation named: updateUsingPATCH_2
2019-03-19 15:09:51 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-19 15:09:51 -Generating unique operation named: addUsingGET_3
2019-03-19 15:09:51 -Generating unique operation named: editUsingGET_3
2019-03-19 15:09:51 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-19 15:09:51 -Generating unique operation named: updateUsingDELETE_2
2019-03-19 15:09:51 -Generating unique operation named: listUsingGET_3
2019-03-19 15:09:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-19 15:09:51 -Generating unique operation named: updateUsingTRACE_2
2019-03-19 15:09:51 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-19 15:09:51 -Generating unique operation named: removeUsingPOST_6
2019-03-19 15:09:51 -Generating unique operation named: removeUsingPOST_7
2019-03-19 15:09:51 -Generating unique operation named: saveUsingPOST_3
2019-03-19 15:09:51 -Generating unique operation named: addUsingGET_3
2019-03-19 15:09:51 -Generating unique operation named: editUsingGET_3
2019-03-19 15:09:51 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-19 15:09:51 -Generating unique operation named: updateUsingGET_3
2019-03-19 15:09:51 -Generating unique operation named: updateUsingHEAD_3
2019-03-19 15:09:51 -Generating unique operation named: updateUsingPOST_3
2019-03-19 15:09:51 -Generating unique operation named: listUsingGET_3
2019-03-19 15:09:51 -Generating unique operation named: updateUsingPUT_3
2019-03-19 15:09:51 -Generating unique operation named: updateUsingPATCH_3
2019-03-19 15:09:51 -Generating unique operation named: updateUsingDELETE_3
2019-03-19 15:09:51 -Generating unique operation named: removeUsingPOST_6
2019-03-19 15:09:51 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-19 15:09:51 -Generating unique operation named: updateUsingTRACE_3
2019-03-19 15:09:51 -Generating unique operation named: removeUsingPOST_7
2019-03-19 15:09:51 -Generating unique operation named: addUsingGET_4
2019-03-19 15:09:51 -Generating unique operation named: editUsingGET_4
2019-03-19 15:09:51 -Generating unique operation named: saveUsingPOST_3
2019-03-19 15:09:51 -Generating unique operation named: updateUsingGET_3
2019-03-19 15:09:51 -Generating unique operation named: listUsingGET_4
2019-03-19 15:09:52 -Generating unique operation named: updateUsingHEAD_3
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPOST_3
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPUT_3
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPATCH_3
2019-03-19 15:09:52 -Generating unique operation named: removeUsingPOST_8
2019-03-19 15:09:52 -Generating unique operation named: removeUsingPOST_9
2019-03-19 15:09:52 -Generating unique operation named: updateUsingDELETE_3
2019-03-19 15:09:52 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-19 15:09:52 -Generating unique operation named: updateUsingTRACE_3
2019-03-19 15:09:52 -Generating unique operation named: saveUsingPOST_4
2019-03-19 15:09:52 -Generating unique operation named: updateUsingGET_4
2019-03-19 15:09:52 -Generating unique operation named: updateUsingHEAD_4
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPOST_4
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPUT_4
2019-03-19 15:09:52 -Generating unique operation named: addUsingGET_4
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPATCH_4
2019-03-19 15:09:52 -Generating unique operation named: updateUsingDELETE_4
2019-03-19 15:09:52 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-19 15:09:52 -Generating unique operation named: editUsingGET_4
2019-03-19 15:09:52 -Generating unique operation named: updateUsingTRACE_4
2019-03-19 15:09:52 -Generating unique operation named: listUsingGET_4
2019-03-19 15:09:52 -Generating unique operation named: ElecUsingGET_1
2019-03-19 15:09:52 -Generating unique operation named: removeUsingPOST_8
2019-03-19 15:09:52 -Generating unique operation named: removeUsingPOST_9
2019-03-19 15:09:52 -Generating unique operation named: addUsingGET_5
2019-03-19 15:09:52 -Generating unique operation named: saveUsingPOST_4
2019-03-19 15:09:52 -Generating unique operation named: updateUsingGET_4
2019-03-19 15:09:52 -Generating unique operation named: editUsingGET_5
2019-03-19 15:09:52 -Generating unique operation named: updateUsingHEAD_4
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPOST_4
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPUT_4
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPATCH_4
2019-03-19 15:09:52 -Generating unique operation named: updateUsingDELETE_4
2019-03-19 15:09:52 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-19 15:09:52 -Generating unique operation named: updateUsingTRACE_4
2019-03-19 15:09:52 -Generating unique operation named: ElecUsingGET_1
2019-03-19 15:09:52 -Generating unique operation named: listUsingGET_5
2019-03-19 15:09:52 -Generating unique operation named: removeUsingPOST_10
2019-03-19 15:09:52 -Generating unique operation named: addUsingGET_5
2019-03-19 15:09:52 -Generating unique operation named: removeUsingPOST_11
2019-03-19 15:09:52 -Generating unique operation named: editUsingGET_5
2019-03-19 15:09:52 -Generating unique operation named: saveUsingPOST_5
2019-03-19 15:09:52 -Generating unique operation named: updateUsingGET_5
2019-03-19 15:09:52 -Generating unique operation named: updateUsingHEAD_5
2019-03-19 15:09:52 -Generating unique operation named: listUsingGET_5
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPOST_5
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPUT_5
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPATCH_5
2019-03-19 15:09:52 -Generating unique operation named: updateUsingDELETE_5
2019-03-19 15:09:52 -Generating unique operation named: removeUsingPOST_10
2019-03-19 15:09:52 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-19 15:09:52 -Generating unique operation named: updateUsingTRACE_5
2019-03-19 15:09:52 -Generating unique operation named: removeUsingPOST_11
2019-03-19 15:09:52 -Generating unique operation named: saveUsingPOST_5
2019-03-19 15:09:52 -Generating unique operation named: updateUsingGET_5
2019-03-19 15:09:52 -Generating unique operation named: updateUsingHEAD_5
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPOST_5
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPUT_5
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPATCH_5
2019-03-19 15:09:52 -Generating unique operation named: updateUsingDELETE_5
2019-03-19 15:09:52 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-19 15:09:52 -Generating unique operation named: updateUsingTRACE_5
2019-03-19 15:09:52 -Generating unique operation named: editUsingGET_6
2019-03-19 15:09:52 -Generating unique operation named: listUsingGET_6
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPOST_6
2019-03-19 15:09:52 -Generating unique operation named: addUsingGET_6
2019-03-19 15:09:52 -Generating unique operation named: editUsingGET_7
2019-03-19 15:09:52 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-19 15:09:52 -Generating unique operation named: listUsingGET_7
2019-03-19 15:09:52 -Generating unique operation named: removeUsingPOST_12
2019-03-19 15:09:52 -Generating unique operation named: removeUsingPOST_13
2019-03-19 15:09:52 -Generating unique operation named: saveUsingPOST_6
2019-03-19 15:09:52 -Generating unique operation named: updateUsingGET_6
2019-03-19 15:09:52 -Generating unique operation named: editUsingGET_6
2019-03-19 15:09:52 -Generating unique operation named: updateUsingHEAD_6
2019-03-19 15:09:52 -Generating unique operation named: listUsingGET_6
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPOST_6
2019-03-19 15:09:52 -Generating unique operation named: addUsingGET_6
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPOST_7
2019-03-19 15:09:52 -Generating unique operation named: editUsingGET_7
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPUT_6
2019-03-19 15:09:52 -Generating unique operation named: updateUsingPATCH_6
2019-03-19 15:09:52 -Generating unique operation named: updateUsingDELETE_6
2019-03-19 15:09:52 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-19 15:09:53 -Generating unique operation named: updateUsingTRACE_6
2019-03-19 15:09:53 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-19 15:09:53 -Generating unique operation named: listUsingGET_7
2019-03-19 15:09:53 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-19 15:09:53 -Generating unique operation named: removeUsingPOST_12
2019-03-19 15:09:53 -Generating unique operation named: removeUsingPOST_13
2019-03-19 15:09:53 -Generating unique operation named: addUsingGET_7
2019-03-19 15:09:53 -Generating unique operation named: saveUsingPOST_6
2019-03-19 15:09:53 -Generating unique operation named: editUsingGET_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingGET_6
2019-03-19 15:09:53 -Generating unique operation named: listUsingGET_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingHEAD_6
2019-03-19 15:09:53 -Generating unique operation named: updateUsingPOST_7
2019-03-19 15:09:53 -Generating unique operation named: updateUsingPUT_6
2019-03-19 15:09:53 -Generating unique operation named: removeUsingPOST_14
2019-03-19 15:09:53 -Generating unique operation named: updateUsingPATCH_6
2019-03-19 15:09:53 -Generating unique operation named: removeUsingPOST_15
2019-03-19 15:09:53 -Generating unique operation named: updateUsingDELETE_6
2019-03-19 15:09:53 -Generating unique operation named: saveUsingPOST_7
2019-03-19 15:09:53 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-19 15:09:53 -Generating unique operation named: updateUsingTRACE_6
2019-03-19 15:09:53 -Generating unique operation named: updateUsingGET_7
2019-03-19 15:09:53 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-19 15:09:53 -Generating unique operation named: updateUsingHEAD_7
2019-03-19 15:09:53 -Generating unique operation named: updateUsingPOST_8
2019-03-19 15:09:53 -Generating unique operation named: addUsingGET_7
2019-03-19 15:09:53 -Generating unique operation named: editUsingGET_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingPUT_7
2019-03-19 15:09:53 -Generating unique operation named: updateUsingPATCH_7
2019-03-19 15:09:53 -Generating unique operation named: listUsingGET_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingDELETE_7
2019-03-19 15:09:53 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-19 15:09:53 -Generating unique operation named: removeUsingPOST_14
2019-03-19 15:09:53 -Generating unique operation named: updateUsingTRACE_7
2019-03-19 15:09:53 -Generating unique operation named: removeUsingPOST_15
2019-03-19 15:09:53 -Generating unique operation named: saveUsingPOST_7
2019-03-19 15:09:53 -Generating unique operation named: addUsingGET_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingGET_7
2019-03-19 15:09:53 -Generating unique operation named: editUsingGET_9
2019-03-19 15:09:53 -Generating unique operation named: updateUsingHEAD_7
2019-03-19 15:09:53 -Generating unique operation named: updateUsingPOST_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingPUT_7
2019-03-19 15:09:53 -Generating unique operation named: listUsingGET_9
2019-03-19 15:09:53 -Generating unique operation named: updateUsingPATCH_7
2019-03-19 15:09:53 -Generating unique operation named: removeUsingPOST_16
2019-03-19 15:09:53 -Generating unique operation named: updateUsingDELETE_7
2019-03-19 15:09:53 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-19 15:09:53 -Generating unique operation named: removeUsingPOST_17
2019-03-19 15:09:53 -Generating unique operation named: updateUsingTRACE_7
2019-03-19 15:09:53 -Generating unique operation named: addUsingGET_8
2019-03-19 15:09:53 -Generating unique operation named: editUsingGET_9
2019-03-19 15:09:53 -Generating unique operation named: listUsingGET_9
2019-03-19 15:09:53 -Generating unique operation named: removeUsingPOST_16
2019-03-19 15:09:53 -Generating unique operation named: saveUsingPOST_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingGET_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingHEAD_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingPOST_9
2019-03-19 15:09:53 -Generating unique operation named: updateUsingPUT_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingPATCH_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingDELETE_8
2019-03-19 15:09:53 -Generating unique operation named: removeUsingPOST_17
2019-03-19 15:09:53 -Generating unique operation named: saveUsingPOST_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingGET_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingHEAD_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingPOST_9
2019-03-19 15:09:53 -Generating unique operation named: updateUsingPUT_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingPATCH_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingDELETE_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingTRACE_8
2019-03-19 15:09:53 -Generating unique operation named: updateUsingTRACE_8
2019-03-19 15:09:53 -Generating unique operation named: addUsingGET_9
2019-03-19 15:09:53 -Generating unique operation named: addUsingGET_9
2019-03-19 15:09:53 -Generating unique operation named: editUsingGET_10
2019-03-19 15:09:53 -Generating unique operation named: infoUsingGET_1
2019-03-19 15:09:53 -Generating unique operation named: editUsingGET_10
2019-03-19 15:09:53 -Generating unique operation named: infoUsingHEAD_1
2019-03-19 15:09:53 -Generating unique operation named: infoUsingPOST_1
2019-03-19 15:09:53 -Generating unique operation named: infoUsingPUT_1
2019-03-19 15:09:53 -Generating unique operation named: infoUsingGET_1
2019-03-19 15:09:53 -Generating unique operation named: infoUsingPATCH_1
2019-03-19 15:09:53 -Generating unique operation named: infoUsingHEAD_1
2019-03-19 15:09:53 -Generating unique operation named: infoUsingDELETE_1
2019-03-19 15:09:53 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-19 15:09:53 -Generating unique operation named: infoUsingPOST_1
2019-03-19 15:09:53 -Generating unique operation named: infoUsingTRACE_1
2019-03-19 15:09:53 -Generating unique operation named: infoUsingPUT_1
2019-03-19 15:09:53 -Generating unique operation named: infoUsingPATCH_1
2019-03-19 15:09:53 -Generating unique operation named: listUsingGET_10
2019-03-19 15:09:53 -Generating unique operation named: infoUsingDELETE_1
2019-03-19 15:09:53 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-19 15:09:53 -Generating unique operation named: infoUsingTRACE_1
2019-03-19 15:09:53 -Generating unique operation named: listUsingGET_10
2019-03-19 15:09:53 -Generating unique operation named: removeUsingPOST_18
2019-03-19 15:09:53 -Generating unique operation named: removeUsingPOST_19
2019-03-19 15:09:53 -Generating unique operation named: saveUsingPOST_9
2019-03-19 15:09:53 -Generating unique operation named: removeUsingPOST_18
2019-03-19 15:09:53 -Generating unique operation named: updateUsingPOST_10
2019-03-19 15:09:53 -Generating unique operation named: removeUsingPOST_19
2019-03-19 15:09:54 -Generating unique operation named: saveUsingPOST_9
2019-03-19 15:09:54 -Generating unique operation named: listUsingGET_11
2019-03-19 15:09:54 -Generating unique operation named: removeUsingPOST_20
2019-03-19 15:09:54 -Generating unique operation named: updateUsingPOST_10
2019-03-19 15:09:54 -Generating unique operation named: listUsingGET_11
2019-03-19 15:09:54 -Generating unique operation named: removeUsingPOST_20
2019-03-19 15:09:54 -Generating unique operation named: welcomeUsingGET_1
2019-03-19 15:09:54 -Generating unique operation named: welcomeUsingGET_1
2019-03-19 15:09:54 -Generating unique operation named: addUsingGET_10
2019-03-19 15:09:54 -Generating unique operation named: editUsingGET_11
2019-03-19 15:09:54 -Generating unique operation named: listUsingGET_12
2019-03-19 15:09:54 -Generating unique operation named: addUsingGET_10
2019-03-19 15:09:54 -Generating unique operation named: editUsingGET_11
2019-03-19 15:09:54 -Generating unique operation named: listUsingGET_12
2019-03-19 15:09:54 -Generating unique operation named: removeUsingPOST_21
2019-03-19 15:09:54 -Generating unique operation named: saveUsingPOST_10
2019-03-19 15:09:54 -Generating unique operation named: removeUsingPOST_21
2019-03-19 15:09:54 -Generating unique operation named: treeUsingGET_1
2019-03-19 15:09:54 -Generating unique operation named: treeUsingGET_2
2019-03-19 15:09:54 -Generating unique operation named: updateUsingPOST_11
2019-03-19 15:09:54 -Generating unique operation named: saveUsingPOST_10
2019-03-19 15:09:54 -Generating unique operation named: treeUsingGET_1
2019-03-19 15:09:54 -Generating unique operation named: addUsingGET_11
2019-03-19 15:09:54 -Generating unique operation named: treeUsingGET_2
2019-03-19 15:09:54 -Generating unique operation named: updateUsingPOST_11
2019-03-19 15:09:54 -Generating unique operation named: editUsingGET_12
2019-03-19 15:09:54 -Generating unique operation named: listUsingGET_13
2019-03-19 15:09:54 -Generating unique operation named: addUsingGET_11
2019-03-19 15:09:54 -Generating unique operation named: editUsingGET_12
2019-03-19 15:09:54 -Generating unique operation named: listUsingGET_13
2019-03-19 15:09:55 -Generating unique operation named: removeUsingPOST_22
2019-03-19 15:09:55 -Generating unique operation named: removeUsingPOST_22
2019-03-19 15:09:55 -Generating unique operation named: removeUsingPOST_23
2019-03-19 15:09:55 -Generating unique operation named: removeUsingPOST_23
2019-03-19 15:09:55 -Generating unique operation named: saveUsingPOST_11
2019-03-19 15:09:55 -Generating unique operation named: saveUsingPOST_11
2019-03-19 15:09:55 -Generating unique operation named: updateUsingGET_9
2019-03-19 15:09:55 -Generating unique operation named: updateUsingHEAD_9
2019-03-19 15:09:55 -Generating unique operation named: updateUsingGET_9
2019-03-19 15:09:55 -Generating unique operation named: updateUsingHEAD_9
2019-03-19 15:09:55 -Generating unique operation named: updateUsingPOST_12
2019-03-19 15:09:55 -Generating unique operation named: updateUsingPUT_9
2019-03-19 15:09:55 -Generating unique operation named: updateUsingPATCH_9
2019-03-19 15:09:55 -Generating unique operation named: updateUsingPOST_12
2019-03-19 15:09:55 -Generating unique operation named: updateUsingDELETE_9
2019-03-19 15:09:55 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-19 15:09:55 -Generating unique operation named: updateUsingPUT_9
2019-03-19 15:09:55 -Generating unique operation named: updateUsingPATCH_9
2019-03-19 15:09:55 -Generating unique operation named: updateUsingTRACE_9
2019-03-19 15:09:55 -Generating unique operation named: updateUsingDELETE_9
2019-03-19 15:09:55 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-19 15:09:55 -Generating unique operation named: addUsingGET_12
2019-03-19 15:09:55 -Generating unique operation named: editUsingGET_13
2019-03-19 15:09:55 -Generating unique operation named: updateUsingTRACE_9
2019-03-19 15:09:55 -Generating unique operation named: listUsingGET_14
2019-03-19 15:09:55 -Generating unique operation named: addUsingGET_12
2019-03-19 15:09:55 -Generating unique operation named: removeUsingPOST_24
2019-03-19 15:09:55 -Generating unique operation named: editUsingGET_13
2019-03-19 15:09:55 -Generating unique operation named: removeUsingPOST_25
2019-03-19 15:09:55 -Generating unique operation named: listUsingGET_14
2019-03-19 15:09:55 -Generating unique operation named: saveUsingPOST_12
2019-03-19 15:09:55 -Generating unique operation named: removeUsingPOST_24
2019-03-19 15:09:55 -Generating unique operation named: updateUsingGET_10
2019-03-19 15:09:55 -Generating unique operation named: updateUsingHEAD_10
2019-03-19 15:09:55 -Generating unique operation named: removeUsingPOST_25
2019-03-19 15:09:55 -Generating unique operation named: updateUsingPOST_13
2019-03-19 15:09:55 -Generating unique operation named: updateUsingPUT_10
2019-03-19 15:09:55 -Generating unique operation named: saveUsingPOST_12
2019-03-19 15:09:55 -Generating unique operation named: updateUsingPATCH_10
2019-03-19 15:09:55 -Generating unique operation named: updateUsingDELETE_10
2019-03-19 15:09:55 -Generating unique operation named: updateUsingGET_10
2019-03-19 15:09:55 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-19 15:09:55 -Generating unique operation named: updateUsingHEAD_10
2019-03-19 15:09:55 -Generating unique operation named: updateUsingTRACE_10
2019-03-19 15:09:55 -Generating unique operation named: updateUsingPOST_13
2019-03-19 15:09:55 -Generating unique operation named: addUsingGET_13
2019-03-19 15:09:55 -Generating unique operation named: updateUsingPUT_10
2019-03-19 15:09:55 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-19 15:09:55 -Generating unique operation named: updateUsingPATCH_10
2019-03-19 15:09:55 -Generating unique operation named: updateUsingDELETE_10
2019-03-19 15:09:55 -Generating unique operation named: editUsingGET_14
2019-03-19 15:09:55 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-19 15:09:55 -Generating unique operation named: updateUsingTRACE_10
2019-03-19 15:09:55 -Generating unique operation named: addUsingGET_13
2019-03-19 15:09:55 -Generating unique operation named: listUsingGET_15
2019-03-19 15:09:55 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-19 15:09:55 -Generating unique operation named: editUsingGET_14
2019-03-19 15:09:55 -Generating unique operation named: saveUsingPOST_13
2019-03-19 15:09:55 -Generating unique operation named: listUsingGET_15
2019-03-19 15:09:55 -Generating unique operation named: saveUsingPOST_13
2019-03-19 15:09:55 -Generating unique operation named: saveUsingPOST_14
2019-03-19 15:09:55 -Generating unique operation named: updateUsingPOST_14
2019-03-19 15:09:55 -Generating unique operation named: saveUsingPOST_14
2019-03-19 15:09:55 -Generating unique operation named: updateUsingPOST_14
2019-03-19 15:09:55 -Generating unique operation named: listUsingGET_16
2019-03-19 15:09:55 -Generating unique operation named: listUsingHEAD_1
2019-03-19 15:09:55 -Generating unique operation named: listUsingPOST_1
2019-03-19 15:09:55 -Generating unique operation named: listUsingPUT_1
2019-03-19 15:09:55 -Generating unique operation named: listUsingGET_16
2019-03-19 15:09:55 -Generating unique operation named: listUsingPATCH_1
2019-03-19 15:09:55 -Generating unique operation named: listUsingDELETE_1
2019-03-19 15:09:55 -Generating unique operation named: listUsingOPTIONS_1
2019-03-19 15:09:55 -Generating unique operation named: listUsingHEAD_1
2019-03-19 15:09:55 -Generating unique operation named: listUsingPOST_1
2019-03-19 15:09:55 -Generating unique operation named: listUsingPUT_1
2019-03-19 15:09:55 -Generating unique operation named: listUsingPATCH_1
2019-03-19 15:09:55 -Generating unique operation named: listUsingDELETE_1
2019-03-19 15:09:55 -Generating unique operation named: listUsingTRACE_1
2019-03-19 15:09:55 -Generating unique operation named: listUsingOPTIONS_1
2019-03-19 15:09:55 -Generating unique operation named: listUsingTRACE_1
2019-03-19 15:09:55 -Generating unique operation named: addUsingGET_14
2019-03-19 15:09:55 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-19 15:09:55 -Generating unique operation named: addUsingGET_14
2019-03-19 15:09:55 -Generating unique operation named: editUsingGET_15
2019-03-19 15:09:55 -Generating unique operation named: listUsingGET_17
2019-03-19 15:09:55 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-19 15:09:55 -Generating unique operation named: editUsingGET_15
2019-03-19 15:09:55 -Generating unique operation named: removeUsingPOST_26
2019-03-19 15:09:55 -Generating unique operation named: listUsingGET_17
2019-03-19 15:09:55 -Generating unique operation named: removeUsingPOST_26
2019-03-19 15:09:55 -Generating unique operation named: saveUsingPOST_15
2019-03-19 15:09:55 -Generating unique operation named: treeUsingGET_3
2019-03-19 15:09:55 -Generating unique operation named: treeViewUsingGET_1
2019-03-19 15:09:55 -Generating unique operation named: saveUsingPOST_15
2019-03-19 15:09:55 -Generating unique operation named: updateUsingPOST_15
2019-03-19 15:09:56 -Generating unique operation named: treeUsingGET_3
2019-03-19 15:09:56 -Generating unique operation named: treeViewUsingGET_1
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPOST_15
2019-03-19 15:09:56 -Generating unique operation named: addUsingGET_15
2019-03-19 15:09:56 -Generating unique operation named: editUsingGET_16
2019-03-19 15:09:56 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-19 15:09:56 -Generating unique operation named: addUsingGET_15
2019-03-19 15:09:56 -Generating unique operation named: listUsingGET_18
2019-03-19 15:09:56 -Generating unique operation named: editUsingGET_16
2019-03-19 15:09:56 -Generating unique operation named: removeUsingPOST_27
2019-03-19 15:09:56 -Generating unique operation named: removeUsingPOST_28
2019-03-19 15:09:56 -Generating unique operation named: saveUsingPOST_16
2019-03-19 15:09:56 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-19 15:09:56 -Generating unique operation named: updateUsingGET_11
2019-03-19 15:09:56 -Generating unique operation named: listUsingGET_18
2019-03-19 15:09:56 -Generating unique operation named: updateUsingHEAD_11
2019-03-19 15:09:56 -Generating unique operation named: removeUsingPOST_27
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPOST_16
2019-03-19 15:09:56 -Generating unique operation named: removeUsingPOST_28
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPUT_11
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPATCH_11
2019-03-19 15:09:56 -Generating unique operation named: updateUsingDELETE_11
2019-03-19 15:09:56 -Generating unique operation named: saveUsingPOST_16
2019-03-19 15:09:56 -Generating unique operation named: updateUsingGET_11
2019-03-19 15:09:56 -Generating unique operation named: updateUsingHEAD_11
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPOST_16
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPUT_11
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPATCH_11
2019-03-19 15:09:56 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-19 15:09:56 -Generating unique operation named: updateUsingTRACE_11
2019-03-19 15:09:56 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-19 15:09:56 -Generating unique operation named: addUsingGET_16
2019-03-19 15:09:56 -Generating unique operation named: editUsingGET_17
2019-03-19 15:09:56 -Generating unique operation named: listUsingGET_19
2019-03-19 15:09:56 -Generating unique operation named: updateUsingDELETE_11
2019-03-19 15:09:56 -Generating unique operation named: removeUsingPOST_29
2019-03-19 15:09:56 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-19 15:09:56 -Generating unique operation named: updateUsingTRACE_11
2019-03-19 15:09:56 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-19 15:09:56 -Generating unique operation named: removeUsingPOST_30
2019-03-19 15:09:56 -Generating unique operation named: addUsingGET_16
2019-03-19 15:09:56 -Generating unique operation named: saveUsingPOST_17
2019-03-19 15:09:56 -Generating unique operation named: editUsingGET_17
2019-03-19 15:09:56 -Generating unique operation named: updateUsingGET_12
2019-03-19 15:09:56 -Generating unique operation named: updateUsingHEAD_12
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPOST_17
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPUT_12
2019-03-19 15:09:56 -Generating unique operation named: listUsingGET_19
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPATCH_12
2019-03-19 15:09:56 -Generating unique operation named: removeUsingPOST_29
2019-03-19 15:09:56 -Generating unique operation named: updateUsingDELETE_12
2019-03-19 15:09:56 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-19 15:09:56 -Generating unique operation named: removeUsingPOST_30
2019-03-19 15:09:56 -Generating unique operation named: updateUsingTRACE_12
2019-03-19 15:09:56 -Generating unique operation named: saveUsingPOST_17
2019-03-19 15:09:56 -Generating unique operation named: addUsingGET_17
2019-03-19 15:09:56 -Generating unique operation named: updateUsingGET_12
2019-03-19 15:09:56 -Generating unique operation named: updateUsingHEAD_12
2019-03-19 15:09:56 -Generating unique operation named: editUsingGET_18
2019-03-19 15:09:56 -Generating unique operation named: listUsingGET_20
2019-03-19 15:09:56 -Generating unique operation named: removeUsingPOST_31
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPOST_17
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPUT_12
2019-03-19 15:09:56 -Generating unique operation named: removeUsingPOST_32
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPATCH_12
2019-03-19 15:09:56 -Generating unique operation named: updateUsingDELETE_12
2019-03-19 15:09:56 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-19 15:09:56 -Generating unique operation named: updateUsingTRACE_12
2019-03-19 15:09:56 -Generating unique operation named: addUsingGET_17
2019-03-19 15:09:56 -Generating unique operation named: saveUsingPOST_18
2019-03-19 15:09:56 -Generating unique operation named: updateUsingGET_13
2019-03-19 15:09:56 -Generating unique operation named: updateUsingHEAD_13
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPOST_18
2019-03-19 15:09:56 -Generating unique operation named: editUsingGET_18
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPUT_13
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPATCH_13
2019-03-19 15:09:56 -Generating unique operation named: listUsingGET_20
2019-03-19 15:09:56 -Generating unique operation named: updateUsingDELETE_13
2019-03-19 15:09:56 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-19 15:09:56 -Generating unique operation named: removeUsingPOST_31
2019-03-19 15:09:56 -Generating unique operation named: removeUsingPOST_32
2019-03-19 15:09:56 -Generating unique operation named: updateUsingTRACE_13
2019-03-19 15:09:56 -Generating unique operation named: saveUsingPOST_18
2019-03-19 15:09:56 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-19 15:09:56 -Generating unique operation named: updateUsingGET_13
2019-03-19 15:09:56 -Generating unique operation named: updateUsingHEAD_13
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPOST_18
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPUT_13
2019-03-19 15:09:56 -Generating unique operation named: updateUsingPATCH_13
2019-03-19 15:09:56 -Generating unique operation named: updateUsingDELETE_13
2019-03-19 15:09:56 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-19 15:09:56 -Generating unique operation named: updateUsingTRACE_13
2019-03-19 15:09:56 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-19 15:09:58 -Starting Quartz Scheduler now
2019-03-19 15:09:58 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-19 15:09:58 -Starting...
2019-03-19 15:09:58 -Starting Quartz Scheduler now
2019-03-19 15:09:58 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 15:09:58 -Started.
2019-03-19 15:09:58 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-19 15:09:58 -Starting...
2019-03-19 15:09:58 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 15:09:58 -Started.
2019-03-19 15:09:59 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-19 15:09:59 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-19 15:10:00 -Using a shared selector for servlet write/read
2019-03-19 15:10:00 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:20)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-19 15:10:00 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-19 15:10:00 -Stopping service [Tomcat]
2019-03-19 15:10:00 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-19 15:10:00 -Started BootdoApplication in 125.127 seconds (JVM running for 130.957)
2019-03-19 15:10:00 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-19 15:10:00 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-19 15:10:00 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-19 15:10:00 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-19 15:10:00 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-19 15:10:00 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5b40ceb: startup date [Tue Mar 19 15:08:06 CST 2019]; root of context hierarchy
2019-03-19 15:10:00 -Stopping beans in phase 2147483647
2019-03-19 15:10:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-19 15:10:00 -Stopping...
2019-03-19 15:10:00 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 15:10:00 -Stopped.
2019-03-19 15:10:01 -Unregistering JMX-exposed beans on shutdown
2019-03-19 15:10:01 -Unregistering JMX-exposed beans
2019-03-19 15:10:01 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-19 15:10:01 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-19 15:10:01 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-19 15:10:01 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-19 15:10:01 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-19 15:10:01 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-19 15:10:01 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-19 15:10:01 -Shutting down Quartz Scheduler
2019-03-19 15:10:01 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-19 15:10:02 -==> Parameters: 
2019-03-19 15:10:02 -<==      Total: 1
2019-03-19 15:10:32 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-19 15:20:51 -Starting BootdoApplication on ZJZL-20180906VX with PID 13732 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-19 15:20:51 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-19 15:20:51 -The following profiles are active: dev
2019-03-19 15:20:51 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6cfcd46d: startup date [Tue Mar 19 15:20:51 CST 2019]; root of context hierarchy
2019-03-19 15:21:00 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-19 15:21:03 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$118a976e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:21:03 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3e3c615] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:21:04 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:21:05 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:21:05 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:21:05 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-19 15:21:05 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-19 15:21:05 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:21:05 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:21:05 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:21:05 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:21:07 -Tomcat initialized with port(s): 8081 (http)
2019-03-19 15:21:07 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-19 15:21:07 -Starting service [Tomcat]
2019-03-19 15:21:07 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-19 15:21:07 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-19 15:21:08 -Initializing Spring embedded WebApplicationContext
2019-03-19 15:21:08 -Root WebApplicationContext: initialization completed in 16840 ms
2019-03-19 15:21:09 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-19 15:21:09 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-19 15:21:09 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-19 15:21:09 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-19 15:21:09 -Filter xssFilter was not registered (disabled)
2019-03-19 15:21:09 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-19 15:21:09 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-19 15:21:09 -Servlet statViewServlet mapped to [/druid/*]
2019-03-19 15:21:09 -Servlet dispatcherServlet mapped to [/]
2019-03-19 15:21:13 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6cfcd46d: startup date [Tue Mar 19 15:20:51 CST 2019]; root of context hierarchy
2019-03-19 15:21:14 -Using default implementation for ThreadExecutor
2019-03-19 15:21:14 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-19 15:21:14 -Quartz Scheduler v.2.2.1 created.
2019-03-19 15:21:14 -RAMJobStore initialized.
2019-03-19 15:21:14 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-19 15:21:14 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-19 15:21:14 -Quartz scheduler version: 2.2.1
2019-03-19 15:21:14 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3dcbbbc
2019-03-19 15:21:15 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-19 15:21:15 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-19 15:21:19 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:21:19 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-19 15:21:19 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-19 15:21:19 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-19 15:21:19 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-19 15:21:19 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-19 15:21:19 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-19 15:21:19 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-19 15:21:19 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-19 15:21:19 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-19 15:21:19 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-19 15:21:19 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-19 15:21:19 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-19 15:21:19 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-19 15:21:19 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-19 15:21:19 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-19 15:21:19 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-19 15:21:19 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-19 15:21:19 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-19 15:21:19 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-19 15:21:19 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-19 15:21:19 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-19 15:21:19 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 15:21:19 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-19 15:21:19 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 15:21:19 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-19 15:21:19 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-19 15:21:19 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-19 15:21:19 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-19 15:21:19 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-19 15:21:19 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-19 15:21:19 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-19 15:21:19 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-19 15:21:19 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-19 15:21:19 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-19 15:21:19 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:21:19 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:21:19 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-19 15:21:19 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-19 15:21:19 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-19 15:21:19 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-19 15:21:19 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-19 15:21:19 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-19 15:21:19 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:21:19 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-19 15:21:19 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:21:19 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-19 15:21:19 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-19 15:21:19 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-19 15:21:19 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 15:21:19 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 15:21:19 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-19 15:21:19 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 15:21:19 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-19 15:21:19 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-19 15:21:19 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-19 15:21:19 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-19 15:21:19 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-19 15:21:19 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-19 15:21:19 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-19 15:21:19 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:21:19 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-19 15:21:19 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:21:19 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-19 15:21:19 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-19 15:21:19 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 15:21:19 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 15:21:19 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-19 15:21:19 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 15:21:19 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-19 15:21:19 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-19 15:21:19 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-19 15:21:19 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-19 15:21:19 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-19 15:21:19 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-19 15:21:19 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 15:21:19 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 15:21:19 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-19 15:21:19 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-19 15:21:19 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-19 15:21:19 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-19 15:21:19 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 15:21:19 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 15:21:19 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-19 15:21:19 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-19 15:21:19 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-19 15:21:19 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 15:21:19 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 15:21:19 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-19 15:21:19 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-19 15:21:19 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-19 15:21:19 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-19 15:21:19 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-19 15:21:19 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-19 15:21:19 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-19 15:21:19 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-19 15:21:19 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-19 15:21:19 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-19 15:21:19 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-19 15:21:19 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-19 15:21:19 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-19 15:21:19 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-19 15:21:19 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-19 15:21:19 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-19 15:21:19 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-19 15:21:19 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-19 15:21:19 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-19 15:21:19 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-19 15:21:19 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-19 15:21:19 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-19 15:21:19 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:21:19 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:21:19 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-19 15:21:19 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-19 15:21:19 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-19 15:21:19 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-19 15:21:19 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-19 15:21:19 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-19 15:21:19 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-19 15:21:19 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-19 15:21:19 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-19 15:21:19 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-19 15:21:19 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-19 15:21:19 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-19 15:21:19 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-19 15:21:19 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-19 15:21:19 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-19 15:21:19 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-19 15:21:19 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-19 15:21:19 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-19 15:21:19 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-19 15:21:19 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 15:21:19 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:21:19 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 15:21:19 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-19 15:21:19 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-19 15:21:19 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-19 15:21:19 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-19 15:21:19 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-19 15:21:19 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-19 15:21:19 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:21:19 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-19 15:21:19 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:21:19 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-19 15:21:19 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-19 15:21:19 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-19 15:21:19 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 15:21:19 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 15:21:19 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-19 15:21:19 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:21:19 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:21:19 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-19 15:21:19 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:21:19 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-19 15:21:19 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-19 15:21:19 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-19 15:21:20 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-19 15:21:20 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-19 15:21:20 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-19 15:21:21 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:21:21 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6cfcd46d: startup date [Tue Mar 19 15:20:51 CST 2019]; root of context hierarchy
2019-03-19 15:21:22 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:21:22 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:21:22 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:21:22 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-19 15:21:22 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-19 15:21:25 -Registering beans for JMX exposure on startup
2019-03-19 15:21:25 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-19 15:21:25 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-19 15:21:25 -Starting beans in phase 2147483647
2019-03-19 15:21:25 -Context refreshed
2019-03-19 15:21:25 -Found 1 custom documentation plugin(s)
2019-03-19 15:21:25 -Scanning for api listing references
2019-03-19 15:21:26 -Generating unique operation named: removeUsingPOST_1
2019-03-19 15:21:26 -Generating unique operation named: addUsingGET_1
2019-03-19 15:21:26 -Generating unique operation named: editUsingGET_1
2019-03-19 15:21:26 -Generating unique operation named: listUsingGET_1
2019-03-19 15:21:26 -Generating unique operation named: removeUsingPOST_2
2019-03-19 15:21:26 -Generating unique operation named: removeUsingPOST_3
2019-03-19 15:21:26 -Generating unique operation named: saveUsingPOST_1
2019-03-19 15:21:26 -Generating unique operation named: updateUsingGET_1
2019-03-19 15:21:26 -Generating unique operation named: updateUsingHEAD_1
2019-03-19 15:21:26 -Generating unique operation named: updateUsingPOST_1
2019-03-19 15:21:26 -Generating unique operation named: updateUsingPUT_1
2019-03-19 15:21:26 -Generating unique operation named: updateUsingPATCH_1
2019-03-19 15:21:26 -Generating unique operation named: updateUsingDELETE_1
2019-03-19 15:21:26 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-19 15:21:26 -Generating unique operation named: updateUsingTRACE_1
2019-03-19 15:21:26 -Generating unique operation named: addUsingGET_2
2019-03-19 15:21:26 -Generating unique operation named: editUsingGET_2
2019-03-19 15:21:26 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-19 15:21:26 -Generating unique operation named: listUsingGET_2
2019-03-19 15:21:26 -Generating unique operation named: removeUsingPOST_4
2019-03-19 15:21:26 -Generating unique operation named: removeUsingPOST_5
2019-03-19 15:21:26 -Generating unique operation named: saveUsingPOST_2
2019-03-19 15:21:26 -Generating unique operation named: updateUsingGET_2
2019-03-19 15:21:26 -Generating unique operation named: updateUsingHEAD_2
2019-03-19 15:21:26 -Generating unique operation named: updateUsingPOST_2
2019-03-19 15:21:26 -Generating unique operation named: updateUsingPUT_2
2019-03-19 15:21:26 -Generating unique operation named: updateUsingPATCH_2
2019-03-19 15:21:26 -Generating unique operation named: updateUsingDELETE_2
2019-03-19 15:21:26 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-19 15:21:26 -Generating unique operation named: updateUsingTRACE_2
2019-03-19 15:21:26 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-19 15:21:26 -Generating unique operation named: addUsingGET_3
2019-03-19 15:21:26 -Generating unique operation named: editUsingGET_3
2019-03-19 15:21:26 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-19 15:21:26 -Generating unique operation named: listUsingGET_3
2019-03-19 15:21:26 -Generating unique operation named: removeUsingPOST_6
2019-03-19 15:21:26 -Generating unique operation named: removeUsingPOST_7
2019-03-19 15:21:26 -Generating unique operation named: saveUsingPOST_3
2019-03-19 15:21:26 -Generating unique operation named: updateUsingGET_3
2019-03-19 15:21:26 -Generating unique operation named: updateUsingHEAD_3
2019-03-19 15:21:26 -Generating unique operation named: updateUsingPOST_3
2019-03-19 15:21:26 -Generating unique operation named: updateUsingPUT_3
2019-03-19 15:21:26 -Generating unique operation named: updateUsingPATCH_3
2019-03-19 15:21:26 -Generating unique operation named: updateUsingDELETE_3
2019-03-19 15:21:26 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-19 15:21:26 -Generating unique operation named: updateUsingTRACE_3
2019-03-19 15:21:26 -Generating unique operation named: addUsingGET_4
2019-03-19 15:21:26 -Generating unique operation named: editUsingGET_4
2019-03-19 15:21:26 -Generating unique operation named: listUsingGET_4
2019-03-19 15:21:26 -Generating unique operation named: removeUsingPOST_8
2019-03-19 15:21:26 -Generating unique operation named: removeUsingPOST_9
2019-03-19 15:21:26 -Generating unique operation named: saveUsingPOST_4
2019-03-19 15:21:26 -Generating unique operation named: updateUsingGET_4
2019-03-19 15:21:26 -Generating unique operation named: updateUsingHEAD_4
2019-03-19 15:21:26 -Generating unique operation named: updateUsingPOST_4
2019-03-19 15:21:26 -Generating unique operation named: updateUsingPUT_4
2019-03-19 15:21:26 -Generating unique operation named: updateUsingPATCH_4
2019-03-19 15:21:26 -Generating unique operation named: updateUsingDELETE_4
2019-03-19 15:21:26 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-19 15:21:26 -Generating unique operation named: updateUsingTRACE_4
2019-03-19 15:21:26 -Generating unique operation named: ElecUsingGET_1
2019-03-19 15:21:26 -Generating unique operation named: addUsingGET_5
2019-03-19 15:21:26 -Generating unique operation named: editUsingGET_5
2019-03-19 15:21:26 -Generating unique operation named: listUsingGET_5
2019-03-19 15:21:26 -Generating unique operation named: removeUsingPOST_10
2019-03-19 15:21:26 -Generating unique operation named: removeUsingPOST_11
2019-03-19 15:21:26 -Generating unique operation named: saveUsingPOST_5
2019-03-19 15:21:26 -Generating unique operation named: updateUsingGET_5
2019-03-19 15:21:26 -Generating unique operation named: updateUsingHEAD_5
2019-03-19 15:21:26 -Generating unique operation named: updateUsingPOST_5
2019-03-19 15:21:26 -Generating unique operation named: updateUsingPUT_5
2019-03-19 15:21:26 -Generating unique operation named: updateUsingPATCH_5
2019-03-19 15:21:26 -Generating unique operation named: updateUsingDELETE_5
2019-03-19 15:21:27 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-19 15:21:27 -Generating unique operation named: updateUsingTRACE_5
2019-03-19 15:21:27 -Generating unique operation named: editUsingGET_6
2019-03-19 15:21:27 -Generating unique operation named: listUsingGET_6
2019-03-19 15:21:27 -Generating unique operation named: updateUsingPOST_6
2019-03-19 15:21:27 -Generating unique operation named: addUsingGET_6
2019-03-19 15:21:27 -Generating unique operation named: editUsingGET_7
2019-03-19 15:21:27 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-19 15:21:27 -Generating unique operation named: listUsingGET_7
2019-03-19 15:21:27 -Generating unique operation named: removeUsingPOST_12
2019-03-19 15:21:27 -Generating unique operation named: removeUsingPOST_13
2019-03-19 15:21:27 -Generating unique operation named: saveUsingPOST_6
2019-03-19 15:21:27 -Generating unique operation named: updateUsingGET_6
2019-03-19 15:21:27 -Generating unique operation named: updateUsingHEAD_6
2019-03-19 15:21:27 -Generating unique operation named: updateUsingPOST_7
2019-03-19 15:21:27 -Generating unique operation named: updateUsingPUT_6
2019-03-19 15:21:27 -Generating unique operation named: updateUsingPATCH_6
2019-03-19 15:21:27 -Generating unique operation named: updateUsingDELETE_6
2019-03-19 15:21:27 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-19 15:21:27 -Generating unique operation named: updateUsingTRACE_6
2019-03-19 15:21:27 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-19 15:21:27 -Generating unique operation named: addUsingGET_7
2019-03-19 15:21:27 -Generating unique operation named: editUsingGET_8
2019-03-19 15:21:27 -Generating unique operation named: listUsingGET_8
2019-03-19 15:21:27 -Generating unique operation named: removeUsingPOST_14
2019-03-19 15:21:27 -Generating unique operation named: removeUsingPOST_15
2019-03-19 15:21:27 -Generating unique operation named: saveUsingPOST_7
2019-03-19 15:21:27 -Generating unique operation named: updateUsingGET_7
2019-03-19 15:21:27 -Generating unique operation named: updateUsingHEAD_7
2019-03-19 15:21:27 -Generating unique operation named: updateUsingPOST_8
2019-03-19 15:21:27 -Generating unique operation named: updateUsingPUT_7
2019-03-19 15:21:27 -Generating unique operation named: updateUsingPATCH_7
2019-03-19 15:21:27 -Generating unique operation named: updateUsingDELETE_7
2019-03-19 15:21:27 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-19 15:21:27 -Generating unique operation named: updateUsingTRACE_7
2019-03-19 15:21:27 -Generating unique operation named: addUsingGET_8
2019-03-19 15:21:27 -Generating unique operation named: editUsingGET_9
2019-03-19 15:21:27 -Generating unique operation named: listUsingGET_9
2019-03-19 15:21:27 -Generating unique operation named: removeUsingPOST_16
2019-03-19 15:21:27 -Generating unique operation named: removeUsingPOST_17
2019-03-19 15:21:27 -Generating unique operation named: saveUsingPOST_8
2019-03-19 15:21:27 -Generating unique operation named: updateUsingGET_8
2019-03-19 15:21:27 -Generating unique operation named: updateUsingHEAD_8
2019-03-19 15:21:27 -Generating unique operation named: updateUsingPOST_9
2019-03-19 15:21:27 -Generating unique operation named: updateUsingPUT_8
2019-03-19 15:21:27 -Generating unique operation named: updateUsingPATCH_8
2019-03-19 15:21:27 -Generating unique operation named: updateUsingDELETE_8
2019-03-19 15:21:27 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-19 15:21:27 -Generating unique operation named: updateUsingTRACE_8
2019-03-19 15:21:27 -Generating unique operation named: addUsingGET_9
2019-03-19 15:21:27 -Generating unique operation named: editUsingGET_10
2019-03-19 15:21:27 -Generating unique operation named: infoUsingGET_1
2019-03-19 15:21:27 -Generating unique operation named: infoUsingHEAD_1
2019-03-19 15:21:27 -Generating unique operation named: infoUsingPOST_1
2019-03-19 15:21:27 -Generating unique operation named: infoUsingPUT_1
2019-03-19 15:21:27 -Generating unique operation named: infoUsingPATCH_1
2019-03-19 15:21:27 -Generating unique operation named: infoUsingDELETE_1
2019-03-19 15:21:27 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-19 15:21:27 -Generating unique operation named: infoUsingTRACE_1
2019-03-19 15:21:27 -Generating unique operation named: listUsingGET_10
2019-03-19 15:21:27 -Generating unique operation named: removeUsingPOST_18
2019-03-19 15:21:27 -Generating unique operation named: removeUsingPOST_19
2019-03-19 15:21:27 -Generating unique operation named: saveUsingPOST_9
2019-03-19 15:21:27 -Generating unique operation named: updateUsingPOST_10
2019-03-19 15:21:27 -Generating unique operation named: listUsingGET_11
2019-03-19 15:21:27 -Generating unique operation named: removeUsingPOST_20
2019-03-19 15:21:27 -Generating unique operation named: welcomeUsingGET_1
2019-03-19 15:21:27 -Generating unique operation named: addUsingGET_10
2019-03-19 15:21:27 -Generating unique operation named: editUsingGET_11
2019-03-19 15:21:27 -Generating unique operation named: listUsingGET_12
2019-03-19 15:21:27 -Generating unique operation named: removeUsingPOST_21
2019-03-19 15:21:27 -Generating unique operation named: saveUsingPOST_10
2019-03-19 15:21:27 -Generating unique operation named: treeUsingGET_1
2019-03-19 15:21:27 -Generating unique operation named: treeUsingGET_2
2019-03-19 15:21:27 -Generating unique operation named: updateUsingPOST_11
2019-03-19 15:21:27 -Generating unique operation named: addUsingGET_11
2019-03-19 15:21:27 -Generating unique operation named: editUsingGET_12
2019-03-19 15:21:27 -Generating unique operation named: listUsingGET_13
2019-03-19 15:21:27 -Generating unique operation named: removeUsingPOST_22
2019-03-19 15:21:27 -Generating unique operation named: removeUsingPOST_23
2019-03-19 15:21:27 -Generating unique operation named: saveUsingPOST_11
2019-03-19 15:21:27 -Generating unique operation named: updateUsingGET_9
2019-03-19 15:21:27 -Generating unique operation named: updateUsingHEAD_9
2019-03-19 15:21:27 -Generating unique operation named: updateUsingPOST_12
2019-03-19 15:21:27 -Generating unique operation named: updateUsingPUT_9
2019-03-19 15:21:27 -Generating unique operation named: updateUsingPATCH_9
2019-03-19 15:21:27 -Generating unique operation named: updateUsingDELETE_9
2019-03-19 15:21:27 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-19 15:21:27 -Generating unique operation named: updateUsingTRACE_9
2019-03-19 15:21:28 -Generating unique operation named: addUsingGET_12
2019-03-19 15:21:28 -Generating unique operation named: editUsingGET_13
2019-03-19 15:21:28 -Generating unique operation named: listUsingGET_14
2019-03-19 15:21:28 -Generating unique operation named: removeUsingPOST_24
2019-03-19 15:21:28 -Generating unique operation named: removeUsingPOST_25
2019-03-19 15:21:28 -Generating unique operation named: saveUsingPOST_12
2019-03-19 15:21:28 -Generating unique operation named: updateUsingGET_10
2019-03-19 15:21:28 -Generating unique operation named: updateUsingHEAD_10
2019-03-19 15:21:28 -Generating unique operation named: updateUsingPOST_13
2019-03-19 15:21:28 -Generating unique operation named: updateUsingPUT_10
2019-03-19 15:21:28 -Generating unique operation named: updateUsingPATCH_10
2019-03-19 15:21:28 -Generating unique operation named: updateUsingDELETE_10
2019-03-19 15:21:28 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-19 15:21:28 -Generating unique operation named: updateUsingTRACE_10
2019-03-19 15:21:28 -Generating unique operation named: addUsingGET_13
2019-03-19 15:21:28 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-19 15:21:28 -Generating unique operation named: editUsingGET_14
2019-03-19 15:21:28 -Generating unique operation named: listUsingGET_15
2019-03-19 15:21:28 -Generating unique operation named: saveUsingPOST_13
2019-03-19 15:21:28 -Generating unique operation named: saveUsingPOST_14
2019-03-19 15:21:28 -Generating unique operation named: updateUsingPOST_14
2019-03-19 15:21:28 -Generating unique operation named: listUsingGET_16
2019-03-19 15:21:28 -Generating unique operation named: listUsingHEAD_1
2019-03-19 15:21:28 -Generating unique operation named: listUsingPOST_1
2019-03-19 15:21:28 -Generating unique operation named: listUsingPUT_1
2019-03-19 15:21:28 -Generating unique operation named: listUsingPATCH_1
2019-03-19 15:21:28 -Generating unique operation named: listUsingDELETE_1
2019-03-19 15:21:28 -Generating unique operation named: listUsingOPTIONS_1
2019-03-19 15:21:28 -Generating unique operation named: listUsingTRACE_1
2019-03-19 15:21:28 -Generating unique operation named: addUsingGET_14
2019-03-19 15:21:28 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-19 15:21:28 -Generating unique operation named: editUsingGET_15
2019-03-19 15:21:28 -Generating unique operation named: listUsingGET_17
2019-03-19 15:21:28 -Generating unique operation named: removeUsingPOST_26
2019-03-19 15:21:28 -Generating unique operation named: saveUsingPOST_15
2019-03-19 15:21:28 -Generating unique operation named: treeUsingGET_3
2019-03-19 15:21:28 -Generating unique operation named: treeViewUsingGET_1
2019-03-19 15:21:28 -Generating unique operation named: updateUsingPOST_15
2019-03-19 15:21:28 -Generating unique operation named: addUsingGET_15
2019-03-19 15:21:28 -Generating unique operation named: editUsingGET_16
2019-03-19 15:21:28 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-19 15:21:28 -Generating unique operation named: listUsingGET_18
2019-03-19 15:21:28 -Generating unique operation named: removeUsingPOST_27
2019-03-19 15:21:28 -Generating unique operation named: removeUsingPOST_28
2019-03-19 15:21:28 -Generating unique operation named: saveUsingPOST_16
2019-03-19 15:21:28 -Generating unique operation named: updateUsingGET_11
2019-03-19 15:21:28 -Generating unique operation named: updateUsingHEAD_11
2019-03-19 15:21:28 -Generating unique operation named: updateUsingPOST_16
2019-03-19 15:21:28 -Generating unique operation named: updateUsingPUT_11
2019-03-19 15:21:28 -Generating unique operation named: updateUsingPATCH_11
2019-03-19 15:21:28 -Generating unique operation named: updateUsingDELETE_11
2019-03-19 15:21:28 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-19 15:21:28 -Generating unique operation named: updateUsingTRACE_11
2019-03-19 15:21:28 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-19 15:21:28 -Generating unique operation named: addUsingGET_16
2019-03-19 15:21:28 -Generating unique operation named: editUsingGET_17
2019-03-19 15:21:28 -Generating unique operation named: listUsingGET_19
2019-03-19 15:21:28 -Generating unique operation named: removeUsingPOST_29
2019-03-19 15:21:28 -Generating unique operation named: removeUsingPOST_30
2019-03-19 15:21:28 -Generating unique operation named: saveUsingPOST_17
2019-03-19 15:21:28 -Generating unique operation named: updateUsingGET_12
2019-03-19 15:21:28 -Generating unique operation named: updateUsingHEAD_12
2019-03-19 15:21:28 -Generating unique operation named: updateUsingPOST_17
2019-03-19 15:21:28 -Generating unique operation named: updateUsingPUT_12
2019-03-19 15:21:28 -Generating unique operation named: updateUsingPATCH_12
2019-03-19 15:21:28 -Generating unique operation named: updateUsingDELETE_12
2019-03-19 15:21:28 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-19 15:21:28 -Generating unique operation named: updateUsingTRACE_12
2019-03-19 15:21:28 -Generating unique operation named: addUsingGET_17
2019-03-19 15:21:28 -Generating unique operation named: editUsingGET_18
2019-03-19 15:21:28 -Generating unique operation named: listUsingGET_20
2019-03-19 15:21:28 -Generating unique operation named: removeUsingPOST_31
2019-03-19 15:21:28 -Generating unique operation named: removeUsingPOST_32
2019-03-19 15:21:28 -Generating unique operation named: saveUsingPOST_18
2019-03-19 15:21:28 -Generating unique operation named: updateUsingGET_13
2019-03-19 15:21:28 -Generating unique operation named: updateUsingHEAD_13
2019-03-19 15:21:28 -Generating unique operation named: updateUsingPOST_18
2019-03-19 15:21:28 -Generating unique operation named: updateUsingPUT_13
2019-03-19 15:21:28 -Generating unique operation named: updateUsingPATCH_13
2019-03-19 15:21:28 -Generating unique operation named: updateUsingDELETE_13
2019-03-19 15:21:28 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-19 15:21:28 -Generating unique operation named: updateUsingTRACE_13
2019-03-19 15:21:28 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-19 15:21:29 -Starting Quartz Scheduler now
2019-03-19 15:21:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-19 15:21:29 -Starting...
2019-03-19 15:21:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 15:21:29 -Started.
2019-03-19 15:21:29 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-19 15:21:29 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:20)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.Net.bind(Unknown Source)
	at sun.nio.ch.ServerSocketChannelImpl.bind(Unknown Source)
	at sun.nio.ch.ServerSocketAdaptor.bind(Unknown Source)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-03-19 15:21:29 -Pausing ProtocolHandler ["http-nio-8081"]
2019-03-19 15:21:29 -Stopping service [Tomcat]
2019-03-19 15:21:29 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-03-19 15:21:29 -Stopping ProtocolHandler ["http-nio-8081"]
2019-03-19 15:21:29 -Destroying ProtocolHandler ["http-nio-8081"]
2019-03-19 15:21:29 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-19 15:21:29 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-03-19 15:21:29 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6cfcd46d: startup date [Tue Mar 19 15:20:51 CST 2019]; root of context hierarchy
2019-03-19 15:21:29 -Stopping beans in phase 2147483647
2019-03-19 15:21:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-19 15:21:29 -Stopping...
2019-03-19 15:21:29 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 15:21:29 -Stopped.
2019-03-19 15:21:29 -Unregistering JMX-exposed beans on shutdown
2019-03-19 15:21:29 -Unregistering JMX-exposed beans
2019-03-19 15:21:29 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-03-19 15:21:29 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-03-19 15:21:29 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-03-19 15:21:29 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-03-19 15:21:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-03-19 15:21:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-03-19 15:21:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-03-19 15:21:29 -Shutting down Quartz Scheduler
2019-03-19 15:28:07 -Starting BootdoApplication on ZJZL-20180906VX with PID 13400 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-19 15:28:07 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-19 15:28:07 -The following profiles are active: dev
2019-03-19 15:28:07 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 19 15:28:07 CST 2019]; root of context hierarchy
2019-03-19 15:28:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-19 15:28:14 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e564a4ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:28:14 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d7bdd355] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:28:14 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:28:15 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:28:15 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:28:15 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-19 15:28:15 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-19 15:28:15 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:28:15 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:28:15 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:28:15 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:28:16 -Tomcat initialized with port(s): 8081 (http)
2019-03-19 15:28:16 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-19 15:28:16 -Starting service [Tomcat]
2019-03-19 15:28:16 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-19 15:28:16 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-19 15:28:16 -Initializing Spring embedded WebApplicationContext
2019-03-19 15:28:16 -Root WebApplicationContext: initialization completed in 9006 ms
2019-03-19 15:28:17 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-19 15:28:17 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-19 15:28:17 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-19 15:28:17 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-19 15:28:17 -Filter xssFilter was not registered (disabled)
2019-03-19 15:28:17 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-19 15:28:17 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-19 15:28:17 -Servlet statViewServlet mapped to [/druid/*]
2019-03-19 15:28:17 -Servlet dispatcherServlet mapped to [/]
2019-03-19 15:28:20 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 19 15:28:07 CST 2019]; root of context hierarchy
2019-03-19 15:28:20 -Using default implementation for ThreadExecutor
2019-03-19 15:28:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-19 15:28:20 -Quartz Scheduler v.2.2.1 created.
2019-03-19 15:28:20 -RAMJobStore initialized.
2019-03-19 15:28:20 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-19 15:28:20 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-19 15:28:20 -Quartz scheduler version: 2.2.1
2019-03-19 15:28:20 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@26874f2c
2019-03-19 15:28:21 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-19 15:28:21 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-19 15:28:23 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:28:23 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-19 15:28:23 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-19 15:28:23 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-19 15:28:23 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-19 15:28:23 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-19 15:28:23 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-19 15:28:23 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-19 15:28:23 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-19 15:28:23 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-19 15:28:23 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-19 15:28:23 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:23 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-19 15:28:23 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-19 15:28:23 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-19 15:28:23 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:23 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-19 15:28:23 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-19 15:28:23 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-19 15:28:23 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-19 15:28:23 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-19 15:28:23 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-19 15:28:23 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:23 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-19 15:28:23 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-19 15:28:23 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:23 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-19 15:28:23 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-19 15:28:23 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:23 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-19 15:28:23 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 15:28:23 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-19 15:28:23 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-19 15:28:23 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 15:28:23 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-19 15:28:23 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-19 15:28:23 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-19 15:28:23 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-19 15:28:23 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:23 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-19 15:28:23 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-19 15:28:23 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:23 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-19 15:28:23 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-19 15:28:23 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-19 15:28:23 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-19 15:28:23 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:23 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-19 15:28:23 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-19 15:28:23 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-19 15:28:23 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:28:23 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:28:23 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-19 15:28:23 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-19 15:28:23 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-19 15:28:23 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-19 15:28:23 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-19 15:28:23 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-19 15:28:23 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:28:23 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:23 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-19 15:28:23 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:28:23 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-19 15:28:23 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-19 15:28:23 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-19 15:28:23 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-19 15:28:23 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-19 15:28:23 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 15:28:23 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:23 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 15:28:23 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:23 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-19 15:28:23 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-19 15:28:23 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 15:28:23 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-19 15:28:23 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-19 15:28:23 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-19 15:28:23 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-19 15:28:23 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:23 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-19 15:28:23 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:28:23 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-19 15:28:23 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-19 15:28:23 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:28:23 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-19 15:28:23 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-19 15:28:23 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-19 15:28:23 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-19 15:28:23 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 15:28:23 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:23 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 15:28:23 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:23 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-19 15:28:23 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-19 15:28:23 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 15:28:23 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-19 15:28:23 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-19 15:28:23 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-19 15:28:23 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-19 15:28:23 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-19 15:28:23 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-19 15:28:23 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 15:28:23 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:23 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 15:28:24 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-19 15:28:24 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-19 15:28:24 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-19 15:28:24 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-19 15:28:24 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-19 15:28:24 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 15:28:24 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:24 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 15:28:24 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-19 15:28:24 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-19 15:28:24 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-19 15:28:24 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-19 15:28:24 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 15:28:24 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:24 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 15:28:24 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-19 15:28:24 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-19 15:28:24 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-19 15:28:24 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-19 15:28:24 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-19 15:28:24 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:24 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-19 15:28:24 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-19 15:28:24 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:24 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-19 15:28:24 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-19 15:28:24 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-19 15:28:24 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-19 15:28:24 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-19 15:28:24 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-19 15:28:24 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:24 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-19 15:28:24 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-19 15:28:24 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-19 15:28:24 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-19 15:28:24 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-19 15:28:24 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-19 15:28:24 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-19 15:28:24 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-19 15:28:24 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-19 15:28:24 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-19 15:28:24 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-19 15:28:24 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-19 15:28:24 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:28:24 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:28:24 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:28:24 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-19 15:28:24 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-19 15:28:24 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:24 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-19 15:28:24 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-19 15:28:24 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-19 15:28:24 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:28:24 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-19 15:28:24 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-19 15:28:24 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-19 15:28:24 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-19 15:28:24 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-19 15:28:24 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-19 15:28:24 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-19 15:28:24 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-19 15:28:24 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-19 15:28:24 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-19 15:28:24 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-19 15:28:24 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:24 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-19 15:28:24 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-19 15:28:24 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:24 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-19 15:28:24 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-19 15:28:24 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-19 15:28:24 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:28:24 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 15:28:24 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:28:24 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 15:28:24 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-19 15:28:24 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-19 15:28:24 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-19 15:28:24 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-19 15:28:24 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-19 15:28:24 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-19 15:28:24 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-19 15:28:24 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:24 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-19 15:28:24 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:28:24 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:24 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-19 15:28:24 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:28:24 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-19 15:28:24 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-19 15:28:24 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-19 15:28:24 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-19 15:28:24 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 15:28:24 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:24 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 15:28:24 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:28:24 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-19 15:28:24 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:28:24 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-19 15:28:24 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:28:24 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-19 15:28:24 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-19 15:28:24 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-19 15:28:24 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-19 15:28:24 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-19 15:28:24 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-19 15:28:25 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:28:25 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue Mar 19 15:28:07 CST 2019]; root of context hierarchy
2019-03-19 15:28:25 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:28:25 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:28:25 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:28:25 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-19 15:28:25 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-19 15:28:27 -Registering beans for JMX exposure on startup
2019-03-19 15:28:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-19 15:28:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-19 15:28:27 -Starting beans in phase 2147483647
2019-03-19 15:28:27 -Context refreshed
2019-03-19 15:28:27 -Found 1 custom documentation plugin(s)
2019-03-19 15:28:27 -Scanning for api listing references
2019-03-19 15:28:28 -Generating unique operation named: removeUsingPOST_1
2019-03-19 15:28:28 -Generating unique operation named: addUsingGET_1
2019-03-19 15:28:28 -Generating unique operation named: editUsingGET_1
2019-03-19 15:28:28 -Generating unique operation named: listUsingGET_1
2019-03-19 15:28:28 -Generating unique operation named: removeUsingPOST_2
2019-03-19 15:28:28 -Generating unique operation named: removeUsingPOST_3
2019-03-19 15:28:28 -Generating unique operation named: saveUsingPOST_1
2019-03-19 15:28:28 -Generating unique operation named: updateUsingGET_1
2019-03-19 15:28:28 -Generating unique operation named: updateUsingHEAD_1
2019-03-19 15:28:28 -Generating unique operation named: updateUsingPOST_1
2019-03-19 15:28:28 -Generating unique operation named: updateUsingPUT_1
2019-03-19 15:28:28 -Generating unique operation named: updateUsingPATCH_1
2019-03-19 15:28:28 -Generating unique operation named: updateUsingDELETE_1
2019-03-19 15:28:28 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-19 15:28:28 -Generating unique operation named: updateUsingTRACE_1
2019-03-19 15:28:28 -Generating unique operation named: addUsingGET_2
2019-03-19 15:28:28 -Generating unique operation named: editUsingGET_2
2019-03-19 15:28:28 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-19 15:28:28 -Generating unique operation named: listUsingGET_2
2019-03-19 15:28:28 -Generating unique operation named: removeUsingPOST_4
2019-03-19 15:28:28 -Generating unique operation named: removeUsingPOST_5
2019-03-19 15:28:28 -Generating unique operation named: saveUsingPOST_2
2019-03-19 15:28:28 -Generating unique operation named: updateUsingGET_2
2019-03-19 15:28:28 -Generating unique operation named: updateUsingHEAD_2
2019-03-19 15:28:28 -Generating unique operation named: updateUsingPOST_2
2019-03-19 15:28:28 -Generating unique operation named: updateUsingPUT_2
2019-03-19 15:28:28 -Generating unique operation named: updateUsingPATCH_2
2019-03-19 15:28:28 -Generating unique operation named: updateUsingDELETE_2
2019-03-19 15:28:28 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-19 15:28:28 -Generating unique operation named: updateUsingTRACE_2
2019-03-19 15:28:28 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-19 15:28:28 -Generating unique operation named: addUsingGET_3
2019-03-19 15:28:28 -Generating unique operation named: editUsingGET_3
2019-03-19 15:28:28 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-19 15:28:28 -Generating unique operation named: listUsingGET_3
2019-03-19 15:28:28 -Generating unique operation named: removeUsingPOST_6
2019-03-19 15:28:28 -Generating unique operation named: removeUsingPOST_7
2019-03-19 15:28:28 -Generating unique operation named: saveUsingPOST_3
2019-03-19 15:28:28 -Generating unique operation named: updateUsingGET_3
2019-03-19 15:28:28 -Generating unique operation named: updateUsingHEAD_3
2019-03-19 15:28:28 -Generating unique operation named: updateUsingPOST_3
2019-03-19 15:28:28 -Generating unique operation named: updateUsingPUT_3
2019-03-19 15:28:28 -Generating unique operation named: updateUsingPATCH_3
2019-03-19 15:28:28 -Generating unique operation named: updateUsingDELETE_3
2019-03-19 15:28:28 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-19 15:28:28 -Generating unique operation named: updateUsingTRACE_3
2019-03-19 15:28:28 -Generating unique operation named: addUsingGET_4
2019-03-19 15:28:28 -Generating unique operation named: editUsingGET_4
2019-03-19 15:28:28 -Generating unique operation named: listUsingGET_4
2019-03-19 15:28:28 -Generating unique operation named: removeUsingPOST_8
2019-03-19 15:28:28 -Generating unique operation named: removeUsingPOST_9
2019-03-19 15:28:28 -Generating unique operation named: saveUsingPOST_4
2019-03-19 15:28:28 -Generating unique operation named: updateUsingGET_4
2019-03-19 15:28:28 -Generating unique operation named: updateUsingHEAD_4
2019-03-19 15:28:28 -Generating unique operation named: updateUsingPOST_4
2019-03-19 15:28:28 -Generating unique operation named: updateUsingPUT_4
2019-03-19 15:28:28 -Generating unique operation named: updateUsingPATCH_4
2019-03-19 15:28:28 -Generating unique operation named: updateUsingDELETE_4
2019-03-19 15:28:28 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-19 15:28:28 -Generating unique operation named: updateUsingTRACE_4
2019-03-19 15:28:28 -Generating unique operation named: ElecUsingGET_1
2019-03-19 15:28:28 -Generating unique operation named: addUsingGET_5
2019-03-19 15:28:28 -Generating unique operation named: editUsingGET_5
2019-03-19 15:28:28 -Generating unique operation named: listUsingGET_5
2019-03-19 15:28:28 -Generating unique operation named: removeUsingPOST_10
2019-03-19 15:28:28 -Generating unique operation named: removeUsingPOST_11
2019-03-19 15:28:28 -Generating unique operation named: saveUsingPOST_5
2019-03-19 15:28:28 -Generating unique operation named: updateUsingGET_5
2019-03-19 15:28:28 -Generating unique operation named: updateUsingHEAD_5
2019-03-19 15:28:28 -Generating unique operation named: updateUsingPOST_5
2019-03-19 15:28:28 -Generating unique operation named: updateUsingPUT_5
2019-03-19 15:28:28 -Generating unique operation named: updateUsingPATCH_5
2019-03-19 15:28:28 -Generating unique operation named: updateUsingDELETE_5
2019-03-19 15:28:28 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-19 15:28:28 -Generating unique operation named: updateUsingTRACE_5
2019-03-19 15:28:28 -Generating unique operation named: editUsingGET_6
2019-03-19 15:28:28 -Generating unique operation named: listUsingGET_6
2019-03-19 15:28:28 -Generating unique operation named: updateUsingPOST_6
2019-03-19 15:28:28 -Generating unique operation named: addUsingGET_6
2019-03-19 15:28:28 -Generating unique operation named: editUsingGET_7
2019-03-19 15:28:28 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-19 15:28:28 -Generating unique operation named: listUsingGET_7
2019-03-19 15:28:29 -Generating unique operation named: removeUsingPOST_12
2019-03-19 15:28:29 -Generating unique operation named: removeUsingPOST_13
2019-03-19 15:28:29 -Generating unique operation named: saveUsingPOST_6
2019-03-19 15:28:29 -Generating unique operation named: updateUsingGET_6
2019-03-19 15:28:29 -Generating unique operation named: updateUsingHEAD_6
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPOST_7
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPUT_6
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPATCH_6
2019-03-19 15:28:29 -Generating unique operation named: updateUsingDELETE_6
2019-03-19 15:28:29 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-19 15:28:29 -Generating unique operation named: updateUsingTRACE_6
2019-03-19 15:28:29 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-19 15:28:29 -Generating unique operation named: addUsingGET_7
2019-03-19 15:28:29 -Generating unique operation named: editUsingGET_8
2019-03-19 15:28:29 -Generating unique operation named: listUsingGET_8
2019-03-19 15:28:29 -Generating unique operation named: removeUsingPOST_14
2019-03-19 15:28:29 -Generating unique operation named: removeUsingPOST_15
2019-03-19 15:28:29 -Generating unique operation named: saveUsingPOST_7
2019-03-19 15:28:29 -Generating unique operation named: updateUsingGET_7
2019-03-19 15:28:29 -Generating unique operation named: updateUsingHEAD_7
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPOST_8
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPUT_7
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPATCH_7
2019-03-19 15:28:29 -Generating unique operation named: updateUsingDELETE_7
2019-03-19 15:28:29 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-19 15:28:29 -Generating unique operation named: updateUsingTRACE_7
2019-03-19 15:28:29 -Generating unique operation named: addUsingGET_8
2019-03-19 15:28:29 -Generating unique operation named: editUsingGET_9
2019-03-19 15:28:29 -Generating unique operation named: listUsingGET_9
2019-03-19 15:28:29 -Generating unique operation named: removeUsingPOST_16
2019-03-19 15:28:29 -Generating unique operation named: removeUsingPOST_17
2019-03-19 15:28:29 -Generating unique operation named: saveUsingPOST_8
2019-03-19 15:28:29 -Generating unique operation named: updateUsingGET_8
2019-03-19 15:28:29 -Generating unique operation named: updateUsingHEAD_8
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPOST_9
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPUT_8
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPATCH_8
2019-03-19 15:28:29 -Generating unique operation named: updateUsingDELETE_8
2019-03-19 15:28:29 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-19 15:28:29 -Generating unique operation named: updateUsingTRACE_8
2019-03-19 15:28:29 -Generating unique operation named: addUsingGET_9
2019-03-19 15:28:29 -Generating unique operation named: editUsingGET_10
2019-03-19 15:28:29 -Generating unique operation named: infoUsingGET_1
2019-03-19 15:28:29 -Generating unique operation named: infoUsingHEAD_1
2019-03-19 15:28:29 -Generating unique operation named: infoUsingPOST_1
2019-03-19 15:28:29 -Generating unique operation named: infoUsingPUT_1
2019-03-19 15:28:29 -Generating unique operation named: infoUsingPATCH_1
2019-03-19 15:28:29 -Generating unique operation named: infoUsingDELETE_1
2019-03-19 15:28:29 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-19 15:28:29 -Generating unique operation named: infoUsingTRACE_1
2019-03-19 15:28:29 -Generating unique operation named: listUsingGET_10
2019-03-19 15:28:29 -Generating unique operation named: removeUsingPOST_18
2019-03-19 15:28:29 -Generating unique operation named: removeUsingPOST_19
2019-03-19 15:28:29 -Generating unique operation named: saveUsingPOST_9
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPOST_10
2019-03-19 15:28:29 -Generating unique operation named: listUsingGET_11
2019-03-19 15:28:29 -Generating unique operation named: removeUsingPOST_20
2019-03-19 15:28:29 -Generating unique operation named: welcomeUsingGET_1
2019-03-19 15:28:29 -Generating unique operation named: addUsingGET_10
2019-03-19 15:28:29 -Generating unique operation named: editUsingGET_11
2019-03-19 15:28:29 -Generating unique operation named: listUsingGET_12
2019-03-19 15:28:29 -Generating unique operation named: removeUsingPOST_21
2019-03-19 15:28:29 -Generating unique operation named: saveUsingPOST_10
2019-03-19 15:28:29 -Generating unique operation named: treeUsingGET_1
2019-03-19 15:28:29 -Generating unique operation named: treeUsingGET_2
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPOST_11
2019-03-19 15:28:29 -Generating unique operation named: addUsingGET_11
2019-03-19 15:28:29 -Generating unique operation named: editUsingGET_12
2019-03-19 15:28:29 -Generating unique operation named: listUsingGET_13
2019-03-19 15:28:29 -Generating unique operation named: removeUsingPOST_22
2019-03-19 15:28:29 -Generating unique operation named: removeUsingPOST_23
2019-03-19 15:28:29 -Generating unique operation named: saveUsingPOST_11
2019-03-19 15:28:29 -Generating unique operation named: updateUsingGET_9
2019-03-19 15:28:29 -Generating unique operation named: updateUsingHEAD_9
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPOST_12
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPUT_9
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPATCH_9
2019-03-19 15:28:29 -Generating unique operation named: updateUsingDELETE_9
2019-03-19 15:28:29 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-19 15:28:29 -Generating unique operation named: updateUsingTRACE_9
2019-03-19 15:28:29 -Generating unique operation named: addUsingGET_12
2019-03-19 15:28:29 -Generating unique operation named: editUsingGET_13
2019-03-19 15:28:29 -Generating unique operation named: listUsingGET_14
2019-03-19 15:28:29 -Generating unique operation named: removeUsingPOST_24
2019-03-19 15:28:29 -Generating unique operation named: removeUsingPOST_25
2019-03-19 15:28:29 -Generating unique operation named: saveUsingPOST_12
2019-03-19 15:28:29 -Generating unique operation named: updateUsingGET_10
2019-03-19 15:28:29 -Generating unique operation named: updateUsingHEAD_10
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPOST_13
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPUT_10
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPATCH_10
2019-03-19 15:28:29 -Generating unique operation named: updateUsingDELETE_10
2019-03-19 15:28:29 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-19 15:28:29 -Generating unique operation named: updateUsingTRACE_10
2019-03-19 15:28:29 -Generating unique operation named: addUsingGET_13
2019-03-19 15:28:29 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-19 15:28:29 -Generating unique operation named: editUsingGET_14
2019-03-19 15:28:29 -Generating unique operation named: listUsingGET_15
2019-03-19 15:28:29 -Generating unique operation named: saveUsingPOST_13
2019-03-19 15:28:29 -Generating unique operation named: saveUsingPOST_14
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPOST_14
2019-03-19 15:28:29 -Generating unique operation named: listUsingGET_16
2019-03-19 15:28:29 -Generating unique operation named: listUsingHEAD_1
2019-03-19 15:28:29 -Generating unique operation named: listUsingPOST_1
2019-03-19 15:28:29 -Generating unique operation named: listUsingPUT_1
2019-03-19 15:28:29 -Generating unique operation named: listUsingPATCH_1
2019-03-19 15:28:29 -Generating unique operation named: listUsingDELETE_1
2019-03-19 15:28:29 -Generating unique operation named: listUsingOPTIONS_1
2019-03-19 15:28:29 -Generating unique operation named: listUsingTRACE_1
2019-03-19 15:28:29 -Generating unique operation named: addUsingGET_14
2019-03-19 15:28:29 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-19 15:28:29 -Generating unique operation named: editUsingGET_15
2019-03-19 15:28:29 -Generating unique operation named: listUsingGET_17
2019-03-19 15:28:29 -Generating unique operation named: removeUsingPOST_26
2019-03-19 15:28:29 -Generating unique operation named: saveUsingPOST_15
2019-03-19 15:28:29 -Generating unique operation named: treeUsingGET_3
2019-03-19 15:28:29 -Generating unique operation named: treeViewUsingGET_1
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPOST_15
2019-03-19 15:28:29 -Generating unique operation named: addUsingGET_15
2019-03-19 15:28:29 -Generating unique operation named: editUsingGET_16
2019-03-19 15:28:29 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-19 15:28:29 -Generating unique operation named: listUsingGET_18
2019-03-19 15:28:29 -Generating unique operation named: removeUsingPOST_27
2019-03-19 15:28:29 -Generating unique operation named: removeUsingPOST_28
2019-03-19 15:28:29 -Generating unique operation named: saveUsingPOST_16
2019-03-19 15:28:29 -Generating unique operation named: updateUsingGET_11
2019-03-19 15:28:29 -Generating unique operation named: updateUsingHEAD_11
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPOST_16
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPUT_11
2019-03-19 15:28:29 -Generating unique operation named: updateUsingPATCH_11
2019-03-19 15:28:29 -Generating unique operation named: updateUsingDELETE_11
2019-03-19 15:28:29 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-19 15:28:29 -Generating unique operation named: updateUsingTRACE_11
2019-03-19 15:28:29 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-19 15:28:30 -Generating unique operation named: addUsingGET_16
2019-03-19 15:28:30 -Generating unique operation named: editUsingGET_17
2019-03-19 15:28:30 -Generating unique operation named: listUsingGET_19
2019-03-19 15:28:30 -Generating unique operation named: removeUsingPOST_29
2019-03-19 15:28:30 -Generating unique operation named: removeUsingPOST_30
2019-03-19 15:28:30 -Generating unique operation named: saveUsingPOST_17
2019-03-19 15:28:30 -Generating unique operation named: updateUsingGET_12
2019-03-19 15:28:30 -Generating unique operation named: updateUsingHEAD_12
2019-03-19 15:28:30 -Generating unique operation named: updateUsingPOST_17
2019-03-19 15:28:30 -Generating unique operation named: updateUsingPUT_12
2019-03-19 15:28:30 -Generating unique operation named: updateUsingPATCH_12
2019-03-19 15:28:30 -Generating unique operation named: updateUsingDELETE_12
2019-03-19 15:28:30 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-19 15:28:30 -Generating unique operation named: updateUsingTRACE_12
2019-03-19 15:28:30 -Generating unique operation named: addUsingGET_17
2019-03-19 15:28:30 -Generating unique operation named: editUsingGET_18
2019-03-19 15:28:30 -Generating unique operation named: listUsingGET_20
2019-03-19 15:28:30 -Generating unique operation named: removeUsingPOST_31
2019-03-19 15:28:30 -Generating unique operation named: removeUsingPOST_32
2019-03-19 15:28:30 -Generating unique operation named: saveUsingPOST_18
2019-03-19 15:28:30 -Generating unique operation named: updateUsingGET_13
2019-03-19 15:28:30 -Generating unique operation named: updateUsingHEAD_13
2019-03-19 15:28:30 -Generating unique operation named: updateUsingPOST_18
2019-03-19 15:28:30 -Generating unique operation named: updateUsingPUT_13
2019-03-19 15:28:30 -Generating unique operation named: updateUsingPATCH_13
2019-03-19 15:28:30 -Generating unique operation named: updateUsingDELETE_13
2019-03-19 15:28:30 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-19 15:28:30 -Generating unique operation named: updateUsingTRACE_13
2019-03-19 15:28:30 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-19 15:28:30 -Starting Quartz Scheduler now
2019-03-19 15:28:30 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-19 15:28:30 -Starting...
2019-03-19 15:28:30 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 15:28:30 -Started.
2019-03-19 15:28:30 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-19 15:28:30 -Using a shared selector for servlet write/read
2019-03-19 15:28:30 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-19 15:28:30 -Started BootdoApplication in 24.141 seconds (JVM running for 25.047)
2019-03-19 15:28:30 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-19 15:28:30 -==> Parameters: 
2019-03-19 15:28:31 -<==      Total: 1
2019-03-19 15:28:54 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-19 15:28:54 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-19 15:28:55 -FrameworkServlet 'dispatcherServlet': initialization completed in 52 ms
2019-03-19 15:28:55 -Enabling session validation scheduler...
2019-03-19 15:28:55 -请求地址 : http://localhost:8081/login;JSESSIONID=518d6e55-8881-46d8-a34d-122176f08672
2019-03-19 15:28:55 -HTTP METHOD : GET
2019-03-19 15:28:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 15:28:55 -参数 : [{}]
2019-03-19 15:28:55 -耗时 : 3
2019-03-19 15:28:55 -返回值 : login
2019-03-19 15:29:01 -请求地址 : http://localhost:8081/getVerify
2019-03-19 15:29:01 -HTTP METHOD : GET
2019-03-19 15:29:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 15:29:01 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@27245b38, org.apache.shiro.web.servlet.ShiroHttpServletResponse@29e3b1ac]
2019-03-19 15:29:11 -4339
2019-03-19 15:29:11 -耗时 : 9750
2019-03-19 15:29:11 -返回值 : null
2019-03-19 15:29:22 -请求地址 : http://localhost:8081/login
2019-03-19 15:29:22 -HTTP METHOD : POST
2019-03-19 15:29:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 15:29:22 -参数 : [admin, 111111, 4339, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6e662bb8]
2019-03-19 15:29:22 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 15:29:22 -==> Parameters: admin(String)
2019-03-19 15:29:22 -<==      Total: 1
2019-03-19 15:29:22 -耗时 : 336
2019-03-19 15:29:22 -返回值 : {msg=操作成功, code=0}
2019-03-19 15:29:22 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-19 15:29:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 15:29:22 -==> Parameters: 1(Long), admin(String), 登录(String), 336(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 15:29:22.625(Timestamp)
2019-03-19 15:29:22 -请求地址 : http://localhost:8081/index
2019-03-19 15:29:22 -HTTP METHOD : GET
2019-03-19 15:29:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 15:29:22 -参数 : [{}]
2019-03-19 15:29:22 -<==    Updates: 1
2019-03-19 15:29:23 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 15:29:23 -==> Parameters: 1(Long)
2019-03-19 15:29:23 -<==      Total: 46
2019-03-19 15:29:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 15:29:23 -==> Parameters: 138(Long)
2019-03-19 15:29:23 -<==      Total: 1
2019-03-19 15:29:23 -耗时 : 469
2019-03-19 15:29:23 -返回值 : index_v1
2019-03-19 15:29:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 15:29:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 469(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 15:29:23.447(Timestamp)
2019-03-19 15:29:23 -<==    Updates: 1
2019-03-19 15:29:23 -请求地址 : http://localhost:8081/main
2019-03-19 15:29:23 -HTTP METHOD : GET
2019-03-19 15:29:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 15:29:23 -参数 : []
2019-03-19 15:29:23 -耗时 : 1
2019-03-19 15:29:23 -返回值 : main
2019-03-19 15:29:24 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 15:29:24 -HTTP METHOD : GET
2019-03-19 15:29:24 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 15:29:24 -参数 : []
2019-03-19 15:29:24 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 15:29:24 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 15:29:24 -<==      Total: 0
2019-03-19 15:29:24 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 15:29:24 -==> Parameters: 1(Long), 0(String)
2019-03-19 15:29:24 -<==      Total: 1
2019-03-19 15:29:24 -耗时 : 172
2019-03-19 15:29:24 -返回值 : com.bootdo.common.utils.PageUtils@5c9f9745
2019-03-19 15:29:24 -请求地址 : http://localhost:8081/main
2019-03-19 15:29:24 -HTTP METHOD : GET
2019-03-19 15:29:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 15:29:24 -参数 : []
2019-03-19 15:29:24 -耗时 : 0
2019-03-19 15:29:24 -返回值 : main
2019-03-19 15:29:24 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-19 15:29:59 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 15:29:59 -==> Parameters: 1(Long)
2019-03-19 15:29:59 -<==      Total: 90
2019-03-19 15:29:59 -请求地址 : http://localhost:8081/elec/elecPrice
2019-03-19 15:29:59 -HTTP METHOD : GET
2019-03-19 15:29:59 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.ElecPrice
2019-03-19 15:29:59 -参数 : []
2019-03-19 15:29:59 -耗时 : 1
2019-03-19 15:29:59 -返回值 : elec/elecPrice/elecPrice
2019-03-19 15:30:00 -请求地址 : http://localhost:8081/elec/elecPrice/list
2019-03-19 15:30:00 -HTTP METHOD : GET
2019-03-19 15:30:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecPriceController.list
2019-03-19 15:30:00 -参数 : [{limit=10, offset=0}]
2019-03-19 15:30:00 -==>  Preparing: select `id`,`elec_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `elec_org`) AS elecOrgName,`business_elec`,`civil_elec`,`noindustry_elec`,`industry_elec`,`special_1`,`special_2`,`special_3`,`special_4`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_price order by id desc limit ?, ? 
2019-03-19 15:30:00 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 15:30:00 -<==      Total: 2
2019-03-19 15:30:00 -==>  Preparing: select count(*) from elec_price 
2019-03-19 15:30:00 -==> Parameters: 
2019-03-19 15:30:00 -<==      Total: 1
2019-03-19 15:30:00 -耗时 : 98
2019-03-19 15:30:00 -返回值 : com.bootdo.common.utils.PageUtils@6543c54f
2019-03-19 15:30:01 -请求地址 : http://localhost:8081/elec/elec
2019-03-19 15:30:01 -HTTP METHOD : GET
2019-03-19 15:30:01 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-19 15:30:01 -参数 : []
2019-03-19 15:30:01 -耗时 : 1
2019-03-19 15:30:01 -返回值 : elec/elec/elec
2019-03-19 15:30:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 15:30:01 -HTTP METHOD : GET
2019-03-19 15:30:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 15:30:01 -参数 : [userType]
2019-03-19 15:30:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 15:30:02 -==> Parameters: userType(String)
2019-03-19 15:30:02 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-19 15:30:02 -HTTP METHOD : GET
2019-03-19 15:30:02 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-19 15:30:02 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@65ac97c5]
2019-03-19 15:30:02 -<==      Total: 2
2019-03-19 15:30:02 -耗时 : 171
2019-03-19 15:30:02 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 15:30:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-19 15:30:02 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 15:30:02 -<==      Total: 10
2019-03-19 15:30:02 -==>  Preparing: select count(*) from elec 
2019-03-19 15:30:02 -==> Parameters: 
2019-03-19 15:30:02 -<==      Total: 1
2019-03-19 15:30:02 -耗时 : 166
2019-03-19 15:30:02 -返回值 : com.bootdo.common.utils.PageUtils@529ea8bf
2019-03-19 15:30:04 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 15:30:04 -HTTP METHOD : GET
2019-03-19 15:30:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 15:30:04 -参数 : []
2019-03-19 15:30:04 -耗时 : 1
2019-03-19 15:30:04 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 15:30:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 15:30:04 -HTTP METHOD : GET
2019-03-19 15:30:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 15:30:04 -参数 : [userType]
2019-03-19 15:30:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 15:30:04 -==> Parameters: userType(String)
2019-03-19 15:30:04 -<==      Total: 2
2019-03-19 15:30:04 -耗时 : 6
2019-03-19 15:30:04 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 15:30:04 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 15:30:04 -HTTP METHOD : GET
2019-03-19 15:30:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 15:30:04 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 15:30:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 15:30:04 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 15:30:04 -<==      Total: 4
2019-03-19 15:30:04 -==>  Preparing: select count(*) from elec_log 
2019-03-19 15:30:04 -==> Parameters: 
2019-03-19 15:30:04 -<==      Total: 1
2019-03-19 15:30:04 -耗时 : 32
2019-03-19 15:30:04 -返回值 : com.bootdo.common.utils.PageUtils@59d2a38b
2019-03-19 15:30:14 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 15:30:14 -HTTP METHOD : GET
2019-03-19 15:30:14 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 15:30:14 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-19, type=A}]
2019-03-19 15:30:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-19 15:30:14 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-19 15:30:14 -<==      Total: 3
2019-03-19 15:30:14 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and elec_date = ? 
2019-03-19 15:30:14 -==> Parameters: A(String), 2019-03-19(String)
2019-03-19 15:30:14 -<==      Total: 1
2019-03-19 15:30:14 -耗时 : 39
2019-03-19 15:30:14 -返回值 : com.bootdo.common.utils.PageUtils@5cfdf1c5
2019-03-19 15:30:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 15:30:14 -HTTP METHOD : GET
2019-03-19 15:30:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 15:30:14 -参数 : []
2019-03-19 15:30:14 -耗时 : 1
2019-03-19 15:30:14 -返回值 : system/dept/deptTree
2019-03-19 15:30:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 15:30:14 -HTTP METHOD : GET
2019-03-19 15:30:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 15:30:14 -参数 : []
2019-03-19 15:30:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 15:30:15 -==> Parameters: 
2019-03-19 15:30:15 -<==      Total: 3
2019-03-19 15:30:15 -耗时 : 16
2019-03-19 15:30:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 15:30:17 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-19 15:30:17 -HTTP METHOD : GET
2019-03-19 15:30:17 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotExcel
2019-03-19 15:30:17 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@7123b5a5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7917b82c, org.apache.shiro.web.servlet.ShiroHttpServletRequest@74f6e76d]
2019-03-19 15:30:17 -耗时 : 88
2019-03-19 15:30:17 -返回值 : null
2019-03-19 15:41:06 -Starting BootdoApplication on ZJZL-20180906VX with PID 7688 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-19 15:41:06 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-19 15:41:06 -The following profiles are active: dev
2019-03-19 15:41:06 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7e22550a: startup date [Tue Mar 19 15:41:06 CST 2019]; root of context hierarchy
2019-03-19 15:41:10 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-19 15:41:14 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$72c66d36] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:41:14 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$651f9bdd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:41:15 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:41:15 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:41:15 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:41:15 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-19 15:41:15 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-19 15:41:15 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:41:16 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:41:16 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:41:16 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:41:17 -Tomcat initialized with port(s): 8081 (http)
2019-03-19 15:41:17 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-19 15:41:17 -Starting service [Tomcat]
2019-03-19 15:41:17 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-19 15:41:17 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-19 15:41:18 -Initializing Spring embedded WebApplicationContext
2019-03-19 15:41:18 -Root WebApplicationContext: initialization completed in 11900 ms
2019-03-19 15:41:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-19 15:41:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-19 15:41:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-19 15:41:19 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-19 15:41:19 -Filter xssFilter was not registered (disabled)
2019-03-19 15:41:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-19 15:41:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-19 15:41:19 -Servlet statViewServlet mapped to [/druid/*]
2019-03-19 15:41:19 -Servlet dispatcherServlet mapped to [/]
2019-03-19 15:41:22 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7e22550a: startup date [Tue Mar 19 15:41:06 CST 2019]; root of context hierarchy
2019-03-19 15:41:23 -Using default implementation for ThreadExecutor
2019-03-19 15:41:23 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-19 15:41:23 -Quartz Scheduler v.2.2.1 created.
2019-03-19 15:41:23 -RAMJobStore initialized.
2019-03-19 15:41:23 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-19 15:41:23 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-19 15:41:23 -Quartz scheduler version: 2.2.1
2019-03-19 15:41:23 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@391b01c5
2019-03-19 15:41:24 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-19 15:41:24 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-19 15:41:27 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:41:27 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-19 15:41:27 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-19 15:41:27 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-19 15:41:27 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-19 15:41:27 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-19 15:41:27 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-19 15:41:27 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-19 15:41:27 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-19 15:41:27 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-19 15:41:27 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-19 15:41:27 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-19 15:41:27 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-19 15:41:27 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-19 15:41:27 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-19 15:41:27 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-19 15:41:27 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-19 15:41:27 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-19 15:41:27 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-19 15:41:27 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-19 15:41:27 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-19 15:41:27 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-19 15:41:27 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 15:41:27 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 15:41:27 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-19 15:41:27 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-19 15:41:27 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-19 15:41:27 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-19 15:41:27 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-19 15:41:27 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-19 15:41:27 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-19 15:41:27 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-19 15:41:27 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-19 15:41:27 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-19 15:41:27 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-19 15:41:27 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:41:27 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:41:27 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-19 15:41:27 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-19 15:41:27 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-19 15:41:27 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-19 15:41:27 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-19 15:41:27 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:41:27 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-19 15:41:27 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:41:27 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-19 15:41:27 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-19 15:41:27 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-19 15:41:27 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-19 15:41:27 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 15:41:27 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 15:41:27 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-19 15:41:27 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 15:41:27 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-19 15:41:27 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-19 15:41:27 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-19 15:41:27 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-19 15:41:27 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-19 15:41:27 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-19 15:41:27 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:41:27 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-19 15:41:27 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:41:27 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-19 15:41:27 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-19 15:41:27 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-19 15:41:27 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 15:41:27 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 15:41:27 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-19 15:41:27 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-19 15:41:27 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-19 15:41:27 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 15:41:27 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-19 15:41:27 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-19 15:41:27 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-19 15:41:27 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-19 15:41:27 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 15:41:27 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 15:41:27 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-19 15:41:27 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-19 15:41:27 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-19 15:41:27 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-19 15:41:27 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 15:41:27 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 15:41:27 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-19 15:41:27 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-19 15:41:27 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-19 15:41:27 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 15:41:27 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 15:41:27 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-19 15:41:27 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-19 15:41:27 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-19 15:41:27 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-19 15:41:27 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-19 15:41:27 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-19 15:41:27 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-19 15:41:27 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-19 15:41:27 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-19 15:41:27 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-19 15:41:27 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-19 15:41:27 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-19 15:41:27 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-19 15:41:27 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-19 15:41:27 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-19 15:41:27 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-19 15:41:27 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-19 15:41:27 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-19 15:41:27 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-19 15:41:27 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-19 15:41:27 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-19 15:41:27 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-19 15:41:27 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:41:27 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:41:27 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-19 15:41:27 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-19 15:41:27 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-19 15:41:27 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-19 15:41:27 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-19 15:41:27 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-19 15:41:27 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-19 15:41:27 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-19 15:41:27 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-19 15:41:27 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-19 15:41:27 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-19 15:41:27 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-19 15:41:27 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-19 15:41:27 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-19 15:41:27 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-19 15:41:27 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-19 15:41:27 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-19 15:41:27 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-19 15:41:27 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 15:41:27 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:41:27 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-19 15:41:27 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 15:41:27 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-19 15:41:27 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-19 15:41:27 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-19 15:41:27 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-19 15:41:27 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-19 15:41:27 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:41:27 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-19 15:41:27 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:41:27 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-19 15:41:27 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-19 15:41:27 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-19 15:41:27 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-19 15:41:27 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 15:41:27 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 15:41:27 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:41:27 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-19 15:41:27 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:41:27 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-19 15:41:27 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:41:27 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-19 15:41:27 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-19 15:41:27 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-19 15:41:28 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-19 15:41:28 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-19 15:41:28 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-19 15:41:29 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:41:29 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7e22550a: startup date [Tue Mar 19 15:41:06 CST 2019]; root of context hierarchy
2019-03-19 15:41:29 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:41:29 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:41:29 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:41:29 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-19 15:41:29 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-19 15:41:32 -Registering beans for JMX exposure on startup
2019-03-19 15:41:32 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-19 15:41:32 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-19 15:41:32 -Starting beans in phase 2147483647
2019-03-19 15:41:32 -Context refreshed
2019-03-19 15:41:33 -Found 1 custom documentation plugin(s)
2019-03-19 15:41:33 -Scanning for api listing references
2019-03-19 15:41:33 -Generating unique operation named: removeUsingPOST_1
2019-03-19 15:41:33 -Generating unique operation named: addUsingGET_1
2019-03-19 15:41:33 -Generating unique operation named: editUsingGET_1
2019-03-19 15:41:33 -Generating unique operation named: listUsingGET_1
2019-03-19 15:41:34 -Generating unique operation named: removeUsingPOST_2
2019-03-19 15:41:34 -Generating unique operation named: removeUsingPOST_3
2019-03-19 15:41:34 -Generating unique operation named: saveUsingPOST_1
2019-03-19 15:41:34 -Generating unique operation named: updateUsingGET_1
2019-03-19 15:41:34 -Generating unique operation named: updateUsingHEAD_1
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPOST_1
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPUT_1
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPATCH_1
2019-03-19 15:41:34 -Generating unique operation named: updateUsingDELETE_1
2019-03-19 15:41:34 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-19 15:41:34 -Generating unique operation named: updateUsingTRACE_1
2019-03-19 15:41:34 -Generating unique operation named: addUsingGET_2
2019-03-19 15:41:34 -Generating unique operation named: editUsingGET_2
2019-03-19 15:41:34 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-19 15:41:34 -Generating unique operation named: listUsingGET_2
2019-03-19 15:41:34 -Generating unique operation named: removeUsingPOST_4
2019-03-19 15:41:34 -Generating unique operation named: removeUsingPOST_5
2019-03-19 15:41:34 -Generating unique operation named: saveUsingPOST_2
2019-03-19 15:41:34 -Generating unique operation named: updateUsingGET_2
2019-03-19 15:41:34 -Generating unique operation named: updateUsingHEAD_2
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPOST_2
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPUT_2
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPATCH_2
2019-03-19 15:41:34 -Generating unique operation named: updateUsingDELETE_2
2019-03-19 15:41:34 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-19 15:41:34 -Generating unique operation named: updateUsingTRACE_2
2019-03-19 15:41:34 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-19 15:41:34 -Generating unique operation named: addUsingGET_3
2019-03-19 15:41:34 -Generating unique operation named: editUsingGET_3
2019-03-19 15:41:34 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-19 15:41:34 -Generating unique operation named: listUsingGET_3
2019-03-19 15:41:34 -Generating unique operation named: removeUsingPOST_6
2019-03-19 15:41:34 -Generating unique operation named: removeUsingPOST_7
2019-03-19 15:41:34 -Generating unique operation named: saveUsingPOST_3
2019-03-19 15:41:34 -Generating unique operation named: updateUsingGET_3
2019-03-19 15:41:34 -Generating unique operation named: updateUsingHEAD_3
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPOST_3
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPUT_3
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPATCH_3
2019-03-19 15:41:34 -Generating unique operation named: updateUsingDELETE_3
2019-03-19 15:41:34 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-19 15:41:34 -Generating unique operation named: updateUsingTRACE_3
2019-03-19 15:41:34 -Generating unique operation named: addUsingGET_4
2019-03-19 15:41:34 -Generating unique operation named: editUsingGET_4
2019-03-19 15:41:34 -Generating unique operation named: listUsingGET_4
2019-03-19 15:41:34 -Generating unique operation named: removeUsingPOST_8
2019-03-19 15:41:34 -Generating unique operation named: removeUsingPOST_9
2019-03-19 15:41:34 -Generating unique operation named: saveUsingPOST_4
2019-03-19 15:41:34 -Generating unique operation named: updateUsingGET_4
2019-03-19 15:41:34 -Generating unique operation named: updateUsingHEAD_4
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPOST_4
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPUT_4
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPATCH_4
2019-03-19 15:41:34 -Generating unique operation named: updateUsingDELETE_4
2019-03-19 15:41:34 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-19 15:41:34 -Generating unique operation named: updateUsingTRACE_4
2019-03-19 15:41:34 -Generating unique operation named: ElecUsingGET_1
2019-03-19 15:41:34 -Generating unique operation named: addUsingGET_5
2019-03-19 15:41:34 -Generating unique operation named: editUsingGET_5
2019-03-19 15:41:34 -Generating unique operation named: listUsingGET_5
2019-03-19 15:41:34 -Generating unique operation named: removeUsingPOST_10
2019-03-19 15:41:34 -Generating unique operation named: removeUsingPOST_11
2019-03-19 15:41:34 -Generating unique operation named: saveUsingPOST_5
2019-03-19 15:41:34 -Generating unique operation named: updateUsingGET_5
2019-03-19 15:41:34 -Generating unique operation named: updateUsingHEAD_5
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPOST_5
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPUT_5
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPATCH_5
2019-03-19 15:41:34 -Generating unique operation named: updateUsingDELETE_5
2019-03-19 15:41:34 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-19 15:41:34 -Generating unique operation named: updateUsingTRACE_5
2019-03-19 15:41:34 -Generating unique operation named: editUsingGET_6
2019-03-19 15:41:34 -Generating unique operation named: listUsingGET_6
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPOST_6
2019-03-19 15:41:34 -Generating unique operation named: addUsingGET_6
2019-03-19 15:41:34 -Generating unique operation named: editUsingGET_7
2019-03-19 15:41:34 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-19 15:41:34 -Generating unique operation named: listUsingGET_7
2019-03-19 15:41:34 -Generating unique operation named: removeUsingPOST_12
2019-03-19 15:41:34 -Generating unique operation named: removeUsingPOST_13
2019-03-19 15:41:34 -Generating unique operation named: saveUsingPOST_6
2019-03-19 15:41:34 -Generating unique operation named: updateUsingGET_6
2019-03-19 15:41:34 -Generating unique operation named: updateUsingHEAD_6
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPOST_7
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPUT_6
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPATCH_6
2019-03-19 15:41:34 -Generating unique operation named: updateUsingDELETE_6
2019-03-19 15:41:34 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-19 15:41:34 -Generating unique operation named: updateUsingTRACE_6
2019-03-19 15:41:34 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-19 15:41:34 -Generating unique operation named: addUsingGET_7
2019-03-19 15:41:34 -Generating unique operation named: editUsingGET_8
2019-03-19 15:41:34 -Generating unique operation named: listUsingGET_8
2019-03-19 15:41:34 -Generating unique operation named: removeUsingPOST_14
2019-03-19 15:41:34 -Generating unique operation named: removeUsingPOST_15
2019-03-19 15:41:34 -Generating unique operation named: saveUsingPOST_7
2019-03-19 15:41:34 -Generating unique operation named: updateUsingGET_7
2019-03-19 15:41:34 -Generating unique operation named: updateUsingHEAD_7
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPOST_8
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPUT_7
2019-03-19 15:41:34 -Generating unique operation named: updateUsingPATCH_7
2019-03-19 15:41:34 -Generating unique operation named: updateUsingDELETE_7
2019-03-19 15:41:35 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-19 15:41:35 -Generating unique operation named: updateUsingTRACE_7
2019-03-19 15:41:35 -Generating unique operation named: addUsingGET_8
2019-03-19 15:41:35 -Generating unique operation named: editUsingGET_9
2019-03-19 15:41:35 -Generating unique operation named: listUsingGET_9
2019-03-19 15:41:35 -Generating unique operation named: removeUsingPOST_16
2019-03-19 15:41:35 -Generating unique operation named: removeUsingPOST_17
2019-03-19 15:41:35 -Generating unique operation named: saveUsingPOST_8
2019-03-19 15:41:35 -Generating unique operation named: updateUsingGET_8
2019-03-19 15:41:35 -Generating unique operation named: updateUsingHEAD_8
2019-03-19 15:41:35 -Generating unique operation named: updateUsingPOST_9
2019-03-19 15:41:35 -Generating unique operation named: updateUsingPUT_8
2019-03-19 15:41:35 -Generating unique operation named: updateUsingPATCH_8
2019-03-19 15:41:35 -Generating unique operation named: updateUsingDELETE_8
2019-03-19 15:41:35 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-19 15:41:35 -Generating unique operation named: updateUsingTRACE_8
2019-03-19 15:41:35 -Generating unique operation named: addUsingGET_9
2019-03-19 15:41:35 -Generating unique operation named: editUsingGET_10
2019-03-19 15:41:35 -Generating unique operation named: infoUsingGET_1
2019-03-19 15:41:35 -Generating unique operation named: infoUsingHEAD_1
2019-03-19 15:41:35 -Generating unique operation named: infoUsingPOST_1
2019-03-19 15:41:35 -Generating unique operation named: infoUsingPUT_1
2019-03-19 15:41:35 -Generating unique operation named: infoUsingPATCH_1
2019-03-19 15:41:35 -Generating unique operation named: infoUsingDELETE_1
2019-03-19 15:41:35 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-19 15:41:35 -Generating unique operation named: infoUsingTRACE_1
2019-03-19 15:41:35 -Generating unique operation named: listUsingGET_10
2019-03-19 15:41:35 -Generating unique operation named: removeUsingPOST_18
2019-03-19 15:41:35 -Generating unique operation named: removeUsingPOST_19
2019-03-19 15:41:35 -Generating unique operation named: saveUsingPOST_9
2019-03-19 15:41:35 -Generating unique operation named: updateUsingPOST_10
2019-03-19 15:41:35 -Generating unique operation named: listUsingGET_11
2019-03-19 15:41:35 -Generating unique operation named: removeUsingPOST_20
2019-03-19 15:41:35 -Generating unique operation named: welcomeUsingGET_1
2019-03-19 15:41:35 -Generating unique operation named: addUsingGET_10
2019-03-19 15:41:35 -Generating unique operation named: editUsingGET_11
2019-03-19 15:41:35 -Generating unique operation named: listUsingGET_12
2019-03-19 15:41:35 -Generating unique operation named: removeUsingPOST_21
2019-03-19 15:41:35 -Generating unique operation named: saveUsingPOST_10
2019-03-19 15:41:35 -Generating unique operation named: treeUsingGET_1
2019-03-19 15:41:35 -Generating unique operation named: treeUsingGET_2
2019-03-19 15:41:35 -Generating unique operation named: updateUsingPOST_11
2019-03-19 15:41:35 -Generating unique operation named: addUsingGET_11
2019-03-19 15:41:35 -Generating unique operation named: editUsingGET_12
2019-03-19 15:41:35 -Generating unique operation named: listUsingGET_13
2019-03-19 15:41:35 -Generating unique operation named: removeUsingPOST_22
2019-03-19 15:41:35 -Generating unique operation named: removeUsingPOST_23
2019-03-19 15:41:35 -Generating unique operation named: saveUsingPOST_11
2019-03-19 15:41:35 -Generating unique operation named: updateUsingGET_9
2019-03-19 15:41:35 -Generating unique operation named: updateUsingHEAD_9
2019-03-19 15:41:35 -Generating unique operation named: updateUsingPOST_12
2019-03-19 15:41:35 -Generating unique operation named: updateUsingPUT_9
2019-03-19 15:41:35 -Generating unique operation named: updateUsingPATCH_9
2019-03-19 15:41:35 -Generating unique operation named: updateUsingDELETE_9
2019-03-19 15:41:35 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-19 15:41:35 -Generating unique operation named: updateUsingTRACE_9
2019-03-19 15:41:35 -Generating unique operation named: addUsingGET_12
2019-03-19 15:41:35 -Generating unique operation named: editUsingGET_13
2019-03-19 15:41:35 -Generating unique operation named: listUsingGET_14
2019-03-19 15:41:35 -Generating unique operation named: removeUsingPOST_24
2019-03-19 15:41:35 -Generating unique operation named: removeUsingPOST_25
2019-03-19 15:41:35 -Generating unique operation named: saveUsingPOST_12
2019-03-19 15:41:35 -Generating unique operation named: updateUsingGET_10
2019-03-19 15:41:35 -Generating unique operation named: updateUsingHEAD_10
2019-03-19 15:41:35 -Generating unique operation named: updateUsingPOST_13
2019-03-19 15:41:35 -Generating unique operation named: updateUsingPUT_10
2019-03-19 15:41:35 -Generating unique operation named: updateUsingPATCH_10
2019-03-19 15:41:35 -Generating unique operation named: updateUsingDELETE_10
2019-03-19 15:41:35 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-19 15:41:35 -Generating unique operation named: updateUsingTRACE_10
2019-03-19 15:41:35 -Generating unique operation named: addUsingGET_13
2019-03-19 15:41:35 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-19 15:41:35 -Generating unique operation named: editUsingGET_14
2019-03-19 15:41:35 -Generating unique operation named: listUsingGET_15
2019-03-19 15:41:35 -Generating unique operation named: saveUsingPOST_13
2019-03-19 15:41:35 -Generating unique operation named: saveUsingPOST_14
2019-03-19 15:41:35 -Generating unique operation named: updateUsingPOST_14
2019-03-19 15:41:35 -Generating unique operation named: listUsingGET_16
2019-03-19 15:41:35 -Generating unique operation named: listUsingHEAD_1
2019-03-19 15:41:35 -Generating unique operation named: listUsingPOST_1
2019-03-19 15:41:35 -Generating unique operation named: listUsingPUT_1
2019-03-19 15:41:35 -Generating unique operation named: listUsingPATCH_1
2019-03-19 15:41:35 -Generating unique operation named: listUsingDELETE_1
2019-03-19 15:41:35 -Generating unique operation named: listUsingOPTIONS_1
2019-03-19 15:41:35 -Generating unique operation named: listUsingTRACE_1
2019-03-19 15:41:36 -Generating unique operation named: addUsingGET_14
2019-03-19 15:41:36 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-19 15:41:36 -Generating unique operation named: editUsingGET_15
2019-03-19 15:41:36 -Generating unique operation named: listUsingGET_17
2019-03-19 15:41:36 -Generating unique operation named: removeUsingPOST_26
2019-03-19 15:41:36 -Generating unique operation named: saveUsingPOST_15
2019-03-19 15:41:36 -Generating unique operation named: treeUsingGET_3
2019-03-19 15:41:36 -Generating unique operation named: treeViewUsingGET_1
2019-03-19 15:41:36 -Generating unique operation named: updateUsingPOST_15
2019-03-19 15:41:36 -Generating unique operation named: addUsingGET_15
2019-03-19 15:41:36 -Generating unique operation named: editUsingGET_16
2019-03-19 15:41:36 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-19 15:41:36 -Generating unique operation named: listUsingGET_18
2019-03-19 15:41:36 -Generating unique operation named: removeUsingPOST_27
2019-03-19 15:41:36 -Generating unique operation named: removeUsingPOST_28
2019-03-19 15:41:36 -Generating unique operation named: saveUsingPOST_16
2019-03-19 15:41:36 -Generating unique operation named: updateUsingGET_11
2019-03-19 15:41:36 -Generating unique operation named: updateUsingHEAD_11
2019-03-19 15:41:36 -Generating unique operation named: updateUsingPOST_16
2019-03-19 15:41:36 -Generating unique operation named: updateUsingPUT_11
2019-03-19 15:41:36 -Generating unique operation named: updateUsingPATCH_11
2019-03-19 15:41:36 -Generating unique operation named: updateUsingDELETE_11
2019-03-19 15:41:36 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-19 15:41:36 -Generating unique operation named: updateUsingTRACE_11
2019-03-19 15:41:36 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-19 15:41:36 -Generating unique operation named: addUsingGET_16
2019-03-19 15:41:36 -Generating unique operation named: editUsingGET_17
2019-03-19 15:41:36 -Generating unique operation named: listUsingGET_19
2019-03-19 15:41:36 -Generating unique operation named: removeUsingPOST_29
2019-03-19 15:41:36 -Generating unique operation named: removeUsingPOST_30
2019-03-19 15:41:36 -Generating unique operation named: saveUsingPOST_17
2019-03-19 15:41:36 -Generating unique operation named: updateUsingGET_12
2019-03-19 15:41:36 -Generating unique operation named: updateUsingHEAD_12
2019-03-19 15:41:36 -Generating unique operation named: updateUsingPOST_17
2019-03-19 15:41:36 -Generating unique operation named: updateUsingPUT_12
2019-03-19 15:41:36 -Generating unique operation named: updateUsingPATCH_12
2019-03-19 15:41:36 -Generating unique operation named: updateUsingDELETE_12
2019-03-19 15:41:36 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-19 15:41:36 -Generating unique operation named: updateUsingTRACE_12
2019-03-19 15:41:36 -Generating unique operation named: addUsingGET_17
2019-03-19 15:41:36 -Generating unique operation named: editUsingGET_18
2019-03-19 15:41:36 -Generating unique operation named: listUsingGET_20
2019-03-19 15:41:36 -Generating unique operation named: removeUsingPOST_31
2019-03-19 15:41:36 -Generating unique operation named: removeUsingPOST_32
2019-03-19 15:41:36 -Generating unique operation named: saveUsingPOST_18
2019-03-19 15:41:36 -Generating unique operation named: updateUsingGET_13
2019-03-19 15:41:36 -Generating unique operation named: updateUsingHEAD_13
2019-03-19 15:41:36 -Generating unique operation named: updateUsingPOST_18
2019-03-19 15:41:36 -Generating unique operation named: updateUsingPUT_13
2019-03-19 15:41:36 -Generating unique operation named: updateUsingPATCH_13
2019-03-19 15:41:36 -Generating unique operation named: updateUsingDELETE_13
2019-03-19 15:41:36 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-19 15:41:36 -Generating unique operation named: updateUsingTRACE_13
2019-03-19 15:41:36 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-19 15:41:36 -Starting Quartz Scheduler now
2019-03-19 15:41:36 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-19 15:41:36 -Starting...
2019-03-19 15:41:36 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 15:41:36 -Started.
2019-03-19 15:41:36 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-19 15:41:36 -Using a shared selector for servlet write/read
2019-03-19 15:41:36 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-19 15:41:36 -Started BootdoApplication in 32.995 seconds (JVM running for 35.219)
2019-03-19 15:41:37 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-19 15:41:37 -==> Parameters: 
2019-03-19 15:41:37 -<==      Total: 1
2019-03-19 15:42:28 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-19 15:44:01 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-19 15:44:01 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-19 15:44:01 -FrameworkServlet 'dispatcherServlet': initialization completed in 133 ms
2019-03-19 15:44:01 -Enabling session validation scheduler...
2019-03-19 15:44:01 -请求地址 : http://localhost:8081/login;JSESSIONID=686439a8-2fa3-4d0c-8be0-b6436d55358b
2019-03-19 15:44:01 -HTTP METHOD : GET
2019-03-19 15:44:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 15:44:01 -参数 : [{}]
2019-03-19 15:44:01 -耗时 : 2
2019-03-19 15:44:01 -返回值 : login
2019-03-19 15:44:03 -请求地址 : http://localhost:8081/getVerify
2019-03-19 15:44:03 -HTTP METHOD : GET
2019-03-19 15:44:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 15:44:03 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3b72e35, org.apache.shiro.web.servlet.ShiroHttpServletResponse@18934178]
2019-03-19 15:44:09 -请求地址 : http://localhost:8081/login
2019-03-19 15:44:09 -HTTP METHOD : POST
2019-03-19 15:44:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 15:44:09 -参数 : [admin, 111111, , org.apache.shiro.web.servlet.ShiroHttpServletRequest@7fd47ccb]
2019-03-19 15:44:09 -耗时 : 17
2019-03-19 15:44:09 -返回值 : {msg=请输入验证码, code=500}
2019-03-19 15:44:10 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-19 15:44:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 15:44:10 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 17(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 15:44:10.694(Timestamp)
2019-03-19 15:44:11 -<==    Updates: 1
2019-03-19 15:44:13 -请求地址 : http://localhost:8081/login
2019-03-19 15:44:13 -HTTP METHOD : POST
2019-03-19 15:44:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 15:44:13 -参数 : [admin, 111111, , org.apache.shiro.web.servlet.ShiroHttpServletRequest@3bac61fd]
2019-03-19 15:44:13 -耗时 : 0
2019-03-19 15:44:13 -返回值 : {msg=请输入验证码, code=500}
2019-03-19 15:44:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 15:44:13 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 1(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 15:44:13.857(Timestamp)
2019-03-19 15:44:13 -<==    Updates: 1
2019-03-19 15:44:14 -7630
2019-03-19 15:44:16 -耗时 : 12911
2019-03-19 15:44:16 -返回值 : null
2019-03-19 15:44:16 -请求地址 : http://localhost:8081/login
2019-03-19 15:44:16 -HTTP METHOD : GET
2019-03-19 15:44:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 15:44:16 -参数 : [{}]
2019-03-19 15:44:16 -耗时 : 0
2019-03-19 15:44:16 -返回值 : login
2019-03-19 15:44:20 -请求地址 : http://localhost:8081/login
2019-03-19 15:44:20 -HTTP METHOD : POST
2019-03-19 15:44:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 15:44:20 -参数 : [admin, 111111, 7630, org.apache.shiro.web.servlet.ShiroHttpServletRequest@30531e56]
2019-03-19 15:44:20 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 15:44:20 -==> Parameters: admin(String)
2019-03-19 15:44:20 -<==      Total: 1
2019-03-19 15:44:20 -耗时 : 130
2019-03-19 15:44:20 -返回值 : {msg=操作成功, code=0}
2019-03-19 15:44:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 15:44:20 -==> Parameters: 1(Long), admin(String), 登录(String), 131(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 15:44:20.856(Timestamp)
2019-03-19 15:44:20 -请求地址 : http://localhost:8081/index
2019-03-19 15:44:20 -HTTP METHOD : GET
2019-03-19 15:44:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 15:44:20 -参数 : [{}]
2019-03-19 15:44:21 -<==    Updates: 1
2019-03-19 15:44:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 15:44:21 -==> Parameters: 1(Long)
2019-03-19 15:44:21 -<==      Total: 46
2019-03-19 15:44:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 15:44:21 -==> Parameters: 138(Long)
2019-03-19 15:44:21 -<==      Total: 1
2019-03-19 15:44:21 -耗时 : 561
2019-03-19 15:44:21 -返回值 : index_v1
2019-03-19 15:44:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 15:44:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 561(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 15:44:21.671(Timestamp)
2019-03-19 15:44:21 -<==    Updates: 1
2019-03-19 15:44:22 -请求地址 : http://localhost:8081/main
2019-03-19 15:44:22 -HTTP METHOD : GET
2019-03-19 15:44:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 15:44:22 -参数 : []
2019-03-19 15:44:22 -耗时 : 1
2019-03-19 15:44:22 -返回值 : main
2019-03-19 15:44:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 15:44:22 -HTTP METHOD : GET
2019-03-19 15:44:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 15:44:22 -参数 : []
2019-03-19 15:44:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 15:44:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 15:44:22 -<==      Total: 0
2019-03-19 15:44:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 15:44:22 -==> Parameters: 1(Long), 0(String)
2019-03-19 15:44:22 -<==      Total: 1
2019-03-19 15:44:22 -耗时 : 69
2019-03-19 15:44:22 -返回值 : com.bootdo.common.utils.PageUtils@254db641
2019-03-19 15:44:22 -请求地址 : http://localhost:8081/main
2019-03-19 15:44:22 -HTTP METHOD : GET
2019-03-19 15:44:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 15:44:22 -参数 : []
2019-03-19 15:44:22 -耗时 : 1
2019-03-19 15:44:22 -返回值 : main
2019-03-19 15:44:28 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.socket.sockjs.SockJsException: Uncaught failure in SockJS request, uri=http://localhost:8081/endpointChat/094/cd_64opk/xhr_streaming; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to open session; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to write SockJsFrame content='o'; nested exception is org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] with root cause
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(Unknown Source)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.write(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.write(Unknown Source)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1276)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1564)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:352)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:90)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:358)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:324)
	at org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession.handleRequestInternal(StreamingSockJsSession.java:64)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.handleInitialRequest(AbstractHttpSockJsSession.java:229)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequestInternal(AbstractHttpSendingTransportHandler.java:76)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequest(AbstractHttpSendingTransportHandler.java:66)
	at org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService.handleTransportRequest(TransportHandlingSockJsService.java:312)
	at org.springframework.web.socket.sockjs.support.AbstractSockJsService.handleRequest(AbstractSockJsService.java:432)
	at org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.handleRequest(SockJsHttpRequestHandler.java:133)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-19 15:44:28 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-19 15:44:35 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 15:44:35 -==> Parameters: 1(Long)
2019-03-19 15:44:35 -<==      Total: 90
2019-03-19 15:44:35 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 15:44:35 -HTTP METHOD : GET
2019-03-19 15:44:35 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 15:44:35 -参数 : []
2019-03-19 15:44:35 -耗时 : 1
2019-03-19 15:44:35 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 15:44:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 15:44:35 -HTTP METHOD : GET
2019-03-19 15:44:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 15:44:35 -参数 : [userType]
2019-03-19 15:44:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 15:44:35 -==> Parameters: userType(String)
2019-03-19 15:44:36 -<==      Total: 2
2019-03-19 15:44:36 -耗时 : 69
2019-03-19 15:44:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 15:44:36 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 15:44:36 -HTTP METHOD : GET
2019-03-19 15:44:36 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 15:44:36 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 15:44:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 15:44:36 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 15:44:36 -<==      Total: 4
2019-03-19 15:44:36 -==>  Preparing: select count(*) from elec_log 
2019-03-19 15:44:36 -==> Parameters: 
2019-03-19 15:44:36 -<==      Total: 1
2019-03-19 15:44:36 -耗时 : 123
2019-03-19 15:44:36 -返回值 : com.bootdo.common.utils.PageUtils@570a1b40
2019-03-19 15:44:40 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 15:44:40 -HTTP METHOD : GET
2019-03-19 15:44:40 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 15:44:40 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-19, type=A}]
2019-03-19 15:44:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-19 15:44:40 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-19 15:44:40 -<==      Total: 3
2019-03-19 15:44:40 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and elec_date = ? 
2019-03-19 15:44:40 -==> Parameters: A(String), 2019-03-19(String)
2019-03-19 15:44:40 -<==      Total: 1
2019-03-19 15:44:40 -耗时 : 27
2019-03-19 15:44:40 -返回值 : com.bootdo.common.utils.PageUtils@2a47341b
2019-03-19 15:44:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 15:44:40 -HTTP METHOD : GET
2019-03-19 15:44:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 15:44:40 -参数 : []
2019-03-19 15:44:40 -耗时 : 0
2019-03-19 15:44:40 -返回值 : system/dept/deptTree
2019-03-19 15:44:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 15:44:41 -HTTP METHOD : GET
2019-03-19 15:44:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 15:44:41 -参数 : []
2019-03-19 15:44:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 15:44:41 -==> Parameters: 
2019-03-19 15:44:41 -<==      Total: 3
2019-03-19 15:44:41 -耗时 : 20
2019-03-19 15:44:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 15:44:43 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-19 15:44:43 -HTTP METHOD : GET
2019-03-19 15:44:43 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotExcel
2019-03-19 15:44:43 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@4895ee68, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3a201d10, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2cdd4ae0]
2019-03-19 15:44:43 -耗时 : 54
2019-03-19 15:44:43 -返回值 : null
2019-03-19 15:58:00 -Starting BootdoApplication on ZJZL-20180906VX with PID 7696 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-19 15:58:00 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-19 15:58:00 -The following profiles are active: dev
2019-03-19 15:58:01 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e8f7922: startup date [Tue Mar 19 15:58:01 CST 2019]; root of context hierarchy
2019-03-19 15:58:05 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-19 15:58:08 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$eca88cb7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:58:08 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$df01bb5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:58:09 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:58:10 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:58:10 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:58:10 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-19 15:58:10 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-19 15:58:10 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:58:10 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:58:10 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:58:10 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-19 15:58:11 -Tomcat initialized with port(s): 8081 (http)
2019-03-19 15:58:12 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-19 15:58:12 -Starting service [Tomcat]
2019-03-19 15:58:12 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-19 15:58:12 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-19 15:58:12 -Initializing Spring embedded WebApplicationContext
2019-03-19 15:58:12 -Root WebApplicationContext: initialization completed in 11517 ms
2019-03-19 15:58:13 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-19 15:58:13 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-19 15:58:13 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-19 15:58:13 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-19 15:58:13 -Filter xssFilter was not registered (disabled)
2019-03-19 15:58:13 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-19 15:58:13 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-19 15:58:13 -Servlet statViewServlet mapped to [/druid/*]
2019-03-19 15:58:13 -Servlet dispatcherServlet mapped to [/]
2019-03-19 15:58:17 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e8f7922: startup date [Tue Mar 19 15:58:01 CST 2019]; root of context hierarchy
2019-03-19 15:58:17 -Using default implementation for ThreadExecutor
2019-03-19 15:58:17 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-19 15:58:17 -Quartz Scheduler v.2.2.1 created.
2019-03-19 15:58:18 -RAMJobStore initialized.
2019-03-19 15:58:18 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-19 15:58:18 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-19 15:58:18 -Quartz scheduler version: 2.2.1
2019-03-19 15:58:18 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@13047d3d
2019-03-19 15:58:18 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-19 15:58:18 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-19 15:58:22 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-19 15:58:22 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.getCountD(org.springframework.ui.Model,com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-03-19 15:58:22 -Mapped "{[/charts/countDD/exportCountDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:58:22 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-19 15:58:22 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-19 15:58:22 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-19 15:58:22 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-19 15:58:22 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-19 15:58:22 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-19 15:58:22 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-19 15:58:22 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:22 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-19 15:58:22 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-19 15:58:22 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-19 15:58:22 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-19 15:58:22 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-19 15:58:22 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-19 15:58:22 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-19 15:58:22 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-19 15:58:22 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-19 15:58:22 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:22 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-19 15:58:22 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-19 15:58:22 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:22 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-19 15:58:22 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 15:58:22 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-19 15:58:22 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-19 15:58:22 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-19 15:58:22 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-19 15:58:22 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-19 15:58:22 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:22 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-19 15:58:22 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-19 15:58:22 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-19 15:58:22 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-19 15:58:22 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:22 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-19 15:58:22 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-03-19 15:58:22 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-19 15:58:22 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:58:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:58:22 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-19 15:58:22 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-19 15:58:22 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-19 15:58:22 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-19 15:58:22 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-19 15:58:22 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:58:22 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-19 15:58:22 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:58:22 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-19 15:58:22 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo) throws java.lang.Exception
2019-03-19 15:58:22 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-19 15:58:22 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-19 15:58:22 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 15:58:22 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:22 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-19 15:58:22 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-19 15:58:22 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-19 15:58:22 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 15:58:22 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-19 15:58:22 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-19 15:58:22 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-19 15:58:22 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-19 15:58:22 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:22 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-19 15:58:22 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:58:22 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-19 15:58:22 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:58:22 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-19 15:58:22 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-19 15:58:22 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-19 15:58:22 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 15:58:22 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:22 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-19 15:58:22 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-19 15:58:22 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-19 15:58:22 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-19 15:58:22 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-19 15:58:22 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-19 15:58:22 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-19 15:58:22 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-19 15:58:22 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-19 15:58:22 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 15:58:22 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:22 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-19 15:58:22 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotExcel(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-03-19 15:58:22 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-19 15:58:22 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-19 15:58:22 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-19 15:58:22 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 15:58:22 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:22 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-19 15:58:22 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-19 15:58:22 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-19 15:58:22 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-19 15:58:22 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 15:58:22 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:22 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-19 15:58:22 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-19 15:58:22 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-19 15:58:22 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-19 15:58:22 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-19 15:58:22 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:22 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-19 15:58:22 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-19 15:58:22 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-19 15:58:22 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:22 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-19 15:58:22 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-19 15:58:22 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-19 15:58:22 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-19 15:58:22 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:22 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-19 15:58:22 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-19 15:58:22 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-19 15:58:22 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-19 15:58:22 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-19 15:58:22 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-19 15:58:22 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-19 15:58:22 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-19 15:58:22 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-19 15:58:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-19 15:58:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-19 15:58:22 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-19 15:58:22 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:58:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-19 15:58:22 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-19 15:58:22 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:22 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-19 15:58:22 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-19 15:58:22 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:58:22 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-19 15:58:23 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-19 15:58:23 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-19 15:58:23 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-19 15:58:23 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-19 15:58:23 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-19 15:58:23 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-19 15:58:23 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-19 15:58:23 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:23 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-19 15:58:23 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-19 15:58:23 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-19 15:58:23 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-19 15:58:23 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:23 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-19 15:58:23 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-19 15:58:23 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-19 15:58:23 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:23 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-19 15:58:23 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-19 15:58:23 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-19 15:58:23 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-19 15:58:23 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-19 15:58:23 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-19 15:58:23 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-19 15:58:23 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 15:58:23 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:58:23 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-19 15:58:23 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:23 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-19 15:58:23 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-19 15:58:23 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-19 15:58:23 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-19 15:58:23 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-19 15:58:23 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-19 15:58:23 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:23 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-19 15:58:23 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:23 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-19 15:58:23 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:58:23 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:23 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-19 15:58:23 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-19 15:58:23 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-19 15:58:23 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-19 15:58:23 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-19 15:58:23 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 15:58:23 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:23 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-19 15:58:23 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-19 15:58:23 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-19 15:58:23 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-19 15:58:23 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-19 15:58:23 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-19 15:58:23 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-19 15:58:23 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-19 15:58:23 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-19 15:58:23 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-19 15:58:23 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-19 15:58:23 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-19 15:58:24 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:58:24 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e8f7922: startup date [Tue Mar 19 15:58:01 CST 2019]; root of context hierarchy
2019-03-19 15:58:25 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:58:25 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:58:25 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-19 15:58:25 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-19 15:58:25 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-19 15:58:27 -Registering beans for JMX exposure on startup
2019-03-19 15:58:27 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-19 15:58:27 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-19 15:58:27 -Starting beans in phase 2147483647
2019-03-19 15:58:27 -Context refreshed
2019-03-19 15:58:28 -Found 1 custom documentation plugin(s)
2019-03-19 15:58:28 -Scanning for api listing references
2019-03-19 15:58:30 -Generating unique operation named: removeUsingPOST_1
2019-03-19 15:58:30 -Generating unique operation named: addUsingGET_1
2019-03-19 15:58:30 -Generating unique operation named: editUsingGET_1
2019-03-19 15:58:30 -Generating unique operation named: listUsingGET_1
2019-03-19 15:58:30 -Generating unique operation named: removeUsingPOST_2
2019-03-19 15:58:30 -Generating unique operation named: removeUsingPOST_3
2019-03-19 15:58:30 -Generating unique operation named: saveUsingPOST_1
2019-03-19 15:58:30 -Generating unique operation named: updateUsingGET_1
2019-03-19 15:58:30 -Generating unique operation named: updateUsingHEAD_1
2019-03-19 15:58:30 -Generating unique operation named: updateUsingPOST_1
2019-03-19 15:58:30 -Generating unique operation named: updateUsingPUT_1
2019-03-19 15:58:30 -Generating unique operation named: updateUsingPATCH_1
2019-03-19 15:58:30 -Generating unique operation named: updateUsingDELETE_1
2019-03-19 15:58:30 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-19 15:58:30 -Generating unique operation named: updateUsingTRACE_1
2019-03-19 15:58:30 -Generating unique operation named: addUsingGET_2
2019-03-19 15:58:30 -Generating unique operation named: editUsingGET_2
2019-03-19 15:58:30 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-19 15:58:30 -Generating unique operation named: listUsingGET_2
2019-03-19 15:58:30 -Generating unique operation named: removeUsingPOST_4
2019-03-19 15:58:30 -Generating unique operation named: removeUsingPOST_5
2019-03-19 15:58:30 -Generating unique operation named: saveUsingPOST_2
2019-03-19 15:58:30 -Generating unique operation named: updateUsingGET_2
2019-03-19 15:58:30 -Generating unique operation named: updateUsingHEAD_2
2019-03-19 15:58:30 -Generating unique operation named: updateUsingPOST_2
2019-03-19 15:58:30 -Generating unique operation named: updateUsingPUT_2
2019-03-19 15:58:30 -Generating unique operation named: updateUsingPATCH_2
2019-03-19 15:58:30 -Generating unique operation named: updateUsingDELETE_2
2019-03-19 15:58:30 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-19 15:58:30 -Generating unique operation named: updateUsingTRACE_2
2019-03-19 15:58:30 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-19 15:58:30 -Generating unique operation named: addUsingGET_3
2019-03-19 15:58:30 -Generating unique operation named: editUsingGET_3
2019-03-19 15:58:30 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-19 15:58:30 -Generating unique operation named: listUsingGET_3
2019-03-19 15:58:30 -Generating unique operation named: removeUsingPOST_6
2019-03-19 15:58:30 -Generating unique operation named: removeUsingPOST_7
2019-03-19 15:58:30 -Generating unique operation named: saveUsingPOST_3
2019-03-19 15:58:30 -Generating unique operation named: updateUsingGET_3
2019-03-19 15:58:30 -Generating unique operation named: updateUsingHEAD_3
2019-03-19 15:58:30 -Generating unique operation named: updateUsingPOST_3
2019-03-19 15:58:30 -Generating unique operation named: updateUsingPUT_3
2019-03-19 15:58:30 -Generating unique operation named: updateUsingPATCH_3
2019-03-19 15:58:30 -Generating unique operation named: updateUsingDELETE_3
2019-03-19 15:58:30 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-19 15:58:30 -Generating unique operation named: updateUsingTRACE_3
2019-03-19 15:58:30 -Generating unique operation named: addUsingGET_4
2019-03-19 15:58:30 -Generating unique operation named: editUsingGET_4
2019-03-19 15:58:30 -Generating unique operation named: listUsingGET_4
2019-03-19 15:58:30 -Generating unique operation named: removeUsingPOST_8
2019-03-19 15:58:30 -Generating unique operation named: removeUsingPOST_9
2019-03-19 15:58:30 -Generating unique operation named: saveUsingPOST_4
2019-03-19 15:58:30 -Generating unique operation named: updateUsingGET_4
2019-03-19 15:58:30 -Generating unique operation named: updateUsingHEAD_4
2019-03-19 15:58:30 -Generating unique operation named: updateUsingPOST_4
2019-03-19 15:58:30 -Generating unique operation named: updateUsingPUT_4
2019-03-19 15:58:30 -Generating unique operation named: updateUsingPATCH_4
2019-03-19 15:58:30 -Generating unique operation named: updateUsingDELETE_4
2019-03-19 15:58:30 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-19 15:58:30 -Generating unique operation named: updateUsingTRACE_4
2019-03-19 15:58:30 -Generating unique operation named: ElecUsingGET_1
2019-03-19 15:58:31 -Generating unique operation named: addUsingGET_5
2019-03-19 15:58:31 -Generating unique operation named: editUsingGET_5
2019-03-19 15:58:31 -Generating unique operation named: listUsingGET_5
2019-03-19 15:58:31 -Generating unique operation named: removeUsingPOST_10
2019-03-19 15:58:31 -Generating unique operation named: removeUsingPOST_11
2019-03-19 15:58:31 -Generating unique operation named: saveUsingPOST_5
2019-03-19 15:58:31 -Generating unique operation named: updateUsingGET_5
2019-03-19 15:58:31 -Generating unique operation named: updateUsingHEAD_5
2019-03-19 15:58:31 -Generating unique operation named: updateUsingPOST_5
2019-03-19 15:58:31 -Generating unique operation named: updateUsingPUT_5
2019-03-19 15:58:31 -Generating unique operation named: updateUsingPATCH_5
2019-03-19 15:58:31 -Generating unique operation named: updateUsingDELETE_5
2019-03-19 15:58:31 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-19 15:58:31 -Generating unique operation named: updateUsingTRACE_5
2019-03-19 15:58:31 -Generating unique operation named: editUsingGET_6
2019-03-19 15:58:31 -Generating unique operation named: listUsingGET_6
2019-03-19 15:58:31 -Generating unique operation named: updateUsingPOST_6
2019-03-19 15:58:31 -Generating unique operation named: addUsingGET_6
2019-03-19 15:58:31 -Generating unique operation named: editUsingGET_7
2019-03-19 15:58:31 -Generating unique operation named: exprotExcelUsingGET_4
2019-03-19 15:58:31 -Generating unique operation named: listUsingGET_7
2019-03-19 15:58:31 -Generating unique operation named: removeUsingPOST_12
2019-03-19 15:58:31 -Generating unique operation named: removeUsingPOST_13
2019-03-19 15:58:31 -Generating unique operation named: saveUsingPOST_6
2019-03-19 15:58:31 -Generating unique operation named: updateUsingGET_6
2019-03-19 15:58:31 -Generating unique operation named: updateUsingHEAD_6
2019-03-19 15:58:31 -Generating unique operation named: updateUsingPOST_7
2019-03-19 15:58:31 -Generating unique operation named: updateUsingPUT_6
2019-03-19 15:58:31 -Generating unique operation named: updateUsingPATCH_6
2019-03-19 15:58:31 -Generating unique operation named: updateUsingDELETE_6
2019-03-19 15:58:31 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-19 15:58:31 -Generating unique operation named: updateUsingTRACE_6
2019-03-19 15:58:31 -Generating unique operation named: exprotExcelUsingGET_5
2019-03-19 15:58:31 -Generating unique operation named: addUsingGET_7
2019-03-19 15:58:31 -Generating unique operation named: editUsingGET_8
2019-03-19 15:58:31 -Generating unique operation named: listUsingGET_8
2019-03-19 15:58:31 -Generating unique operation named: removeUsingPOST_14
2019-03-19 15:58:31 -Generating unique operation named: removeUsingPOST_15
2019-03-19 15:58:31 -Generating unique operation named: saveUsingPOST_7
2019-03-19 15:58:31 -Generating unique operation named: updateUsingGET_7
2019-03-19 15:58:31 -Generating unique operation named: updateUsingHEAD_7
2019-03-19 15:58:31 -Generating unique operation named: updateUsingPOST_8
2019-03-19 15:58:31 -Generating unique operation named: updateUsingPUT_7
2019-03-19 15:58:31 -Generating unique operation named: updateUsingPATCH_7
2019-03-19 15:58:31 -Generating unique operation named: updateUsingDELETE_7
2019-03-19 15:58:31 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-19 15:58:31 -Generating unique operation named: updateUsingTRACE_7
2019-03-19 15:58:31 -Generating unique operation named: addUsingGET_8
2019-03-19 15:58:31 -Generating unique operation named: editUsingGET_9
2019-03-19 15:58:31 -Generating unique operation named: listUsingGET_9
2019-03-19 15:58:31 -Generating unique operation named: removeUsingPOST_16
2019-03-19 15:58:31 -Generating unique operation named: removeUsingPOST_17
2019-03-19 15:58:31 -Generating unique operation named: saveUsingPOST_8
2019-03-19 15:58:31 -Generating unique operation named: updateUsingGET_8
2019-03-19 15:58:31 -Generating unique operation named: updateUsingHEAD_8
2019-03-19 15:58:31 -Generating unique operation named: updateUsingPOST_9
2019-03-19 15:58:31 -Generating unique operation named: updateUsingPUT_8
2019-03-19 15:58:31 -Generating unique operation named: updateUsingPATCH_8
2019-03-19 15:58:31 -Generating unique operation named: updateUsingDELETE_8
2019-03-19 15:58:31 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-19 15:58:31 -Generating unique operation named: updateUsingTRACE_8
2019-03-19 15:58:31 -Generating unique operation named: addUsingGET_9
2019-03-19 15:58:31 -Generating unique operation named: editUsingGET_10
2019-03-19 15:58:31 -Generating unique operation named: infoUsingGET_1
2019-03-19 15:58:31 -Generating unique operation named: infoUsingHEAD_1
2019-03-19 15:58:31 -Generating unique operation named: infoUsingPOST_1
2019-03-19 15:58:31 -Generating unique operation named: infoUsingPUT_1
2019-03-19 15:58:31 -Generating unique operation named: infoUsingPATCH_1
2019-03-19 15:58:31 -Generating unique operation named: infoUsingDELETE_1
2019-03-19 15:58:31 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-19 15:58:31 -Generating unique operation named: infoUsingTRACE_1
2019-03-19 15:58:31 -Generating unique operation named: listUsingGET_10
2019-03-19 15:58:31 -Generating unique operation named: removeUsingPOST_18
2019-03-19 15:58:31 -Generating unique operation named: removeUsingPOST_19
2019-03-19 15:58:31 -Generating unique operation named: saveUsingPOST_9
2019-03-19 15:58:31 -Generating unique operation named: updateUsingPOST_10
2019-03-19 15:58:31 -Generating unique operation named: listUsingGET_11
2019-03-19 15:58:31 -Generating unique operation named: removeUsingPOST_20
2019-03-19 15:58:31 -Generating unique operation named: welcomeUsingGET_1
2019-03-19 15:58:31 -Generating unique operation named: addUsingGET_10
2019-03-19 15:58:31 -Generating unique operation named: editUsingGET_11
2019-03-19 15:58:31 -Generating unique operation named: listUsingGET_12
2019-03-19 15:58:31 -Generating unique operation named: removeUsingPOST_21
2019-03-19 15:58:31 -Generating unique operation named: saveUsingPOST_10
2019-03-19 15:58:31 -Generating unique operation named: treeUsingGET_1
2019-03-19 15:58:31 -Generating unique operation named: treeUsingGET_2
2019-03-19 15:58:32 -Generating unique operation named: updateUsingPOST_11
2019-03-19 15:58:32 -Generating unique operation named: addUsingGET_11
2019-03-19 15:58:32 -Generating unique operation named: editUsingGET_12
2019-03-19 15:58:32 -Generating unique operation named: listUsingGET_13
2019-03-19 15:58:32 -Generating unique operation named: removeUsingPOST_22
2019-03-19 15:58:32 -Generating unique operation named: removeUsingPOST_23
2019-03-19 15:58:32 -Generating unique operation named: saveUsingPOST_11
2019-03-19 15:58:32 -Generating unique operation named: updateUsingGET_9
2019-03-19 15:58:32 -Generating unique operation named: updateUsingHEAD_9
2019-03-19 15:58:32 -Generating unique operation named: updateUsingPOST_12
2019-03-19 15:58:32 -Generating unique operation named: updateUsingPUT_9
2019-03-19 15:58:32 -Generating unique operation named: updateUsingPATCH_9
2019-03-19 15:58:32 -Generating unique operation named: updateUsingDELETE_9
2019-03-19 15:58:32 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-19 15:58:32 -Generating unique operation named: updateUsingTRACE_9
2019-03-19 15:58:32 -Generating unique operation named: addUsingGET_12
2019-03-19 15:58:32 -Generating unique operation named: editUsingGET_13
2019-03-19 15:58:32 -Generating unique operation named: listUsingGET_14
2019-03-19 15:58:32 -Generating unique operation named: removeUsingPOST_24
2019-03-19 15:58:32 -Generating unique operation named: removeUsingPOST_25
2019-03-19 15:58:32 -Generating unique operation named: saveUsingPOST_12
2019-03-19 15:58:32 -Generating unique operation named: updateUsingGET_10
2019-03-19 15:58:32 -Generating unique operation named: updateUsingHEAD_10
2019-03-19 15:58:32 -Generating unique operation named: updateUsingPOST_13
2019-03-19 15:58:32 -Generating unique operation named: updateUsingPUT_10
2019-03-19 15:58:32 -Generating unique operation named: updateUsingPATCH_10
2019-03-19 15:58:32 -Generating unique operation named: updateUsingDELETE_10
2019-03-19 15:58:32 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-19 15:58:32 -Generating unique operation named: updateUsingTRACE_10
2019-03-19 15:58:32 -Generating unique operation named: addUsingGET_13
2019-03-19 15:58:32 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-19 15:58:32 -Generating unique operation named: editUsingGET_14
2019-03-19 15:58:32 -Generating unique operation named: listUsingGET_15
2019-03-19 15:58:32 -Generating unique operation named: saveUsingPOST_13
2019-03-19 15:58:32 -Generating unique operation named: saveUsingPOST_14
2019-03-19 15:58:32 -Generating unique operation named: updateUsingPOST_14
2019-03-19 15:58:32 -Generating unique operation named: listUsingGET_16
2019-03-19 15:58:32 -Generating unique operation named: listUsingHEAD_1
2019-03-19 15:58:32 -Generating unique operation named: listUsingPOST_1
2019-03-19 15:58:32 -Generating unique operation named: listUsingPUT_1
2019-03-19 15:58:32 -Generating unique operation named: listUsingPATCH_1
2019-03-19 15:58:32 -Generating unique operation named: listUsingDELETE_1
2019-03-19 15:58:32 -Generating unique operation named: listUsingOPTIONS_1
2019-03-19 15:58:32 -Generating unique operation named: listUsingTRACE_1
2019-03-19 15:58:32 -Generating unique operation named: addUsingGET_14
2019-03-19 15:58:32 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-19 15:58:32 -Generating unique operation named: editUsingGET_15
2019-03-19 15:58:32 -Generating unique operation named: listUsingGET_17
2019-03-19 15:58:32 -Generating unique operation named: removeUsingPOST_26
2019-03-19 15:58:32 -Generating unique operation named: saveUsingPOST_15
2019-03-19 15:58:32 -Generating unique operation named: treeUsingGET_3
2019-03-19 15:58:32 -Generating unique operation named: treeViewUsingGET_1
2019-03-19 15:58:32 -Generating unique operation named: updateUsingPOST_15
2019-03-19 15:58:32 -Generating unique operation named: addUsingGET_15
2019-03-19 15:58:32 -Generating unique operation named: editUsingGET_16
2019-03-19 15:58:32 -Generating unique operation named: exprotExcelUsingGET_6
2019-03-19 15:58:32 -Generating unique operation named: listUsingGET_18
2019-03-19 15:58:32 -Generating unique operation named: removeUsingPOST_27
2019-03-19 15:58:32 -Generating unique operation named: removeUsingPOST_28
2019-03-19 15:58:32 -Generating unique operation named: saveUsingPOST_16
2019-03-19 15:58:32 -Generating unique operation named: updateUsingGET_11
2019-03-19 15:58:32 -Generating unique operation named: updateUsingHEAD_11
2019-03-19 15:58:32 -Generating unique operation named: updateUsingPOST_16
2019-03-19 15:58:32 -Generating unique operation named: updateUsingPUT_11
2019-03-19 15:58:32 -Generating unique operation named: updateUsingPATCH_11
2019-03-19 15:58:32 -Generating unique operation named: updateUsingDELETE_11
2019-03-19 15:58:32 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-19 15:58:32 -Generating unique operation named: updateUsingTRACE_11
2019-03-19 15:58:32 -Generating unique operation named: exprotExcelUsingGET_7
2019-03-19 15:58:32 -Generating unique operation named: addUsingGET_16
2019-03-19 15:58:32 -Generating unique operation named: editUsingGET_17
2019-03-19 15:58:32 -Generating unique operation named: listUsingGET_19
2019-03-19 15:58:32 -Generating unique operation named: removeUsingPOST_29
2019-03-19 15:58:32 -Generating unique operation named: removeUsingPOST_30
2019-03-19 15:58:32 -Generating unique operation named: saveUsingPOST_17
2019-03-19 15:58:32 -Generating unique operation named: updateUsingGET_12
2019-03-19 15:58:32 -Generating unique operation named: updateUsingHEAD_12
2019-03-19 15:58:32 -Generating unique operation named: updateUsingPOST_17
2019-03-19 15:58:32 -Generating unique operation named: updateUsingPUT_12
2019-03-19 15:58:32 -Generating unique operation named: updateUsingPATCH_12
2019-03-19 15:58:32 -Generating unique operation named: updateUsingDELETE_12
2019-03-19 15:58:32 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-19 15:58:32 -Generating unique operation named: updateUsingTRACE_12
2019-03-19 15:58:32 -Generating unique operation named: addUsingGET_17
2019-03-19 15:58:32 -Generating unique operation named: editUsingGET_18
2019-03-19 15:58:32 -Generating unique operation named: listUsingGET_20
2019-03-19 15:58:32 -Generating unique operation named: removeUsingPOST_31
2019-03-19 15:58:33 -Generating unique operation named: removeUsingPOST_32
2019-03-19 15:58:33 -Generating unique operation named: saveUsingPOST_18
2019-03-19 15:58:33 -Generating unique operation named: updateUsingGET_13
2019-03-19 15:58:33 -Generating unique operation named: updateUsingHEAD_13
2019-03-19 15:58:33 -Generating unique operation named: updateUsingPOST_18
2019-03-19 15:58:33 -Generating unique operation named: updateUsingPUT_13
2019-03-19 15:58:33 -Generating unique operation named: updateUsingPATCH_13
2019-03-19 15:58:33 -Generating unique operation named: updateUsingDELETE_13
2019-03-19 15:58:33 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-19 15:58:33 -Generating unique operation named: updateUsingTRACE_13
2019-03-19 15:58:33 -Generating unique operation named: ArrearsWaterUsingGET_1
2019-03-19 15:58:33 -Starting Quartz Scheduler now
2019-03-19 15:58:33 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-19 15:58:33 -Starting...
2019-03-19 15:58:33 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-19 15:58:33 -Started.
2019-03-19 15:58:33 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-19 15:58:33 -Using a shared selector for servlet write/read
2019-03-19 15:58:33 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-19 15:58:33 -Started BootdoApplication in 34.57 seconds (JVM running for 36.509)
2019-03-19 15:58:33 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-19 15:58:33 -==> Parameters: 
2019-03-19 15:58:33 -<==      Total: 1
2019-03-19 15:58:40 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-19 15:58:40 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-19 15:58:40 -FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2019-03-19 15:58:40 -Enabling session validation scheduler...
2019-03-19 15:58:40 -请求地址 : http://localhost:8081/login;JSESSIONID=65d8d4f3-47b0-4d80-9b3c-2650f41e0672
2019-03-19 15:58:40 -HTTP METHOD : GET
2019-03-19 15:58:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 15:58:40 -参数 : [{}]
2019-03-19 15:58:40 -耗时 : 6
2019-03-19 15:58:40 -返回值 : login
2019-03-19 15:58:42 -请求地址 : http://localhost:8081/getVerify
2019-03-19 15:58:42 -HTTP METHOD : GET
2019-03-19 15:58:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 15:58:42 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@68e83219, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6cd7bbdc]
2019-03-19 15:58:50 -9451
2019-03-19 15:58:51 -耗时 : 8788
2019-03-19 15:58:51 -返回值 : null
2019-03-19 15:58:57 -请求地址 : http://localhost:8081/login
2019-03-19 15:58:57 -HTTP METHOD : POST
2019-03-19 15:58:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 15:58:57 -参数 : [admin, 111111, 9451, org.apache.shiro.web.servlet.ShiroHttpServletRequest@29ca119a]
2019-03-19 15:58:57 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 15:58:57 -==> Parameters: admin(String)
2019-03-19 15:58:57 -<==      Total: 1
2019-03-19 15:58:57 -耗时 : 190
2019-03-19 15:58:57 -返回值 : {msg=操作成功, code=0}
2019-03-19 15:58:57 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-19 15:58:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 15:58:57 -==> Parameters: 1(Long), admin(String), 登录(String), 190(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 15:58:57.531(Timestamp)
2019-03-19 15:58:57 -<==    Updates: 1
2019-03-19 15:58:57 -请求地址 : http://localhost:8081/index
2019-03-19 15:58:57 -HTTP METHOD : GET
2019-03-19 15:58:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 15:58:57 -参数 : [{}]
2019-03-19 15:58:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 15:58:58 -==> Parameters: 1(Long)
2019-03-19 15:58:58 -<==      Total: 46
2019-03-19 15:58:58 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 15:58:58 -==> Parameters: 138(Long)
2019-03-19 15:58:58 -<==      Total: 1
2019-03-19 15:58:58 -耗时 : 440
2019-03-19 15:58:58 -返回值 : index_v1
2019-03-19 15:58:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 15:58:58 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 440(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 15:58:58.422(Timestamp)
2019-03-19 15:58:58 -<==    Updates: 1
2019-03-19 15:58:58 -请求地址 : http://localhost:8081/main
2019-03-19 15:58:58 -HTTP METHOD : GET
2019-03-19 15:58:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 15:58:58 -参数 : []
2019-03-19 15:58:58 -耗时 : 1
2019-03-19 15:58:58 -返回值 : main
2019-03-19 15:58:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 15:58:59 -HTTP METHOD : GET
2019-03-19 15:58:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 15:58:59 -参数 : []
2019-03-19 15:58:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 15:58:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 15:58:59 -<==      Total: 0
2019-03-19 15:58:59 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 15:58:59 -==> Parameters: 1(Long), 0(String)
2019-03-19 15:58:59 -<==      Total: 1
2019-03-19 15:58:59 -耗时 : 75
2019-03-19 15:58:59 -返回值 : com.bootdo.common.utils.PageUtils@72fc0f6
2019-03-19 15:58:59 -请求地址 : http://localhost:8081/main
2019-03-19 15:58:59 -HTTP METHOD : GET
2019-03-19 15:58:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 15:58:59 -参数 : []
2019-03-19 15:58:59 -耗时 : 1
2019-03-19 15:58:59 -返回值 : main
2019-03-19 15:59:04 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 15:59:04 -==> Parameters: 1(Long)
2019-03-19 15:59:04 -<==      Total: 90
2019-03-19 15:59:04 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-19 15:59:04 -HTTP METHOD : GET
2019-03-19 15:59:04 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-19 15:59:04 -参数 : []
2019-03-19 15:59:04 -耗时 : 4
2019-03-19 15:59:04 -返回值 : /moneyLog/elecLog/elecLog
2019-03-19 15:59:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 15:59:05 -HTTP METHOD : GET
2019-03-19 15:59:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 15:59:05 -参数 : [userType]
2019-03-19 15:59:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 15:59:05 -==> Parameters: userType(String)
2019-03-19 15:59:05 -<==      Total: 2
2019-03-19 15:59:05 -耗时 : 35
2019-03-19 15:59:05 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 15:59:05 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 15:59:05 -HTTP METHOD : GET
2019-03-19 15:59:05 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 15:59:05 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, elecDate=}]
2019-03-19 15:59:05 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-19 15:59:05 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 15:59:05 -<==      Total: 4
2019-03-19 15:59:05 -==>  Preparing: select count(*) from elec_log 
2019-03-19 15:59:05 -==> Parameters: 
2019-03-19 15:59:05 -<==      Total: 1
2019-03-19 15:59:05 -耗时 : 287
2019-03-19 15:59:05 -返回值 : com.bootdo.common.utils.PageUtils@6217e812
2019-03-19 15:59:22 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-19 15:59:22 -HTTP METHOD : GET
2019-03-19 15:59:22 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-19 15:59:22 -参数 : [{limit=10, offset=0, userType=A, userOrg=, userId=, elecDate=2019-03-19, type=A}]
2019-03-19 15:59:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log WHERE user_type = ? order by id asc limit ?, ? 
2019-03-19 15:59:22 -==> Parameters: A(String), 0(Integer), 10(Integer)
2019-03-19 15:59:22 -<==      Total: 3
2019-03-19 15:59:22 -==>  Preparing: select count(*) from elec_log WHERE user_type = ? and elec_date = ? 
2019-03-19 15:59:22 -==> Parameters: A(String), 2019-03-19(String)
2019-03-19 15:59:22 -<==      Total: 1
2019-03-19 15:59:22 -耗时 : 36
2019-03-19 15:59:22 -返回值 : com.bootdo.common.utils.PageUtils@2f62915b
2019-03-19 15:59:22 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-19 15:59:22 -HTTP METHOD : GET
2019-03-19 15:59:22 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-19 15:59:22 -参数 : []
2019-03-19 15:59:22 -耗时 : 1
2019-03-19 15:59:22 -返回值 : system/dept/deptTree
2019-03-19 15:59:23 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-19 15:59:23 -HTTP METHOD : GET
2019-03-19 15:59:23 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-19 15:59:23 -参数 : []
2019-03-19 15:59:23 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-19 15:59:23 -==> Parameters: 
2019-03-19 15:59:23 -<==      Total: 3
2019-03-19 15:59:23 -耗时 : 22
2019-03-19 15:59:23 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-19 15:59:23 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-03-19 15:59:25 -请求地址 : http://localhost:8081/moneyLog/elecLog/exprotElecLog
2019-03-19 15:59:25 -HTTP METHOD : GET
2019-03-19 15:59:25 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.exprotExcel
2019-03-19 15:59:25 -参数 : [com.bootdo.moneyLog.vo.ElecLogVo@c5ac20e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@13dffb84, org.apache.shiro.web.servlet.ShiroHttpServletRequest@688b8ee]
2019-03-19 15:59:25 -耗时 : 39
2019-03-19 15:59:25 -返回值 : null
2019-03-19 16:29:23 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 438]
2019-03-19 16:33:41 -请求地址 : http://localhost:8081/login;JSESSIONID=0c0a8565-9686-430f-b517-723c2460ec25
2019-03-19 16:33:41 -HTTP METHOD : GET
2019-03-19 16:33:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 16:33:41 -参数 : [{}]
2019-03-19 16:33:41 -耗时 : 3
2019-03-19 16:33:41 -返回值 : login
2019-03-19 16:33:42 -请求地址 : http://localhost:8081/login;JSESSIONID=0c0a8565-9686-430f-b517-723c2460ec25
2019-03-19 16:33:42 -HTTP METHOD : GET
2019-03-19 16:33:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-19 16:33:42 -参数 : [{}]
2019-03-19 16:33:42 -耗时 : 2
2019-03-19 16:33:42 -返回值 : login
2019-03-19 16:33:42 -请求地址 : http://localhost:8081/getVerify
2019-03-19 16:33:42 -HTTP METHOD : GET
2019-03-19 16:33:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 16:33:42 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@444dcafb, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7d3c0a1e]
2019-03-19 16:33:42 -0097
2019-03-19 16:33:42 -耗时 : 31
2019-03-19 16:33:42 -返回值 : null
2019-03-19 16:33:42 -请求地址 : http://localhost:8081/getVerify
2019-03-19 16:33:42 -HTTP METHOD : GET
2019-03-19 16:33:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 16:33:42 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@49f8798c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4080a42]
2019-03-19 16:33:42 -1060
2019-03-19 16:33:42 -耗时 : 15
2019-03-19 16:33:42 -返回值 : null
2019-03-19 16:33:46 -请求地址 : http://localhost:8081/login
2019-03-19 16:33:46 -HTTP METHOD : POST
2019-03-19 16:33:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 16:33:46 -参数 : [admin, 111111, 1060, org.apache.shiro.web.servlet.ShiroHttpServletRequest@43c31afa]
2019-03-19 16:33:46 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 16:33:46 -==> Parameters: admin(String)
2019-03-19 16:33:46 -<==      Total: 1
2019-03-19 16:33:46 -耗时 : 27
2019-03-19 16:33:46 -返回值 : {msg=操作成功, code=0}
2019-03-19 16:33:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 16:33:46 -==> Parameters: 1(Long), admin(String), 登录(String), 28(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 16:33:46.396(Timestamp)
2019-03-19 16:33:46 -请求地址 : http://localhost:8081/index
2019-03-19 16:33:46 -HTTP METHOD : GET
2019-03-19 16:33:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 16:33:46 -参数 : [{}]
2019-03-19 16:33:46 -<==    Updates: 1
2019-03-19 16:33:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 16:33:46 -==> Parameters: 1(Long)
2019-03-19 16:33:46 -<==      Total: 46
2019-03-19 16:33:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 16:33:46 -==> Parameters: 138(Long)
2019-03-19 16:33:46 -<==      Total: 1
2019-03-19 16:33:46 -耗时 : 230
2019-03-19 16:33:46 -返回值 : index_v1
2019-03-19 16:33:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 16:33:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 231(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 16:33:46.657(Timestamp)
2019-03-19 16:33:46 -<==    Updates: 1
2019-03-19 16:33:46 -请求地址 : http://localhost:8081/main
2019-03-19 16:33:46 -HTTP METHOD : GET
2019-03-19 16:33:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 16:33:46 -参数 : []
2019-03-19 16:33:46 -耗时 : 1
2019-03-19 16:33:46 -返回值 : main
2019-03-19 16:33:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 16:33:46 -HTTP METHOD : GET
2019-03-19 16:33:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 16:33:46 -参数 : []
2019-03-19 16:33:46 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 16:33:46 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 16:33:46 -<==      Total: 0
2019-03-19 16:33:46 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 16:33:46 -==> Parameters: 1(Long), 0(String)
2019-03-19 16:33:46 -<==      Total: 1
2019-03-19 16:33:46 -耗时 : 10
2019-03-19 16:33:46 -返回值 : com.bootdo.common.utils.PageUtils@c976476
2019-03-19 16:33:47 -请求地址 : http://localhost:8081/main
2019-03-19 16:33:47 -HTTP METHOD : GET
2019-03-19 16:33:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 16:33:47 -参数 : []
2019-03-19 16:33:47 -耗时 : 1
2019-03-19 16:33:47 -返回值 : main
2019-03-19 16:33:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 16:33:50 -==> Parameters: 1(Long)
2019-03-19 16:33:50 -<==      Total: 90
2019-03-19 16:33:50 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-03-19 16:33:50 -HTTP METHOD : GET
2019-03-19 16:33:50 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-03-19 16:33:50 -参数 : []
2019-03-19 16:33:50 -耗时 : 2
2019-03-19 16:33:50 -返回值 : heat/heatUpLoad/heatUpLoad
2019-03-19 16:34:28 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-19 16:45:44 -请求地址 : http://localhost:8081/getVerify
2019-03-19 16:45:44 -HTTP METHOD : GET
2019-03-19 16:45:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-19 16:45:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@168936a6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7232558b]
2019-03-19 16:45:44 -3838
2019-03-19 16:45:44 -耗时 : 22
2019-03-19 16:45:44 -返回值 : null
2019-03-19 16:45:46 -请求地址 : http://localhost:8081/login
2019-03-19 16:45:46 -HTTP METHOD : POST
2019-03-19 16:45:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 16:45:46 -参数 : [admin, 111111, 1060, org.apache.shiro.web.servlet.ShiroHttpServletRequest@229a21df]
2019-03-19 16:45:46 -耗时 : 0
2019-03-19 16:45:46 -返回值 : {msg=请输入正确的验证码, code=500}
2019-03-19 16:45:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 16:45:46 -==> Parameters: 1(Long), admin(String), 登录(String), 0(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 16:45:46.892(Timestamp)
2019-03-19 16:45:47 -<==    Updates: 1
2019-03-19 16:45:50 -请求地址 : http://localhost:8081/login
2019-03-19 16:45:50 -HTTP METHOD : POST
2019-03-19 16:45:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 16:45:50 -参数 : [admin, 111111, 1060, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4b7dd8d4]
2019-03-19 16:45:50 -耗时 : 0
2019-03-19 16:45:50 -返回值 : {msg=请输入正确的验证码, code=500}
2019-03-19 16:45:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 16:45:50 -==> Parameters: 1(Long), admin(String), 登录(String), 1(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 16:45:50.931(Timestamp)
2019-03-19 16:45:51 -<==    Updates: 1
2019-03-19 16:46:07 -请求地址 : http://localhost:8081/login
2019-03-19 16:46:07 -HTTP METHOD : POST
2019-03-19 16:46:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-19 16:46:07 -参数 : [admin, 111111, 3838, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1e0e8814]
2019-03-19 16:46:07 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-19 16:46:07 -==> Parameters: admin(String)
2019-03-19 16:46:07 -<==      Total: 1
2019-03-19 16:46:07 -耗时 : 8
2019-03-19 16:46:07 -返回值 : {msg=操作成功, code=0}
2019-03-19 16:46:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 16:46:07 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-19 16:46:07.279(Timestamp)
2019-03-19 16:46:07 -请求地址 : http://localhost:8081/index
2019-03-19 16:46:07 -HTTP METHOD : GET
2019-03-19 16:46:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-19 16:46:07 -参数 : [{}]
2019-03-19 16:46:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-19 16:46:07 -==> Parameters: 1(Long)
2019-03-19 16:46:07 -<==    Updates: 1
2019-03-19 16:46:07 -<==      Total: 46
2019-03-19 16:46:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-19 16:46:07 -==> Parameters: 138(Long)
2019-03-19 16:46:07 -<==      Total: 1
2019-03-19 16:46:07 -耗时 : 314
2019-03-19 16:46:07 -返回值 : index_v1
2019-03-19 16:46:07 -请求地址 : http://localhost:8081/main
2019-03-19 16:46:07 -HTTP METHOD : GET
2019-03-19 16:46:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 16:46:07 -参数 : []
2019-03-19 16:46:07 -耗时 : 1
2019-03-19 16:46:07 -返回值 : main
2019-03-19 16:46:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-19 16:46:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 314(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-19 16:46:07.623(Timestamp)
2019-03-19 16:46:07 -<==    Updates: 1
2019-03-19 16:46:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-19 16:46:07 -HTTP METHOD : GET
2019-03-19 16:46:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-19 16:46:07 -参数 : []
2019-03-19 16:46:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-19 16:46:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-19 16:46:07 -<==      Total: 0
2019-03-19 16:46:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-19 16:46:07 -==> Parameters: 1(Long), 0(String)
2019-03-19 16:46:07 -<==      Total: 1
2019-03-19 16:46:07 -耗时 : 38
2019-03-19 16:46:07 -返回值 : com.bootdo.common.utils.PageUtils@1c52e96f
2019-03-19 16:46:08 -请求地址 : http://localhost:8081/main
2019-03-19 16:46:08 -HTTP METHOD : GET
2019-03-19 16:46:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-19 16:46:08 -参数 : []
2019-03-19 16:46:08 -耗时 : 1
2019-03-19 16:46:08 -返回值 : main
2019-03-19 16:46:14 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-19 16:46:14 -==> Parameters: 1(Long)
2019-03-19 16:46:14 -<==      Total: 90
2019-03-19 16:46:14 -请求地址 : http://localhost:8081/charts/countDD
2019-03-19 16:46:14 -HTTP METHOD : GET
2019-03-19 16:46:14 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-19 16:46:14 -参数 : []
2019-03-19 16:46:14 -耗时 : 2
2019-03-19 16:46:14 -返回值 : charts/countDD
2019-03-19 16:46:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 16:46:14 -HTTP METHOD : GET
2019-03-19 16:46:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 16:46:14 -参数 : [userType]
2019-03-19 16:46:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 16:46:14 -==> Parameters: userType(String)
2019-03-19 16:46:14 -<==      Total: 2
2019-03-19 16:46:14 -耗时 : 10
2019-03-19 16:46:14 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 16:46:30 -请求地址 : http://localhost:8081/print/print
2019-03-19 16:46:30 -HTTP METHOD : GET
2019-03-19 16:46:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-19 16:46:30 -参数 : []
2019-03-19 16:46:30 -耗时 : 2
2019-03-19 16:46:30 -返回值 : print/print/print
2019-03-19 16:46:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-19 16:46:30 -HTTP METHOD : GET
2019-03-19 16:46:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-19 16:46:30 -参数 : [userType]
2019-03-19 16:46:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-19 16:46:30 -==> Parameters: userType(String)
2019-03-19 16:46:30 -<==      Total: 2
2019-03-19 16:46:30 -耗时 : 14
2019-03-19 16:46:30 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-19 16:46:30 -请求地址 : http://localhost:8081/print/print/list
2019-03-19 16:46:30 -HTTP METHOD : GET
2019-03-19 16:46:30 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-19 16:46:30 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-19 16:46:30 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-19 16:46:30 -==> Parameters: 0(Integer), 10(Integer)
2019-03-19 16:46:30 -<==      Total: 3
2019-03-19 16:46:30 -==>  Preparing: select count(*) from print 
2019-03-19 16:46:30 -==> Parameters: 
2019-03-19 16:46:30 -<==      Total: 1
2019-03-19 16:46:30 -耗时 : 209
2019-03-19 16:46:30 -返回值 : com.bootdo.common.utils.PageUtils@159a9e24
2019-03-19 16:46:32 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-03-19 16:46:32 -HTTP METHOD : GET
2019-03-19 16:46:32 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-03-19 16:46:32 -参数 : [1, {}]
2019-03-19 16:46:32 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-19 16:46:32 -==> Parameters: 1(Long)
2019-03-19 16:46:32 -<==      Total: 1
2019-03-19 16:46:32 -耗时 : 8
2019-03-19 16:46:32 -返回值 : print/print/printEdit
2019-03-19 16:48:14 -请求地址 : http://localhost:8081/water/waterInto
2019-03-19 16:48:14 -HTTP METHOD : GET
2019-03-19 16:48:14 -CLASS_METHOD : com.bootdo.water.controller.WaterIntoController.WaterInto
2019-03-19 16:48:14 -参数 : []
2019-03-19 16:48:14 -耗时 : 1
2019-03-19 16:48:14 -返回值 : water/waterInto/waterInto

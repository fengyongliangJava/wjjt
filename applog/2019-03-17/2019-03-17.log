2019-03-17 10:46:03 -Starting BootdoApplication on ZJZL-20180906VX with PID 11156 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-17 10:46:03 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-17 10:46:03 -The following profiles are active: dev
2019-03-17 10:46:04 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5ef0d29e: startup date [Sun Mar 17 10:46:04 CST 2019]; root of context hierarchy
2019-03-17 10:46:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-17 10:46:15 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0eadf73] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:46:15 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a3440e1a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:46:16 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:46:17 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:46:17 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:46:17 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-17 10:46:17 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-17 10:46:17 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:46:17 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:46:17 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:46:17 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:46:19 -Tomcat initialized with port(s): 8081 (http)
2019-03-17 10:46:19 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-17 10:46:19 -Starting service [Tomcat]
2019-03-17 10:46:19 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-17 10:46:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-17 10:46:20 -Initializing Spring embedded WebApplicationContext
2019-03-17 10:46:20 -Root WebApplicationContext: initialization completed in 15546 ms
2019-03-17 10:46:21 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-17 10:46:21 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-17 10:46:21 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-17 10:46:21 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-17 10:46:21 -Filter xssFilter was not registered (disabled)
2019-03-17 10:46:21 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-17 10:46:21 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-17 10:46:21 -Servlet statViewServlet mapped to [/druid/*]
2019-03-17 10:46:21 -Servlet dispatcherServlet mapped to [/]
2019-03-17 10:46:24 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logAspect': Unsatisfied dependency expressed through field 'logService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logServiceImpl': Unsatisfied dependency expressed through field 'logMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\common\dao\LogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
2019-03-17 10:46:24 -Stopping service [Tomcat]
2019-03-17 10:46:24 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-17 10:46:24 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logAspect': Unsatisfied dependency expressed through field 'logService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logServiceImpl': Unsatisfied dependency expressed through field 'logMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\common\dao\LogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:20)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logServiceImpl': Unsatisfied dependency expressed through field 'logMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\common\dao\LogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\common\dao\LogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [com/bootdo/common/config/DruidDBConfig.class]: Invocation of init method failed; nested exception is com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1708)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724)
	... 56 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet sent successfully to the server was 0 milliseconds ago. The driver has not received any packets from the server.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:342)
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188)
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2221)
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2016)
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776)
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)
	at java.lang.reflect.Constructor.newInstance(Unknown Source)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:148)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterEventAdapter.connection_connect(FilterEventAdapter.java:38)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.FilterAdapter.connection_connect(FilterAdapter.java:785)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.filter.stat.StatFilter.connection_connect(StatFilter.java:211)
	at com.alibaba.druid.filter.FilterChainImpl.connection_connect(FilterChainImpl.java:142)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1454)
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1516)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:734)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1833)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1776)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1704)
	... 67 common frames omitted
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.connect0(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:211)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:301)
	... 97 common frames omitted
2019-03-17 10:50:29 -Starting BootdoApplication on ZJZL-20180906VX with PID 228 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-17 10:50:29 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-17 10:50:29 -The following profiles are active: dev
2019-03-17 10:50:29 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@107ed6fc: startup date [Sun Mar 17 10:50:29 CST 2019]; root of context hierarchy
2019-03-17 10:50:33 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-17 10:50:35 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$33285f74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:50:36 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$25818e1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:50:37 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:50:38 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:50:38 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:50:38 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-17 10:50:38 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-17 10:50:38 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:50:38 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:50:38 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:50:38 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 10:50:39 -Tomcat initialized with port(s): 8081 (http)
2019-03-17 10:50:39 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-17 10:50:39 -Starting service [Tomcat]
2019-03-17 10:50:39 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-17 10:50:39 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-17 10:50:39 -Initializing Spring embedded WebApplicationContext
2019-03-17 10:50:39 -Root WebApplicationContext: initialization completed in 10311 ms
2019-03-17 10:50:40 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-17 10:50:40 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-17 10:50:40 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-17 10:50:40 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-17 10:50:40 -Filter xssFilter was not registered (disabled)
2019-03-17 10:50:40 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-17 10:50:40 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-17 10:50:40 -Servlet statViewServlet mapped to [/druid/*]
2019-03-17 10:50:40 -Servlet dispatcherServlet mapped to [/]
2019-03-17 10:50:44 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@107ed6fc: startup date [Sun Mar 17 10:50:29 CST 2019]; root of context hierarchy
2019-03-17 10:50:46 -Using default implementation for ThreadExecutor
2019-03-17 10:50:46 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-17 10:50:46 -Quartz Scheduler v.2.2.1 created.
2019-03-17 10:50:46 -RAMJobStore initialized.
2019-03-17 10:50:46 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-17 10:50:46 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-17 10:50:46 -Quartz scheduler version: 2.2.1
2019-03-17 10:50:46 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@c29b0dc
2019-03-17 10:50:46 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-17 10:50:46 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-17 10:50:50 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-17 10:50:50 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-17 10:50:50 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-17 10:50:50 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-17 10:50:50 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-17 10:50:50 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-17 10:50:50 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-17 10:50:50 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-17 10:50:50 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-17 10:50:50 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-17 10:50:50 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-17 10:50:50 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-17 10:50:50 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-17 10:50:50 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-17 10:50:50 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-17 10:50:50 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-17 10:50:50 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-17 10:50:50 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-17 10:50:50 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 10:50:50 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-17 10:50:50 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 10:50:50 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-17 10:50:50 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-17 10:50:50 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-17 10:50:50 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-17 10:50:50 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-17 10:50:50 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-17 10:50:50 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-17 10:50:50 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 10:50:50 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 10:50:50 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-17 10:50:50 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-17 10:50:50 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-17 10:50:50 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-17 10:50:50 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-17 10:50:50 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-17 10:50:50 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-17 10:50:50 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-17 10:50:50 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-17 10:50:50 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 10:50:50 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 10:50:50 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-17 10:50:50 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-17 10:50:50 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 10:50:50 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-17 10:50:50 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-17 10:50:50 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-17 10:50:50 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-17 10:50:50 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-17 10:50:50 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-17 10:50:50 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-17 10:50:50 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-17 10:50:50 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 10:50:50 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 10:50:50 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-17 10:50:50 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-17 10:50:50 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-17 10:50:50 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 10:50:50 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-17 10:50:50 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-17 10:50:50 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-17 10:50:50 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 10:50:50 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 10:50:50 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-17 10:50:50 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-17 10:50:50 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 10:50:50 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 10:50:50 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-17 10:50:50 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-17 10:50:50 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 10:50:50 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 10:50:50 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-17 10:50:50 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-17 10:50:50 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-17 10:50:50 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-17 10:50:50 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-17 10:50:50 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-17 10:50:50 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-17 10:50:50 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-17 10:50:50 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-17 10:50:50 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-17 10:50:50 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-17 10:50:50 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-17 10:50:50 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-17 10:50:50 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-17 10:50:50 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-17 10:50:50 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-17 10:50:50 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-17 10:50:50 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-17 10:50:50 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-17 10:50:50 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 10:50:50 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 10:50:50 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-17 10:50:50 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-17 10:50:50 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-17 10:50:50 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-17 10:50:50 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-17 10:50:50 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-17 10:50:50 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-17 10:50:50 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-17 10:50:50 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-17 10:50:50 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-17 10:50:50 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-17 10:50:50 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-17 10:50:50 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-17 10:50:50 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-17 10:50:50 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-17 10:50:50 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 10:50:50 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-17 10:50:50 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 10:50:50 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 10:50:50 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-17 10:50:50 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-17 10:50:50 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-17 10:50:50 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-17 10:50:50 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-17 10:50:50 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-17 10:50:50 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-17 10:50:50 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-17 10:50:50 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-17 10:50:50 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-17 10:50:50 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-17 10:50:50 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-17 10:50:50 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-17 10:50:50 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-17 10:50:50 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-17 10:50:50 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 10:50:50 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 10:50:50 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-17 10:50:50 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 10:50:50 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-17 10:50:50 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 10:50:50 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 10:50:50 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-17 10:50:50 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-17 10:50:50 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-17 10:50:51 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-17 10:50:51 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-17 10:50:51 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-17 10:50:52 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 10:50:52 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@107ed6fc: startup date [Sun Mar 17 10:50:29 CST 2019]; root of context hierarchy
2019-03-17 10:50:52 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 10:50:52 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 10:50:52 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 10:50:53 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-17 10:50:53 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-17 10:50:55 -Registering beans for JMX exposure on startup
2019-03-17 10:50:55 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-17 10:50:55 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-17 10:50:55 -Starting beans in phase 2147483647
2019-03-17 10:50:55 -Context refreshed
2019-03-17 10:50:55 -Found 1 custom documentation plugin(s)
2019-03-17 10:50:55 -Scanning for api listing references
2019-03-17 10:50:56 -Generating unique operation named: removeUsingPOST_1
2019-03-17 10:50:56 -Generating unique operation named: addUsingGET_1
2019-03-17 10:50:56 -Generating unique operation named: editUsingGET_1
2019-03-17 10:50:56 -Generating unique operation named: listUsingGET_1
2019-03-17 10:50:56 -Generating unique operation named: removeUsingPOST_2
2019-03-17 10:50:56 -Generating unique operation named: removeUsingPOST_3
2019-03-17 10:50:56 -Generating unique operation named: saveUsingPOST_1
2019-03-17 10:50:56 -Generating unique operation named: updateUsingGET_1
2019-03-17 10:50:56 -Generating unique operation named: updateUsingHEAD_1
2019-03-17 10:50:56 -Generating unique operation named: updateUsingPOST_1
2019-03-17 10:50:56 -Generating unique operation named: updateUsingPUT_1
2019-03-17 10:50:56 -Generating unique operation named: updateUsingPATCH_1
2019-03-17 10:50:56 -Generating unique operation named: updateUsingDELETE_1
2019-03-17 10:50:56 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-17 10:50:56 -Generating unique operation named: updateUsingTRACE_1
2019-03-17 10:50:56 -Generating unique operation named: addUsingGET_2
2019-03-17 10:50:56 -Generating unique operation named: editUsingGET_2
2019-03-17 10:50:56 -Generating unique operation named: listUsingGET_2
2019-03-17 10:50:56 -Generating unique operation named: removeUsingPOST_4
2019-03-17 10:50:56 -Generating unique operation named: removeUsingPOST_5
2019-03-17 10:50:56 -Generating unique operation named: saveUsingPOST_2
2019-03-17 10:50:56 -Generating unique operation named: updateUsingGET_2
2019-03-17 10:50:56 -Generating unique operation named: updateUsingHEAD_2
2019-03-17 10:50:56 -Generating unique operation named: updateUsingPOST_2
2019-03-17 10:50:56 -Generating unique operation named: updateUsingPUT_2
2019-03-17 10:50:56 -Generating unique operation named: updateUsingPATCH_2
2019-03-17 10:50:56 -Generating unique operation named: updateUsingDELETE_2
2019-03-17 10:50:56 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-17 10:50:56 -Generating unique operation named: updateUsingTRACE_2
2019-03-17 10:50:56 -Generating unique operation named: addUsingGET_3
2019-03-17 10:50:56 -Generating unique operation named: editUsingGET_3
2019-03-17 10:50:56 -Generating unique operation named: listUsingGET_3
2019-03-17 10:50:56 -Generating unique operation named: removeUsingPOST_6
2019-03-17 10:50:56 -Generating unique operation named: removeUsingPOST_7
2019-03-17 10:50:56 -Generating unique operation named: saveUsingPOST_3
2019-03-17 10:50:56 -Generating unique operation named: updateUsingGET_3
2019-03-17 10:50:57 -Generating unique operation named: updateUsingHEAD_3
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPOST_3
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPUT_3
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPATCH_3
2019-03-17 10:50:57 -Generating unique operation named: updateUsingDELETE_3
2019-03-17 10:50:57 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-17 10:50:57 -Generating unique operation named: updateUsingTRACE_3
2019-03-17 10:50:57 -Generating unique operation named: addUsingGET_4
2019-03-17 10:50:57 -Generating unique operation named: editUsingGET_4
2019-03-17 10:50:57 -Generating unique operation named: listUsingGET_4
2019-03-17 10:50:57 -Generating unique operation named: removeUsingPOST_8
2019-03-17 10:50:57 -Generating unique operation named: removeUsingPOST_9
2019-03-17 10:50:57 -Generating unique operation named: saveUsingPOST_4
2019-03-17 10:50:57 -Generating unique operation named: updateUsingGET_4
2019-03-17 10:50:57 -Generating unique operation named: updateUsingHEAD_4
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPOST_4
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPUT_4
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPATCH_4
2019-03-17 10:50:57 -Generating unique operation named: updateUsingDELETE_4
2019-03-17 10:50:57 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-17 10:50:57 -Generating unique operation named: updateUsingTRACE_4
2019-03-17 10:50:57 -Generating unique operation named: ElecUsingGET_1
2019-03-17 10:50:57 -Generating unique operation named: addUsingGET_5
2019-03-17 10:50:57 -Generating unique operation named: editUsingGET_5
2019-03-17 10:50:57 -Generating unique operation named: listUsingGET_5
2019-03-17 10:50:57 -Generating unique operation named: removeUsingPOST_10
2019-03-17 10:50:57 -Generating unique operation named: removeUsingPOST_11
2019-03-17 10:50:57 -Generating unique operation named: saveUsingPOST_5
2019-03-17 10:50:57 -Generating unique operation named: updateUsingGET_5
2019-03-17 10:50:57 -Generating unique operation named: updateUsingHEAD_5
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPOST_5
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPUT_5
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPATCH_5
2019-03-17 10:50:57 -Generating unique operation named: updateUsingDELETE_5
2019-03-17 10:50:57 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-17 10:50:57 -Generating unique operation named: updateUsingTRACE_5
2019-03-17 10:50:57 -Generating unique operation named: editUsingGET_6
2019-03-17 10:50:57 -Generating unique operation named: listUsingGET_6
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPOST_6
2019-03-17 10:50:57 -Generating unique operation named: addUsingGET_6
2019-03-17 10:50:57 -Generating unique operation named: editUsingGET_7
2019-03-17 10:50:57 -Generating unique operation named: listUsingGET_7
2019-03-17 10:50:57 -Generating unique operation named: removeUsingPOST_12
2019-03-17 10:50:57 -Generating unique operation named: removeUsingPOST_13
2019-03-17 10:50:57 -Generating unique operation named: saveUsingPOST_6
2019-03-17 10:50:57 -Generating unique operation named: updateUsingGET_6
2019-03-17 10:50:57 -Generating unique operation named: updateUsingHEAD_6
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPOST_7
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPUT_6
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPATCH_6
2019-03-17 10:50:57 -Generating unique operation named: updateUsingDELETE_6
2019-03-17 10:50:57 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-17 10:50:57 -Generating unique operation named: updateUsingTRACE_6
2019-03-17 10:50:57 -Generating unique operation named: addUsingGET_7
2019-03-17 10:50:57 -Generating unique operation named: editUsingGET_8
2019-03-17 10:50:57 -Generating unique operation named: listUsingGET_8
2019-03-17 10:50:57 -Generating unique operation named: removeUsingPOST_14
2019-03-17 10:50:57 -Generating unique operation named: removeUsingPOST_15
2019-03-17 10:50:57 -Generating unique operation named: saveUsingPOST_7
2019-03-17 10:50:57 -Generating unique operation named: updateUsingGET_7
2019-03-17 10:50:57 -Generating unique operation named: updateUsingHEAD_7
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPOST_8
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPUT_7
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPATCH_7
2019-03-17 10:50:57 -Generating unique operation named: updateUsingDELETE_7
2019-03-17 10:50:57 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-17 10:50:57 -Generating unique operation named: updateUsingTRACE_7
2019-03-17 10:50:57 -Generating unique operation named: addUsingGET_8
2019-03-17 10:50:57 -Generating unique operation named: editUsingGET_9
2019-03-17 10:50:57 -Generating unique operation named: listUsingGET_9
2019-03-17 10:50:57 -Generating unique operation named: removeUsingPOST_16
2019-03-17 10:50:57 -Generating unique operation named: removeUsingPOST_17
2019-03-17 10:50:57 -Generating unique operation named: saveUsingPOST_8
2019-03-17 10:50:57 -Generating unique operation named: updateUsingGET_8
2019-03-17 10:50:57 -Generating unique operation named: updateUsingHEAD_8
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPOST_9
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPUT_8
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPATCH_8
2019-03-17 10:50:57 -Generating unique operation named: updateUsingDELETE_8
2019-03-17 10:50:57 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-17 10:50:57 -Generating unique operation named: updateUsingTRACE_8
2019-03-17 10:50:57 -Generating unique operation named: addUsingGET_9
2019-03-17 10:50:57 -Generating unique operation named: editUsingGET_10
2019-03-17 10:50:57 -Generating unique operation named: infoUsingGET_1
2019-03-17 10:50:57 -Generating unique operation named: infoUsingHEAD_1
2019-03-17 10:50:57 -Generating unique operation named: infoUsingPOST_1
2019-03-17 10:50:57 -Generating unique operation named: infoUsingPUT_1
2019-03-17 10:50:57 -Generating unique operation named: infoUsingPATCH_1
2019-03-17 10:50:57 -Generating unique operation named: infoUsingDELETE_1
2019-03-17 10:50:57 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-17 10:50:57 -Generating unique operation named: infoUsingTRACE_1
2019-03-17 10:50:57 -Generating unique operation named: listUsingGET_10
2019-03-17 10:50:57 -Generating unique operation named: removeUsingPOST_18
2019-03-17 10:50:57 -Generating unique operation named: removeUsingPOST_19
2019-03-17 10:50:57 -Generating unique operation named: saveUsingPOST_9
2019-03-17 10:50:57 -Generating unique operation named: updateUsingPOST_10
2019-03-17 10:50:57 -Generating unique operation named: listUsingGET_11
2019-03-17 10:50:57 -Generating unique operation named: removeUsingPOST_20
2019-03-17 10:50:57 -Generating unique operation named: welcomeUsingGET_1
2019-03-17 10:50:57 -Generating unique operation named: addUsingGET_10
2019-03-17 10:50:57 -Generating unique operation named: editUsingGET_11
2019-03-17 10:50:58 -Generating unique operation named: listUsingGET_12
2019-03-17 10:50:58 -Generating unique operation named: removeUsingPOST_21
2019-03-17 10:50:58 -Generating unique operation named: saveUsingPOST_10
2019-03-17 10:50:58 -Generating unique operation named: treeUsingGET_1
2019-03-17 10:50:58 -Generating unique operation named: treeUsingGET_2
2019-03-17 10:50:58 -Generating unique operation named: updateUsingPOST_11
2019-03-17 10:50:58 -Generating unique operation named: addUsingGET_11
2019-03-17 10:50:58 -Generating unique operation named: editUsingGET_12
2019-03-17 10:50:58 -Generating unique operation named: listUsingGET_13
2019-03-17 10:50:58 -Generating unique operation named: removeUsingPOST_22
2019-03-17 10:50:58 -Generating unique operation named: removeUsingPOST_23
2019-03-17 10:50:58 -Generating unique operation named: saveUsingPOST_11
2019-03-17 10:50:58 -Generating unique operation named: updateUsingGET_9
2019-03-17 10:50:58 -Generating unique operation named: updateUsingHEAD_9
2019-03-17 10:50:58 -Generating unique operation named: updateUsingPOST_12
2019-03-17 10:50:58 -Generating unique operation named: updateUsingPUT_9
2019-03-17 10:50:58 -Generating unique operation named: updateUsingPATCH_9
2019-03-17 10:50:58 -Generating unique operation named: updateUsingDELETE_9
2019-03-17 10:50:58 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-17 10:50:58 -Generating unique operation named: updateUsingTRACE_9
2019-03-17 10:50:58 -Generating unique operation named: addUsingGET_12
2019-03-17 10:50:58 -Generating unique operation named: editUsingGET_13
2019-03-17 10:50:58 -Generating unique operation named: listUsingGET_14
2019-03-17 10:50:58 -Generating unique operation named: removeUsingPOST_24
2019-03-17 10:50:58 -Generating unique operation named: removeUsingPOST_25
2019-03-17 10:50:58 -Generating unique operation named: saveUsingPOST_12
2019-03-17 10:50:58 -Generating unique operation named: updateUsingGET_10
2019-03-17 10:50:58 -Generating unique operation named: updateUsingHEAD_10
2019-03-17 10:50:58 -Generating unique operation named: updateUsingPOST_13
2019-03-17 10:50:58 -Generating unique operation named: updateUsingPUT_10
2019-03-17 10:50:58 -Generating unique operation named: updateUsingPATCH_10
2019-03-17 10:50:58 -Generating unique operation named: updateUsingDELETE_10
2019-03-17 10:50:58 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-17 10:50:58 -Generating unique operation named: updateUsingTRACE_10
2019-03-17 10:50:58 -Generating unique operation named: addUsingGET_13
2019-03-17 10:50:58 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-17 10:50:58 -Generating unique operation named: editUsingGET_14
2019-03-17 10:50:58 -Generating unique operation named: listUsingGET_15
2019-03-17 10:50:58 -Generating unique operation named: saveUsingPOST_13
2019-03-17 10:50:58 -Generating unique operation named: saveUsingPOST_14
2019-03-17 10:50:58 -Generating unique operation named: updateUsingPOST_14
2019-03-17 10:50:58 -Generating unique operation named: listUsingGET_16
2019-03-17 10:50:58 -Generating unique operation named: listUsingHEAD_1
2019-03-17 10:50:58 -Generating unique operation named: listUsingPOST_1
2019-03-17 10:50:58 -Generating unique operation named: listUsingPUT_1
2019-03-17 10:50:58 -Generating unique operation named: listUsingPATCH_1
2019-03-17 10:50:58 -Generating unique operation named: listUsingDELETE_1
2019-03-17 10:50:58 -Generating unique operation named: listUsingOPTIONS_1
2019-03-17 10:50:58 -Generating unique operation named: listUsingTRACE_1
2019-03-17 10:50:58 -Generating unique operation named: addUsingGET_14
2019-03-17 10:50:58 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-17 10:50:58 -Generating unique operation named: editUsingGET_15
2019-03-17 10:50:58 -Generating unique operation named: listUsingGET_17
2019-03-17 10:50:58 -Generating unique operation named: removeUsingPOST_26
2019-03-17 10:50:58 -Generating unique operation named: saveUsingPOST_15
2019-03-17 10:50:58 -Generating unique operation named: treeUsingGET_3
2019-03-17 10:50:58 -Generating unique operation named: treeViewUsingGET_1
2019-03-17 10:50:58 -Generating unique operation named: updateUsingPOST_15
2019-03-17 10:50:58 -Generating unique operation named: addUsingGET_15
2019-03-17 10:50:58 -Generating unique operation named: editUsingGET_16
2019-03-17 10:50:58 -Generating unique operation named: listUsingGET_18
2019-03-17 10:50:58 -Generating unique operation named: removeUsingPOST_27
2019-03-17 10:50:58 -Generating unique operation named: removeUsingPOST_28
2019-03-17 10:50:58 -Generating unique operation named: saveUsingPOST_16
2019-03-17 10:50:58 -Generating unique operation named: updateUsingGET_11
2019-03-17 10:50:58 -Generating unique operation named: updateUsingHEAD_11
2019-03-17 10:50:58 -Generating unique operation named: updateUsingPOST_16
2019-03-17 10:50:58 -Generating unique operation named: updateUsingPUT_11
2019-03-17 10:50:58 -Generating unique operation named: updateUsingPATCH_11
2019-03-17 10:50:58 -Generating unique operation named: updateUsingDELETE_11
2019-03-17 10:50:58 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-17 10:50:58 -Generating unique operation named: updateUsingTRACE_11
2019-03-17 10:50:58 -Generating unique operation named: addUsingGET_16
2019-03-17 10:50:58 -Generating unique operation named: editUsingGET_17
2019-03-17 10:50:58 -Generating unique operation named: listUsingGET_19
2019-03-17 10:50:58 -Generating unique operation named: removeUsingPOST_29
2019-03-17 10:50:58 -Generating unique operation named: removeUsingPOST_30
2019-03-17 10:50:58 -Generating unique operation named: saveUsingPOST_17
2019-03-17 10:50:58 -Generating unique operation named: updateUsingGET_12
2019-03-17 10:50:59 -Generating unique operation named: updateUsingHEAD_12
2019-03-17 10:50:59 -Generating unique operation named: updateUsingPOST_17
2019-03-17 10:50:59 -Generating unique operation named: updateUsingPUT_12
2019-03-17 10:50:59 -Generating unique operation named: updateUsingPATCH_12
2019-03-17 10:50:59 -Generating unique operation named: updateUsingDELETE_12
2019-03-17 10:50:59 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-17 10:50:59 -Generating unique operation named: updateUsingTRACE_12
2019-03-17 10:50:59 -Generating unique operation named: addUsingGET_17
2019-03-17 10:50:59 -Generating unique operation named: editUsingGET_18
2019-03-17 10:50:59 -Generating unique operation named: listUsingGET_20
2019-03-17 10:50:59 -Generating unique operation named: removeUsingPOST_31
2019-03-17 10:50:59 -Generating unique operation named: removeUsingPOST_32
2019-03-17 10:50:59 -Generating unique operation named: saveUsingPOST_18
2019-03-17 10:50:59 -Generating unique operation named: updateUsingGET_13
2019-03-17 10:50:59 -Generating unique operation named: updateUsingHEAD_13
2019-03-17 10:50:59 -Generating unique operation named: updateUsingPOST_18
2019-03-17 10:50:59 -Generating unique operation named: updateUsingPUT_13
2019-03-17 10:50:59 -Generating unique operation named: updateUsingPATCH_13
2019-03-17 10:50:59 -Generating unique operation named: updateUsingDELETE_13
2019-03-17 10:50:59 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-17 10:50:59 -Generating unique operation named: updateUsingTRACE_13
2019-03-17 10:50:59 -Generating unique operation named: addUsingGET_18
2019-03-17 10:50:59 -Generating unique operation named: editUsingGET_19
2019-03-17 10:50:59 -Generating unique operation named: listUsingGET_21
2019-03-17 10:50:59 -Generating unique operation named: removeUsingPOST_33
2019-03-17 10:50:59 -Generating unique operation named: removeUsingPOST_34
2019-03-17 10:50:59 -Generating unique operation named: saveUsingPOST_19
2019-03-17 10:50:59 -Generating unique operation named: updateUsingGET_14
2019-03-17 10:50:59 -Generating unique operation named: updateUsingHEAD_14
2019-03-17 10:50:59 -Generating unique operation named: updateUsingPOST_19
2019-03-17 10:50:59 -Generating unique operation named: updateUsingPUT_14
2019-03-17 10:50:59 -Generating unique operation named: updateUsingPATCH_14
2019-03-17 10:50:59 -Generating unique operation named: updateUsingDELETE_14
2019-03-17 10:50:59 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-17 10:50:59 -Generating unique operation named: updateUsingTRACE_14
2019-03-17 10:50:59 -Starting Quartz Scheduler now
2019-03-17 10:50:59 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-17 10:50:59 -Starting...
2019-03-17 10:50:59 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-17 10:50:59 -Started.
2019-03-17 10:50:59 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-17 10:50:59 -Using a shared selector for servlet write/read
2019-03-17 10:50:59 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-17 10:50:59 -Started BootdoApplication in 32.653 seconds (JVM running for 34.243)
2019-03-17 10:50:59 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-17 10:51:00 -==> Parameters: 
2019-03-17 10:51:00 -<==      Total: 1
2019-03-17 10:51:35 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-17 10:51:35 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-17 10:51:35 -FrameworkServlet 'dispatcherServlet': initialization completed in 47 ms
2019-03-17 10:51:35 -Enabling session validation scheduler...
2019-03-17 10:51:35 -请求地址 : http://localhost:8081/
2019-03-17 10:51:35 -HTTP METHOD : GET
2019-03-17 10:51:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-17 10:51:35 -参数 : [{}]
2019-03-17 10:51:35 -耗时 : 3
2019-03-17 10:51:35 -返回值 : redirect:/index
2019-03-17 10:51:36 -请求地址 : http://localhost:8081/login;JSESSIONID=1c641822-5a43-4a50-9291-b413ac9f4bfd
2019-03-17 10:51:36 -HTTP METHOD : GET
2019-03-17 10:51:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 10:51:36 -参数 : [{}]
2019-03-17 10:51:36 -耗时 : 0
2019-03-17 10:51:36 -返回值 : login
2019-03-17 10:51:42 -请求地址 : http://localhost:8081/getVerify
2019-03-17 10:51:42 -HTTP METHOD : GET
2019-03-17 10:51:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-17 10:51:42 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@626aa94e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@27683b67]
2019-03-17 10:51:46 -3488
2019-03-17 10:51:46 -耗时 : 4770
2019-03-17 10:51:46 -返回值 : null
2019-03-17 10:51:51 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-17 10:52:20 -请求地址 : http://localhost:8081/login
2019-03-17 10:52:20 -HTTP METHOD : POST
2019-03-17 10:52:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 10:52:20 -参数 : [admin, 111111, 3488, org.apache.shiro.web.servlet.ShiroHttpServletRequest@856ff53]
2019-03-17 10:52:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-17 10:52:21 -==> Parameters: admin(String)
2019-03-17 10:52:21 -<==      Total: 1
2019-03-17 10:52:21 -耗时 : 664
2019-03-17 10:52:21 -返回值 : {msg=操作成功, code=0}
2019-03-17 10:52:21 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-17 10:52:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 10:52:21 -==> Parameters: 1(Long), admin(String), 登录(String), 664(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 10:52:21.714(Timestamp)
2019-03-17 10:52:22 -请求地址 : http://localhost:8081/index
2019-03-17 10:52:22 -HTTP METHOD : GET
2019-03-17 10:52:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 10:52:22 -参数 : [{}]
2019-03-17 10:52:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 10:52:22 -<==    Updates: 1
2019-03-17 10:52:22 -==> Parameters: 1(Long)
2019-03-17 10:52:23 -<==      Total: 45
2019-03-17 10:52:23 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 10:52:23 -==> Parameters: 138(Long)
2019-03-17 10:52:23 -<==      Total: 1
2019-03-17 10:52:23 -耗时 : 1337
2019-03-17 10:52:23 -返回值 : index_v1
2019-03-17 10:52:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 10:52:23 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1338(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 10:52:23.53(Timestamp)
2019-03-17 10:52:23 -<==    Updates: 1
2019-03-17 10:52:24 -请求地址 : http://localhost:8081/main
2019-03-17 10:52:24 -HTTP METHOD : GET
2019-03-17 10:52:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 10:52:24 -参数 : []
2019-03-17 10:52:24 -耗时 : 0
2019-03-17 10:52:24 -返回值 : main
2019-03-17 10:52:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 10:52:27 -HTTP METHOD : GET
2019-03-17 10:52:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 10:52:27 -参数 : []
2019-03-17 10:52:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 10:52:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 10:52:28 -<==      Total: 0
2019-03-17 10:52:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 10:52:28 -==> Parameters: 1(Long), 0(String)
2019-03-17 10:52:28 -<==      Total: 1
2019-03-17 10:52:28 -耗时 : 506
2019-03-17 10:52:28 -返回值 : com.bootdo.common.utils.PageUtils@536b3258
2019-03-17 10:52:28 -请求地址 : http://localhost:8081/main
2019-03-17 10:52:28 -HTTP METHOD : GET
2019-03-17 10:52:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 10:52:28 -参数 : []
2019-03-17 10:52:28 -耗时 : 1
2019-03-17 10:52:28 -返回值 : main
2019-03-17 10:52:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 10:52:37 -==> Parameters: 1(Long)
2019-03-17 10:52:37 -<==      Total: 86
2019-03-17 10:52:37 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-17 10:52:37 -HTTP METHOD : GET
2019-03-17 10:52:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-17 10:52:37 -参数 : []
2019-03-17 10:52:37 -耗时 : 1
2019-03-17 10:52:37 -返回值 : elec/elecInto/elecInto
2019-03-17 10:52:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 10:52:40 -HTTP METHOD : GET
2019-03-17 10:52:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 10:52:40 -参数 : []
2019-03-17 10:52:40 -耗时 : 1
2019-03-17 10:52:40 -返回值 : system/dept/deptTree
2019-03-17 10:52:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 10:52:41 -HTTP METHOD : GET
2019-03-17 10:52:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 10:52:41 -参数 : []
2019-03-17 10:52:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 10:52:41 -==> Parameters: 
2019-03-17 10:52:41 -<==      Total: 3
2019-03-17 10:52:41 -耗时 : 82
2019-03-17 10:52:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 10:52:48 -请求地址 : http://localhost:8081/elec/elecInto/exprotElecIntoExcel
2019-03-17 10:52:48 -HTTP METHOD : GET
2019-03-17 10:52:48 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.exprotExcel
2019-03-17 10:52:48 -参数 : [com.bootdo.elec.vo.ElecVo@20336a01, org.apache.shiro.web.servlet.ShiroHttpServletResponse@74ed0e8f]
2019-03-17 10:52:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? 
2019-03-17 10:52:48 -==> Parameters: 2019-03(String), 3(Long)
2019-03-17 10:52:48 -<==      Total: 1
2019-03-17 10:52:49 -耗时 : 1033
2019-03-17 10:52:49 -返回值 : null
2019-03-17 11:17:02 -请求地址 : http://localhost:8081/index
2019-03-17 11:17:02 -HTTP METHOD : GET
2019-03-17 11:17:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 11:17:02 -参数 : [{}]
2019-03-17 11:17:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 11:17:03 -==> Parameters: 1(Long)
2019-03-17 11:17:03 -<==      Total: 45
2019-03-17 11:17:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 11:17:03 -==> Parameters: 138(Long)
2019-03-17 11:17:03 -<==      Total: 1
2019-03-17 11:17:03 -耗时 : 284
2019-03-17 11:17:03 -返回值 : index_v1
2019-03-17 11:17:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 11:17:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 302(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 11:17:03.214(Timestamp)
2019-03-17 11:17:03 -<==    Updates: 1
2019-03-17 11:17:04 -请求地址 : http://localhost:8081/main
2019-03-17 11:17:04 -HTTP METHOD : GET
2019-03-17 11:17:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 11:17:04 -参数 : []
2019-03-17 11:17:04 -耗时 : 53
2019-03-17 11:17:04 -返回值 : main
2019-03-17 11:17:05 -请求地址 : http://localhost:8081/main
2019-03-17 11:17:05 -HTTP METHOD : GET
2019-03-17 11:17:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 11:17:05 -参数 : []
2019-03-17 11:17:05 -耗时 : 1
2019-03-17 11:17:05 -返回值 : main
2019-03-17 11:17:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 11:17:05 -HTTP METHOD : GET
2019-03-17 11:17:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 11:17:05 -参数 : []
2019-03-17 11:17:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 11:17:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 11:17:05 -<==      Total: 0
2019-03-17 11:17:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 11:17:05 -==> Parameters: 1(Long), 0(String)
2019-03-17 11:17:05 -<==      Total: 1
2019-03-17 11:17:05 -耗时 : 322
2019-03-17 11:17:05 -返回值 : com.bootdo.common.utils.PageUtils@1348e7b0
2019-03-17 11:17:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 11:17:10 -==> Parameters: 1(Long)
2019-03-17 11:17:10 -<==      Total: 86
2019-03-17 11:17:10 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-17 11:17:10 -HTTP METHOD : GET
2019-03-17 11:17:10 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-17 11:17:10 -参数 : []
2019-03-17 11:17:10 -耗时 : 1
2019-03-17 11:17:10 -返回值 : elec/elecInto/elecInto
2019-03-17 11:17:14 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 11:17:14 -HTTP METHOD : GET
2019-03-17 11:17:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 11:17:14 -参数 : []
2019-03-17 11:17:14 -耗时 : 3
2019-03-17 11:17:14 -返回值 : system/dept/deptTree
2019-03-17 11:17:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 11:17:14 -HTTP METHOD : GET
2019-03-17 11:17:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 11:17:14 -参数 : []
2019-03-17 11:17:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 11:17:14 -==> Parameters: 
2019-03-17 11:17:14 -<==      Total: 3
2019-03-17 11:17:14 -耗时 : 59
2019-03-17 11:17:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 11:17:17 -请求地址 : http://localhost:8081/elec/elecInto/exprotElecIntoExcel
2019-03-17 11:17:17 -HTTP METHOD : GET
2019-03-17 11:17:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.exprotExcel
2019-03-17 11:17:17 -参数 : [com.bootdo.elec.vo.ElecVo@48af85cd, org.apache.shiro.web.servlet.ShiroHttpServletResponse@75533f4c]
2019-03-17 11:17:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? 
2019-03-17 11:17:17 -==> Parameters: 2019-03(String), 3(Long)
2019-03-17 11:17:17 -<==      Total: 1
2019-03-17 11:17:17 -耗时 : 198
2019-03-17 11:17:17 -返回值 : null
2019-03-17 11:21:51 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 423]
2019-03-17 11:23:25 -请求地址 : http://localhost:8081/index
2019-03-17 11:23:25 -HTTP METHOD : GET
2019-03-17 11:23:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 11:23:25 -参数 : [{}]
2019-03-17 11:23:25 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 11:23:25 -==> Parameters: 1(Long)
2019-03-17 11:23:25 -<==      Total: 45
2019-03-17 11:23:25 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 11:23:25 -==> Parameters: 138(Long)
2019-03-17 11:23:25 -<==      Total: 1
2019-03-17 11:23:25 -耗时 : 147
2019-03-17 11:23:25 -返回值 : index_v1
2019-03-17 11:23:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 11:23:25 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 148(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 11:23:25.284(Timestamp)
2019-03-17 11:23:25 -<==    Updates: 1
2019-03-17 11:23:25 -请求地址 : http://localhost:8081/main
2019-03-17 11:23:25 -HTTP METHOD : GET
2019-03-17 11:23:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 11:23:25 -参数 : []
2019-03-17 11:23:25 -耗时 : 0
2019-03-17 11:23:25 -返回值 : main
2019-03-17 11:23:26 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 11:23:26 -HTTP METHOD : GET
2019-03-17 11:23:26 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 11:23:26 -参数 : []
2019-03-17 11:23:26 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 11:23:26 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 11:23:26 -<==      Total: 0
2019-03-17 11:23:26 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 11:23:26 -==> Parameters: 1(Long), 0(String)
2019-03-17 11:23:26 -<==      Total: 1
2019-03-17 11:23:26 -耗时 : 42
2019-03-17 11:23:26 -返回值 : com.bootdo.common.utils.PageUtils@242057fb
2019-03-17 11:23:26 -请求地址 : http://localhost:8081/main
2019-03-17 11:23:26 -HTTP METHOD : GET
2019-03-17 11:23:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 11:23:26 -参数 : []
2019-03-17 11:23:26 -耗时 : 13
2019-03-17 11:23:26 -返回值 : main
2019-03-17 11:23:34 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-17 11:23:34 -HTTP METHOD : GET
2019-03-17 11:23:34 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-17 11:23:34 -参数 : []
2019-03-17 11:23:34 -耗时 : 0
2019-03-17 11:23:34 -返回值 : elec/elecInto/elecInto
2019-03-17 11:23:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 11:23:40 -HTTP METHOD : GET
2019-03-17 11:23:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 11:23:40 -参数 : []
2019-03-17 11:23:40 -耗时 : 3
2019-03-17 11:23:40 -返回值 : system/dept/deptTree
2019-03-17 11:23:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 11:23:41 -HTTP METHOD : GET
2019-03-17 11:23:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 11:23:41 -参数 : []
2019-03-17 11:23:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 11:23:41 -==> Parameters: 
2019-03-17 11:23:41 -<==      Total: 3
2019-03-17 11:23:41 -耗时 : 6
2019-03-17 11:23:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 11:23:43 -请求地址 : http://localhost:8081/elec/elecInto/exprotElecIntoExcel
2019-03-17 11:23:43 -HTTP METHOD : GET
2019-03-17 11:23:43 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.exprotExcel
2019-03-17 11:23:43 -参数 : [com.bootdo.elec.vo.ElecVo@2d77d033, org.apache.shiro.web.servlet.ShiroHttpServletResponse@b3da210]
2019-03-17 11:23:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? 
2019-03-17 11:23:43 -==> Parameters: 2019-03(String), 3(Long)
2019-03-17 11:23:43 -<==      Total: 1
2019-03-17 11:23:43 -耗时 : 24
2019-03-17 11:23:43 -返回值 : null
2019-03-17 11:30:44 -Starting BootdoApplication on ZJZL-20180906VX with PID 8268 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-17 11:30:44 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-17 11:30:44 -The following profiles are active: dev
2019-03-17 11:30:44 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@376a312c: startup date [Sun Mar 17 11:30:44 CST 2019]; root of context hierarchy
2019-03-17 11:30:49 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-17 11:30:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5fe541b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 11:30:53 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$523e705b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 11:30:56 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 11:30:57 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 11:30:57 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 11:30:57 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-17 11:30:57 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-17 11:30:57 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 11:30:57 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 11:30:57 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 11:30:58 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 11:30:59 -Tomcat initialized with port(s): 8081 (http)
2019-03-17 11:30:59 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-17 11:30:59 -Starting service [Tomcat]
2019-03-17 11:30:59 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-17 11:31:00 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-17 11:31:00 -Initializing Spring embedded WebApplicationContext
2019-03-17 11:31:00 -Root WebApplicationContext: initialization completed in 16074 ms
2019-03-17 11:31:02 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-17 11:31:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-17 11:31:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-17 11:31:02 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-17 11:31:02 -Filter xssFilter was not registered (disabled)
2019-03-17 11:31:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-17 11:31:02 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-17 11:31:02 -Servlet statViewServlet mapped to [/druid/*]
2019-03-17 11:31:02 -Servlet dispatcherServlet mapped to [/]
2019-03-17 11:31:07 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@376a312c: startup date [Sun Mar 17 11:30:44 CST 2019]; root of context hierarchy
2019-03-17 11:31:08 -Using default implementation for ThreadExecutor
2019-03-17 11:31:08 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-17 11:31:08 -Quartz Scheduler v.2.2.1 created.
2019-03-17 11:31:08 -RAMJobStore initialized.
2019-03-17 11:31:08 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-17 11:31:08 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-17 11:31:08 -Quartz scheduler version: 2.2.1
2019-03-17 11:31:08 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@fcd3a6f
2019-03-17 11:31:09 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-17 11:31:09 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-17 11:31:14 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-17 11:31:14 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-17 11:31:14 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-17 11:31:14 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-17 11:31:14 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-17 11:31:14 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-17 11:31:14 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-17 11:31:14 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-17 11:31:14 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-17 11:31:14 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-17 11:31:14 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-17 11:31:14 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-17 11:31:14 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-17 11:31:14 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-17 11:31:14 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-17 11:31:14 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-17 11:31:14 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-17 11:31:14 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-17 11:31:14 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 11:31:14 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 11:31:14 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-17 11:31:14 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-17 11:31:14 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-17 11:31:14 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-17 11:31:14 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-17 11:31:14 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-17 11:31:14 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-17 11:31:14 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-17 11:31:14 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 11:31:14 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 11:31:14 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-17 11:31:14 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-17 11:31:14 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-17 11:31:14 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-17 11:31:14 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-17 11:31:14 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-17 11:31:14 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-17 11:31:14 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-17 11:31:14 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-17 11:31:14 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 11:31:14 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 11:31:14 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-17 11:31:14 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 11:31:14 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-17 11:31:14 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-17 11:31:14 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-17 11:31:14 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-17 11:31:14 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-17 11:31:14 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-17 11:31:14 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-17 11:31:14 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-17 11:31:14 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-17 11:31:14 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 11:31:14 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 11:31:14 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-17 11:31:14 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-17 11:31:14 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-17 11:31:14 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 11:31:14 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-17 11:31:14 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-17 11:31:14 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-17 11:31:14 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 11:31:14 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 11:31:14 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-17 11:31:14 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-17 11:31:14 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 11:31:14 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 11:31:14 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-17 11:31:14 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-17 11:31:14 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 11:31:14 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 11:31:14 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-17 11:31:14 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-17 11:31:14 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-17 11:31:14 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-17 11:31:14 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-17 11:31:14 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-17 11:31:14 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-17 11:31:14 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-17 11:31:14 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-17 11:31:14 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-17 11:31:14 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-17 11:31:14 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-17 11:31:14 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-17 11:31:14 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-17 11:31:14 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-17 11:31:14 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-17 11:31:14 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-17 11:31:14 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-17 11:31:14 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-17 11:31:14 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 11:31:14 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 11:31:14 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-17 11:31:14 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-17 11:31:14 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-17 11:31:14 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-17 11:31:14 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-17 11:31:14 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-17 11:31:14 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-17 11:31:14 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-17 11:31:14 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-17 11:31:14 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-17 11:31:14 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-17 11:31:14 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-17 11:31:14 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-17 11:31:14 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-17 11:31:14 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-17 11:31:14 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-17 11:31:14 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-17 11:31:14 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 11:31:14 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 11:31:14 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 11:31:14 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-17 11:31:14 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-17 11:31:14 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-17 11:31:14 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-17 11:31:14 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-17 11:31:14 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-17 11:31:14 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-17 11:31:14 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-17 11:31:14 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-17 11:31:14 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-17 11:31:14 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-17 11:31:14 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-17 11:31:14 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-17 11:31:14 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-17 11:31:14 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 11:31:14 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 11:31:14 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-17 11:31:14 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 11:31:14 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 11:31:14 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-17 11:31:14 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 11:31:14 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-17 11:31:14 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-17 11:31:14 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-17 11:31:15 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-17 11:31:15 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-17 11:31:15 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-17 11:31:17 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 11:31:17 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@376a312c: startup date [Sun Mar 17 11:30:44 CST 2019]; root of context hierarchy
2019-03-17 11:31:17 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 11:31:17 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 11:31:17 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 11:31:17 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-17 11:31:18 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-17 11:31:22 -Registering beans for JMX exposure on startup
2019-03-17 11:31:22 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-17 11:31:22 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-17 11:31:22 -Starting beans in phase 2147483647
2019-03-17 11:31:22 -Context refreshed
2019-03-17 11:31:23 -Found 1 custom documentation plugin(s)
2019-03-17 11:31:23 -Scanning for api listing references
2019-03-17 11:31:24 -Generating unique operation named: removeUsingPOST_1
2019-03-17 11:31:24 -Generating unique operation named: addUsingGET_1
2019-03-17 11:31:24 -Generating unique operation named: editUsingGET_1
2019-03-17 11:31:24 -Generating unique operation named: listUsingGET_1
2019-03-17 11:31:24 -Generating unique operation named: removeUsingPOST_2
2019-03-17 11:31:24 -Generating unique operation named: removeUsingPOST_3
2019-03-17 11:31:24 -Generating unique operation named: saveUsingPOST_1
2019-03-17 11:31:24 -Generating unique operation named: updateUsingGET_1
2019-03-17 11:31:24 -Generating unique operation named: updateUsingHEAD_1
2019-03-17 11:31:24 -Generating unique operation named: updateUsingPOST_1
2019-03-17 11:31:24 -Generating unique operation named: updateUsingPUT_1
2019-03-17 11:31:24 -Generating unique operation named: updateUsingPATCH_1
2019-03-17 11:31:24 -Generating unique operation named: updateUsingDELETE_1
2019-03-17 11:31:24 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-17 11:31:24 -Generating unique operation named: updateUsingTRACE_1
2019-03-17 11:31:24 -Generating unique operation named: addUsingGET_2
2019-03-17 11:31:24 -Generating unique operation named: editUsingGET_2
2019-03-17 11:31:24 -Generating unique operation named: listUsingGET_2
2019-03-17 11:31:24 -Generating unique operation named: removeUsingPOST_4
2019-03-17 11:31:24 -Generating unique operation named: removeUsingPOST_5
2019-03-17 11:31:24 -Generating unique operation named: saveUsingPOST_2
2019-03-17 11:31:25 -Generating unique operation named: updateUsingGET_2
2019-03-17 11:31:25 -Generating unique operation named: updateUsingHEAD_2
2019-03-17 11:31:25 -Generating unique operation named: updateUsingPOST_2
2019-03-17 11:31:25 -Generating unique operation named: updateUsingPUT_2
2019-03-17 11:31:25 -Generating unique operation named: updateUsingPATCH_2
2019-03-17 11:31:25 -Generating unique operation named: updateUsingDELETE_2
2019-03-17 11:31:25 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-17 11:31:25 -Generating unique operation named: updateUsingTRACE_2
2019-03-17 11:31:25 -Generating unique operation named: addUsingGET_3
2019-03-17 11:31:25 -Generating unique operation named: editUsingGET_3
2019-03-17 11:31:25 -Generating unique operation named: listUsingGET_3
2019-03-17 11:31:25 -Generating unique operation named: removeUsingPOST_6
2019-03-17 11:31:25 -Generating unique operation named: removeUsingPOST_7
2019-03-17 11:31:25 -Generating unique operation named: saveUsingPOST_3
2019-03-17 11:31:25 -Generating unique operation named: updateUsingGET_3
2019-03-17 11:31:25 -Generating unique operation named: updateUsingHEAD_3
2019-03-17 11:31:25 -Generating unique operation named: updateUsingPOST_3
2019-03-17 11:31:25 -Generating unique operation named: updateUsingPUT_3
2019-03-17 11:31:25 -Generating unique operation named: updateUsingPATCH_3
2019-03-17 11:31:25 -Generating unique operation named: updateUsingDELETE_3
2019-03-17 11:31:25 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-17 11:31:25 -Generating unique operation named: updateUsingTRACE_3
2019-03-17 11:31:25 -Generating unique operation named: addUsingGET_4
2019-03-17 11:31:25 -Generating unique operation named: editUsingGET_4
2019-03-17 11:31:25 -Generating unique operation named: listUsingGET_4
2019-03-17 11:31:25 -Generating unique operation named: removeUsingPOST_8
2019-03-17 11:31:25 -Generating unique operation named: removeUsingPOST_9
2019-03-17 11:31:25 -Generating unique operation named: saveUsingPOST_4
2019-03-17 11:31:25 -Generating unique operation named: updateUsingGET_4
2019-03-17 11:31:25 -Generating unique operation named: updateUsingHEAD_4
2019-03-17 11:31:25 -Generating unique operation named: updateUsingPOST_4
2019-03-17 11:31:25 -Generating unique operation named: updateUsingPUT_4
2019-03-17 11:31:25 -Generating unique operation named: updateUsingPATCH_4
2019-03-17 11:31:25 -Generating unique operation named: updateUsingDELETE_4
2019-03-17 11:31:25 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-17 11:31:25 -Generating unique operation named: updateUsingTRACE_4
2019-03-17 11:31:25 -Generating unique operation named: ElecUsingGET_1
2019-03-17 11:31:25 -Generating unique operation named: addUsingGET_5
2019-03-17 11:31:25 -Generating unique operation named: editUsingGET_5
2019-03-17 11:31:25 -Generating unique operation named: listUsingGET_5
2019-03-17 11:31:25 -Generating unique operation named: removeUsingPOST_10
2019-03-17 11:31:25 -Generating unique operation named: removeUsingPOST_11
2019-03-17 11:31:26 -Generating unique operation named: saveUsingPOST_5
2019-03-17 11:31:26 -Generating unique operation named: updateUsingGET_5
2019-03-17 11:31:26 -Generating unique operation named: updateUsingHEAD_5
2019-03-17 11:31:26 -Generating unique operation named: updateUsingPOST_5
2019-03-17 11:31:26 -Generating unique operation named: updateUsingPUT_5
2019-03-17 11:31:26 -Generating unique operation named: updateUsingPATCH_5
2019-03-17 11:31:26 -Generating unique operation named: updateUsingDELETE_5
2019-03-17 11:31:26 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-17 11:31:26 -Generating unique operation named: updateUsingTRACE_5
2019-03-17 11:31:26 -Generating unique operation named: editUsingGET_6
2019-03-17 11:31:26 -Generating unique operation named: listUsingGET_6
2019-03-17 11:31:26 -Generating unique operation named: updateUsingPOST_6
2019-03-17 11:31:26 -Generating unique operation named: addUsingGET_6
2019-03-17 11:31:26 -Generating unique operation named: editUsingGET_7
2019-03-17 11:31:26 -Generating unique operation named: listUsingGET_7
2019-03-17 11:31:26 -Generating unique operation named: removeUsingPOST_12
2019-03-17 11:31:26 -Generating unique operation named: removeUsingPOST_13
2019-03-17 11:31:26 -Generating unique operation named: saveUsingPOST_6
2019-03-17 11:31:26 -Generating unique operation named: updateUsingGET_6
2019-03-17 11:31:26 -Generating unique operation named: updateUsingHEAD_6
2019-03-17 11:31:26 -Generating unique operation named: updateUsingPOST_7
2019-03-17 11:31:26 -Generating unique operation named: updateUsingPUT_6
2019-03-17 11:31:26 -Generating unique operation named: updateUsingPATCH_6
2019-03-17 11:31:26 -Generating unique operation named: updateUsingDELETE_6
2019-03-17 11:31:26 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-17 11:31:26 -Generating unique operation named: updateUsingTRACE_6
2019-03-17 11:31:26 -Generating unique operation named: addUsingGET_7
2019-03-17 11:31:26 -Generating unique operation named: editUsingGET_8
2019-03-17 11:31:26 -Generating unique operation named: listUsingGET_8
2019-03-17 11:31:26 -Generating unique operation named: removeUsingPOST_14
2019-03-17 11:31:26 -Generating unique operation named: removeUsingPOST_15
2019-03-17 11:31:26 -Generating unique operation named: saveUsingPOST_7
2019-03-17 11:31:26 -Generating unique operation named: updateUsingGET_7
2019-03-17 11:31:26 -Generating unique operation named: updateUsingHEAD_7
2019-03-17 11:31:26 -Generating unique operation named: updateUsingPOST_8
2019-03-17 11:31:26 -Generating unique operation named: updateUsingPUT_7
2019-03-17 11:31:26 -Generating unique operation named: updateUsingPATCH_7
2019-03-17 11:31:26 -Generating unique operation named: updateUsingDELETE_7
2019-03-17 11:31:26 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-17 11:31:26 -Generating unique operation named: updateUsingTRACE_7
2019-03-17 11:31:26 -Generating unique operation named: addUsingGET_8
2019-03-17 11:31:26 -Generating unique operation named: editUsingGET_9
2019-03-17 11:31:26 -Generating unique operation named: listUsingGET_9
2019-03-17 11:31:26 -Generating unique operation named: removeUsingPOST_16
2019-03-17 11:31:26 -Generating unique operation named: removeUsingPOST_17
2019-03-17 11:31:26 -Generating unique operation named: saveUsingPOST_8
2019-03-17 11:31:26 -Generating unique operation named: updateUsingGET_8
2019-03-17 11:31:26 -Generating unique operation named: updateUsingHEAD_8
2019-03-17 11:31:26 -Generating unique operation named: updateUsingPOST_9
2019-03-17 11:31:26 -Generating unique operation named: updateUsingPUT_8
2019-03-17 11:31:26 -Generating unique operation named: updateUsingPATCH_8
2019-03-17 11:31:26 -Generating unique operation named: updateUsingDELETE_8
2019-03-17 11:31:26 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-17 11:31:26 -Generating unique operation named: updateUsingTRACE_8
2019-03-17 11:31:26 -Generating unique operation named: addUsingGET_9
2019-03-17 11:31:26 -Generating unique operation named: editUsingGET_10
2019-03-17 11:31:26 -Generating unique operation named: infoUsingGET_1
2019-03-17 11:31:26 -Generating unique operation named: infoUsingHEAD_1
2019-03-17 11:31:26 -Generating unique operation named: infoUsingPOST_1
2019-03-17 11:31:26 -Generating unique operation named: infoUsingPUT_1
2019-03-17 11:31:26 -Generating unique operation named: infoUsingPATCH_1
2019-03-17 11:31:26 -Generating unique operation named: infoUsingDELETE_1
2019-03-17 11:31:26 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-17 11:31:26 -Generating unique operation named: infoUsingTRACE_1
2019-03-17 11:31:26 -Generating unique operation named: listUsingGET_10
2019-03-17 11:31:26 -Generating unique operation named: removeUsingPOST_18
2019-03-17 11:31:26 -Generating unique operation named: removeUsingPOST_19
2019-03-17 11:31:26 -Generating unique operation named: saveUsingPOST_9
2019-03-17 11:31:26 -Generating unique operation named: updateUsingPOST_10
2019-03-17 11:31:26 -Generating unique operation named: listUsingGET_11
2019-03-17 11:31:26 -Generating unique operation named: removeUsingPOST_20
2019-03-17 11:31:27 -Generating unique operation named: welcomeUsingGET_1
2019-03-17 11:31:27 -Generating unique operation named: addUsingGET_10
2019-03-17 11:31:27 -Generating unique operation named: editUsingGET_11
2019-03-17 11:31:27 -Generating unique operation named: listUsingGET_12
2019-03-17 11:31:27 -Generating unique operation named: removeUsingPOST_21
2019-03-17 11:31:27 -Generating unique operation named: saveUsingPOST_10
2019-03-17 11:31:27 -Generating unique operation named: treeUsingGET_1
2019-03-17 11:31:27 -Generating unique operation named: treeUsingGET_2
2019-03-17 11:31:27 -Generating unique operation named: updateUsingPOST_11
2019-03-17 11:31:27 -Generating unique operation named: addUsingGET_11
2019-03-17 11:31:27 -Generating unique operation named: editUsingGET_12
2019-03-17 11:31:27 -Generating unique operation named: listUsingGET_13
2019-03-17 11:31:27 -Generating unique operation named: removeUsingPOST_22
2019-03-17 11:31:27 -Generating unique operation named: removeUsingPOST_23
2019-03-17 11:31:27 -Generating unique operation named: saveUsingPOST_11
2019-03-17 11:31:27 -Generating unique operation named: updateUsingGET_9
2019-03-17 11:31:27 -Generating unique operation named: updateUsingHEAD_9
2019-03-17 11:31:27 -Generating unique operation named: updateUsingPOST_12
2019-03-17 11:31:27 -Generating unique operation named: updateUsingPUT_9
2019-03-17 11:31:27 -Generating unique operation named: updateUsingPATCH_9
2019-03-17 11:31:27 -Generating unique operation named: updateUsingDELETE_9
2019-03-17 11:31:27 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-17 11:31:27 -Generating unique operation named: updateUsingTRACE_9
2019-03-17 11:31:27 -Generating unique operation named: addUsingGET_12
2019-03-17 11:31:27 -Generating unique operation named: editUsingGET_13
2019-03-17 11:31:27 -Generating unique operation named: listUsingGET_14
2019-03-17 11:31:27 -Generating unique operation named: removeUsingPOST_24
2019-03-17 11:31:27 -Generating unique operation named: removeUsingPOST_25
2019-03-17 11:31:27 -Generating unique operation named: saveUsingPOST_12
2019-03-17 11:31:27 -Generating unique operation named: updateUsingGET_10
2019-03-17 11:31:27 -Generating unique operation named: updateUsingHEAD_10
2019-03-17 11:31:27 -Generating unique operation named: updateUsingPOST_13
2019-03-17 11:31:27 -Generating unique operation named: updateUsingPUT_10
2019-03-17 11:31:27 -Generating unique operation named: updateUsingPATCH_10
2019-03-17 11:31:27 -Generating unique operation named: updateUsingDELETE_10
2019-03-17 11:31:27 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-17 11:31:27 -Generating unique operation named: updateUsingTRACE_10
2019-03-17 11:31:27 -Generating unique operation named: addUsingGET_13
2019-03-17 11:31:27 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-17 11:31:27 -Generating unique operation named: editUsingGET_14
2019-03-17 11:31:27 -Generating unique operation named: listUsingGET_15
2019-03-17 11:31:27 -Generating unique operation named: saveUsingPOST_13
2019-03-17 11:31:27 -Generating unique operation named: saveUsingPOST_14
2019-03-17 11:31:27 -Generating unique operation named: updateUsingPOST_14
2019-03-17 11:31:27 -Generating unique operation named: listUsingGET_16
2019-03-17 11:31:27 -Generating unique operation named: listUsingHEAD_1
2019-03-17 11:31:27 -Generating unique operation named: listUsingPOST_1
2019-03-17 11:31:27 -Generating unique operation named: listUsingPUT_1
2019-03-17 11:31:27 -Generating unique operation named: listUsingPATCH_1
2019-03-17 11:31:27 -Generating unique operation named: listUsingDELETE_1
2019-03-17 11:31:27 -Generating unique operation named: listUsingOPTIONS_1
2019-03-17 11:31:27 -Generating unique operation named: listUsingTRACE_1
2019-03-17 11:31:27 -Generating unique operation named: addUsingGET_14
2019-03-17 11:31:27 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-17 11:31:27 -Generating unique operation named: editUsingGET_15
2019-03-17 11:31:28 -Generating unique operation named: listUsingGET_17
2019-03-17 11:31:28 -Generating unique operation named: removeUsingPOST_26
2019-03-17 11:31:28 -Generating unique operation named: saveUsingPOST_15
2019-03-17 11:31:28 -Generating unique operation named: treeUsingGET_3
2019-03-17 11:31:28 -Generating unique operation named: treeViewUsingGET_1
2019-03-17 11:31:28 -Generating unique operation named: updateUsingPOST_15
2019-03-17 11:31:28 -Generating unique operation named: addUsingGET_15
2019-03-17 11:31:28 -Generating unique operation named: editUsingGET_16
2019-03-17 11:31:28 -Generating unique operation named: listUsingGET_18
2019-03-17 11:31:28 -Generating unique operation named: removeUsingPOST_27
2019-03-17 11:31:28 -Generating unique operation named: removeUsingPOST_28
2019-03-17 11:31:28 -Generating unique operation named: saveUsingPOST_16
2019-03-17 11:31:28 -Generating unique operation named: updateUsingGET_11
2019-03-17 11:31:28 -Generating unique operation named: updateUsingHEAD_11
2019-03-17 11:31:28 -Generating unique operation named: updateUsingPOST_16
2019-03-17 11:31:28 -Generating unique operation named: updateUsingPUT_11
2019-03-17 11:31:28 -Generating unique operation named: updateUsingPATCH_11
2019-03-17 11:31:28 -Generating unique operation named: updateUsingDELETE_11
2019-03-17 11:31:28 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-17 11:31:28 -Generating unique operation named: updateUsingTRACE_11
2019-03-17 11:31:28 -Generating unique operation named: addUsingGET_16
2019-03-17 11:31:28 -Generating unique operation named: editUsingGET_17
2019-03-17 11:31:28 -Generating unique operation named: listUsingGET_19
2019-03-17 11:31:28 -Generating unique operation named: removeUsingPOST_29
2019-03-17 11:31:28 -Generating unique operation named: removeUsingPOST_30
2019-03-17 11:31:28 -Generating unique operation named: saveUsingPOST_17
2019-03-17 11:31:28 -Generating unique operation named: updateUsingGET_12
2019-03-17 11:31:28 -Generating unique operation named: updateUsingHEAD_12
2019-03-17 11:31:28 -Generating unique operation named: updateUsingPOST_17
2019-03-17 11:31:28 -Generating unique operation named: updateUsingPUT_12
2019-03-17 11:31:28 -Generating unique operation named: updateUsingPATCH_12
2019-03-17 11:31:28 -Generating unique operation named: updateUsingDELETE_12
2019-03-17 11:31:28 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-17 11:31:28 -Generating unique operation named: updateUsingTRACE_12
2019-03-17 11:31:28 -Generating unique operation named: addUsingGET_17
2019-03-17 11:31:28 -Generating unique operation named: editUsingGET_18
2019-03-17 11:31:28 -Generating unique operation named: listUsingGET_20
2019-03-17 11:31:28 -Generating unique operation named: removeUsingPOST_31
2019-03-17 11:31:28 -Generating unique operation named: removeUsingPOST_32
2019-03-17 11:31:28 -Generating unique operation named: saveUsingPOST_18
2019-03-17 11:31:28 -Generating unique operation named: updateUsingGET_13
2019-03-17 11:31:28 -Generating unique operation named: updateUsingHEAD_13
2019-03-17 11:31:28 -Generating unique operation named: updateUsingPOST_18
2019-03-17 11:31:28 -Generating unique operation named: updateUsingPUT_13
2019-03-17 11:31:28 -Generating unique operation named: updateUsingPATCH_13
2019-03-17 11:31:28 -Generating unique operation named: updateUsingDELETE_13
2019-03-17 11:31:28 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-17 11:31:28 -Generating unique operation named: updateUsingTRACE_13
2019-03-17 11:31:28 -Generating unique operation named: addUsingGET_18
2019-03-17 11:31:28 -Generating unique operation named: editUsingGET_19
2019-03-17 11:31:28 -Generating unique operation named: listUsingGET_21
2019-03-17 11:31:28 -Generating unique operation named: removeUsingPOST_33
2019-03-17 11:31:28 -Generating unique operation named: removeUsingPOST_34
2019-03-17 11:31:28 -Generating unique operation named: saveUsingPOST_19
2019-03-17 11:31:28 -Generating unique operation named: updateUsingGET_14
2019-03-17 11:31:28 -Generating unique operation named: updateUsingHEAD_14
2019-03-17 11:31:28 -Generating unique operation named: updateUsingPOST_19
2019-03-17 11:31:28 -Generating unique operation named: updateUsingPUT_14
2019-03-17 11:31:28 -Generating unique operation named: updateUsingPATCH_14
2019-03-17 11:31:28 -Generating unique operation named: updateUsingDELETE_14
2019-03-17 11:31:28 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-17 11:31:28 -Generating unique operation named: updateUsingTRACE_14
2019-03-17 11:31:28 -Starting Quartz Scheduler now
2019-03-17 11:31:28 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-17 11:31:28 -Starting...
2019-03-17 11:31:28 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-17 11:31:28 -Started.
2019-03-17 11:31:29 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-17 11:31:29 -Using a shared selector for servlet write/read
2019-03-17 11:31:29 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-17 11:31:29 -Started BootdoApplication in 47.551 seconds (JVM running for 49.774)
2019-03-17 11:31:29 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-17 11:31:30 -==> Parameters: 
2019-03-17 11:31:30 -<==      Total: 1
2019-03-17 11:32:15 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-17 11:32:23 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-17 11:32:23 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-17 11:32:23 -FrameworkServlet 'dispatcherServlet': initialization completed in 167 ms
2019-03-17 11:32:24 -Enabling session validation scheduler...
2019-03-17 11:32:24 -请求地址 : http://localhost:8081/login;JSESSIONID=135d2e31-8de8-469e-9f45-1df898b48cc2
2019-03-17 11:32:24 -HTTP METHOD : GET
2019-03-17 11:32:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 11:32:24 -参数 : [{}]
2019-03-17 11:32:24 -耗时 : 3
2019-03-17 11:32:24 -返回值 : login
2019-03-17 11:32:28 -请求地址 : http://localhost:8081/getVerify
2019-03-17 11:32:28 -HTTP METHOD : GET
2019-03-17 11:32:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-17 11:32:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@575b281, org.apache.shiro.web.servlet.ShiroHttpServletResponse@137712f4]
2019-03-17 11:32:37 -4892
2019-03-17 11:32:37 -耗时 : 8801
2019-03-17 11:32:37 -返回值 : null
2019-03-17 11:32:45 -请求地址 : http://localhost:8081/login
2019-03-17 11:32:45 -HTTP METHOD : POST
2019-03-17 11:32:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 11:32:45 -参数 : [admin, 111111, 4892, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3b5a11f1]
2019-03-17 11:32:45 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-17 11:32:45 -==> Parameters: admin(String)
2019-03-17 11:32:45 -<==      Total: 1
2019-03-17 11:32:45 -耗时 : 476
2019-03-17 11:32:45 -返回值 : {msg=操作成功, code=0}
2019-03-17 11:32:46 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-17 11:32:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 11:32:46 -==> Parameters: 1(Long), admin(String), 登录(String), 476(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 11:32:46.263(Timestamp)
2019-03-17 11:32:46 -<==    Updates: 1
2019-03-17 11:32:46 -请求地址 : http://localhost:8081/index
2019-03-17 11:32:46 -HTTP METHOD : GET
2019-03-17 11:32:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 11:32:46 -参数 : [{}]
2019-03-17 11:32:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 11:32:47 -==> Parameters: 1(Long)
2019-03-17 11:32:47 -<==      Total: 45
2019-03-17 11:32:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 11:32:47 -==> Parameters: 138(Long)
2019-03-17 11:32:47 -<==      Total: 1
2019-03-17 11:32:47 -耗时 : 895
2019-03-17 11:32:47 -返回值 : index_v1
2019-03-17 11:32:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 11:32:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 896(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 11:32:47.765(Timestamp)
2019-03-17 11:32:48 -<==    Updates: 1
2019-03-17 11:32:48 -请求地址 : http://localhost:8081/main
2019-03-17 11:32:48 -HTTP METHOD : GET
2019-03-17 11:32:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 11:32:48 -参数 : []
2019-03-17 11:32:48 -耗时 : 0
2019-03-17 11:32:48 -返回值 : main
2019-03-17 11:32:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 11:32:48 -HTTP METHOD : GET
2019-03-17 11:32:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 11:32:48 -参数 : []
2019-03-17 11:32:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 11:32:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 11:32:48 -<==      Total: 0
2019-03-17 11:32:48 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 11:32:48 -==> Parameters: 1(Long), 0(String)
2019-03-17 11:32:48 -<==      Total: 1
2019-03-17 11:32:48 -耗时 : 106
2019-03-17 11:32:48 -返回值 : com.bootdo.common.utils.PageUtils@443f483d
2019-03-17 11:32:48 -请求地址 : http://localhost:8081/main
2019-03-17 11:32:48 -HTTP METHOD : GET
2019-03-17 11:32:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 11:32:48 -参数 : []
2019-03-17 11:32:48 -耗时 : 1
2019-03-17 11:32:48 -返回值 : main
2019-03-17 11:33:00 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 11:33:00 -==> Parameters: 1(Long)
2019-03-17 11:33:00 -<==      Total: 86
2019-03-17 11:33:00 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-17 11:33:00 -HTTP METHOD : GET
2019-03-17 11:33:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-17 11:33:00 -参数 : []
2019-03-17 11:33:00 -耗时 : 1
2019-03-17 11:33:00 -返回值 : elec/elecInto/elecInto
2019-03-17 11:33:13 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 11:33:13 -HTTP METHOD : GET
2019-03-17 11:33:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 11:33:13 -参数 : []
2019-03-17 11:33:13 -耗时 : 0
2019-03-17 11:33:13 -返回值 : system/dept/deptTree
2019-03-17 11:33:14 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 11:33:14 -HTTP METHOD : GET
2019-03-17 11:33:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 11:33:14 -参数 : []
2019-03-17 11:33:14 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 11:33:14 -==> Parameters: 
2019-03-17 11:33:14 -<==      Total: 3
2019-03-17 11:33:14 -耗时 : 199
2019-03-17 11:33:14 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 11:33:16 -请求地址 : http://localhost:8081/elec/elecInto/exprotElecIntoExcel
2019-03-17 11:33:16 -HTTP METHOD : GET
2019-03-17 11:33:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.exprotExcel
2019-03-17 11:33:16 -参数 : [com.bootdo.elec.vo.ElecVo@2ec078e8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@252118da]
2019-03-17 11:33:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? 
2019-03-17 11:33:16 -==> Parameters: 2019-03(String), 3(Long)
2019-03-17 11:33:16 -<==      Total: 1
2019-03-17 11:35:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? 
2019-03-17 11:35:42 -==> Parameters: 2019-03(String), 3(Long)
2019-03-17 11:35:43 -<==      Total: 1
2019-03-17 11:35:59 -耗时 : 163189
2019-03-17 11:35:59 -返回值 : null
2019-03-17 11:37:18 -请求地址 : http://localhost:8081/index
2019-03-17 11:37:18 -HTTP METHOD : GET
2019-03-17 11:37:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 11:37:18 -参数 : [{}]
2019-03-17 11:37:18 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 11:37:18 -==> Parameters: 1(Long)
2019-03-17 11:37:18 -<==      Total: 45
2019-03-17 11:37:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 11:37:18 -==> Parameters: 138(Long)
2019-03-17 11:37:18 -<==      Total: 1
2019-03-17 11:37:18 -耗时 : 94
2019-03-17 11:37:18 -返回值 : index_v1
2019-03-17 11:37:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 11:37:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 94(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 11:37:18.984(Timestamp)
2019-03-17 11:37:19 -请求地址 : http://localhost:8081/main
2019-03-17 11:37:19 -HTTP METHOD : GET
2019-03-17 11:37:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 11:37:19 -参数 : []
2019-03-17 11:37:19 -耗时 : 1
2019-03-17 11:37:19 -返回值 : main
2019-03-17 11:37:19 -<==    Updates: 1
2019-03-17 11:37:19 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 11:37:19 -HTTP METHOD : GET
2019-03-17 11:37:19 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 11:37:19 -参数 : []
2019-03-17 11:37:19 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 11:37:19 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 11:37:19 -<==      Total: 0
2019-03-17 11:37:19 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 11:37:19 -==> Parameters: 1(Long), 0(String)
2019-03-17 11:37:19 -<==      Total: 1
2019-03-17 11:37:19 -耗时 : 12
2019-03-17 11:37:19 -返回值 : com.bootdo.common.utils.PageUtils@5b00811e
2019-03-17 11:37:20 -请求地址 : http://localhost:8081/main
2019-03-17 11:37:20 -HTTP METHOD : GET
2019-03-17 11:37:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 11:37:20 -参数 : []
2019-03-17 11:37:20 -耗时 : 1
2019-03-17 11:37:20 -返回值 : main
2019-03-17 11:37:22 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-17 11:37:22 -HTTP METHOD : GET
2019-03-17 11:37:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-17 11:37:22 -参数 : []
2019-03-17 11:37:22 -耗时 : 1
2019-03-17 11:37:22 -返回值 : elec/elecInto/elecInto
2019-03-17 11:37:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 11:37:25 -HTTP METHOD : GET
2019-03-17 11:37:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 11:37:25 -参数 : []
2019-03-17 11:37:25 -耗时 : 1
2019-03-17 11:37:25 -返回值 : system/dept/deptTree
2019-03-17 11:37:26 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 11:37:26 -HTTP METHOD : GET
2019-03-17 11:37:26 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 11:37:26 -参数 : []
2019-03-17 11:37:26 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 11:37:26 -==> Parameters: 
2019-03-17 11:37:26 -<==      Total: 3
2019-03-17 11:37:26 -耗时 : 9
2019-03-17 11:37:26 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 11:37:28 -请求地址 : http://localhost:8081/elec/elecInto/exprotElecIntoExcel
2019-03-17 11:37:28 -HTTP METHOD : GET
2019-03-17 11:37:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.exprotExcel
2019-03-17 11:37:28 -参数 : [com.bootdo.elec.vo.ElecVo@5111acd7, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6142c627]
2019-03-17 11:37:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? 
2019-03-17 11:37:28 -==> Parameters: 2019-03(String), 3(Long)
2019-03-17 11:37:28 -<==      Total: 1
2019-03-17 11:37:46 -耗时 : 18754
2019-03-17 11:37:46 -返回值 : null
2019-03-17 11:37:53 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-17 11:46:07 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 11:46:07 -==> Parameters: 1(Long)
2019-03-17 11:46:07 -<==      Total: 86
2019-03-17 11:46:07 -请求地址 : http://localhost:8081/charts/countDD
2019-03-17 11:46:07 -HTTP METHOD : GET
2019-03-17 11:46:07 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-17 11:46:07 -参数 : []
2019-03-17 11:46:07 -耗时 : 0
2019-03-17 11:46:07 -返回值 : charts/countDD
2019-03-17 11:48:31 -请求地址 : http://localhost:8081/charts/countDD
2019-03-17 11:48:31 -HTTP METHOD : GET
2019-03-17 11:48:31 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-17 11:48:31 -参数 : []
2019-03-17 11:48:31 -耗时 : 0
2019-03-17 11:48:31 -返回值 : charts/countDD
2019-03-17 11:48:50 -请求地址 : http://localhost:8081/charts/countDD
2019-03-17 11:48:50 -HTTP METHOD : GET
2019-03-17 11:48:50 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-17 11:48:50 -参数 : []
2019-03-17 11:48:50 -耗时 : 1
2019-03-17 11:48:50 -返回值 : charts/countDD
2019-03-17 11:50:40 -请求地址 : http://localhost:8081/index
2019-03-17 11:50:40 -HTTP METHOD : GET
2019-03-17 11:50:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 11:50:40 -参数 : [{}]
2019-03-17 11:50:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 11:50:40 -==> Parameters: 1(Long)
2019-03-17 11:50:40 -<==      Total: 45
2019-03-17 11:50:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 11:50:40 -==> Parameters: 138(Long)
2019-03-17 11:50:40 -<==      Total: 1
2019-03-17 11:50:40 -耗时 : 28
2019-03-17 11:50:40 -返回值 : index_v1
2019-03-17 11:50:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 11:50:40 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 11:50:40.391(Timestamp)
2019-03-17 11:50:40 -请求地址 : http://localhost:8081/main
2019-03-17 11:50:40 -HTTP METHOD : GET
2019-03-17 11:50:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 11:50:40 -参数 : []
2019-03-17 11:50:40 -耗时 : 1
2019-03-17 11:50:40 -返回值 : main
2019-03-17 11:50:40 -<==    Updates: 1
2019-03-17 11:50:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 11:50:40 -HTTP METHOD : GET
2019-03-17 11:50:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 11:50:40 -参数 : []
2019-03-17 11:50:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 11:50:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 11:50:40 -<==      Total: 0
2019-03-17 11:50:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 11:50:40 -==> Parameters: 1(Long), 0(String)
2019-03-17 11:50:40 -<==      Total: 1
2019-03-17 11:50:41 -耗时 : 7
2019-03-17 11:50:41 -返回值 : com.bootdo.common.utils.PageUtils@3e9cabe6
2019-03-17 11:50:41 -请求地址 : http://localhost:8081/main
2019-03-17 11:50:41 -HTTP METHOD : GET
2019-03-17 11:50:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 11:50:41 -参数 : []
2019-03-17 11:50:41 -耗时 : 1
2019-03-17 11:50:41 -返回值 : main
2019-03-17 11:50:49 -请求地址 : http://localhost:8081/charts/countDD
2019-03-17 11:50:49 -HTTP METHOD : GET
2019-03-17 11:50:49 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-17 11:50:49 -参数 : []
2019-03-17 11:50:49 -耗时 : 1
2019-03-17 11:50:49 -返回值 : charts/countDD
2019-03-17 11:51:42 -请求地址 : http://localhost:8081/charts/countDD
2019-03-17 11:51:42 -HTTP METHOD : GET
2019-03-17 11:51:42 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-17 11:51:42 -参数 : []
2019-03-17 11:51:42 -耗时 : 1
2019-03-17 11:51:42 -返回值 : charts/countDD
2019-03-17 11:51:58 -请求地址 : http://localhost:8081/charts/countDD
2019-03-17 11:51:58 -HTTP METHOD : GET
2019-03-17 11:51:58 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-17 11:51:58 -参数 : []
2019-03-17 11:51:58 -耗时 : 0
2019-03-17 11:51:58 -返回值 : charts/countDD
2019-03-17 11:53:44 -请求地址 : http://localhost:8081/charts/countDD
2019-03-17 11:53:44 -HTTP METHOD : GET
2019-03-17 11:53:44 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-17 11:53:44 -参数 : []
2019-03-17 11:53:44 -耗时 : 0
2019-03-17 11:53:44 -返回值 : charts/countDD
2019-03-17 11:55:46 -请求地址 : http://localhost:8081/index
2019-03-17 11:55:46 -HTTP METHOD : GET
2019-03-17 11:55:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 11:55:46 -参数 : [{}]
2019-03-17 11:55:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 11:55:46 -==> Parameters: 1(Long)
2019-03-17 11:55:46 -<==      Total: 45
2019-03-17 11:55:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 11:55:46 -==> Parameters: 138(Long)
2019-03-17 11:55:46 -<==      Total: 1
2019-03-17 11:55:46 -耗时 : 31
2019-03-17 11:55:46 -返回值 : index_v1
2019-03-17 11:55:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 11:55:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 11:55:46.579(Timestamp)
2019-03-17 11:55:46 -请求地址 : http://localhost:8081/main
2019-03-17 11:55:46 -HTTP METHOD : GET
2019-03-17 11:55:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 11:55:46 -参数 : []
2019-03-17 11:55:46 -耗时 : 1
2019-03-17 11:55:46 -返回值 : main
2019-03-17 11:55:46 -<==    Updates: 1
2019-03-17 11:55:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 11:55:47 -HTTP METHOD : GET
2019-03-17 11:55:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 11:55:47 -参数 : []
2019-03-17 11:55:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 11:55:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 11:55:47 -<==      Total: 0
2019-03-17 11:55:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 11:55:47 -==> Parameters: 1(Long), 0(String)
2019-03-17 11:55:47 -<==      Total: 1
2019-03-17 11:55:47 -耗时 : 8
2019-03-17 11:55:47 -返回值 : com.bootdo.common.utils.PageUtils@5bac3819
2019-03-17 11:55:47 -请求地址 : http://localhost:8081/main
2019-03-17 11:55:47 -HTTP METHOD : GET
2019-03-17 11:55:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 11:55:47 -参数 : []
2019-03-17 11:55:47 -耗时 : 1
2019-03-17 11:55:47 -返回值 : main
2019-03-17 11:56:06 -请求地址 : http://localhost:8081/charts/countDD
2019-03-17 11:56:06 -HTTP METHOD : GET
2019-03-17 11:56:06 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-17 11:56:06 -参数 : []
2019-03-17 11:56:06 -耗时 : 1
2019-03-17 11:56:06 -返回值 : charts/countDD
2019-03-17 11:56:57 -请求地址 : http://localhost:8081/index
2019-03-17 11:56:57 -HTTP METHOD : GET
2019-03-17 11:56:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 11:56:57 -参数 : [{}]
2019-03-17 11:56:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 11:56:57 -==> Parameters: 1(Long)
2019-03-17 11:56:57 -<==      Total: 45
2019-03-17 11:56:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 11:56:57 -==> Parameters: 138(Long)
2019-03-17 11:56:57 -<==      Total: 1
2019-03-17 11:56:57 -耗时 : 28
2019-03-17 11:56:57 -返回值 : index_v1
2019-03-17 11:56:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 11:56:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 11:56:57.162(Timestamp)
2019-03-17 11:56:57 -请求地址 : http://localhost:8081/main
2019-03-17 11:56:57 -HTTP METHOD : GET
2019-03-17 11:56:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 11:56:57 -参数 : []
2019-03-17 11:56:57 -耗时 : 1
2019-03-17 11:56:57 -返回值 : main
2019-03-17 11:56:57 -<==    Updates: 1
2019-03-17 11:56:57 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 11:56:57 -HTTP METHOD : GET
2019-03-17 11:56:57 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 11:56:57 -参数 : []
2019-03-17 11:56:57 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 11:56:57 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 11:56:57 -<==      Total: 0
2019-03-17 11:56:57 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 11:56:57 -==> Parameters: 1(Long), 0(String)
2019-03-17 11:56:57 -<==      Total: 1
2019-03-17 11:56:57 -耗时 : 16
2019-03-17 11:56:57 -返回值 : com.bootdo.common.utils.PageUtils@72f15617
2019-03-17 11:56:57 -请求地址 : http://localhost:8081/main
2019-03-17 11:56:57 -HTTP METHOD : GET
2019-03-17 11:56:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 11:56:57 -参数 : []
2019-03-17 11:56:57 -耗时 : 0
2019-03-17 11:56:57 -返回值 : main
2019-03-17 11:57:05 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 11:57:05 -==> Parameters: 1(Long)
2019-03-17 11:57:05 -<==      Total: 86
2019-03-17 11:57:05 -请求地址 : http://localhost:8081/charts/countDD
2019-03-17 11:57:05 -HTTP METHOD : GET
2019-03-17 11:57:05 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-17 11:57:05 -参数 : []
2019-03-17 11:57:05 -耗时 : 0
2019-03-17 11:57:05 -返回值 : charts/countDD
2019-03-17 11:57:52 -请求地址 : http://localhost:8081/index
2019-03-17 11:57:52 -HTTP METHOD : GET
2019-03-17 11:57:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 11:57:52 -参数 : [{}]
2019-03-17 11:57:52 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 11:57:52 -==> Parameters: 1(Long)
2019-03-17 11:57:52 -<==      Total: 45
2019-03-17 11:57:52 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 11:57:52 -==> Parameters: 138(Long)
2019-03-17 11:57:52 -<==      Total: 1
2019-03-17 11:57:52 -耗时 : 23
2019-03-17 11:57:52 -返回值 : index_v1
2019-03-17 11:57:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 11:57:52 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 11:57:52.487(Timestamp)
2019-03-17 11:57:52 -请求地址 : http://localhost:8081/main
2019-03-17 11:57:52 -HTTP METHOD : GET
2019-03-17 11:57:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 11:57:52 -参数 : []
2019-03-17 11:57:52 -耗时 : 1
2019-03-17 11:57:52 -返回值 : main
2019-03-17 11:57:52 -<==    Updates: 1
2019-03-17 11:57:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 11:57:52 -HTTP METHOD : GET
2019-03-17 11:57:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 11:57:52 -参数 : []
2019-03-17 11:57:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 11:57:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 11:57:52 -<==      Total: 0
2019-03-17 11:57:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 11:57:52 -==> Parameters: 1(Long), 0(String)
2019-03-17 11:57:52 -<==      Total: 1
2019-03-17 11:57:52 -耗时 : 7
2019-03-17 11:57:52 -返回值 : com.bootdo.common.utils.PageUtils@586a6abf
2019-03-17 11:57:53 -请求地址 : http://localhost:8081/main
2019-03-17 11:57:53 -HTTP METHOD : GET
2019-03-17 11:57:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 11:57:53 -参数 : []
2019-03-17 11:57:53 -耗时 : 1
2019-03-17 11:57:53 -返回值 : main
2019-03-17 11:58:02 -请求地址 : http://localhost:8081/charts/countDD
2019-03-17 11:58:02 -HTTP METHOD : GET
2019-03-17 11:58:02 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-17 11:58:02 -参数 : []
2019-03-17 11:58:02 -耗时 : 0
2019-03-17 11:58:02 -返回值 : charts/countDD
2019-03-17 11:58:17 -请求地址 : http://localhost:8081/charts/countDD
2019-03-17 11:58:17 -HTTP METHOD : GET
2019-03-17 11:58:17 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-17 11:58:17 -参数 : []
2019-03-17 11:58:17 -耗时 : 1
2019-03-17 11:58:17 -返回值 : charts/countDD
2019-03-17 11:59:58 -请求地址 : http://localhost:8081/charts/countDD
2019-03-17 11:59:58 -HTTP METHOD : GET
2019-03-17 11:59:58 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-17 11:59:58 -参数 : []
2019-03-17 11:59:58 -耗时 : 0
2019-03-17 11:59:58 -返回值 : charts/countDD
2019-03-17 12:00:55 -请求地址 : http://localhost:8081/login;JSESSIONID=5f561646-0855-4667-840f-d22ee44496ab
2019-03-17 12:00:55 -HTTP METHOD : GET
2019-03-17 12:00:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 12:00:55 -参数 : [{}]
2019-03-17 12:00:55 -耗时 : 1
2019-03-17 12:00:55 -返回值 : login
2019-03-17 12:00:56 -请求地址 : http://localhost:8081/getVerify
2019-03-17 12:00:56 -HTTP METHOD : GET
2019-03-17 12:00:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-17 12:00:56 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f7e8201, org.apache.shiro.web.servlet.ShiroHttpServletResponse@45c10a8f]
2019-03-17 12:00:56 -1775
2019-03-17 12:00:56 -耗时 : 72
2019-03-17 12:00:56 -返回值 : null
2019-03-17 12:00:56 -请求地址 : http://localhost:8081/login
2019-03-17 12:00:56 -HTTP METHOD : GET
2019-03-17 12:00:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 12:00:56 -参数 : [{}]
2019-03-17 12:00:56 -耗时 : 1
2019-03-17 12:00:56 -返回值 : login
2019-03-17 12:01:01 -请求地址 : http://localhost:8081/login
2019-03-17 12:01:01 -HTTP METHOD : POST
2019-03-17 12:01:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 12:01:01 -参数 : [admin, 111111, 1775, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3d49f0f0]
2019-03-17 12:01:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-17 12:01:01 -==> Parameters: admin(String)
2019-03-17 12:01:01 -<==      Total: 1
2019-03-17 12:01:01 -耗时 : 41
2019-03-17 12:01:01 -返回值 : {msg=操作成功, code=0}
2019-03-17 12:01:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 12:01:01 -==> Parameters: 1(Long), admin(String), 登录(String), 42(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 12:01:01.653(Timestamp)
2019-03-17 12:01:01 -请求地址 : http://localhost:8081/index
2019-03-17 12:01:01 -HTTP METHOD : GET
2019-03-17 12:01:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 12:01:01 -参数 : [{}]
2019-03-17 12:01:01 -<==    Updates: 1
2019-03-17 12:01:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 12:01:01 -==> Parameters: 1(Long)
2019-03-17 12:01:02 -<==      Total: 45
2019-03-17 12:01:02 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 12:01:02 -==> Parameters: 138(Long)
2019-03-17 12:01:02 -<==      Total: 1
2019-03-17 12:01:02 -耗时 : 346
2019-03-17 12:01:02 -返回值 : index_v1
2019-03-17 12:01:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 12:01:02 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 346(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 12:01:02.063(Timestamp)
2019-03-17 12:01:02 -<==    Updates: 1
2019-03-17 12:01:02 -请求地址 : http://localhost:8081/main
2019-03-17 12:01:02 -HTTP METHOD : GET
2019-03-17 12:01:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 12:01:02 -参数 : []
2019-03-17 12:01:02 -耗时 : 1
2019-03-17 12:01:02 -返回值 : main
2019-03-17 12:01:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 12:01:03 -HTTP METHOD : GET
2019-03-17 12:01:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 12:01:03 -参数 : []
2019-03-17 12:01:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 12:01:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 12:01:03 -<==      Total: 0
2019-03-17 12:01:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 12:01:03 -==> Parameters: 1(Long), 0(String)
2019-03-17 12:01:03 -<==      Total: 1
2019-03-17 12:01:03 -耗时 : 100
2019-03-17 12:01:03 -请求地址 : http://localhost:8081/main
2019-03-17 12:01:03 -HTTP METHOD : GET
2019-03-17 12:01:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 12:01:03 -参数 : []
2019-03-17 12:01:03 -耗时 : 13
2019-03-17 12:01:03 -返回值 : main
2019-03-17 12:01:03 -返回值 : com.bootdo.common.utils.PageUtils@38ff086c
2019-03-17 12:01:12 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 12:01:12 -==> Parameters: 1(Long)
2019-03-17 12:01:12 -<==      Total: 86
2019-03-17 12:01:12 -请求地址 : http://localhost:8081/charts/countDD
2019-03-17 12:01:12 -HTTP METHOD : GET
2019-03-17 12:01:12 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-17 12:01:12 -参数 : []
2019-03-17 12:01:12 -耗时 : 1
2019-03-17 12:01:12 -返回值 : charts/countDD
2019-03-17 12:01:19 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 12:01:19 -HTTP METHOD : GET
2019-03-17 12:01:19 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 12:01:19 -参数 : [userType]
2019-03-17 12:01:19 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 12:01:19 -==> Parameters: userType(String)
2019-03-17 12:01:20 -<==      Total: 2
2019-03-17 12:01:20 -耗时 : 582
2019-03-17 12:01:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 12:01:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 12:01:24 -HTTP METHOD : GET
2019-03-17 12:01:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 12:01:24 -参数 : []
2019-03-17 12:01:24 -耗时 : 1
2019-03-17 12:01:24 -返回值 : system/dept/deptTree
2019-03-17 12:01:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 12:01:24 -HTTP METHOD : GET
2019-03-17 12:01:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 12:01:24 -参数 : []
2019-03-17 12:01:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 12:01:24 -==> Parameters: 
2019-03-17 12:01:24 -<==      Total: 3
2019-03-17 12:01:24 -耗时 : 48
2019-03-17 12:01:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 12:01:41 -请求地址 : http://localhost:8081/index
2019-03-17 12:01:41 -HTTP METHOD : GET
2019-03-17 12:01:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 12:01:41 -参数 : [{}]
2019-03-17 12:01:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 12:01:41 -==> Parameters: 1(Long)
2019-03-17 12:01:41 -<==      Total: 45
2019-03-17 12:01:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 12:01:41 -==> Parameters: 138(Long)
2019-03-17 12:01:41 -<==      Total: 1
2019-03-17 12:01:41 -耗时 : 100
2019-03-17 12:01:41 -返回值 : index_v1
2019-03-17 12:01:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 12:01:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 101(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 12:01:41.823(Timestamp)
2019-03-17 12:01:41 -<==    Updates: 1
2019-03-17 12:01:42 -请求地址 : http://localhost:8081/main
2019-03-17 12:01:42 -HTTP METHOD : GET
2019-03-17 12:01:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 12:01:42 -参数 : []
2019-03-17 12:01:42 -耗时 : 0
2019-03-17 12:01:42 -返回值 : main
2019-03-17 12:01:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 12:01:42 -HTTP METHOD : GET
2019-03-17 12:01:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 12:01:42 -参数 : []
2019-03-17 12:01:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 12:01:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 12:01:42 -<==      Total: 0
2019-03-17 12:01:42 -请求地址 : http://localhost:8081/main
2019-03-17 12:01:42 -HTTP METHOD : GET
2019-03-17 12:01:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 12:01:42 -参数 : []
2019-03-17 12:01:42 -耗时 : 1
2019-03-17 12:01:42 -返回值 : main
2019-03-17 12:01:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 12:01:42 -==> Parameters: 1(Long), 0(String)
2019-03-17 12:01:42 -<==      Total: 1
2019-03-17 12:01:42 -耗时 : 91
2019-03-17 12:01:42 -返回值 : com.bootdo.common.utils.PageUtils@63e15df3
2019-03-17 12:01:48 -请求地址 : http://localhost:8081/charts/countDD
2019-03-17 12:01:48 -HTTP METHOD : GET
2019-03-17 12:01:48 -CLASS_METHOD : com.bootdo.charts.controller.countDDController.countDD
2019-03-17 12:01:48 -参数 : []
2019-03-17 12:01:48 -耗时 : 1
2019-03-17 12:01:48 -返回值 : charts/countDD
2019-03-17 12:01:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 12:01:48 -HTTP METHOD : GET
2019-03-17 12:01:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 12:01:48 -参数 : [userType]
2019-03-17 12:01:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 12:01:48 -==> Parameters: userType(String)
2019-03-17 12:01:48 -<==      Total: 2
2019-03-17 12:01:48 -耗时 : 6
2019-03-17 12:01:48 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 12:01:50 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 12:01:50 -HTTP METHOD : GET
2019-03-17 12:01:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 12:01:50 -参数 : []
2019-03-17 12:01:50 -耗时 : 1
2019-03-17 12:01:50 -返回值 : system/dept/deptTree
2019-03-17 12:01:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 12:01:51 -HTTP METHOD : GET
2019-03-17 12:01:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 12:01:51 -参数 : []
2019-03-17 12:01:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 12:01:51 -==> Parameters: 
2019-03-17 12:01:51 -<==      Total: 3
2019-03-17 12:01:51 -耗时 : 8
2019-03-17 12:01:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 12:02:15 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 9 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(8)-CONNECTED(8)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 3, active threads = 0, queued tasks = 0, completed tasks = 96], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 16], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 423]
2019-03-17 12:04:23 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-17 12:04:23 -HTTP METHOD : GET
2019-03-17 12:04:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-17 12:04:23 -参数 : []
2019-03-17 12:04:23 -耗时 : 1
2019-03-17 12:04:23 -返回值 : elec/elecInto/elecInto
2019-03-17 12:05:21 -请求地址 : http://localhost:8081/sys/user/personal
2019-03-17 12:05:21 -HTTP METHOD : GET
2019-03-17 12:05:21 -CLASS_METHOD : com.bootdo.system.controller.UserController.personal
2019-03-17 12:05:21 -参数 : [{}]
2019-03-17 12:05:21 -==>  Preparing: select role_id from sys_user_role where user_id=? 
2019-03-17 12:05:21 -==> Parameters: 1(Long)
2019-03-17 12:05:21 -<==      Total: 1
2019-03-17 12:05:21 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user where user_id = ? 
2019-03-17 12:05:21 -==> Parameters: 1(Long)
2019-03-17 12:05:21 -<==      Total: 1
2019-03-17 12:05:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept where dept_id = ? 
2019-03-17 12:05:21 -==> Parameters: 1(Long)
2019-03-17 12:05:21 -<==      Total: 1
2019-03-17 12:05:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 12:05:21 -==> Parameters: hobby(String)
2019-03-17 12:05:21 -<==      Total: 2
2019-03-17 12:05:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 12:05:21 -==> Parameters: sex(String)
2019-03-17 12:05:21 -<==      Total: 2
2019-03-17 12:05:21 -耗时 : 323
2019-03-17 12:05:21 -返回值 : system/user/personal
2019-03-17 12:06:44 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-17 12:06:44 -HTTP METHOD : GET
2019-03-17 12:06:44 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-17 12:06:44 -参数 : []
2019-03-17 12:06:44 -耗时 : 0
2019-03-17 12:06:44 -返回值 : /moneyList/moneyList
2019-03-17 12:07:14 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-03-17 12:07:14 -HTTP METHOD : GET
2019-03-17 12:07:14 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-03-17 12:07:14 -参数 : []
2019-03-17 12:07:14 -耗时 : 2
2019-03-17 12:07:14 -返回值 : elec/elecUpLoad/elecUpLoad
2019-03-17 12:08:50 -请求地址 : http://localhost:8081/moneyLog/elecLog
2019-03-17 12:08:50 -HTTP METHOD : GET
2019-03-17 12:08:50 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.moneyLog
2019-03-17 12:08:50 -参数 : []
2019-03-17 12:08:50 -耗时 : 0
2019-03-17 12:08:50 -返回值 : /moneyLog/elecLog/elecLog
2019-03-17 12:08:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 12:08:50 -HTTP METHOD : GET
2019-03-17 12:08:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 12:08:50 -参数 : [userType]
2019-03-17 12:08:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 12:08:50 -==> Parameters: userType(String)
2019-03-17 12:08:50 -<==      Total: 2
2019-03-17 12:08:50 -耗时 : 27
2019-03-17 12:08:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 12:08:51 -请求地址 : http://localhost:8081/moneyLog/elecLog/list
2019-03-17 12:08:51 -HTTP METHOD : GET
2019-03-17 12:08:51 -CLASS_METHOD : com.bootdo.moneyLog.controller.ElecLogController.list
2019-03-17 12:08:51 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-17 12:08:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_org`,`elec_money`,`elec_date`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec_log order by id asc limit ?, ? 
2019-03-17 12:08:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-17 12:08:51 -<==      Total: 3
2019-03-17 12:08:51 -==>  Preparing: select count(*) from elec_log 
2019-03-17 12:08:51 -==> Parameters: 
2019-03-17 12:08:51 -<==      Total: 1
2019-03-17 12:08:51 -耗时 : 368
2019-03-17 12:08:51 -返回值 : com.bootdo.common.utils.PageUtils@3eb10a81
2019-03-17 12:15:39 -请求地址 : http://localhost:8081/index
2019-03-17 12:15:39 -HTTP METHOD : GET
2019-03-17 12:15:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 12:15:39 -参数 : [{}]
2019-03-17 12:15:39 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 12:15:39 -==> Parameters: 1(Long)
2019-03-17 12:15:39 -<==      Total: 45
2019-03-17 12:15:39 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 12:15:39 -==> Parameters: 138(Long)
2019-03-17 12:15:39 -<==      Total: 1
2019-03-17 12:15:39 -耗时 : 87
2019-03-17 12:15:39 -返回值 : index_v1
2019-03-17 12:15:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 12:15:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 87(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 12:15:39.882(Timestamp)
2019-03-17 12:15:40 -<==    Updates: 1
2019-03-17 12:15:40 -请求地址 : http://localhost:8081/main
2019-03-17 12:15:40 -HTTP METHOD : GET
2019-03-17 12:15:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 12:15:40 -参数 : []
2019-03-17 12:15:40 -耗时 : 1
2019-03-17 12:15:40 -返回值 : main
2019-03-17 12:15:40 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 12:15:40 -HTTP METHOD : GET
2019-03-17 12:15:40 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 12:15:40 -参数 : []
2019-03-17 12:15:40 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 12:15:40 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 12:15:40 -<==      Total: 0
2019-03-17 12:15:40 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 12:15:40 -==> Parameters: 1(Long), 0(String)
2019-03-17 12:15:40 -<==      Total: 1
2019-03-17 12:15:40 -耗时 : 110
2019-03-17 12:15:40 -返回值 : com.bootdo.common.utils.PageUtils@60b98d76
2019-03-17 12:15:40 -请求地址 : http://localhost:8081/main
2019-03-17 12:15:40 -HTTP METHOD : GET
2019-03-17 12:15:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 12:15:40 -参数 : []
2019-03-17 12:15:40 -耗时 : 14
2019-03-17 12:15:40 -返回值 : main
2019-03-17 12:15:45 -请求地址 : http://localhost:8081/index
2019-03-17 12:15:45 -HTTP METHOD : GET
2019-03-17 12:15:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 12:15:45 -参数 : [{}]
2019-03-17 12:15:45 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 12:15:45 -==> Parameters: 1(Long)
2019-03-17 12:15:45 -<==      Total: 45
2019-03-17 12:15:45 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 12:15:45 -==> Parameters: 138(Long)
2019-03-17 12:15:45 -<==      Total: 1
2019-03-17 12:15:45 -耗时 : 33
2019-03-17 12:15:45 -返回值 : index_v1
2019-03-17 12:15:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 12:15:45 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 12:15:45.096(Timestamp)
2019-03-17 12:15:45 -<==    Updates: 1
2019-03-17 12:15:45 -请求地址 : http://localhost:8081/main
2019-03-17 12:15:45 -HTTP METHOD : GET
2019-03-17 12:15:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 12:15:45 -参数 : []
2019-03-17 12:15:45 -耗时 : 43
2019-03-17 12:15:45 -返回值 : main
2019-03-17 12:15:45 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 12:15:45 -HTTP METHOD : GET
2019-03-17 12:15:45 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 12:15:45 -参数 : []
2019-03-17 12:15:45 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 12:15:45 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 12:15:45 -<==      Total: 0
2019-03-17 12:15:45 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 12:15:45 -==> Parameters: 1(Long), 0(String)
2019-03-17 12:15:45 -<==      Total: 1
2019-03-17 12:15:45 -耗时 : 12
2019-03-17 12:15:45 -返回值 : com.bootdo.common.utils.PageUtils@4955c4a6
2019-03-17 12:15:45 -请求地址 : http://localhost:8081/main
2019-03-17 12:15:45 -HTTP METHOD : GET
2019-03-17 12:15:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 12:15:45 -参数 : []
2019-03-17 12:15:45 -耗时 : 1
2019-03-17 12:15:45 -返回值 : main
2019-03-17 12:15:54 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 12:15:54 -==> Parameters: 1(Long)
2019-03-17 12:15:54 -<==      Total: 86
2019-03-17 12:15:54 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-03-17 12:15:54 -HTTP METHOD : GET
2019-03-17 12:15:54 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-03-17 12:15:54 -参数 : []
2019-03-17 12:15:54 -耗时 : 0
2019-03-17 12:15:54 -返回值 : elec/elecUpLoad/elecUpLoad
2019-03-17 12:16:03 -请求地址 : http://localhost:8081/index
2019-03-17 12:16:03 -HTTP METHOD : GET
2019-03-17 12:16:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 12:16:03 -参数 : [{}]
2019-03-17 12:16:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 12:16:03 -==> Parameters: 1(Long)
2019-03-17 12:16:03 -<==      Total: 45
2019-03-17 12:16:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 12:16:03 -==> Parameters: 138(Long)
2019-03-17 12:16:03 -<==      Total: 1
2019-03-17 12:16:03 -耗时 : 251
2019-03-17 12:16:03 -返回值 : index_v1
2019-03-17 12:16:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 12:16:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 252(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 12:16:03.703(Timestamp)
2019-03-17 12:16:03 -请求地址 : http://localhost:8081/main
2019-03-17 12:16:03 -HTTP METHOD : GET
2019-03-17 12:16:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 12:16:03 -参数 : []
2019-03-17 12:16:03 -耗时 : 1
2019-03-17 12:16:03 -返回值 : main
2019-03-17 12:16:03 -<==    Updates: 1
2019-03-17 12:16:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 12:16:04 -HTTP METHOD : GET
2019-03-17 12:16:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 12:16:04 -参数 : []
2019-03-17 12:16:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 12:16:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 12:16:04 -<==      Total: 0
2019-03-17 12:16:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 12:16:04 -==> Parameters: 1(Long), 0(String)
2019-03-17 12:16:04 -<==      Total: 1
2019-03-17 12:16:04 -耗时 : 13
2019-03-17 12:16:04 -返回值 : com.bootdo.common.utils.PageUtils@4ad648de
2019-03-17 12:16:04 -请求地址 : http://localhost:8081/main
2019-03-17 12:16:04 -HTTP METHOD : GET
2019-03-17 12:16:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 12:16:04 -参数 : []
2019-03-17 12:16:04 -耗时 : 1
2019-03-17 12:16:04 -返回值 : main
2019-03-17 12:16:25 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-17 12:16:25 -HTTP METHOD : GET
2019-03-17 12:16:25 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-17 12:16:25 -参数 : []
2019-03-17 12:16:25 -耗时 : 1
2019-03-17 12:16:25 -返回值 : elec/elecInto/elecInto
2019-03-17 12:17:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 12:17:06 -HTTP METHOD : GET
2019-03-17 12:17:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 12:17:06 -参数 : []
2019-03-17 12:17:06 -耗时 : 1
2019-03-17 12:17:06 -返回值 : system/dept/deptTree
2019-03-17 12:17:07 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 12:17:07 -HTTP METHOD : GET
2019-03-17 12:17:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 12:17:07 -参数 : []
2019-03-17 12:17:07 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 12:17:07 -==> Parameters: 
2019-03-17 12:17:07 -<==      Total: 3
2019-03-17 12:17:07 -耗时 : 30
2019-03-17 12:17:07 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 12:17:11 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-03-17 12:17:11 -HTTP METHOD : POST
2019-03-17 12:17:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-03-17 12:17:11 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@642b531f, com.bootdo.elec.domain.ElecDO@4b3345ce]
2019-03-17 12:17:13 -耗时 : 1641
2019-03-17 12:17:13 -返回值 : {result=success}
2019-03-17 12:17:16 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-03-17 12:17:16 -HTTP METHOD : POST
2019-03-17 12:17:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-03-17 12:17:16 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6dc79870, com.bootdo.elec.domain.ElecDO@40b8315f]
2019-03-17 12:17:16 -耗时 : 10
2019-03-17 12:17:16 -返回值 : {result=success}
2019-03-17 12:17:18 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-03-17 12:17:18 -HTTP METHOD : POST
2019-03-17 12:17:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-03-17 12:17:18 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7d3fc413, com.bootdo.elec.domain.ElecDO@6b104a84]
2019-03-17 12:17:18 -耗时 : 8
2019-03-17 12:17:18 -返回值 : {result=success}
2019-03-17 12:17:19 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-03-17 12:17:19 -HTTP METHOD : POST
2019-03-17 12:17:19 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-03-17 12:17:19 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2a3ea910, com.bootdo.elec.domain.ElecDO@37b7b84b]
2019-03-17 12:17:19 -耗时 : 9
2019-03-17 12:17:19 -返回值 : {result=success}
2019-03-17 12:17:20 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-03-17 12:17:20 -HTTP METHOD : POST
2019-03-17 12:17:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-03-17 12:17:20 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@35700900, com.bootdo.elec.domain.ElecDO@575732d3]
2019-03-17 12:17:20 -耗时 : 23
2019-03-17 12:17:20 -返回值 : {result=success}
2019-03-17 12:17:21 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-03-17 12:17:21 -HTTP METHOD : POST
2019-03-17 12:17:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-03-17 12:17:21 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@230f72d5, com.bootdo.elec.domain.ElecDO@341d1919]
2019-03-17 12:17:21 -耗时 : 4
2019-03-17 12:17:21 -返回值 : {result=success}
2019-03-17 12:17:22 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-03-17 12:17:22 -HTTP METHOD : POST
2019-03-17 12:17:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-03-17 12:17:22 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@6fc26ac8, com.bootdo.elec.domain.ElecDO@286d0e0d]
2019-03-17 12:17:22 -耗时 : 39
2019-03-17 12:17:22 -返回值 : {result=success}
2019-03-17 12:17:22 -请求地址 : http://localhost:8081/elec/elecInto/importElecIntoExcel
2019-03-17 12:17:22 -HTTP METHOD : POST
2019-03-17 12:17:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel
2019-03-17 12:17:22 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@179ffa5a, com.bootdo.elec.domain.ElecDO@11ef85dc]
2019-03-17 12:17:22 -耗时 : 5
2019-03-17 12:17:22 -返回值 : {result=success}
2019-03-17 12:19:24 -请求地址 : http://localhost:8081/moneyList/moneyList
2019-03-17 12:19:24 -HTTP METHOD : GET
2019-03-17 12:19:24 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListController.MoneyList
2019-03-17 12:19:24 -参数 : []
2019-03-17 12:19:24 -耗时 : 1
2019-03-17 12:19:24 -返回值 : /moneyList/moneyList
2019-03-17 12:24:50 -请求地址 : http://localhost:8081/print/print
2019-03-17 12:24:50 -HTTP METHOD : GET
2019-03-17 12:24:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-17 12:24:50 -参数 : []
2019-03-17 12:24:50 -耗时 : 0
2019-03-17 12:24:50 -返回值 : print/print/print
2019-03-17 12:24:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 12:24:50 -HTTP METHOD : GET
2019-03-17 12:24:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 12:24:50 -参数 : [userType]
2019-03-17 12:24:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 12:24:50 -==> Parameters: userType(String)
2019-03-17 12:24:50 -<==      Total: 2
2019-03-17 12:24:50 -耗时 : 5
2019-03-17 12:24:50 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 12:24:50 -请求地址 : http://localhost:8081/print/print/list
2019-03-17 12:24:50 -HTTP METHOD : GET
2019-03-17 12:24:50 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-17 12:24:50 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-17 12:24:51 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-17 12:24:51 -==> Parameters: 0(Integer), 10(Integer)
2019-03-17 12:24:51 -<==      Total: 3
2019-03-17 12:24:51 -==>  Preparing: select count(*) from print 
2019-03-17 12:24:51 -==> Parameters: 
2019-03-17 12:24:51 -<==      Total: 1
2019-03-17 12:24:51 -耗时 : 710
2019-03-17 12:24:51 -返回值 : com.bootdo.common.utils.PageUtils@da94a98
2019-03-17 12:24:54 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-03-17 12:24:54 -HTTP METHOD : GET
2019-03-17 12:24:54 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-03-17 12:24:54 -参数 : [1, {}]
2019-03-17 12:24:54 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-17 12:24:54 -==> Parameters: 1(Long)
2019-03-17 12:24:54 -<==      Total: 1
2019-03-17 12:24:54 -耗时 : 25
2019-03-17 12:24:54 -返回值 : print/print/printEdit
2019-03-17 12:25:11 -请求地址 : http://localhost:8081/index
2019-03-17 12:25:11 -HTTP METHOD : GET
2019-03-17 12:25:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 12:25:11 -参数 : [{}]
2019-03-17 12:25:11 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 12:25:11 -==> Parameters: 1(Long)
2019-03-17 12:25:11 -<==      Total: 45
2019-03-17 12:25:11 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 12:25:11 -==> Parameters: 138(Long)
2019-03-17 12:25:11 -<==      Total: 1
2019-03-17 12:25:11 -耗时 : 70
2019-03-17 12:25:11 -返回值 : index_v1
2019-03-17 12:25:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 12:25:11 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 70(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 12:25:11.171(Timestamp)
2019-03-17 12:25:11 -<==    Updates: 1
2019-03-17 12:25:11 -请求地址 : http://localhost:8081/main
2019-03-17 12:25:11 -HTTP METHOD : GET
2019-03-17 12:25:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 12:25:11 -参数 : []
2019-03-17 12:25:11 -耗时 : 0
2019-03-17 12:25:11 -返回值 : main
2019-03-17 12:25:12 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 12:25:12 -HTTP METHOD : GET
2019-03-17 12:25:12 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 12:25:12 -参数 : []
2019-03-17 12:25:12 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 12:25:12 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 12:25:12 -<==      Total: 0
2019-03-17 12:25:12 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 12:25:12 -==> Parameters: 1(Long), 0(String)
2019-03-17 12:25:12 -<==      Total: 1
2019-03-17 12:25:12 -耗时 : 13
2019-03-17 12:25:12 -返回值 : com.bootdo.common.utils.PageUtils@28648420
2019-03-17 12:25:12 -请求地址 : http://localhost:8081/main
2019-03-17 12:25:12 -HTTP METHOD : GET
2019-03-17 12:25:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 12:25:12 -参数 : []
2019-03-17 12:25:12 -耗时 : 0
2019-03-17 12:25:12 -返回值 : main
2019-03-17 12:25:18 -请求地址 : http://localhost:8081/print/print
2019-03-17 12:25:18 -HTTP METHOD : GET
2019-03-17 12:25:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-17 12:25:18 -参数 : []
2019-03-17 12:25:18 -耗时 : 1
2019-03-17 12:25:18 -返回值 : print/print/print
2019-03-17 12:25:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 12:25:18 -HTTP METHOD : GET
2019-03-17 12:25:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 12:25:18 -参数 : [userType]
2019-03-17 12:25:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 12:25:18 -==> Parameters: userType(String)
2019-03-17 12:25:18 -<==      Total: 2
2019-03-17 12:25:18 -耗时 : 9
2019-03-17 12:25:18 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 12:25:18 -请求地址 : http://localhost:8081/print/print/list
2019-03-17 12:25:18 -HTTP METHOD : GET
2019-03-17 12:25:18 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-17 12:25:18 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-17 12:25:18 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-17 12:25:18 -==> Parameters: 0(Integer), 10(Integer)
2019-03-17 12:25:18 -<==      Total: 3
2019-03-17 12:25:18 -==>  Preparing: select count(*) from print 
2019-03-17 12:25:18 -==> Parameters: 
2019-03-17 12:25:18 -<==      Total: 1
2019-03-17 12:25:18 -耗时 : 14
2019-03-17 12:25:18 -返回值 : com.bootdo.common.utils.PageUtils@40b19ecd
2019-03-17 12:25:19 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-03-17 12:25:19 -HTTP METHOD : GET
2019-03-17 12:25:19 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-03-17 12:25:19 -参数 : [1, {}]
2019-03-17 12:25:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-17 12:25:19 -==> Parameters: 1(Long)
2019-03-17 12:25:19 -<==      Total: 1
2019-03-17 12:25:19 -耗时 : 7
2019-03-17 12:25:19 -返回值 : print/print/printEdit
2019-03-17 12:27:25 -Starting BootdoApplication on ZJZL-20180906VX with PID 6988 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-17 12:27:25 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-17 12:27:25 -The following profiles are active: dev
2019-03-17 12:27:26 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@29df4d43: startup date [Sun Mar 17 12:27:26 CST 2019]; root of context hierarchy
2019-03-17 12:27:30 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-17 12:27:33 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$af54a011] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 12:27:34 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a1adceb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 12:27:36 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 12:27:37 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 12:27:37 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 12:27:37 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-17 12:27:37 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-17 12:27:37 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 12:27:37 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 12:27:37 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 12:27:38 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 12:27:39 -Tomcat initialized with port(s): 8081 (http)
2019-03-17 12:27:39 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-17 12:27:39 -Starting service [Tomcat]
2019-03-17 12:27:39 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-17 12:27:39 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-17 12:27:40 -Initializing Spring embedded WebApplicationContext
2019-03-17 12:27:40 -Root WebApplicationContext: initialization completed in 14137 ms
2019-03-17 12:27:41 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-17 12:27:41 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-17 12:27:41 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-17 12:27:41 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-17 12:27:41 -Filter xssFilter was not registered (disabled)
2019-03-17 12:27:41 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-17 12:27:41 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-17 12:27:41 -Servlet statViewServlet mapped to [/druid/*]
2019-03-17 12:27:41 -Servlet dispatcherServlet mapped to [/]
2019-03-17 12:27:45 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@29df4d43: startup date [Sun Mar 17 12:27:26 CST 2019]; root of context hierarchy
2019-03-17 12:27:46 -Using default implementation for ThreadExecutor
2019-03-17 12:27:46 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-17 12:27:46 -Quartz Scheduler v.2.2.1 created.
2019-03-17 12:27:46 -RAMJobStore initialized.
2019-03-17 12:27:46 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-17 12:27:46 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-17 12:27:46 -Quartz scheduler version: 2.2.1
2019-03-17 12:27:46 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@51cd2d2
2019-03-17 12:27:47 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-17 12:27:47 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-17 12:27:51 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-17 12:27:51 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-17 12:27:51 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-17 12:27:51 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-17 12:27:51 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-17 12:27:51 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-17 12:27:51 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-17 12:27:51 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-17 12:27:51 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-17 12:27:51 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-17 12:27:51 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-17 12:27:51 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-17 12:27:51 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-17 12:27:51 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-17 12:27:51 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-17 12:27:51 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-17 12:27:51 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-17 12:27:51 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-17 12:27:51 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 12:27:51 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 12:27:51 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-17 12:27:51 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-17 12:27:51 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-17 12:27:51 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-17 12:27:51 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-17 12:27:51 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-17 12:27:51 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-17 12:27:51 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-17 12:27:51 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 12:27:51 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 12:27:51 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-17 12:27:51 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-17 12:27:51 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-17 12:27:51 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-17 12:27:51 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-17 12:27:51 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-17 12:27:51 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-17 12:27:51 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-17 12:27:51 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-17 12:27:51 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 12:27:51 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 12:27:51 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-17 12:27:51 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-17 12:27:51 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 12:27:51 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-17 12:27:51 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-17 12:27:51 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-17 12:27:51 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-17 12:27:51 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-17 12:27:51 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-17 12:27:51 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-17 12:27:51 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-17 12:27:51 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 12:27:51 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 12:27:51 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-17 12:27:51 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-17 12:27:51 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-17 12:27:51 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 12:27:51 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-17 12:27:51 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-17 12:27:51 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-17 12:27:51 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 12:27:51 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 12:27:51 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-17 12:27:51 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-17 12:27:51 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 12:27:51 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 12:27:51 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-17 12:27:51 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-17 12:27:51 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 12:27:51 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 12:27:51 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-17 12:27:51 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-17 12:27:51 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-17 12:27:51 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-17 12:27:51 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-17 12:27:51 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-17 12:27:51 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-17 12:27:51 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-17 12:27:51 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-17 12:27:51 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-17 12:27:51 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-17 12:27:51 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-17 12:27:51 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-17 12:27:51 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-17 12:27:51 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-17 12:27:51 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-17 12:27:51 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-17 12:27:51 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-17 12:27:51 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-17 12:27:51 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 12:27:51 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 12:27:51 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-17 12:27:51 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-17 12:27:51 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-17 12:27:51 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-17 12:27:51 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-17 12:27:51 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-17 12:27:51 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-17 12:27:51 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-17 12:27:51 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-17 12:27:51 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-17 12:27:51 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-17 12:27:51 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-17 12:27:51 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-17 12:27:51 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-17 12:27:51 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-17 12:27:51 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-17 12:27:51 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 12:27:51 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-17 12:27:51 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 12:27:51 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 12:27:51 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-17 12:27:51 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-17 12:27:51 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-17 12:27:51 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-17 12:27:51 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-17 12:27:51 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-17 12:27:51 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-17 12:27:51 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-17 12:27:51 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-17 12:27:51 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-17 12:27:51 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile) throws java.lang.Exception
2019-03-17 12:27:51 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-17 12:27:51 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-17 12:27:51 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-17 12:27:51 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 12:27:51 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 12:27:51 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 12:27:51 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-17 12:27:51 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 12:27:51 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-17 12:27:51 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 12:27:51 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-17 12:27:51 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-17 12:27:51 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-17 12:27:52 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-17 12:27:52 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-17 12:27:52 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-17 12:27:53 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 12:27:54 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@29df4d43: startup date [Sun Mar 17 12:27:26 CST 2019]; root of context hierarchy
2019-03-17 12:27:54 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 12:27:54 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 12:27:54 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 12:27:54 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-17 12:27:54 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-17 12:27:59 -Registering beans for JMX exposure on startup
2019-03-17 12:27:59 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-17 12:27:59 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-17 12:27:59 -Starting beans in phase 2147483647
2019-03-17 12:27:59 -Context refreshed
2019-03-17 12:27:59 -Found 1 custom documentation plugin(s)
2019-03-17 12:27:59 -Scanning for api listing references
2019-03-17 12:28:00 -Generating unique operation named: removeUsingPOST_1
2019-03-17 12:28:01 -Generating unique operation named: addUsingGET_1
2019-03-17 12:28:01 -Generating unique operation named: editUsingGET_1
2019-03-17 12:28:01 -Generating unique operation named: listUsingGET_1
2019-03-17 12:28:01 -Generating unique operation named: removeUsingPOST_2
2019-03-17 12:28:01 -Generating unique operation named: removeUsingPOST_3
2019-03-17 12:28:01 -Generating unique operation named: saveUsingPOST_1
2019-03-17 12:28:01 -Generating unique operation named: updateUsingGET_1
2019-03-17 12:28:01 -Generating unique operation named: updateUsingHEAD_1
2019-03-17 12:28:01 -Generating unique operation named: updateUsingPOST_1
2019-03-17 12:28:01 -Generating unique operation named: updateUsingPUT_1
2019-03-17 12:28:01 -Generating unique operation named: updateUsingPATCH_1
2019-03-17 12:28:01 -Generating unique operation named: updateUsingDELETE_1
2019-03-17 12:28:01 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-17 12:28:01 -Generating unique operation named: updateUsingTRACE_1
2019-03-17 12:28:01 -Generating unique operation named: addUsingGET_2
2019-03-17 12:28:01 -Generating unique operation named: editUsingGET_2
2019-03-17 12:28:01 -Generating unique operation named: listUsingGET_2
2019-03-17 12:28:01 -Generating unique operation named: removeUsingPOST_4
2019-03-17 12:28:01 -Generating unique operation named: removeUsingPOST_5
2019-03-17 12:28:01 -Generating unique operation named: saveUsingPOST_2
2019-03-17 12:28:01 -Generating unique operation named: updateUsingGET_2
2019-03-17 12:28:01 -Generating unique operation named: updateUsingHEAD_2
2019-03-17 12:28:01 -Generating unique operation named: updateUsingPOST_2
2019-03-17 12:28:01 -Generating unique operation named: updateUsingPUT_2
2019-03-17 12:28:01 -Generating unique operation named: updateUsingPATCH_2
2019-03-17 12:28:01 -Generating unique operation named: updateUsingDELETE_2
2019-03-17 12:28:01 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-17 12:28:01 -Generating unique operation named: updateUsingTRACE_2
2019-03-17 12:28:01 -Generating unique operation named: addUsingGET_3
2019-03-17 12:28:01 -Generating unique operation named: editUsingGET_3
2019-03-17 12:28:01 -Generating unique operation named: listUsingGET_3
2019-03-17 12:28:01 -Generating unique operation named: removeUsingPOST_6
2019-03-17 12:28:01 -Generating unique operation named: removeUsingPOST_7
2019-03-17 12:28:01 -Generating unique operation named: saveUsingPOST_3
2019-03-17 12:28:01 -Generating unique operation named: updateUsingGET_3
2019-03-17 12:28:01 -Generating unique operation named: updateUsingHEAD_3
2019-03-17 12:28:01 -Generating unique operation named: updateUsingPOST_3
2019-03-17 12:28:01 -Generating unique operation named: updateUsingPUT_3
2019-03-17 12:28:01 -Generating unique operation named: updateUsingPATCH_3
2019-03-17 12:28:01 -Generating unique operation named: updateUsingDELETE_3
2019-03-17 12:28:01 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-17 12:28:01 -Generating unique operation named: updateUsingTRACE_3
2019-03-17 12:28:01 -Generating unique operation named: addUsingGET_4
2019-03-17 12:28:01 -Generating unique operation named: editUsingGET_4
2019-03-17 12:28:01 -Generating unique operation named: listUsingGET_4
2019-03-17 12:28:01 -Generating unique operation named: removeUsingPOST_8
2019-03-17 12:28:01 -Generating unique operation named: removeUsingPOST_9
2019-03-17 12:28:01 -Generating unique operation named: saveUsingPOST_4
2019-03-17 12:28:01 -Generating unique operation named: updateUsingGET_4
2019-03-17 12:28:01 -Generating unique operation named: updateUsingHEAD_4
2019-03-17 12:28:01 -Generating unique operation named: updateUsingPOST_4
2019-03-17 12:28:01 -Generating unique operation named: updateUsingPUT_4
2019-03-17 12:28:01 -Generating unique operation named: updateUsingPATCH_4
2019-03-17 12:28:01 -Generating unique operation named: updateUsingDELETE_4
2019-03-17 12:28:01 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-17 12:28:01 -Generating unique operation named: updateUsingTRACE_4
2019-03-17 12:28:01 -Generating unique operation named: ElecUsingGET_1
2019-03-17 12:28:02 -Generating unique operation named: addUsingGET_5
2019-03-17 12:28:02 -Generating unique operation named: editUsingGET_5
2019-03-17 12:28:02 -Generating unique operation named: listUsingGET_5
2019-03-17 12:28:02 -Generating unique operation named: removeUsingPOST_10
2019-03-17 12:28:02 -Generating unique operation named: removeUsingPOST_11
2019-03-17 12:28:02 -Generating unique operation named: saveUsingPOST_5
2019-03-17 12:28:02 -Generating unique operation named: updateUsingGET_5
2019-03-17 12:28:02 -Generating unique operation named: updateUsingHEAD_5
2019-03-17 12:28:02 -Generating unique operation named: updateUsingPOST_5
2019-03-17 12:28:02 -Generating unique operation named: updateUsingPUT_5
2019-03-17 12:28:02 -Generating unique operation named: updateUsingPATCH_5
2019-03-17 12:28:02 -Generating unique operation named: updateUsingDELETE_5
2019-03-17 12:28:02 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-17 12:28:02 -Generating unique operation named: updateUsingTRACE_5
2019-03-17 12:28:02 -Generating unique operation named: editUsingGET_6
2019-03-17 12:28:02 -Generating unique operation named: listUsingGET_6
2019-03-17 12:28:02 -Generating unique operation named: updateUsingPOST_6
2019-03-17 12:28:02 -Generating unique operation named: addUsingGET_6
2019-03-17 12:28:02 -Generating unique operation named: editUsingGET_7
2019-03-17 12:28:02 -Generating unique operation named: listUsingGET_7
2019-03-17 12:28:02 -Generating unique operation named: removeUsingPOST_12
2019-03-17 12:28:02 -Generating unique operation named: removeUsingPOST_13
2019-03-17 12:28:02 -Generating unique operation named: saveUsingPOST_6
2019-03-17 12:28:02 -Generating unique operation named: updateUsingGET_6
2019-03-17 12:28:02 -Generating unique operation named: updateUsingHEAD_6
2019-03-17 12:28:02 -Generating unique operation named: updateUsingPOST_7
2019-03-17 12:28:02 -Generating unique operation named: updateUsingPUT_6
2019-03-17 12:28:02 -Generating unique operation named: updateUsingPATCH_6
2019-03-17 12:28:02 -Generating unique operation named: updateUsingDELETE_6
2019-03-17 12:28:02 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-17 12:28:02 -Generating unique operation named: updateUsingTRACE_6
2019-03-17 12:28:02 -Generating unique operation named: addUsingGET_7
2019-03-17 12:28:02 -Generating unique operation named: editUsingGET_8
2019-03-17 12:28:02 -Generating unique operation named: listUsingGET_8
2019-03-17 12:28:02 -Generating unique operation named: removeUsingPOST_14
2019-03-17 12:28:02 -Generating unique operation named: removeUsingPOST_15
2019-03-17 12:28:02 -Generating unique operation named: saveUsingPOST_7
2019-03-17 12:28:02 -Generating unique operation named: updateUsingGET_7
2019-03-17 12:28:02 -Generating unique operation named: updateUsingHEAD_7
2019-03-17 12:28:02 -Generating unique operation named: updateUsingPOST_8
2019-03-17 12:28:02 -Generating unique operation named: updateUsingPUT_7
2019-03-17 12:28:02 -Generating unique operation named: updateUsingPATCH_7
2019-03-17 12:28:02 -Generating unique operation named: updateUsingDELETE_7
2019-03-17 12:28:02 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-17 12:28:02 -Generating unique operation named: updateUsingTRACE_7
2019-03-17 12:28:03 -Generating unique operation named: addUsingGET_8
2019-03-17 12:28:03 -Generating unique operation named: editUsingGET_9
2019-03-17 12:28:03 -Generating unique operation named: listUsingGET_9
2019-03-17 12:28:03 -Generating unique operation named: removeUsingPOST_16
2019-03-17 12:28:03 -Generating unique operation named: removeUsingPOST_17
2019-03-17 12:28:03 -Generating unique operation named: saveUsingPOST_8
2019-03-17 12:28:03 -Generating unique operation named: updateUsingGET_8
2019-03-17 12:28:03 -Generating unique operation named: updateUsingHEAD_8
2019-03-17 12:28:03 -Generating unique operation named: updateUsingPOST_9
2019-03-17 12:28:03 -Generating unique operation named: updateUsingPUT_8
2019-03-17 12:28:03 -Generating unique operation named: updateUsingPATCH_8
2019-03-17 12:28:03 -Generating unique operation named: updateUsingDELETE_8
2019-03-17 12:28:03 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-17 12:28:03 -Generating unique operation named: updateUsingTRACE_8
2019-03-17 12:28:03 -Generating unique operation named: addUsingGET_9
2019-03-17 12:28:03 -Generating unique operation named: editUsingGET_10
2019-03-17 12:28:03 -Generating unique operation named: infoUsingGET_1
2019-03-17 12:28:03 -Generating unique operation named: infoUsingHEAD_1
2019-03-17 12:28:03 -Generating unique operation named: infoUsingPOST_1
2019-03-17 12:28:03 -Generating unique operation named: infoUsingPUT_1
2019-03-17 12:28:03 -Generating unique operation named: infoUsingPATCH_1
2019-03-17 12:28:03 -Generating unique operation named: infoUsingDELETE_1
2019-03-17 12:28:03 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-17 12:28:03 -Generating unique operation named: infoUsingTRACE_1
2019-03-17 12:28:03 -Generating unique operation named: listUsingGET_10
2019-03-17 12:28:03 -Generating unique operation named: removeUsingPOST_18
2019-03-17 12:28:03 -Generating unique operation named: removeUsingPOST_19
2019-03-17 12:28:03 -Generating unique operation named: saveUsingPOST_9
2019-03-17 12:28:03 -Generating unique operation named: updateUsingPOST_10
2019-03-17 12:28:03 -Generating unique operation named: listUsingGET_11
2019-03-17 12:28:03 -Generating unique operation named: removeUsingPOST_20
2019-03-17 12:28:03 -Generating unique operation named: welcomeUsingGET_1
2019-03-17 12:28:03 -Generating unique operation named: addUsingGET_10
2019-03-17 12:28:03 -Generating unique operation named: editUsingGET_11
2019-03-17 12:28:03 -Generating unique operation named: listUsingGET_12
2019-03-17 12:28:04 -Generating unique operation named: removeUsingPOST_21
2019-03-17 12:28:04 -Generating unique operation named: saveUsingPOST_10
2019-03-17 12:28:04 -Generating unique operation named: treeUsingGET_1
2019-03-17 12:28:04 -Generating unique operation named: treeUsingGET_2
2019-03-17 12:28:04 -Generating unique operation named: updateUsingPOST_11
2019-03-17 12:28:04 -Generating unique operation named: addUsingGET_11
2019-03-17 12:28:04 -Generating unique operation named: editUsingGET_12
2019-03-17 12:28:04 -Generating unique operation named: listUsingGET_13
2019-03-17 12:28:04 -Generating unique operation named: removeUsingPOST_22
2019-03-17 12:28:04 -Generating unique operation named: removeUsingPOST_23
2019-03-17 12:28:04 -Generating unique operation named: saveUsingPOST_11
2019-03-17 12:28:04 -Generating unique operation named: updateUsingGET_9
2019-03-17 12:28:04 -Generating unique operation named: updateUsingHEAD_9
2019-03-17 12:28:04 -Generating unique operation named: updateUsingPOST_12
2019-03-17 12:28:04 -Generating unique operation named: updateUsingPUT_9
2019-03-17 12:28:04 -Generating unique operation named: updateUsingPATCH_9
2019-03-17 12:28:04 -Generating unique operation named: updateUsingDELETE_9
2019-03-17 12:28:04 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-17 12:28:04 -Generating unique operation named: updateUsingTRACE_9
2019-03-17 12:28:04 -Generating unique operation named: addUsingGET_12
2019-03-17 12:28:04 -Generating unique operation named: editUsingGET_13
2019-03-17 12:28:04 -Generating unique operation named: listUsingGET_14
2019-03-17 12:28:04 -Generating unique operation named: removeUsingPOST_24
2019-03-17 12:28:04 -Generating unique operation named: removeUsingPOST_25
2019-03-17 12:28:04 -Generating unique operation named: saveUsingPOST_12
2019-03-17 12:28:04 -Generating unique operation named: updateUsingGET_10
2019-03-17 12:28:04 -Generating unique operation named: updateUsingHEAD_10
2019-03-17 12:28:04 -Generating unique operation named: updateUsingPOST_13
2019-03-17 12:28:04 -Generating unique operation named: updateUsingPUT_10
2019-03-17 12:28:04 -Generating unique operation named: updateUsingPATCH_10
2019-03-17 12:28:04 -Generating unique operation named: updateUsingDELETE_10
2019-03-17 12:28:04 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-17 12:28:04 -Generating unique operation named: updateUsingTRACE_10
2019-03-17 12:28:04 -Generating unique operation named: addUsingGET_13
2019-03-17 12:28:04 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-17 12:28:04 -Generating unique operation named: editUsingGET_14
2019-03-17 12:28:04 -Generating unique operation named: listUsingGET_15
2019-03-17 12:28:04 -Generating unique operation named: saveUsingPOST_13
2019-03-17 12:28:05 -Generating unique operation named: saveUsingPOST_14
2019-03-17 12:28:05 -Generating unique operation named: updateUsingPOST_14
2019-03-17 12:28:05 -Generating unique operation named: listUsingGET_16
2019-03-17 12:28:05 -Generating unique operation named: listUsingHEAD_1
2019-03-17 12:28:05 -Generating unique operation named: listUsingPOST_1
2019-03-17 12:28:05 -Generating unique operation named: listUsingPUT_1
2019-03-17 12:28:05 -Generating unique operation named: listUsingPATCH_1
2019-03-17 12:28:05 -Generating unique operation named: listUsingDELETE_1
2019-03-17 12:28:05 -Generating unique operation named: listUsingOPTIONS_1
2019-03-17 12:28:05 -Generating unique operation named: listUsingTRACE_1
2019-03-17 12:28:05 -Generating unique operation named: addUsingGET_14
2019-03-17 12:28:05 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-17 12:28:05 -Generating unique operation named: editUsingGET_15
2019-03-17 12:28:05 -Generating unique operation named: listUsingGET_17
2019-03-17 12:28:05 -Generating unique operation named: removeUsingPOST_26
2019-03-17 12:28:05 -Generating unique operation named: saveUsingPOST_15
2019-03-17 12:28:05 -Generating unique operation named: treeUsingGET_3
2019-03-17 12:28:05 -Generating unique operation named: treeViewUsingGET_1
2019-03-17 12:28:05 -Generating unique operation named: updateUsingPOST_15
2019-03-17 12:28:05 -Generating unique operation named: addUsingGET_15
2019-03-17 12:28:05 -Generating unique operation named: editUsingGET_16
2019-03-17 12:28:05 -Generating unique operation named: listUsingGET_18
2019-03-17 12:28:05 -Generating unique operation named: removeUsingPOST_27
2019-03-17 12:28:05 -Generating unique operation named: removeUsingPOST_28
2019-03-17 12:28:05 -Generating unique operation named: saveUsingPOST_16
2019-03-17 12:28:05 -Generating unique operation named: updateUsingGET_11
2019-03-17 12:28:05 -Generating unique operation named: updateUsingHEAD_11
2019-03-17 12:28:05 -Generating unique operation named: updateUsingPOST_16
2019-03-17 12:28:05 -Generating unique operation named: updateUsingPUT_11
2019-03-17 12:28:05 -Generating unique operation named: updateUsingPATCH_11
2019-03-17 12:28:05 -Generating unique operation named: updateUsingDELETE_11
2019-03-17 12:28:05 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-17 12:28:05 -Generating unique operation named: updateUsingTRACE_11
2019-03-17 12:28:05 -Generating unique operation named: addUsingGET_16
2019-03-17 12:28:05 -Generating unique operation named: editUsingGET_17
2019-03-17 12:28:05 -Generating unique operation named: listUsingGET_19
2019-03-17 12:28:05 -Generating unique operation named: removeUsingPOST_29
2019-03-17 12:28:05 -Generating unique operation named: removeUsingPOST_30
2019-03-17 12:28:05 -Generating unique operation named: saveUsingPOST_17
2019-03-17 12:28:05 -Generating unique operation named: updateUsingGET_12
2019-03-17 12:28:05 -Generating unique operation named: updateUsingHEAD_12
2019-03-17 12:28:05 -Generating unique operation named: updateUsingPOST_17
2019-03-17 12:28:05 -Generating unique operation named: updateUsingPUT_12
2019-03-17 12:28:05 -Generating unique operation named: updateUsingPATCH_12
2019-03-17 12:28:05 -Generating unique operation named: updateUsingDELETE_12
2019-03-17 12:28:05 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-17 12:28:05 -Generating unique operation named: updateUsingTRACE_12
2019-03-17 12:28:05 -Generating unique operation named: addUsingGET_17
2019-03-17 12:28:05 -Generating unique operation named: editUsingGET_18
2019-03-17 12:28:05 -Generating unique operation named: listUsingGET_20
2019-03-17 12:28:05 -Generating unique operation named: removeUsingPOST_31
2019-03-17 12:28:05 -Generating unique operation named: removeUsingPOST_32
2019-03-17 12:28:05 -Generating unique operation named: saveUsingPOST_18
2019-03-17 12:28:05 -Generating unique operation named: updateUsingGET_13
2019-03-17 12:28:05 -Generating unique operation named: updateUsingHEAD_13
2019-03-17 12:28:05 -Generating unique operation named: updateUsingPOST_18
2019-03-17 12:28:05 -Generating unique operation named: updateUsingPUT_13
2019-03-17 12:28:05 -Generating unique operation named: updateUsingPATCH_13
2019-03-17 12:28:05 -Generating unique operation named: updateUsingDELETE_13
2019-03-17 12:28:05 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-17 12:28:05 -Generating unique operation named: updateUsingTRACE_13
2019-03-17 12:28:05 -Generating unique operation named: addUsingGET_18
2019-03-17 12:28:05 -Generating unique operation named: editUsingGET_19
2019-03-17 12:28:05 -Generating unique operation named: listUsingGET_21
2019-03-17 12:28:05 -Generating unique operation named: removeUsingPOST_33
2019-03-17 12:28:05 -Generating unique operation named: removeUsingPOST_34
2019-03-17 12:28:05 -Generating unique operation named: saveUsingPOST_19
2019-03-17 12:28:05 -Generating unique operation named: updateUsingGET_14
2019-03-17 12:28:06 -Generating unique operation named: updateUsingHEAD_14
2019-03-17 12:28:06 -Generating unique operation named: updateUsingPOST_19
2019-03-17 12:28:06 -Generating unique operation named: updateUsingPUT_14
2019-03-17 12:28:06 -Generating unique operation named: updateUsingPATCH_14
2019-03-17 12:28:06 -Generating unique operation named: updateUsingDELETE_14
2019-03-17 12:28:06 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-17 12:28:06 -Generating unique operation named: updateUsingTRACE_14
2019-03-17 12:28:06 -Starting Quartz Scheduler now
2019-03-17 12:28:06 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-17 12:28:06 -Starting...
2019-03-17 12:28:06 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-17 12:28:06 -Started.
2019-03-17 12:28:06 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-17 12:28:07 -Using a shared selector for servlet write/read
2019-03-17 12:28:07 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-17 12:28:07 -Started BootdoApplication in 44.184 seconds (JVM running for 46.26)
2019-03-17 12:28:11 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-17 12:28:11 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-17 12:28:11 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-17 12:28:12 -FrameworkServlet 'dispatcherServlet': initialization completed in 353 ms
2019-03-17 12:28:12 -Enabling session validation scheduler...
2019-03-17 12:28:12 -==> Parameters: 
2019-03-17 12:28:13 -<==      Total: 1
2019-03-17 12:28:13 -请求地址 : http://localhost:8081/login;JSESSIONID=b9452da6-ca3e-420d-bc76-f5c5652b39ec
2019-03-17 12:28:13 -HTTP METHOD : GET
2019-03-17 12:28:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 12:28:13 -参数 : [{}]
2019-03-17 12:28:13 -耗时 : 10
2019-03-17 12:28:13 -返回值 : login
2019-03-17 12:28:16 -请求地址 : http://localhost:8081/getVerify
2019-03-17 12:28:16 -HTTP METHOD : GET
2019-03-17 12:28:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-17 12:28:16 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@317ac3e8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4e46b604]
2019-03-17 12:28:20 -7657
2019-03-17 12:28:20 -耗时 : 4582
2019-03-17 12:28:20 -返回值 : null
2019-03-17 12:28:21 -请求地址 : http://localhost:8081/login
2019-03-17 12:28:21 -HTTP METHOD : GET
2019-03-17 12:28:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 12:28:21 -参数 : [{}]
2019-03-17 12:28:21 -耗时 : 1
2019-03-17 12:28:21 -返回值 : login
2019-03-17 12:28:25 -请求地址 : http://localhost:8081/login
2019-03-17 12:28:25 -HTTP METHOD : POST
2019-03-17 12:28:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 12:28:25 -参数 : [admin, 111111, 7657, org.apache.shiro.web.servlet.ShiroHttpServletRequest@46cd7693]
2019-03-17 12:28:25 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-17 12:28:25 -==> Parameters: admin(String)
2019-03-17 12:28:26 -<==      Total: 1
2019-03-17 12:28:26 -耗时 : 205
2019-03-17 12:28:26 -返回值 : {msg=操作成功, code=0}
2019-03-17 12:28:26 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-17 12:28:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 12:28:26 -==> Parameters: 1(Long), admin(String), 登录(String), 206(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 12:28:26.216(Timestamp)
2019-03-17 12:28:26 -<==    Updates: 1
2019-03-17 12:28:26 -请求地址 : http://localhost:8081/index
2019-03-17 12:28:26 -HTTP METHOD : GET
2019-03-17 12:28:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 12:28:26 -参数 : [{}]
2019-03-17 12:28:26 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 12:28:26 -==> Parameters: 1(Long)
2019-03-17 12:28:26 -<==      Total: 45
2019-03-17 12:28:26 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 12:28:26 -==> Parameters: 138(Long)
2019-03-17 12:28:26 -<==      Total: 1
2019-03-17 12:28:26 -耗时 : 375
2019-03-17 12:28:26 -返回值 : index_v1
2019-03-17 12:28:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 12:28:27 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 375(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 12:28:27.034(Timestamp)
2019-03-17 12:28:27 -<==    Updates: 1
2019-03-17 12:28:27 -请求地址 : http://localhost:8081/main
2019-03-17 12:28:27 -HTTP METHOD : GET
2019-03-17 12:28:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 12:28:27 -参数 : []
2019-03-17 12:28:27 -耗时 : 1
2019-03-17 12:28:27 -返回值 : main
2019-03-17 12:28:27 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 12:28:27 -HTTP METHOD : GET
2019-03-17 12:28:27 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 12:28:27 -参数 : []
2019-03-17 12:28:27 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 12:28:27 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 12:28:27 -<==      Total: 0
2019-03-17 12:28:27 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 12:28:27 -==> Parameters: 1(Long), 0(String)
2019-03-17 12:28:27 -<==      Total: 1
2019-03-17 12:28:27 -耗时 : 134
2019-03-17 12:28:27 -返回值 : com.bootdo.common.utils.PageUtils@5490a54b
2019-03-17 12:28:28 -请求地址 : http://localhost:8081/main
2019-03-17 12:28:28 -HTTP METHOD : GET
2019-03-17 12:28:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 12:28:28 -参数 : []
2019-03-17 12:28:28 -耗时 : 1
2019-03-17 12:28:28 -返回值 : main
2019-03-17 12:28:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 12:28:31 -==> Parameters: 1(Long)
2019-03-17 12:28:31 -<==      Total: 86
2019-03-17 12:28:31 -请求地址 : http://localhost:8081/print/print
2019-03-17 12:28:31 -HTTP METHOD : GET
2019-03-17 12:28:31 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-17 12:28:31 -参数 : []
2019-03-17 12:28:31 -耗时 : 0
2019-03-17 12:28:31 -返回值 : print/print/print
2019-03-17 12:28:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 12:28:33 -HTTP METHOD : GET
2019-03-17 12:28:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 12:28:33 -参数 : [userType]
2019-03-17 12:28:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 12:28:33 -==> Parameters: userType(String)
2019-03-17 12:28:33 -<==      Total: 2
2019-03-17 12:28:33 -耗时 : 34
2019-03-17 12:28:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 12:28:33 -请求地址 : http://localhost:8081/print/print/list
2019-03-17 12:28:33 -HTTP METHOD : GET
2019-03-17 12:28:33 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-17 12:28:33 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-17 12:28:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-17 12:28:33 -==> Parameters: 0(Integer), 10(Integer)
2019-03-17 12:28:33 -<==      Total: 3
2019-03-17 12:28:33 -==>  Preparing: select count(*) from print 
2019-03-17 12:28:33 -==> Parameters: 
2019-03-17 12:28:33 -<==      Total: 1
2019-03-17 12:28:33 -耗时 : 72
2019-03-17 12:28:33 -返回值 : com.bootdo.common.utils.PageUtils@1ae1e9e5
2019-03-17 12:28:37 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-03-17 12:28:37 -HTTP METHOD : GET
2019-03-17 12:28:37 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-03-17 12:28:37 -参数 : [1, {}]
2019-03-17 12:28:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-17 12:28:37 -==> Parameters: 1(Long)
2019-03-17 12:28:37 -<==      Total: 1
2019-03-17 12:28:37 -耗时 : 12
2019-03-17 12:28:37 -返回值 : print/print/printEdit
2019-03-17 12:28:52 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-03-17 12:31:36 -请求地址 : http://localhost:8081/index
2019-03-17 12:31:36 -HTTP METHOD : GET
2019-03-17 12:31:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 12:31:36 -参数 : [{}]
2019-03-17 12:31:36 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 12:31:36 -==> Parameters: 1(Long)
2019-03-17 12:31:36 -<==      Total: 45
2019-03-17 12:31:36 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 12:31:36 -==> Parameters: 138(Long)
2019-03-17 12:31:36 -<==      Total: 1
2019-03-17 12:31:36 -耗时 : 73
2019-03-17 12:31:36 -返回值 : index_v1
2019-03-17 12:31:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 12:31:36 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 73(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 12:31:36.945(Timestamp)
2019-03-17 12:31:37 -<==    Updates: 1
2019-03-17 12:31:37 -请求地址 : http://localhost:8081/main
2019-03-17 12:31:37 -HTTP METHOD : GET
2019-03-17 12:31:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 12:31:37 -参数 : []
2019-03-17 12:31:37 -耗时 : 1
2019-03-17 12:31:37 -返回值 : main
2019-03-17 12:31:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 12:31:37 -HTTP METHOD : GET
2019-03-17 12:31:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 12:31:37 -参数 : []
2019-03-17 12:31:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 12:31:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 12:31:37 -<==      Total: 0
2019-03-17 12:31:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 12:31:37 -==> Parameters: 1(Long), 0(String)
2019-03-17 12:31:37 -<==      Total: 1
2019-03-17 12:31:37 -耗时 : 65
2019-03-17 12:31:37 -返回值 : com.bootdo.common.utils.PageUtils@3a09dfb
2019-03-17 12:31:37 -请求地址 : http://localhost:8081/main
2019-03-17 12:31:37 -HTTP METHOD : GET
2019-03-17 12:31:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 12:31:37 -参数 : []
2019-03-17 12:31:37 -耗时 : 1
2019-03-17 12:31:37 -返回值 : main
2019-03-17 12:31:42 -请求地址 : http://localhost:8081/print/print
2019-03-17 12:31:42 -HTTP METHOD : GET
2019-03-17 12:31:42 -CLASS_METHOD : com.bootdo.print.controller.PrintController.Print
2019-03-17 12:31:42 -参数 : []
2019-03-17 12:31:42 -耗时 : 1
2019-03-17 12:31:42 -返回值 : print/print/print
2019-03-17 12:31:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 12:31:42 -HTTP METHOD : GET
2019-03-17 12:31:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 12:31:42 -参数 : [userType]
2019-03-17 12:31:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 12:31:42 -==> Parameters: userType(String)
2019-03-17 12:31:42 -<==      Total: 2
2019-03-17 12:31:42 -耗时 : 13
2019-03-17 12:31:42 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 12:31:42 -请求地址 : http://localhost:8081/print/print/list
2019-03-17 12:31:42 -HTTP METHOD : GET
2019-03-17 12:31:42 -CLASS_METHOD : com.bootdo.print.controller.PrintController.list
2019-03-17 12:31:42 -参数 : [{limit=10, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-17 12:31:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print order by id asc limit ?, ? 
2019-03-17 12:31:42 -==> Parameters: 0(Integer), 10(Integer)
2019-03-17 12:31:42 -<==      Total: 3
2019-03-17 12:31:42 -==>  Preparing: select count(*) from print 
2019-03-17 12:31:42 -==> Parameters: 
2019-03-17 12:31:42 -<==      Total: 1
2019-03-17 12:31:42 -耗时 : 17
2019-03-17 12:31:42 -返回值 : com.bootdo.common.utils.PageUtils@b656df1
2019-03-17 12:31:44 -请求地址 : http://localhost:8081/print/print/printEdit/1
2019-03-17 12:31:44 -HTTP METHOD : GET
2019-03-17 12:31:44 -CLASS_METHOD : com.bootdo.print.controller.PrintController.printEdit
2019-03-17 12:31:44 -参数 : [1, {}]
2019-03-17 12:31:44 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`start`,`end`,`hu`,`elec_price`,`elec_amount`,`elec_cost`,`elec_sum`,`elec_money`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`heat_money`,`water_price`,`water_sum`,`water_money`,`account_data`,`cost_data`,`cost_poper`,`print_state`,`print_data`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from print where id = ? 
2019-03-17 12:31:44 -==> Parameters: 1(Long)
2019-03-17 12:31:44 -<==      Total: 1
2019-03-17 12:31:44 -耗时 : 8
2019-03-17 12:31:44 -返回值 : print/print/printEdit
2019-03-17 12:32:16 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-17 12:58:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 440]
2019-03-17 13:28:12 -Validating all active sessions...
2019-03-17 13:28:12 -Finished session validation.  [1] sessions were stopped.
2019-03-17 13:28:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 873]
2019-03-17 13:30:27 -请求地址 : http://localhost:8081/login;JSESSIONID=b14d18aa-8a0e-4739-b08e-5599166a8444
2019-03-17 13:30:27 -HTTP METHOD : GET
2019-03-17 13:30:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 13:30:27 -参数 : [{}]
2019-03-17 13:30:27 -耗时 : 1
2019-03-17 13:30:27 -返回值 : login
2019-03-17 13:30:28 -请求地址 : http://localhost:8081/getVerify
2019-03-17 13:30:28 -HTTP METHOD : GET
2019-03-17 13:30:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-17 13:30:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1e326103, org.apache.shiro.web.servlet.ShiroHttpServletResponse@30913f61]
2019-03-17 13:30:28 -6918
2019-03-17 13:30:28 -耗时 : 17
2019-03-17 13:30:28 -返回值 : null
2019-03-17 13:30:28 -请求地址 : http://localhost:8081/login
2019-03-17 13:30:28 -HTTP METHOD : GET
2019-03-17 13:30:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 13:30:28 -参数 : [{}]
2019-03-17 13:30:28 -耗时 : 0
2019-03-17 13:30:28 -返回值 : login
2019-03-17 13:30:59 -请求地址 : http://localhost:8081/login
2019-03-17 13:30:59 -HTTP METHOD : POST
2019-03-17 13:30:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 13:30:59 -参数 : [admin, 111111, 6918, org.apache.shiro.web.servlet.ShiroHttpServletRequest@277e69f0]
2019-03-17 13:30:59 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-17 13:30:59 -==> Parameters: admin(String)
2019-03-17 13:30:59 -<==      Total: 1
2019-03-17 13:30:59 -耗时 : 15
2019-03-17 13:30:59 -返回值 : {msg=操作成功, code=0}
2019-03-17 13:30:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 13:30:59 -==> Parameters: 1(Long), admin(String), 登录(String), 15(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 13:30:59.281(Timestamp)
2019-03-17 13:30:59 -请求地址 : http://localhost:8081/index
2019-03-17 13:30:59 -HTTP METHOD : GET
2019-03-17 13:30:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 13:30:59 -参数 : [{}]
2019-03-17 13:30:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 13:30:59 -==> Parameters: 1(Long)
2019-03-17 13:30:59 -<==    Updates: 1
2019-03-17 13:30:59 -<==      Total: 45
2019-03-17 13:30:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 13:30:59 -==> Parameters: 138(Long)
2019-03-17 13:30:59 -<==      Total: 1
2019-03-17 13:30:59 -耗时 : 255
2019-03-17 13:30:59 -返回值 : index_v1
2019-03-17 13:30:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 13:30:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 255(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 13:30:59.568(Timestamp)
2019-03-17 13:30:59 -请求地址 : http://localhost:8081/main
2019-03-17 13:30:59 -HTTP METHOD : GET
2019-03-17 13:30:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 13:30:59 -参数 : []
2019-03-17 13:30:59 -耗时 : 1
2019-03-17 13:30:59 -返回值 : main
2019-03-17 13:30:59 -<==    Updates: 1
2019-03-17 13:30:59 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 13:30:59 -HTTP METHOD : GET
2019-03-17 13:30:59 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 13:30:59 -参数 : []
2019-03-17 13:30:59 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 13:30:59 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 13:31:00 -<==      Total: 0
2019-03-17 13:31:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 13:31:00 -==> Parameters: 1(Long), 0(String)
2019-03-17 13:31:00 -<==      Total: 1
2019-03-17 13:31:00 -耗时 : 102
2019-03-17 13:31:00 -返回值 : com.bootdo.common.utils.PageUtils@1f480896
2019-03-17 13:31:00 -请求地址 : http://localhost:8081/main
2019-03-17 13:31:00 -HTTP METHOD : GET
2019-03-17 13:31:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 13:31:00 -参数 : []
2019-03-17 13:31:00 -耗时 : 0
2019-03-17 13:31:00 -返回值 : main
2019-03-17 13:31:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 13:31:21 -==> Parameters: 1(Long)
2019-03-17 13:31:21 -<==      Total: 86
2019-03-17 13:31:21 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-17 13:31:21 -HTTP METHOD : GET
2019-03-17 13:31:21 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-17 13:31:21 -参数 : []
2019-03-17 13:31:21 -耗时 : 1
2019-03-17 13:31:21 -返回值 : elec/elecInto/elecInto
2019-03-17 13:32:25 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 13:32:25 -HTTP METHOD : GET
2019-03-17 13:32:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 13:32:25 -参数 : []
2019-03-17 13:32:25 -耗时 : 1
2019-03-17 13:32:25 -返回值 : system/dept/deptTree
2019-03-17 13:32:25 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 13:32:25 -HTTP METHOD : GET
2019-03-17 13:32:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 13:32:25 -参数 : []
2019-03-17 13:32:25 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 13:32:25 -==> Parameters: 
2019-03-17 13:32:25 -<==      Total: 3
2019-03-17 13:32:25 -耗时 : 74
2019-03-17 13:32:25 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 13:32:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 13:32:29 -HTTP METHOD : GET
2019-03-17 13:32:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 13:32:29 -参数 : []
2019-03-17 13:32:29 -耗时 : 1
2019-03-17 13:32:29 -返回值 : system/dept/deptTree
2019-03-17 13:32:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 13:32:29 -HTTP METHOD : GET
2019-03-17 13:32:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 13:32:29 -参数 : []
2019-03-17 13:32:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 13:32:29 -==> Parameters: 
2019-03-17 13:32:29 -<==      Total: 3
2019-03-17 13:32:29 -耗时 : 5
2019-03-17 13:32:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 13:32:33 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 13:32:33 -HTTP METHOD : GET
2019-03-17 13:32:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 13:32:33 -参数 : []
2019-03-17 13:32:33 -耗时 : 0
2019-03-17 13:32:33 -返回值 : system/dept/deptTree
2019-03-17 13:32:33 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 13:32:33 -HTTP METHOD : GET
2019-03-17 13:32:33 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 13:32:33 -参数 : []
2019-03-17 13:32:33 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 13:32:33 -==> Parameters: 
2019-03-17 13:32:33 -<==      Total: 3
2019-03-17 13:32:33 -耗时 : 5
2019-03-17 13:32:33 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 13:32:37 -请求地址 : http://localhost:8081/elec/elecInto/exprotElecIntoExcel
2019-03-17 13:32:37 -HTTP METHOD : GET
2019-03-17 13:32:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.exprotExcel
2019-03-17 13:32:37 -参数 : [com.bootdo.elec.vo.ElecVo@5514c0ad, org.apache.shiro.web.servlet.ShiroHttpServletResponse@10212230]
2019-03-17 13:32:37 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? 
2019-03-17 13:32:37 -==> Parameters: 2019-03(String), 3(Long)
2019-03-17 13:32:37 -<==      Total: 1
2019-03-17 13:32:39 -耗时 : 1734
2019-03-17 13:32:39 -返回值 : null
2019-03-17 13:36:56 -请求地址 : http://localhost:8081/file/downImport/userInto
2019-03-17 13:36:56 -HTTP METHOD : GET
2019-03-17 13:36:56 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-17 13:36:56 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@5220db4d, userInto]
2019-03-17 13:36:56 -耗时 : 202
2019-03-17 13:36:56 -返回值 : null
2019-03-17 13:38:44 -请求地址 : http://localhost:8081/elec/elec
2019-03-17 13:38:44 -HTTP METHOD : GET
2019-03-17 13:38:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-17 13:38:44 -参数 : []
2019-03-17 13:38:44 -耗时 : 1
2019-03-17 13:38:44 -返回值 : elec/elec/elec
2019-03-17 13:38:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 13:38:45 -HTTP METHOD : GET
2019-03-17 13:38:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 13:38:45 -参数 : [userType]
2019-03-17 13:38:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 13:38:45 -==> Parameters: userType(String)
2019-03-17 13:38:45 -<==      Total: 2
2019-03-17 13:38:45 -耗时 : 8
2019-03-17 13:38:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 13:38:45 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 13:38:45 -HTTP METHOD : GET
2019-03-17 13:38:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 13:38:45 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@16d7eda1]
2019-03-17 13:38:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-17 13:38:45 -==> Parameters: 0(Integer), 3(Integer)
2019-03-17 13:38:45 -<==      Total: 3
2019-03-17 13:38:45 -==>  Preparing: select count(*) from elec 
2019-03-17 13:38:45 -==> Parameters: 
2019-03-17 13:38:45 -<==      Total: 1
2019-03-17 13:38:45 -耗时 : 60
2019-03-17 13:38:45 -返回值 : com.bootdo.common.utils.PageUtils@32da4abd
2019-03-17 13:42:22 -请求地址 : http://localhost:8081/index
2019-03-17 13:42:22 -HTTP METHOD : GET
2019-03-17 13:42:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 13:42:22 -参数 : [{}]
2019-03-17 13:42:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 13:42:22 -==> Parameters: 1(Long)
2019-03-17 13:42:22 -<==      Total: 45
2019-03-17 13:42:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 13:42:22 -==> Parameters: 138(Long)
2019-03-17 13:42:22 -<==      Total: 1
2019-03-17 13:42:22 -耗时 : 42
2019-03-17 13:42:22 -返回值 : index_v1
2019-03-17 13:42:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 13:42:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 43(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 13:42:22.171(Timestamp)
2019-03-17 13:42:22 -<==    Updates: 1
2019-03-17 13:42:22 -请求地址 : http://localhost:8081/main
2019-03-17 13:42:22 -HTTP METHOD : GET
2019-03-17 13:42:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 13:42:22 -参数 : []
2019-03-17 13:42:22 -耗时 : 1
2019-03-17 13:42:22 -返回值 : main
2019-03-17 13:42:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 13:42:22 -HTTP METHOD : GET
2019-03-17 13:42:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 13:42:22 -参数 : []
2019-03-17 13:42:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 13:42:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 13:42:22 -<==      Total: 0
2019-03-17 13:42:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 13:42:22 -==> Parameters: 1(Long), 0(String)
2019-03-17 13:42:22 -<==      Total: 1
2019-03-17 13:42:22 -耗时 : 9
2019-03-17 13:42:22 -返回值 : com.bootdo.common.utils.PageUtils@36379367
2019-03-17 13:42:22 -请求地址 : http://localhost:8081/main
2019-03-17 13:42:22 -HTTP METHOD : GET
2019-03-17 13:42:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 13:42:22 -参数 : []
2019-03-17 13:42:22 -耗时 : 1
2019-03-17 13:42:22 -返回值 : main
2019-03-17 13:42:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 13:42:31 -==> Parameters: 1(Long)
2019-03-17 13:42:31 -<==      Total: 86
2019-03-17 13:42:31 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-17 13:42:31 -HTTP METHOD : GET
2019-03-17 13:42:31 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-17 13:42:31 -参数 : []
2019-03-17 13:42:31 -耗时 : 1
2019-03-17 13:42:31 -返回值 : elec/elecInto/elecInto
2019-03-17 13:42:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 13:42:36 -HTTP METHOD : GET
2019-03-17 13:42:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 13:42:36 -参数 : []
2019-03-17 13:42:36 -耗时 : 1
2019-03-17 13:42:36 -返回值 : system/dept/deptTree
2019-03-17 13:42:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 13:42:36 -HTTP METHOD : GET
2019-03-17 13:42:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 13:42:36 -参数 : []
2019-03-17 13:42:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 13:42:36 -==> Parameters: 
2019-03-17 13:42:36 -<==      Total: 3
2019-03-17 13:42:36 -耗时 : 4
2019-03-17 13:42:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 13:42:39 -请求地址 : http://localhost:8081/elec/elecInto/exprotElecIntoExcel
2019-03-17 13:42:39 -HTTP METHOD : GET
2019-03-17 13:42:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.exprotExcel
2019-03-17 13:42:39 -参数 : [com.bootdo.elec.vo.ElecVo@7be6384c, org.apache.shiro.web.servlet.ShiroHttpServletResponse@53a5a008]
2019-03-17 13:42:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? 
2019-03-17 13:42:39 -==> Parameters: 2019-03(String), 3(Long)
2019-03-17 13:42:39 -<==      Total: 1
2019-03-17 13:42:39 -耗时 : 17
2019-03-17 13:42:39 -返回值 : null
2019-03-17 13:58:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1304]
2019-03-17 14:28:12 -Validating all active sessions...
2019-03-17 14:28:12 -Finished session validation.  [1] sessions were stopped.
2019-03-17 14:28:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1737]
2019-03-17 14:44:38 -Starting BootdoApplication on ZJZL-20180906VX with PID 5948 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-17 14:44:38 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-17 14:44:38 -The following profiles are active: dev
2019-03-17 14:44:38 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@293d0107: startup date [Sun Mar 17 14:44:38 CST 2019]; root of context hierarchy
2019-03-17 14:44:44 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-17 14:44:46 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$350cc94a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:44:47 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$2765f7f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:44:48 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:44:49 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:44:49 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:44:49 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-17 14:44:49 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-17 14:44:49 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:44:49 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:44:49 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:44:49 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:44:51 -Tomcat initialized with port(s): 8081 (http)
2019-03-17 14:44:51 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-17 14:44:51 -Starting service [Tomcat]
2019-03-17 14:44:51 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-17 14:44:51 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-17 14:44:51 -Initializing Spring embedded WebApplicationContext
2019-03-17 14:44:51 -Root WebApplicationContext: initialization completed in 13083 ms
2019-03-17 14:44:53 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-17 14:44:53 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-17 14:44:53 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-17 14:44:53 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-17 14:44:53 -Filter xssFilter was not registered (disabled)
2019-03-17 14:44:53 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-17 14:44:53 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-17 14:44:53 -Servlet statViewServlet mapped to [/druid/*]
2019-03-17 14:44:53 -Servlet dispatcherServlet mapped to [/]
2019-03-17 14:44:57 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@293d0107: startup date [Sun Mar 17 14:44:38 CST 2019]; root of context hierarchy
2019-03-17 14:44:57 -Using default implementation for ThreadExecutor
2019-03-17 14:44:57 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-17 14:44:57 -Quartz Scheduler v.2.2.1 created.
2019-03-17 14:44:57 -RAMJobStore initialized.
2019-03-17 14:44:57 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-17 14:44:57 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-17 14:44:57 -Quartz scheduler version: 2.2.1
2019-03-17 14:44:57 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@706d2bae
2019-03-17 14:44:58 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-17 14:44:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-17 14:45:02 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-17 14:45:02 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-17 14:45:02 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-17 14:45:02 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-17 14:45:02 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-17 14:45:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-17 14:45:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-17 14:45:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-17 14:45:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-17 14:45:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-17 14:45:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-17 14:45:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-17 14:45:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-17 14:45:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-17 14:45:02 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-17 14:45:02 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-17 14:45:02 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-17 14:45:02 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-17 14:45:02 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:02 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-17 14:45:02 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-17 14:45:02 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:02 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-17 14:45:02 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-17 14:45:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-17 14:45:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 14:45:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-17 14:45:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-17 14:45:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 14:45:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-17 14:45:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-17 14:45:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-17 14:45:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-17 14:45:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-17 14:45:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-17 14:45:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-17 14:45:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-17 14:45:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-17 14:45:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-17 14:45:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-17 14:45:02 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-17 14:45:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 14:45:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 14:45:02 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-17 14:45:02 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-17 14:45:02 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-17 14:45:02 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-17 14:45:02 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-17 14:45:02 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-17 14:45:02 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:02 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-17 14:45:02 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-17 14:45:02 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-17 14:45:02 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-17 14:45:02 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-17 14:45:02 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-17 14:45:02 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-17 14:45:02 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 14:45:02 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:02 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 14:45:02 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:02 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-17 14:45:02 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-17 14:45:02 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 14:45:02 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-17 14:45:02 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-17 14:45:02 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-17 14:45:02 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-17 14:45:02 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:02 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-17 14:45:02 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-17 14:45:02 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-17 14:45:03 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-17 14:45:03 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-17 14:45:03 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-17 14:45:03 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-17 14:45:03 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-17 14:45:03 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 14:45:03 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:03 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 14:45:03 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-17 14:45:03 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 14:45:03 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-17 14:45:03 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-17 14:45:03 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-17 14:45:03 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-17 14:45:03 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-17 14:45:03 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-17 14:45:03 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-17 14:45:03 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 14:45:03 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:03 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 14:45:03 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-17 14:45:03 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-17 14:45:03 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-17 14:45:03 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-17 14:45:03 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 14:45:03 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:03 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 14:45:03 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-17 14:45:03 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-17 14:45:03 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-17 14:45:03 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-17 14:45:03 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 14:45:03 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:03 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 14:45:03 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-17 14:45:03 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-17 14:45:03 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-17 14:45:03 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-17 14:45:03 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-17 14:45:03 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:03 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-17 14:45:03 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-17 14:45:03 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-17 14:45:03 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:03 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-17 14:45:03 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-17 14:45:03 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-17 14:45:03 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-17 14:45:03 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-17 14:45:03 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:03 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-17 14:45:03 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-17 14:45:03 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-17 14:45:03 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-17 14:45:03 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-17 14:45:03 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-17 14:45:03 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-17 14:45:03 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-17 14:45:03 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-17 14:45:03 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-17 14:45:03 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-17 14:45:03 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-17 14:45:03 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 14:45:03 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 14:45:03 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-17 14:45:03 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-17 14:45:03 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-17 14:45:03 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:03 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-17 14:45:03 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-17 14:45:03 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-17 14:45:03 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 14:45:03 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-17 14:45:03 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-17 14:45:03 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-17 14:45:03 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-17 14:45:03 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-17 14:45:03 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-17 14:45:03 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-17 14:45:03 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-17 14:45:03 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-17 14:45:03 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-17 14:45:03 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-17 14:45:03 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:03 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-17 14:45:03 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-17 14:45:03 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:03 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-17 14:45:03 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-17 14:45:03 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-17 14:45:03 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 14:45:03 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 14:45:03 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 14:45:03 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-17 14:45:03 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 14:45:03 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-17 14:45:03 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-17 14:45:03 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-17 14:45:03 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-17 14:45:03 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-17 14:45:03 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-17 14:45:03 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:03 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-17 14:45:03 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:03 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-17 14:45:03 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:03 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-17 14:45:03 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-17 14:45:03 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-17 14:45:03 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-17 14:45:03 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:03 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-17 14:45:03 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-17 14:45:03 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-17 14:45:03 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-17 14:45:03 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-17 14:45:03 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-17 14:45:03 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-17 14:45:03 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 14:45:03 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:03 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 14:45:03 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-17 14:45:03 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:45:03 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-17 14:45:03 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:45:03 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 14:45:03 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-17 14:45:03 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-17 14:45:03 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-17 14:45:03 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-17 14:45:04 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-17 14:45:04 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-17 14:45:05 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 14:45:05 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@293d0107: startup date [Sun Mar 17 14:44:38 CST 2019]; root of context hierarchy
2019-03-17 14:45:05 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 14:45:05 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 14:45:05 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 14:45:05 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-17 14:45:06 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-17 14:45:09 -Registering beans for JMX exposure on startup
2019-03-17 14:45:09 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-17 14:45:09 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-17 14:45:09 -Starting beans in phase 2147483647
2019-03-17 14:45:09 -Context refreshed
2019-03-17 14:45:09 -Found 1 custom documentation plugin(s)
2019-03-17 14:45:09 -Scanning for api listing references
2019-03-17 14:45:10 -Generating unique operation named: removeUsingPOST_1
2019-03-17 14:45:10 -Generating unique operation named: addUsingGET_1
2019-03-17 14:45:10 -Generating unique operation named: editUsingGET_1
2019-03-17 14:45:10 -Generating unique operation named: listUsingGET_1
2019-03-17 14:45:10 -Generating unique operation named: removeUsingPOST_2
2019-03-17 14:45:10 -Generating unique operation named: removeUsingPOST_3
2019-03-17 14:45:10 -Generating unique operation named: saveUsingPOST_1
2019-03-17 14:45:10 -Generating unique operation named: updateUsingGET_1
2019-03-17 14:45:10 -Generating unique operation named: updateUsingHEAD_1
2019-03-17 14:45:10 -Generating unique operation named: updateUsingPOST_1
2019-03-17 14:45:10 -Generating unique operation named: updateUsingPUT_1
2019-03-17 14:45:10 -Generating unique operation named: updateUsingPATCH_1
2019-03-17 14:45:10 -Generating unique operation named: updateUsingDELETE_1
2019-03-17 14:45:10 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-17 14:45:10 -Generating unique operation named: updateUsingTRACE_1
2019-03-17 14:45:10 -Generating unique operation named: addUsingGET_2
2019-03-17 14:45:10 -Generating unique operation named: editUsingGET_2
2019-03-17 14:45:10 -Generating unique operation named: listUsingGET_2
2019-03-17 14:45:10 -Generating unique operation named: removeUsingPOST_4
2019-03-17 14:45:10 -Generating unique operation named: removeUsingPOST_5
2019-03-17 14:45:10 -Generating unique operation named: saveUsingPOST_2
2019-03-17 14:45:10 -Generating unique operation named: updateUsingGET_2
2019-03-17 14:45:10 -Generating unique operation named: updateUsingHEAD_2
2019-03-17 14:45:10 -Generating unique operation named: updateUsingPOST_2
2019-03-17 14:45:10 -Generating unique operation named: updateUsingPUT_2
2019-03-17 14:45:10 -Generating unique operation named: updateUsingPATCH_2
2019-03-17 14:45:10 -Generating unique operation named: updateUsingDELETE_2
2019-03-17 14:45:10 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-17 14:45:11 -Generating unique operation named: updateUsingTRACE_2
2019-03-17 14:45:11 -Generating unique operation named: addUsingGET_3
2019-03-17 14:45:11 -Generating unique operation named: editUsingGET_3
2019-03-17 14:45:11 -Generating unique operation named: listUsingGET_3
2019-03-17 14:45:11 -Generating unique operation named: removeUsingPOST_6
2019-03-17 14:45:11 -Generating unique operation named: removeUsingPOST_7
2019-03-17 14:45:11 -Generating unique operation named: saveUsingPOST_3
2019-03-17 14:45:11 -Generating unique operation named: updateUsingGET_3
2019-03-17 14:45:11 -Generating unique operation named: updateUsingHEAD_3
2019-03-17 14:45:11 -Generating unique operation named: updateUsingPOST_3
2019-03-17 14:45:11 -Generating unique operation named: updateUsingPUT_3
2019-03-17 14:45:11 -Generating unique operation named: updateUsingPATCH_3
2019-03-17 14:45:11 -Generating unique operation named: updateUsingDELETE_3
2019-03-17 14:45:11 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-17 14:45:11 -Generating unique operation named: updateUsingTRACE_3
2019-03-17 14:45:11 -Generating unique operation named: addUsingGET_4
2019-03-17 14:45:11 -Generating unique operation named: editUsingGET_4
2019-03-17 14:45:11 -Generating unique operation named: listUsingGET_4
2019-03-17 14:45:11 -Generating unique operation named: removeUsingPOST_8
2019-03-17 14:45:11 -Generating unique operation named: removeUsingPOST_9
2019-03-17 14:45:11 -Generating unique operation named: saveUsingPOST_4
2019-03-17 14:45:11 -Generating unique operation named: updateUsingGET_4
2019-03-17 14:45:11 -Generating unique operation named: updateUsingHEAD_4
2019-03-17 14:45:11 -Generating unique operation named: updateUsingPOST_4
2019-03-17 14:45:11 -Generating unique operation named: updateUsingPUT_4
2019-03-17 14:45:11 -Generating unique operation named: updateUsingPATCH_4
2019-03-17 14:45:11 -Generating unique operation named: updateUsingDELETE_4
2019-03-17 14:45:11 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-17 14:45:11 -Generating unique operation named: updateUsingTRACE_4
2019-03-17 14:45:11 -Generating unique operation named: ElecUsingGET_1
2019-03-17 14:45:11 -Generating unique operation named: addUsingGET_5
2019-03-17 14:45:11 -Generating unique operation named: editUsingGET_5
2019-03-17 14:45:11 -Generating unique operation named: listUsingGET_5
2019-03-17 14:45:11 -Generating unique operation named: removeUsingPOST_10
2019-03-17 14:45:11 -Generating unique operation named: removeUsingPOST_11
2019-03-17 14:45:11 -Generating unique operation named: saveUsingPOST_5
2019-03-17 14:45:11 -Generating unique operation named: updateUsingGET_5
2019-03-17 14:45:11 -Generating unique operation named: updateUsingHEAD_5
2019-03-17 14:45:11 -Generating unique operation named: updateUsingPOST_5
2019-03-17 14:45:11 -Generating unique operation named: updateUsingPUT_5
2019-03-17 14:45:11 -Generating unique operation named: updateUsingPATCH_5
2019-03-17 14:45:11 -Generating unique operation named: updateUsingDELETE_5
2019-03-17 14:45:11 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-17 14:45:11 -Generating unique operation named: updateUsingTRACE_5
2019-03-17 14:45:11 -Generating unique operation named: editUsingGET_6
2019-03-17 14:45:11 -Generating unique operation named: listUsingGET_6
2019-03-17 14:45:11 -Generating unique operation named: updateUsingPOST_6
2019-03-17 14:45:11 -Generating unique operation named: addUsingGET_6
2019-03-17 14:45:11 -Generating unique operation named: editUsingGET_7
2019-03-17 14:45:11 -Generating unique operation named: listUsingGET_7
2019-03-17 14:45:11 -Generating unique operation named: removeUsingPOST_12
2019-03-17 14:45:11 -Generating unique operation named: removeUsingPOST_13
2019-03-17 14:45:11 -Generating unique operation named: saveUsingPOST_6
2019-03-17 14:45:11 -Generating unique operation named: updateUsingGET_6
2019-03-17 14:45:11 -Generating unique operation named: updateUsingHEAD_6
2019-03-17 14:45:11 -Generating unique operation named: updateUsingPOST_7
2019-03-17 14:45:11 -Generating unique operation named: updateUsingPUT_6
2019-03-17 14:45:11 -Generating unique operation named: updateUsingPATCH_6
2019-03-17 14:45:11 -Generating unique operation named: updateUsingDELETE_6
2019-03-17 14:45:11 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-17 14:45:11 -Generating unique operation named: updateUsingTRACE_6
2019-03-17 14:45:11 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-17 14:45:11 -Generating unique operation named: addUsingGET_7
2019-03-17 14:45:11 -Generating unique operation named: editUsingGET_8
2019-03-17 14:45:11 -Generating unique operation named: listUsingGET_8
2019-03-17 14:45:11 -Generating unique operation named: removeUsingPOST_14
2019-03-17 14:45:12 -Generating unique operation named: removeUsingPOST_15
2019-03-17 14:45:12 -Generating unique operation named: saveUsingPOST_7
2019-03-17 14:45:12 -Generating unique operation named: updateUsingGET_7
2019-03-17 14:45:12 -Generating unique operation named: updateUsingHEAD_7
2019-03-17 14:45:12 -Generating unique operation named: updateUsingPOST_8
2019-03-17 14:45:12 -Generating unique operation named: updateUsingPUT_7
2019-03-17 14:45:12 -Generating unique operation named: updateUsingPATCH_7
2019-03-17 14:45:12 -Generating unique operation named: updateUsingDELETE_7
2019-03-17 14:45:12 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-17 14:45:12 -Generating unique operation named: updateUsingTRACE_7
2019-03-17 14:45:12 -Generating unique operation named: addUsingGET_8
2019-03-17 14:45:12 -Generating unique operation named: editUsingGET_9
2019-03-17 14:45:12 -Generating unique operation named: listUsingGET_9
2019-03-17 14:45:12 -Generating unique operation named: removeUsingPOST_16
2019-03-17 14:45:12 -Generating unique operation named: removeUsingPOST_17
2019-03-17 14:45:12 -Generating unique operation named: saveUsingPOST_8
2019-03-17 14:45:12 -Generating unique operation named: updateUsingGET_8
2019-03-17 14:45:12 -Generating unique operation named: updateUsingHEAD_8
2019-03-17 14:45:12 -Generating unique operation named: updateUsingPOST_9
2019-03-17 14:45:12 -Generating unique operation named: updateUsingPUT_8
2019-03-17 14:45:12 -Generating unique operation named: updateUsingPATCH_8
2019-03-17 14:45:12 -Generating unique operation named: updateUsingDELETE_8
2019-03-17 14:45:12 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-17 14:45:12 -Generating unique operation named: updateUsingTRACE_8
2019-03-17 14:45:12 -Generating unique operation named: addUsingGET_9
2019-03-17 14:45:12 -Generating unique operation named: editUsingGET_10
2019-03-17 14:45:12 -Generating unique operation named: infoUsingGET_1
2019-03-17 14:45:12 -Generating unique operation named: infoUsingHEAD_1
2019-03-17 14:45:12 -Generating unique operation named: infoUsingPOST_1
2019-03-17 14:45:12 -Generating unique operation named: infoUsingPUT_1
2019-03-17 14:45:12 -Generating unique operation named: infoUsingPATCH_1
2019-03-17 14:45:12 -Generating unique operation named: infoUsingDELETE_1
2019-03-17 14:45:12 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-17 14:45:12 -Generating unique operation named: infoUsingTRACE_1
2019-03-17 14:45:12 -Generating unique operation named: listUsingGET_10
2019-03-17 14:45:12 -Generating unique operation named: removeUsingPOST_18
2019-03-17 14:45:12 -Generating unique operation named: removeUsingPOST_19
2019-03-17 14:45:12 -Generating unique operation named: saveUsingPOST_9
2019-03-17 14:45:12 -Generating unique operation named: updateUsingPOST_10
2019-03-17 14:45:12 -Generating unique operation named: listUsingGET_11
2019-03-17 14:45:12 -Generating unique operation named: removeUsingPOST_20
2019-03-17 14:45:12 -Generating unique operation named: welcomeUsingGET_1
2019-03-17 14:45:12 -Generating unique operation named: addUsingGET_10
2019-03-17 14:45:12 -Generating unique operation named: editUsingGET_11
2019-03-17 14:45:12 -Generating unique operation named: listUsingGET_12
2019-03-17 14:45:12 -Generating unique operation named: removeUsingPOST_21
2019-03-17 14:45:12 -Generating unique operation named: saveUsingPOST_10
2019-03-17 14:45:12 -Generating unique operation named: treeUsingGET_1
2019-03-17 14:45:12 -Generating unique operation named: treeUsingGET_2
2019-03-17 14:45:12 -Generating unique operation named: updateUsingPOST_11
2019-03-17 14:45:12 -Generating unique operation named: addUsingGET_11
2019-03-17 14:45:12 -Generating unique operation named: editUsingGET_12
2019-03-17 14:45:12 -Generating unique operation named: listUsingGET_13
2019-03-17 14:45:12 -Generating unique operation named: removeUsingPOST_22
2019-03-17 14:45:12 -Generating unique operation named: removeUsingPOST_23
2019-03-17 14:45:12 -Generating unique operation named: saveUsingPOST_11
2019-03-17 14:45:12 -Generating unique operation named: updateUsingGET_9
2019-03-17 14:45:12 -Generating unique operation named: updateUsingHEAD_9
2019-03-17 14:45:12 -Generating unique operation named: updateUsingPOST_12
2019-03-17 14:45:12 -Generating unique operation named: updateUsingPUT_9
2019-03-17 14:45:12 -Generating unique operation named: updateUsingPATCH_9
2019-03-17 14:45:12 -Generating unique operation named: updateUsingDELETE_9
2019-03-17 14:45:13 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-17 14:45:13 -Generating unique operation named: updateUsingTRACE_9
2019-03-17 14:45:13 -Generating unique operation named: addUsingGET_12
2019-03-17 14:45:13 -Generating unique operation named: editUsingGET_13
2019-03-17 14:45:13 -Generating unique operation named: listUsingGET_14
2019-03-17 14:45:13 -Generating unique operation named: removeUsingPOST_24
2019-03-17 14:45:13 -Generating unique operation named: removeUsingPOST_25
2019-03-17 14:45:13 -Generating unique operation named: saveUsingPOST_12
2019-03-17 14:45:13 -Generating unique operation named: updateUsingGET_10
2019-03-17 14:45:13 -Generating unique operation named: updateUsingHEAD_10
2019-03-17 14:45:13 -Generating unique operation named: updateUsingPOST_13
2019-03-17 14:45:13 -Generating unique operation named: updateUsingPUT_10
2019-03-17 14:45:13 -Generating unique operation named: updateUsingPATCH_10
2019-03-17 14:45:13 -Generating unique operation named: updateUsingDELETE_10
2019-03-17 14:45:13 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-17 14:45:13 -Generating unique operation named: updateUsingTRACE_10
2019-03-17 14:45:13 -Generating unique operation named: addUsingGET_13
2019-03-17 14:45:13 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-17 14:45:13 -Generating unique operation named: editUsingGET_14
2019-03-17 14:45:13 -Generating unique operation named: listUsingGET_15
2019-03-17 14:45:13 -Generating unique operation named: saveUsingPOST_13
2019-03-17 14:45:13 -Generating unique operation named: saveUsingPOST_14
2019-03-17 14:45:13 -Generating unique operation named: updateUsingPOST_14
2019-03-17 14:45:13 -Generating unique operation named: listUsingGET_16
2019-03-17 14:45:13 -Generating unique operation named: listUsingHEAD_1
2019-03-17 14:45:13 -Generating unique operation named: listUsingPOST_1
2019-03-17 14:45:13 -Generating unique operation named: listUsingPUT_1
2019-03-17 14:45:13 -Generating unique operation named: listUsingPATCH_1
2019-03-17 14:45:13 -Generating unique operation named: listUsingDELETE_1
2019-03-17 14:45:13 -Generating unique operation named: listUsingOPTIONS_1
2019-03-17 14:45:13 -Generating unique operation named: listUsingTRACE_1
2019-03-17 14:45:13 -Generating unique operation named: addUsingGET_14
2019-03-17 14:45:13 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-17 14:45:13 -Generating unique operation named: editUsingGET_15
2019-03-17 14:45:13 -Generating unique operation named: listUsingGET_17
2019-03-17 14:45:13 -Generating unique operation named: removeUsingPOST_26
2019-03-17 14:45:13 -Generating unique operation named: saveUsingPOST_15
2019-03-17 14:45:13 -Generating unique operation named: treeUsingGET_3
2019-03-17 14:45:13 -Generating unique operation named: treeViewUsingGET_1
2019-03-17 14:45:13 -Generating unique operation named: updateUsingPOST_15
2019-03-17 14:45:13 -Generating unique operation named: addUsingGET_15
2019-03-17 14:45:13 -Generating unique operation named: editUsingGET_16
2019-03-17 14:45:13 -Generating unique operation named: listUsingGET_18
2019-03-17 14:45:13 -Generating unique operation named: removeUsingPOST_27
2019-03-17 14:45:13 -Generating unique operation named: removeUsingPOST_28
2019-03-17 14:45:13 -Generating unique operation named: saveUsingPOST_16
2019-03-17 14:45:13 -Generating unique operation named: updateUsingGET_11
2019-03-17 14:45:13 -Generating unique operation named: updateUsingHEAD_11
2019-03-17 14:45:13 -Generating unique operation named: updateUsingPOST_16
2019-03-17 14:45:13 -Generating unique operation named: updateUsingPUT_11
2019-03-17 14:45:13 -Generating unique operation named: updateUsingPATCH_11
2019-03-17 14:45:13 -Generating unique operation named: updateUsingDELETE_11
2019-03-17 14:45:13 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-17 14:45:13 -Generating unique operation named: updateUsingTRACE_11
2019-03-17 14:45:13 -Generating unique operation named: addUsingGET_16
2019-03-17 14:45:13 -Generating unique operation named: editUsingGET_17
2019-03-17 14:45:13 -Generating unique operation named: listUsingGET_19
2019-03-17 14:45:13 -Generating unique operation named: removeUsingPOST_29
2019-03-17 14:45:13 -Generating unique operation named: removeUsingPOST_30
2019-03-17 14:45:13 -Generating unique operation named: saveUsingPOST_17
2019-03-17 14:45:13 -Generating unique operation named: updateUsingGET_12
2019-03-17 14:45:13 -Generating unique operation named: updateUsingHEAD_12
2019-03-17 14:45:13 -Generating unique operation named: updateUsingPOST_17
2019-03-17 14:45:13 -Generating unique operation named: updateUsingPUT_12
2019-03-17 14:45:13 -Generating unique operation named: updateUsingPATCH_12
2019-03-17 14:45:13 -Generating unique operation named: updateUsingDELETE_12
2019-03-17 14:45:13 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-17 14:45:13 -Generating unique operation named: updateUsingTRACE_12
2019-03-17 14:45:13 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-17 14:45:13 -Generating unique operation named: addUsingGET_17
2019-03-17 14:45:13 -Generating unique operation named: editUsingGET_18
2019-03-17 14:45:13 -Generating unique operation named: listUsingGET_20
2019-03-17 14:45:13 -Generating unique operation named: removeUsingPOST_31
2019-03-17 14:45:13 -Generating unique operation named: removeUsingPOST_32
2019-03-17 14:45:13 -Generating unique operation named: saveUsingPOST_18
2019-03-17 14:45:13 -Generating unique operation named: updateUsingGET_13
2019-03-17 14:45:13 -Generating unique operation named: updateUsingHEAD_13
2019-03-17 14:45:13 -Generating unique operation named: updateUsingPOST_18
2019-03-17 14:45:13 -Generating unique operation named: updateUsingPUT_13
2019-03-17 14:45:13 -Generating unique operation named: updateUsingPATCH_13
2019-03-17 14:45:13 -Generating unique operation named: updateUsingDELETE_13
2019-03-17 14:45:13 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-17 14:45:13 -Generating unique operation named: updateUsingTRACE_13
2019-03-17 14:45:14 -Generating unique operation named: addUsingGET_18
2019-03-17 14:45:14 -Generating unique operation named: editUsingGET_19
2019-03-17 14:45:14 -Generating unique operation named: listUsingGET_21
2019-03-17 14:45:14 -Generating unique operation named: removeUsingPOST_33
2019-03-17 14:45:14 -Generating unique operation named: removeUsingPOST_34
2019-03-17 14:45:14 -Generating unique operation named: saveUsingPOST_19
2019-03-17 14:45:14 -Generating unique operation named: updateUsingGET_14
2019-03-17 14:45:14 -Generating unique operation named: updateUsingHEAD_14
2019-03-17 14:45:14 -Generating unique operation named: updateUsingPOST_19
2019-03-17 14:45:14 -Generating unique operation named: updateUsingPUT_14
2019-03-17 14:45:14 -Generating unique operation named: updateUsingPATCH_14
2019-03-17 14:45:14 -Generating unique operation named: updateUsingDELETE_14
2019-03-17 14:45:14 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-17 14:45:14 -Generating unique operation named: updateUsingTRACE_14
2019-03-17 14:45:14 -Starting Quartz Scheduler now
2019-03-17 14:45:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-17 14:45:14 -Starting...
2019-03-17 14:45:14 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-17 14:45:14 -Started.
2019-03-17 14:45:14 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-17 14:45:14 -Using a shared selector for servlet write/read
2019-03-17 14:45:14 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-17 14:45:14 -Started BootdoApplication in 38.123 seconds (JVM running for 39.811)
2019-03-17 14:46:04 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-17 14:51:52 -Starting BootdoApplication on ZJZL-20180906VX with PID 5388 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-17 14:51:52 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-17 14:51:52 -The following profiles are active: dev
2019-03-17 14:51:52 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c37b5b: startup date [Sun Mar 17 14:51:52 CST 2019]; root of context hierarchy
2019-03-17 14:51:57 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-17 14:52:00 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3a55a580] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:52:00 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$2caed427] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:52:01 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:52:02 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:52:02 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:52:02 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-17 14:52:02 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-17 14:52:02 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:52:02 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:52:02 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:52:02 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 14:52:03 -Tomcat initialized with port(s): 8081 (http)
2019-03-17 14:52:03 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-17 14:52:03 -Starting service [Tomcat]
2019-03-17 14:52:03 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-17 14:52:03 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-17 14:52:04 -Initializing Spring embedded WebApplicationContext
2019-03-17 14:52:04 -Root WebApplicationContext: initialization completed in 11250 ms
2019-03-17 14:52:04 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-17 14:52:04 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-17 14:52:04 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-17 14:52:04 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-17 14:52:04 -Filter xssFilter was not registered (disabled)
2019-03-17 14:52:04 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-17 14:52:04 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-17 14:52:04 -Servlet statViewServlet mapped to [/druid/*]
2019-03-17 14:52:04 -Servlet dispatcherServlet mapped to [/]
2019-03-17 14:52:07 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c37b5b: startup date [Sun Mar 17 14:51:52 CST 2019]; root of context hierarchy
2019-03-17 14:52:08 -Using default implementation for ThreadExecutor
2019-03-17 14:52:08 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-17 14:52:08 -Quartz Scheduler v.2.2.1 created.
2019-03-17 14:52:08 -RAMJobStore initialized.
2019-03-17 14:52:08 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-17 14:52:08 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-17 14:52:08 -Quartz scheduler version: 2.2.1
2019-03-17 14:52:08 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5a58db42
2019-03-17 14:52:09 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-17 14:52:09 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-17 14:52:12 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-17 14:52:12 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-17 14:52:12 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-17 14:52:12 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-17 14:52:12 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-17 14:52:12 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-17 14:52:13 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-17 14:52:13 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-17 14:52:13 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-17 14:52:13 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-17 14:52:13 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-17 14:52:13 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-17 14:52:13 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-17 14:52:13 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-17 14:52:13 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-17 14:52:13 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-17 14:52:13 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-17 14:52:13 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-17 14:52:13 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 14:52:13 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-17 14:52:13 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 14:52:13 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-17 14:52:13 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-17 14:52:13 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-17 14:52:13 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-17 14:52:13 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-17 14:52:13 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-17 14:52:13 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-17 14:52:13 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 14:52:13 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 14:52:13 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-17 14:52:13 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-17 14:52:13 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-17 14:52:13 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-17 14:52:13 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-17 14:52:13 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-17 14:52:13 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-17 14:52:13 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-17 14:52:13 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-17 14:52:13 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 14:52:13 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 14:52:13 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-17 14:52:13 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-17 14:52:13 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 14:52:13 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-17 14:52:13 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-17 14:52:13 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-17 14:52:13 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-17 14:52:13 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-17 14:52:13 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-17 14:52:13 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-17 14:52:13 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-17 14:52:13 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-17 14:52:13 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 14:52:13 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 14:52:13 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-17 14:52:13 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 14:52:13 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-17 14:52:13 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-17 14:52:13 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-17 14:52:13 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-17 14:52:13 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-17 14:52:13 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 14:52:13 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 14:52:13 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-17 14:52:13 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-17 14:52:13 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 14:52:13 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 14:52:13 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-17 14:52:13 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-17 14:52:13 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 14:52:13 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 14:52:13 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-17 14:52:13 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-17 14:52:13 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-17 14:52:13 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-17 14:52:13 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-17 14:52:13 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-17 14:52:13 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-17 14:52:13 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-17 14:52:13 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-17 14:52:13 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-17 14:52:13 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-17 14:52:13 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-17 14:52:13 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-17 14:52:13 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-17 14:52:13 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-17 14:52:13 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-17 14:52:13 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-17 14:52:13 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-17 14:52:13 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 14:52:13 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 14:52:13 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-17 14:52:13 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-17 14:52:13 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-17 14:52:13 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-17 14:52:13 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-17 14:52:13 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-17 14:52:13 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-17 14:52:13 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-17 14:52:13 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-17 14:52:13 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-17 14:52:13 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-17 14:52:13 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-17 14:52:13 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-17 14:52:13 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-17 14:52:13 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-17 14:52:13 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-17 14:52:13 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-17 14:52:13 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-17 14:52:13 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 14:52:13 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 14:52:13 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 14:52:13 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-17 14:52:13 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-17 14:52:13 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-17 14:52:13 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-17 14:52:13 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-17 14:52:13 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-17 14:52:13 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-17 14:52:13 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-17 14:52:13 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-17 14:52:13 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-17 14:52:13 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-17 14:52:13 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-17 14:52:13 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-17 14:52:13 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-17 14:52:13 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 14:52:13 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 14:52:13 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-17 14:52:13 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 14:52:13 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-17 14:52:13 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 14:52:13 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 14:52:13 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-17 14:52:13 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-17 14:52:13 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-17 14:52:13 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-17 14:52:14 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-17 14:52:14 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-17 14:52:14 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 14:52:15 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c37b5b: startup date [Sun Mar 17 14:51:52 CST 2019]; root of context hierarchy
2019-03-17 14:52:15 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 14:52:15 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 14:52:15 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 14:52:15 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-17 14:52:15 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-17 14:52:18 -Registering beans for JMX exposure on startup
2019-03-17 14:52:18 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-17 14:52:18 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-17 14:52:18 -Starting beans in phase 2147483647
2019-03-17 14:52:18 -Context refreshed
2019-03-17 14:52:18 -Found 1 custom documentation plugin(s)
2019-03-17 14:52:18 -Scanning for api listing references
2019-03-17 14:52:19 -Generating unique operation named: removeUsingPOST_1
2019-03-17 14:52:19 -Generating unique operation named: addUsingGET_1
2019-03-17 14:52:19 -Generating unique operation named: editUsingGET_1
2019-03-17 14:52:19 -Generating unique operation named: listUsingGET_1
2019-03-17 14:52:19 -Generating unique operation named: removeUsingPOST_2
2019-03-17 14:52:19 -Generating unique operation named: removeUsingPOST_3
2019-03-17 14:52:19 -Generating unique operation named: saveUsingPOST_1
2019-03-17 14:52:19 -Generating unique operation named: updateUsingGET_1
2019-03-17 14:52:19 -Generating unique operation named: updateUsingHEAD_1
2019-03-17 14:52:19 -Generating unique operation named: updateUsingPOST_1
2019-03-17 14:52:19 -Generating unique operation named: updateUsingPUT_1
2019-03-17 14:52:19 -Generating unique operation named: updateUsingPATCH_1
2019-03-17 14:52:19 -Generating unique operation named: updateUsingDELETE_1
2019-03-17 14:52:19 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-17 14:52:19 -Generating unique operation named: updateUsingTRACE_1
2019-03-17 14:52:19 -Generating unique operation named: addUsingGET_2
2019-03-17 14:52:19 -Generating unique operation named: editUsingGET_2
2019-03-17 14:52:19 -Generating unique operation named: listUsingGET_2
2019-03-17 14:52:19 -Generating unique operation named: removeUsingPOST_4
2019-03-17 14:52:19 -Generating unique operation named: removeUsingPOST_5
2019-03-17 14:52:19 -Generating unique operation named: saveUsingPOST_2
2019-03-17 14:52:19 -Generating unique operation named: updateUsingGET_2
2019-03-17 14:52:19 -Generating unique operation named: updateUsingHEAD_2
2019-03-17 14:52:19 -Generating unique operation named: updateUsingPOST_2
2019-03-17 14:52:19 -Generating unique operation named: updateUsingPUT_2
2019-03-17 14:52:19 -Generating unique operation named: updateUsingPATCH_2
2019-03-17 14:52:19 -Generating unique operation named: updateUsingDELETE_2
2019-03-17 14:52:19 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-17 14:52:19 -Generating unique operation named: updateUsingTRACE_2
2019-03-17 14:52:19 -Generating unique operation named: addUsingGET_3
2019-03-17 14:52:19 -Generating unique operation named: editUsingGET_3
2019-03-17 14:52:19 -Generating unique operation named: listUsingGET_3
2019-03-17 14:52:19 -Generating unique operation named: removeUsingPOST_6
2019-03-17 14:52:19 -Generating unique operation named: removeUsingPOST_7
2019-03-17 14:52:19 -Generating unique operation named: saveUsingPOST_3
2019-03-17 14:52:20 -Generating unique operation named: updateUsingGET_3
2019-03-17 14:52:20 -Generating unique operation named: updateUsingHEAD_3
2019-03-17 14:52:20 -Generating unique operation named: updateUsingPOST_3
2019-03-17 14:52:20 -Generating unique operation named: updateUsingPUT_3
2019-03-17 14:52:20 -Generating unique operation named: updateUsingPATCH_3
2019-03-17 14:52:20 -Generating unique operation named: updateUsingDELETE_3
2019-03-17 14:52:20 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-17 14:52:20 -Generating unique operation named: updateUsingTRACE_3
2019-03-17 14:52:20 -Generating unique operation named: addUsingGET_4
2019-03-17 14:52:20 -Generating unique operation named: editUsingGET_4
2019-03-17 14:52:20 -Generating unique operation named: listUsingGET_4
2019-03-17 14:52:20 -Generating unique operation named: removeUsingPOST_8
2019-03-17 14:52:20 -Generating unique operation named: removeUsingPOST_9
2019-03-17 14:52:20 -Generating unique operation named: saveUsingPOST_4
2019-03-17 14:52:20 -Generating unique operation named: updateUsingGET_4
2019-03-17 14:52:20 -Generating unique operation named: updateUsingHEAD_4
2019-03-17 14:52:20 -Generating unique operation named: updateUsingPOST_4
2019-03-17 14:52:20 -Generating unique operation named: updateUsingPUT_4
2019-03-17 14:52:20 -Generating unique operation named: updateUsingPATCH_4
2019-03-17 14:52:20 -Generating unique operation named: updateUsingDELETE_4
2019-03-17 14:52:20 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-17 14:52:20 -Generating unique operation named: updateUsingTRACE_4
2019-03-17 14:52:20 -Generating unique operation named: ElecUsingGET_1
2019-03-17 14:52:20 -Generating unique operation named: addUsingGET_5
2019-03-17 14:52:20 -Generating unique operation named: editUsingGET_5
2019-03-17 14:52:20 -Generating unique operation named: listUsingGET_5
2019-03-17 14:52:20 -Generating unique operation named: removeUsingPOST_10
2019-03-17 14:52:20 -Generating unique operation named: removeUsingPOST_11
2019-03-17 14:52:20 -Generating unique operation named: saveUsingPOST_5
2019-03-17 14:52:20 -Generating unique operation named: updateUsingGET_5
2019-03-17 14:52:20 -Generating unique operation named: updateUsingHEAD_5
2019-03-17 14:52:20 -Generating unique operation named: updateUsingPOST_5
2019-03-17 14:52:20 -Generating unique operation named: updateUsingPUT_5
2019-03-17 14:52:20 -Generating unique operation named: updateUsingPATCH_5
2019-03-17 14:52:20 -Generating unique operation named: updateUsingDELETE_5
2019-03-17 14:52:20 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-17 14:52:20 -Generating unique operation named: updateUsingTRACE_5
2019-03-17 14:52:20 -Generating unique operation named: editUsingGET_6
2019-03-17 14:52:20 -Generating unique operation named: listUsingGET_6
2019-03-17 14:52:20 -Generating unique operation named: updateUsingPOST_6
2019-03-17 14:52:20 -Generating unique operation named: addUsingGET_6
2019-03-17 14:52:20 -Generating unique operation named: editUsingGET_7
2019-03-17 14:52:20 -Generating unique operation named: listUsingGET_7
2019-03-17 14:52:20 -Generating unique operation named: removeUsingPOST_12
2019-03-17 14:52:20 -Generating unique operation named: removeUsingPOST_13
2019-03-17 14:52:20 -Generating unique operation named: saveUsingPOST_6
2019-03-17 14:52:20 -Generating unique operation named: updateUsingGET_6
2019-03-17 14:52:20 -Generating unique operation named: updateUsingHEAD_6
2019-03-17 14:52:20 -Generating unique operation named: updateUsingPOST_7
2019-03-17 14:52:20 -Generating unique operation named: updateUsingPUT_6
2019-03-17 14:52:20 -Generating unique operation named: updateUsingPATCH_6
2019-03-17 14:52:20 -Generating unique operation named: updateUsingDELETE_6
2019-03-17 14:52:20 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-17 14:52:20 -Generating unique operation named: updateUsingTRACE_6
2019-03-17 14:52:20 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-17 14:52:20 -Generating unique operation named: addUsingGET_7
2019-03-17 14:52:20 -Generating unique operation named: editUsingGET_8
2019-03-17 14:52:20 -Generating unique operation named: listUsingGET_8
2019-03-17 14:52:20 -Generating unique operation named: removeUsingPOST_14
2019-03-17 14:52:20 -Generating unique operation named: removeUsingPOST_15
2019-03-17 14:52:20 -Generating unique operation named: saveUsingPOST_7
2019-03-17 14:52:20 -Generating unique operation named: updateUsingGET_7
2019-03-17 14:52:20 -Generating unique operation named: updateUsingHEAD_7
2019-03-17 14:52:20 -Generating unique operation named: updateUsingPOST_8
2019-03-17 14:52:20 -Generating unique operation named: updateUsingPUT_7
2019-03-17 14:52:20 -Generating unique operation named: updateUsingPATCH_7
2019-03-17 14:52:20 -Generating unique operation named: updateUsingDELETE_7
2019-03-17 14:52:20 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-17 14:52:20 -Generating unique operation named: updateUsingTRACE_7
2019-03-17 14:52:20 -Generating unique operation named: addUsingGET_8
2019-03-17 14:52:20 -Generating unique operation named: editUsingGET_9
2019-03-17 14:52:20 -Generating unique operation named: listUsingGET_9
2019-03-17 14:52:20 -Generating unique operation named: removeUsingPOST_16
2019-03-17 14:52:20 -Generating unique operation named: removeUsingPOST_17
2019-03-17 14:52:20 -Generating unique operation named: saveUsingPOST_8
2019-03-17 14:52:20 -Generating unique operation named: updateUsingGET_8
2019-03-17 14:52:21 -Generating unique operation named: updateUsingHEAD_8
2019-03-17 14:52:21 -Generating unique operation named: updateUsingPOST_9
2019-03-17 14:52:21 -Generating unique operation named: updateUsingPUT_8
2019-03-17 14:52:21 -Generating unique operation named: updateUsingPATCH_8
2019-03-17 14:52:21 -Generating unique operation named: updateUsingDELETE_8
2019-03-17 14:52:21 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-17 14:52:21 -Generating unique operation named: updateUsingTRACE_8
2019-03-17 14:52:21 -Generating unique operation named: addUsingGET_9
2019-03-17 14:52:21 -Generating unique operation named: editUsingGET_10
2019-03-17 14:52:21 -Generating unique operation named: infoUsingGET_1
2019-03-17 14:52:21 -Generating unique operation named: infoUsingHEAD_1
2019-03-17 14:52:21 -Generating unique operation named: infoUsingPOST_1
2019-03-17 14:52:21 -Generating unique operation named: infoUsingPUT_1
2019-03-17 14:52:21 -Generating unique operation named: infoUsingPATCH_1
2019-03-17 14:52:21 -Generating unique operation named: infoUsingDELETE_1
2019-03-17 14:52:21 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-17 14:52:21 -Generating unique operation named: infoUsingTRACE_1
2019-03-17 14:52:21 -Generating unique operation named: listUsingGET_10
2019-03-17 14:52:21 -Generating unique operation named: removeUsingPOST_18
2019-03-17 14:52:21 -Generating unique operation named: removeUsingPOST_19
2019-03-17 14:52:21 -Generating unique operation named: saveUsingPOST_9
2019-03-17 14:52:21 -Generating unique operation named: updateUsingPOST_10
2019-03-17 14:52:21 -Generating unique operation named: listUsingGET_11
2019-03-17 14:52:21 -Generating unique operation named: removeUsingPOST_20
2019-03-17 14:52:21 -Generating unique operation named: welcomeUsingGET_1
2019-03-17 14:52:21 -Generating unique operation named: addUsingGET_10
2019-03-17 14:52:21 -Generating unique operation named: editUsingGET_11
2019-03-17 14:52:21 -Generating unique operation named: listUsingGET_12
2019-03-17 14:52:21 -Generating unique operation named: removeUsingPOST_21
2019-03-17 14:52:21 -Generating unique operation named: saveUsingPOST_10
2019-03-17 14:52:21 -Generating unique operation named: treeUsingGET_1
2019-03-17 14:52:21 -Generating unique operation named: treeUsingGET_2
2019-03-17 14:52:21 -Generating unique operation named: updateUsingPOST_11
2019-03-17 14:52:21 -Generating unique operation named: addUsingGET_11
2019-03-17 14:52:21 -Generating unique operation named: editUsingGET_12
2019-03-17 14:52:21 -Generating unique operation named: listUsingGET_13
2019-03-17 14:52:21 -Generating unique operation named: removeUsingPOST_22
2019-03-17 14:52:21 -Generating unique operation named: removeUsingPOST_23
2019-03-17 14:52:21 -Generating unique operation named: saveUsingPOST_11
2019-03-17 14:52:21 -Generating unique operation named: updateUsingGET_9
2019-03-17 14:52:21 -Generating unique operation named: updateUsingHEAD_9
2019-03-17 14:52:21 -Generating unique operation named: updateUsingPOST_12
2019-03-17 14:52:21 -Generating unique operation named: updateUsingPUT_9
2019-03-17 14:52:21 -Generating unique operation named: updateUsingPATCH_9
2019-03-17 14:52:21 -Generating unique operation named: updateUsingDELETE_9
2019-03-17 14:52:21 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-17 14:52:21 -Generating unique operation named: updateUsingTRACE_9
2019-03-17 14:52:21 -Generating unique operation named: addUsingGET_12
2019-03-17 14:52:21 -Generating unique operation named: editUsingGET_13
2019-03-17 14:52:21 -Generating unique operation named: listUsingGET_14
2019-03-17 14:52:21 -Generating unique operation named: removeUsingPOST_24
2019-03-17 14:52:21 -Generating unique operation named: removeUsingPOST_25
2019-03-17 14:52:21 -Generating unique operation named: saveUsingPOST_12
2019-03-17 14:52:21 -Generating unique operation named: updateUsingGET_10
2019-03-17 14:52:21 -Generating unique operation named: updateUsingHEAD_10
2019-03-17 14:52:21 -Generating unique operation named: updateUsingPOST_13
2019-03-17 14:52:21 -Generating unique operation named: updateUsingPUT_10
2019-03-17 14:52:21 -Generating unique operation named: updateUsingPATCH_10
2019-03-17 14:52:21 -Generating unique operation named: updateUsingDELETE_10
2019-03-17 14:52:21 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-17 14:52:21 -Generating unique operation named: updateUsingTRACE_10
2019-03-17 14:52:21 -Generating unique operation named: addUsingGET_13
2019-03-17 14:52:21 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-17 14:52:21 -Generating unique operation named: editUsingGET_14
2019-03-17 14:52:21 -Generating unique operation named: listUsingGET_15
2019-03-17 14:52:21 -Generating unique operation named: saveUsingPOST_13
2019-03-17 14:52:21 -Generating unique operation named: saveUsingPOST_14
2019-03-17 14:52:21 -Generating unique operation named: updateUsingPOST_14
2019-03-17 14:52:22 -Generating unique operation named: listUsingGET_16
2019-03-17 14:52:22 -Generating unique operation named: listUsingHEAD_1
2019-03-17 14:52:22 -Generating unique operation named: listUsingPOST_1
2019-03-17 14:52:22 -Generating unique operation named: listUsingPUT_1
2019-03-17 14:52:22 -Generating unique operation named: listUsingPATCH_1
2019-03-17 14:52:22 -Generating unique operation named: listUsingDELETE_1
2019-03-17 14:52:22 -Generating unique operation named: listUsingOPTIONS_1
2019-03-17 14:52:22 -Generating unique operation named: listUsingTRACE_1
2019-03-17 14:52:22 -Generating unique operation named: addUsingGET_14
2019-03-17 14:52:22 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-17 14:52:22 -Generating unique operation named: editUsingGET_15
2019-03-17 14:52:22 -Generating unique operation named: listUsingGET_17
2019-03-17 14:52:22 -Generating unique operation named: removeUsingPOST_26
2019-03-17 14:52:22 -Generating unique operation named: saveUsingPOST_15
2019-03-17 14:52:22 -Generating unique operation named: treeUsingGET_3
2019-03-17 14:52:22 -Generating unique operation named: treeViewUsingGET_1
2019-03-17 14:52:22 -Generating unique operation named: updateUsingPOST_15
2019-03-17 14:52:22 -Generating unique operation named: addUsingGET_15
2019-03-17 14:52:22 -Generating unique operation named: editUsingGET_16
2019-03-17 14:52:22 -Generating unique operation named: listUsingGET_18
2019-03-17 14:52:22 -Generating unique operation named: removeUsingPOST_27
2019-03-17 14:52:22 -Generating unique operation named: removeUsingPOST_28
2019-03-17 14:52:22 -Generating unique operation named: saveUsingPOST_16
2019-03-17 14:52:22 -Generating unique operation named: updateUsingGET_11
2019-03-17 14:52:22 -Generating unique operation named: updateUsingHEAD_11
2019-03-17 14:52:22 -Generating unique operation named: updateUsingPOST_16
2019-03-17 14:52:22 -Generating unique operation named: updateUsingPUT_11
2019-03-17 14:52:22 -Generating unique operation named: updateUsingPATCH_11
2019-03-17 14:52:22 -Generating unique operation named: updateUsingDELETE_11
2019-03-17 14:52:22 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-17 14:52:22 -Generating unique operation named: updateUsingTRACE_11
2019-03-17 14:52:22 -Generating unique operation named: addUsingGET_16
2019-03-17 14:52:22 -Generating unique operation named: editUsingGET_17
2019-03-17 14:52:22 -Generating unique operation named: listUsingGET_19
2019-03-17 14:52:22 -Generating unique operation named: removeUsingPOST_29
2019-03-17 14:52:22 -Generating unique operation named: removeUsingPOST_30
2019-03-17 14:52:22 -Generating unique operation named: saveUsingPOST_17
2019-03-17 14:52:22 -Generating unique operation named: updateUsingGET_12
2019-03-17 14:52:22 -Generating unique operation named: updateUsingHEAD_12
2019-03-17 14:52:22 -Generating unique operation named: updateUsingPOST_17
2019-03-17 14:52:22 -Generating unique operation named: updateUsingPUT_12
2019-03-17 14:52:22 -Generating unique operation named: updateUsingPATCH_12
2019-03-17 14:52:22 -Generating unique operation named: updateUsingDELETE_12
2019-03-17 14:52:22 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-17 14:52:22 -Generating unique operation named: updateUsingTRACE_12
2019-03-17 14:52:22 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-17 14:52:22 -Generating unique operation named: addUsingGET_17
2019-03-17 14:52:22 -Generating unique operation named: editUsingGET_18
2019-03-17 14:52:22 -Generating unique operation named: listUsingGET_20
2019-03-17 14:52:22 -Generating unique operation named: removeUsingPOST_31
2019-03-17 14:52:22 -Generating unique operation named: removeUsingPOST_32
2019-03-17 14:52:22 -Generating unique operation named: saveUsingPOST_18
2019-03-17 14:52:22 -Generating unique operation named: updateUsingGET_13
2019-03-17 14:52:22 -Generating unique operation named: updateUsingHEAD_13
2019-03-17 14:52:22 -Generating unique operation named: updateUsingPOST_18
2019-03-17 14:52:22 -Generating unique operation named: updateUsingPUT_13
2019-03-17 14:52:22 -Generating unique operation named: updateUsingPATCH_13
2019-03-17 14:52:22 -Generating unique operation named: updateUsingDELETE_13
2019-03-17 14:52:22 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-17 14:52:22 -Generating unique operation named: updateUsingTRACE_13
2019-03-17 14:52:22 -Generating unique operation named: addUsingGET_18
2019-03-17 14:52:22 -Generating unique operation named: editUsingGET_19
2019-03-17 14:52:22 -Generating unique operation named: listUsingGET_21
2019-03-17 14:52:22 -Generating unique operation named: removeUsingPOST_33
2019-03-17 14:52:22 -Generating unique operation named: removeUsingPOST_34
2019-03-17 14:52:22 -Generating unique operation named: saveUsingPOST_19
2019-03-17 14:52:22 -Generating unique operation named: updateUsingGET_14
2019-03-17 14:52:22 -Generating unique operation named: updateUsingHEAD_14
2019-03-17 14:52:22 -Generating unique operation named: updateUsingPOST_19
2019-03-17 14:52:22 -Generating unique operation named: updateUsingPUT_14
2019-03-17 14:52:22 -Generating unique operation named: updateUsingPATCH_14
2019-03-17 14:52:22 -Generating unique operation named: updateUsingDELETE_14
2019-03-17 14:52:22 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-17 14:52:22 -Generating unique operation named: updateUsingTRACE_14
2019-03-17 14:52:22 -Starting Quartz Scheduler now
2019-03-17 14:52:22 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-17 14:52:22 -Starting...
2019-03-17 14:52:22 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-17 14:52:22 -Started.
2019-03-17 14:52:22 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-17 14:52:22 -Using a shared selector for servlet write/read
2019-03-17 14:52:22 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-17 14:52:22 -Started BootdoApplication in 32.531 seconds (JVM running for 34.267)
2019-03-17 14:52:23 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-17 14:52:23 -==> Parameters: 
2019-03-17 14:52:23 -<==      Total: 1
2019-03-17 14:53:08 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-17 14:53:08 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-17 14:53:08 -FrameworkServlet 'dispatcherServlet': initialization completed in 83 ms
2019-03-17 14:53:08 -Enabling session validation scheduler...
2019-03-17 14:53:08 -请求地址 : http://localhost:8081/login;JSESSIONID=2031239a-776f-4c2e-a2b9-4dca421aaea9
2019-03-17 14:53:08 -HTTP METHOD : GET
2019-03-17 14:53:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 14:53:08 -参数 : [{}]
2019-03-17 14:53:08 -耗时 : 6
2019-03-17 14:53:08 -返回值 : login
2019-03-17 14:53:10 -请求地址 : http://localhost:8081/getVerify
2019-03-17 14:53:10 -HTTP METHOD : GET
2019-03-17 14:53:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-17 14:53:10 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5cce7c19, org.apache.shiro.web.servlet.ShiroHttpServletResponse@58f1f358]
2019-03-17 14:53:13 -5056
2019-03-17 14:53:13 -耗时 : 3587
2019-03-17 14:53:13 -返回值 : null
2019-03-17 14:53:13 -请求地址 : http://localhost:8081/login
2019-03-17 14:53:13 -HTTP METHOD : GET
2019-03-17 14:53:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 14:53:13 -参数 : [{}]
2019-03-17 14:53:13 -耗时 : 1
2019-03-17 14:53:13 -返回值 : login
2019-03-17 14:53:14 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-17 14:53:38 -请求地址 : http://localhost:8081/login
2019-03-17 14:53:38 -HTTP METHOD : POST
2019-03-17 14:53:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 14:53:38 -参数 : [admin, 111111, 5056, org.apache.shiro.web.servlet.ShiroHttpServletRequest@65770b82]
2019-03-17 14:53:38 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-17 14:53:38 -==> Parameters: admin(String)
2019-03-17 14:53:38 -<==      Total: 1
2019-03-17 14:53:38 -耗时 : 267
2019-03-17 14:53:38 -返回值 : {msg=操作成功, code=0}
2019-03-17 14:53:38 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-17 14:53:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 14:53:38 -==> Parameters: 1(Long), admin(String), 登录(String), 267(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 14:53:38.599(Timestamp)
2019-03-17 14:53:38 -请求地址 : http://localhost:8081/index
2019-03-17 14:53:38 -HTTP METHOD : GET
2019-03-17 14:53:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 14:53:38 -参数 : [{}]
2019-03-17 14:53:38 -<==    Updates: 1
2019-03-17 14:53:38 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 14:53:38 -==> Parameters: 1(Long)
2019-03-17 14:53:38 -<==      Total: 45
2019-03-17 14:53:38 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 14:53:38 -==> Parameters: 138(Long)
2019-03-17 14:53:38 -<==      Total: 1
2019-03-17 14:53:38 -耗时 : 275
2019-03-17 14:53:38 -返回值 : index_v1
2019-03-17 14:53:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 14:53:39 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 276(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 14:53:39.011(Timestamp)
2019-03-17 14:53:39 -<==    Updates: 1
2019-03-17 14:53:39 -请求地址 : http://localhost:8081/main
2019-03-17 14:53:39 -HTTP METHOD : GET
2019-03-17 14:53:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 14:53:39 -参数 : []
2019-03-17 14:53:39 -耗时 : 1
2019-03-17 14:53:39 -返回值 : main
2019-03-17 14:53:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 14:53:39 -HTTP METHOD : GET
2019-03-17 14:53:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 14:53:39 -参数 : []
2019-03-17 14:53:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 14:53:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 14:53:39 -请求地址 : http://localhost:8081/main
2019-03-17 14:53:39 -HTTP METHOD : GET
2019-03-17 14:53:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 14:53:39 -参数 : []
2019-03-17 14:53:39 -耗时 : 1
2019-03-17 14:53:39 -返回值 : main
2019-03-17 14:53:39 -<==      Total: 0
2019-03-17 14:53:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 14:53:39 -==> Parameters: 1(Long), 0(String)
2019-03-17 14:53:39 -<==      Total: 1
2019-03-17 14:53:39 -耗时 : 338
2019-03-17 14:53:39 -返回值 : com.bootdo.common.utils.PageUtils@7f0dc9e4
2019-03-17 14:54:37 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 14:54:37 -==> Parameters: 1(Long)
2019-03-17 14:54:37 -<==      Total: 86
2019-03-17 14:54:37 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-17 14:54:37 -HTTP METHOD : GET
2019-03-17 14:54:37 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-17 14:54:37 -参数 : []
2019-03-17 14:54:37 -耗时 : 0
2019-03-17 14:54:37 -返回值 : elec/elecInto/elecInto
2019-03-17 14:54:48 -请求地址 : http://localhost:8081/water/water
2019-03-17 14:54:48 -HTTP METHOD : GET
2019-03-17 14:54:48 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-03-17 14:54:48 -参数 : []
2019-03-17 14:54:48 -耗时 : 1
2019-03-17 14:54:48 -返回值 : water/water/water
2019-03-17 14:54:48 -请求地址 : http://localhost:8081/water/water/list
2019-03-17 14:54:48 -HTTP METHOD : GET
2019-03-17 14:54:48 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-17 14:54:48 -参数 : [{limit=10, offset=0}]
2019-03-17 14:54:48 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id desc limit ?, ? 
2019-03-17 14:54:48 -==> Parameters: 0(Integer), 10(Integer)
2019-03-17 14:54:48 -<==      Total: 1
2019-03-17 14:54:48 -==>  Preparing: select count(*) from water 
2019-03-17 14:54:48 -==> Parameters: 
2019-03-17 14:54:48 -<==      Total: 1
2019-03-17 14:54:48 -耗时 : 244
2019-03-17 14:54:48 -返回值 : com.bootdo.common.utils.PageUtils@5448a2bb
2019-03-17 14:54:49 -请求地址 : http://localhost:8081/water/waterInto
2019-03-17 14:54:49 -HTTP METHOD : GET
2019-03-17 14:54:49 -CLASS_METHOD : com.bootdo.water.controller.WaterIntoController.WaterInto
2019-03-17 14:54:49 -参数 : []
2019-03-17 14:54:49 -耗时 : 1
2019-03-17 14:54:49 -返回值 : water/waterInto/waterInto
2019-03-17 14:56:37 -请求地址 : http://localhost:8081/
2019-03-17 14:56:37 -HTTP METHOD : GET
2019-03-17 14:56:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-17 14:56:37 -参数 : [{}]
2019-03-17 14:56:37 -耗时 : 1
2019-03-17 14:56:37 -返回值 : redirect:/index
2019-03-17 14:56:37 -请求地址 : http://localhost:8081/login;JSESSIONID=be2cdfc9-3b17-480c-8719-08d89c1e917a
2019-03-17 14:56:37 -HTTP METHOD : GET
2019-03-17 14:56:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 14:56:37 -参数 : [{}]
2019-03-17 14:56:37 -耗时 : 1
2019-03-17 14:56:37 -返回值 : login
2019-03-17 14:56:41 -请求地址 : http://localhost:8081/getVerify
2019-03-17 14:56:41 -HTTP METHOD : GET
2019-03-17 14:56:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-17 14:56:41 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4d4f9903, org.apache.shiro.web.servlet.ShiroHttpServletResponse@706f3f14]
2019-03-17 14:56:41 -3129
2019-03-17 14:56:41 -耗时 : 9
2019-03-17 14:56:41 -返回值 : null
2019-03-17 14:56:41 -请求地址 : http://localhost:8081/login
2019-03-17 14:56:41 -HTTP METHOD : GET
2019-03-17 14:56:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 14:56:41 -参数 : [{}]
2019-03-17 14:56:41 -耗时 : 1
2019-03-17 14:56:41 -返回值 : login
2019-03-17 14:56:48 -请求地址 : http://localhost:8081/login
2019-03-17 14:56:48 -HTTP METHOD : POST
2019-03-17 14:56:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 14:56:48 -参数 : [admin, 111111, 3129, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4cb24b11]
2019-03-17 14:56:48 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-17 14:56:48 -==> Parameters: admin(String)
2019-03-17 14:56:48 -<==      Total: 1
2019-03-17 14:56:48 -耗时 : 7
2019-03-17 14:56:48 -返回值 : {msg=操作成功, code=0}
2019-03-17 14:56:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 14:56:48 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 14:56:48.902(Timestamp)
2019-03-17 14:56:48 -请求地址 : http://localhost:8081/index
2019-03-17 14:56:48 -HTTP METHOD : GET
2019-03-17 14:56:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 14:56:48 -参数 : [{}]
2019-03-17 14:56:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 14:56:49 -==> Parameters: 1(Long)
2019-03-17 14:56:49 -<==    Updates: 1
2019-03-17 14:56:49 -<==      Total: 45
2019-03-17 14:56:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 14:56:49 -==> Parameters: 138(Long)
2019-03-17 14:56:49 -<==      Total: 1
2019-03-17 14:56:49 -耗时 : 386
2019-03-17 14:56:49 -返回值 : index_v1
2019-03-17 14:56:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 14:56:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 386(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 14:56:49.323(Timestamp)
2019-03-17 14:56:49 -请求地址 : http://localhost:8081/main
2019-03-17 14:56:49 -HTTP METHOD : GET
2019-03-17 14:56:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 14:56:49 -参数 : []
2019-03-17 14:56:49 -耗时 : 0
2019-03-17 14:56:49 -返回值 : main
2019-03-17 14:56:49 -<==    Updates: 1
2019-03-17 14:56:51 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 14:56:51 -HTTP METHOD : GET
2019-03-17 14:56:51 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 14:56:51 -参数 : []
2019-03-17 14:56:51 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 14:56:51 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 14:56:51 -请求地址 : http://localhost:8081/main
2019-03-17 14:56:51 -HTTP METHOD : GET
2019-03-17 14:56:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 14:56:51 -参数 : []
2019-03-17 14:56:51 -耗时 : 1
2019-03-17 14:56:51 -返回值 : main
2019-03-17 14:56:51 -<==      Total: 0
2019-03-17 14:56:51 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 14:56:51 -==> Parameters: 1(Long), 0(String)
2019-03-17 14:56:51 -<==      Total: 1
2019-03-17 14:56:51 -耗时 : 193
2019-03-17 14:56:51 -返回值 : com.bootdo.common.utils.PageUtils@107db62e
2019-03-17 14:56:58 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 14:56:58 -==> Parameters: 1(Long)
2019-03-17 14:56:58 -<==      Total: 86
2019-03-17 14:56:58 -请求地址 : http://localhost:8081/water/waterInto
2019-03-17 14:56:58 -HTTP METHOD : GET
2019-03-17 14:56:58 -CLASS_METHOD : com.bootdo.water.controller.WaterIntoController.WaterInto
2019-03-17 14:56:58 -参数 : []
2019-03-17 14:56:58 -耗时 : 1
2019-03-17 14:56:58 -返回值 : water/waterInto/waterInto
2019-03-17 14:59:41 -请求地址 : http://localhost:8081/index
2019-03-17 14:59:41 -HTTP METHOD : GET
2019-03-17 14:59:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 14:59:41 -参数 : [{}]
2019-03-17 14:59:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 14:59:41 -==> Parameters: 1(Long)
2019-03-17 14:59:41 -<==      Total: 45
2019-03-17 14:59:41 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 14:59:41 -==> Parameters: 138(Long)
2019-03-17 14:59:41 -<==      Total: 1
2019-03-17 14:59:41 -耗时 : 29
2019-03-17 14:59:41 -返回值 : index_v1
2019-03-17 14:59:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 14:59:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 14:59:41.059(Timestamp)
2019-03-17 14:59:41 -<==    Updates: 1
2019-03-17 14:59:41 -请求地址 : http://localhost:8081/main
2019-03-17 14:59:41 -HTTP METHOD : GET
2019-03-17 14:59:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 14:59:41 -参数 : []
2019-03-17 14:59:41 -耗时 : 1
2019-03-17 14:59:41 -返回值 : main
2019-03-17 14:59:41 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 14:59:41 -HTTP METHOD : GET
2019-03-17 14:59:41 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 14:59:41 -参数 : []
2019-03-17 14:59:41 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 14:59:41 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 14:59:41 -<==      Total: 0
2019-03-17 14:59:41 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 14:59:41 -==> Parameters: 1(Long), 0(String)
2019-03-17 14:59:41 -<==      Total: 1
2019-03-17 14:59:41 -耗时 : 24
2019-03-17 14:59:41 -返回值 : com.bootdo.common.utils.PageUtils@162263d1
2019-03-17 14:59:41 -请求地址 : http://localhost:8081/main
2019-03-17 14:59:41 -HTTP METHOD : GET
2019-03-17 14:59:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 14:59:41 -参数 : []
2019-03-17 14:59:41 -耗时 : 0
2019-03-17 14:59:41 -返回值 : main
2019-03-17 14:59:45 -请求地址 : http://localhost:8081/water/waterInto
2019-03-17 14:59:45 -HTTP METHOD : GET
2019-03-17 14:59:45 -CLASS_METHOD : com.bootdo.water.controller.WaterIntoController.WaterInto
2019-03-17 14:59:45 -参数 : []
2019-03-17 14:59:45 -耗时 : 0
2019-03-17 14:59:45 -返回值 : water/waterInto/waterInto
2019-03-17 14:59:50 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 14:59:50 -HTTP METHOD : GET
2019-03-17 14:59:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 14:59:50 -参数 : []
2019-03-17 14:59:50 -耗时 : 1
2019-03-17 14:59:50 -返回值 : system/dept/deptTree
2019-03-17 14:59:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 14:59:51 -HTTP METHOD : GET
2019-03-17 14:59:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 14:59:51 -参数 : []
2019-03-17 14:59:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 14:59:51 -==> Parameters: 
2019-03-17 14:59:51 -<==      Total: 3
2019-03-17 14:59:51 -耗时 : 34
2019-03-17 14:59:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 15:03:08 -请求地址 : http://localhost:8081/heat/heatInto
2019-03-17 15:03:08 -HTTP METHOD : GET
2019-03-17 15:03:08 -CLASS_METHOD : com.bootdo.heat.controller.HeatIntoController.HeatInto
2019-03-17 15:03:08 -参数 : []
2019-03-17 15:03:08 -耗时 : 1
2019-03-17 15:03:08 -返回值 : heat/heatInto/heatInto
2019-03-17 15:03:46 -请求地址 : http://localhost:8081/index
2019-03-17 15:03:46 -HTTP METHOD : GET
2019-03-17 15:03:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 15:03:46 -参数 : [{}]
2019-03-17 15:03:46 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 15:03:46 -==> Parameters: 1(Long)
2019-03-17 15:03:46 -<==      Total: 45
2019-03-17 15:03:46 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 15:03:46 -==> Parameters: 138(Long)
2019-03-17 15:03:46 -<==      Total: 1
2019-03-17 15:03:46 -耗时 : 24
2019-03-17 15:03:46 -返回值 : index_v1
2019-03-17 15:03:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 15:03:46 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 15:03:46.866(Timestamp)
2019-03-17 15:03:47 -<==    Updates: 1
2019-03-17 15:03:47 -请求地址 : http://localhost:8081/main
2019-03-17 15:03:47 -HTTP METHOD : GET
2019-03-17 15:03:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 15:03:47 -参数 : []
2019-03-17 15:03:47 -耗时 : 1
2019-03-17 15:03:47 -返回值 : main
2019-03-17 15:03:47 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 15:03:47 -HTTP METHOD : GET
2019-03-17 15:03:47 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 15:03:47 -参数 : []
2019-03-17 15:03:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 15:03:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 15:03:47 -<==      Total: 0
2019-03-17 15:03:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 15:03:47 -==> Parameters: 1(Long), 0(String)
2019-03-17 15:03:47 -<==      Total: 1
2019-03-17 15:03:47 -耗时 : 11
2019-03-17 15:03:47 -返回值 : com.bootdo.common.utils.PageUtils@4a681ba0
2019-03-17 15:03:47 -请求地址 : http://localhost:8081/main
2019-03-17 15:03:47 -HTTP METHOD : GET
2019-03-17 15:03:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 15:03:47 -参数 : []
2019-03-17 15:03:47 -耗时 : 1
2019-03-17 15:03:47 -返回值 : main
2019-03-17 15:03:53 -请求地址 : http://localhost:8081/heat/heatInto
2019-03-17 15:03:53 -HTTP METHOD : GET
2019-03-17 15:03:53 -CLASS_METHOD : com.bootdo.heat.controller.HeatIntoController.HeatInto
2019-03-17 15:03:53 -参数 : []
2019-03-17 15:03:53 -耗时 : 0
2019-03-17 15:03:53 -返回值 : heat/heatInto/heatInto
2019-03-17 15:03:59 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 15:03:59 -HTTP METHOD : GET
2019-03-17 15:03:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 15:03:59 -参数 : []
2019-03-17 15:03:59 -耗时 : 1
2019-03-17 15:03:59 -返回值 : system/dept/deptTree
2019-03-17 15:03:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 15:03:59 -HTTP METHOD : GET
2019-03-17 15:03:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 15:03:59 -参数 : []
2019-03-17 15:03:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 15:03:59 -==> Parameters: 
2019-03-17 15:03:59 -<==      Total: 3
2019-03-17 15:03:59 -耗时 : 8
2019-03-17 15:03:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 15:04:03 -请求地址 : http://localhost:8081/heat/heatInto/exprotHeatIntoExcel
2019-03-17 15:04:03 -HTTP METHOD : GET
2019-03-17 15:04:03 -CLASS_METHOD : com.bootdo.heat.controller.HeatIntoController.exprotExcel
2019-03-17 15:04:03 -参数 : [com.bootdo.heat.vo.HeatVo@1b018059, org.apache.shiro.web.servlet.ShiroHttpServletResponse@63a0d98d]
2019-03-17 15:04:03 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SHEATT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? 
2019-03-17 15:04:03 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-03-17 15:04:03 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-03-17 15:04:03 -耗时 : 287
2019-03-17 15:04:03 -返回值 : null
2019-03-17 15:04:32 -请求地址 : http://localhost:8081/index
2019-03-17 15:04:32 -HTTP METHOD : GET
2019-03-17 15:04:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 15:04:32 -参数 : [{}]
2019-03-17 15:04:32 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 15:04:32 -==> Parameters: 1(Long)
2019-03-17 15:04:32 -<==      Total: 45
2019-03-17 15:04:32 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 15:04:32 -==> Parameters: 138(Long)
2019-03-17 15:04:32 -<==      Total: 1
2019-03-17 15:04:32 -耗时 : 27
2019-03-17 15:04:32 -返回值 : index_v1
2019-03-17 15:04:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 15:04:32 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 15:04:32.519(Timestamp)
2019-03-17 15:04:32 -<==    Updates: 1
2019-03-17 15:04:32 -请求地址 : http://localhost:8081/main
2019-03-17 15:04:32 -HTTP METHOD : GET
2019-03-17 15:04:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 15:04:32 -参数 : []
2019-03-17 15:04:32 -耗时 : 0
2019-03-17 15:04:32 -返回值 : main
2019-03-17 15:04:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 15:04:32 -HTTP METHOD : GET
2019-03-17 15:04:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 15:04:32 -参数 : []
2019-03-17 15:04:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 15:04:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 15:04:32 -<==      Total: 0
2019-03-17 15:04:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 15:04:32 -==> Parameters: 1(Long), 0(String)
2019-03-17 15:04:32 -<==      Total: 1
2019-03-17 15:04:32 -耗时 : 7
2019-03-17 15:04:32 -返回值 : com.bootdo.common.utils.PageUtils@4d5ec0c6
2019-03-17 15:04:32 -请求地址 : http://localhost:8081/main
2019-03-17 15:04:32 -HTTP METHOD : GET
2019-03-17 15:04:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 15:04:32 -参数 : []
2019-03-17 15:04:32 -耗时 : 1
2019-03-17 15:04:32 -返回值 : main
2019-03-17 15:04:35 -请求地址 : http://localhost:8081/heat/heatInto
2019-03-17 15:04:35 -HTTP METHOD : GET
2019-03-17 15:04:35 -CLASS_METHOD : com.bootdo.heat.controller.HeatIntoController.HeatInto
2019-03-17 15:04:35 -参数 : []
2019-03-17 15:04:35 -耗时 : 0
2019-03-17 15:04:35 -返回值 : heat/heatInto/heatInto
2019-03-17 15:04:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 15:04:38 -HTTP METHOD : GET
2019-03-17 15:04:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 15:04:38 -参数 : []
2019-03-17 15:04:38 -耗时 : 1
2019-03-17 15:04:38 -返回值 : system/dept/deptTree
2019-03-17 15:04:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 15:04:38 -HTTP METHOD : GET
2019-03-17 15:04:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 15:04:38 -参数 : []
2019-03-17 15:04:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 15:04:38 -==> Parameters: 
2019-03-17 15:04:38 -<==      Total: 3
2019-03-17 15:04:38 -耗时 : 5
2019-03-17 15:04:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 15:04:40 -请求地址 : http://localhost:8081/heat/heatInto/exprotHeatIntoExcel
2019-03-17 15:04:40 -HTTP METHOD : GET
2019-03-17 15:04:40 -CLASS_METHOD : com.bootdo.heat.controller.HeatIntoController.exprotExcel
2019-03-17 15:04:40 -参数 : [com.bootdo.heat.vo.HeatVo@7e1882f2, org.apache.shiro.web.servlet.ShiroHttpServletResponse@216a7096]
2019-03-17 15:04:40 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SHEATT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? 
2019-03-17 15:04:40 -耗时 : 9
2019-03-17 15:04:40 -返回值 : null
2019-03-17 15:07:04 -Starting BootdoApplication on ZJZL-20180906VX with PID 14564 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-17 15:07:04 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-17 15:07:04 -The following profiles are active: dev
2019-03-17 15:07:05 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ed3068a: startup date [Sun Mar 17 15:07:05 CST 2019]; root of context hierarchy
2019-03-17 15:07:09 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-17 15:07:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6c365fe0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:07:12 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5e8f8e87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:07:13 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:07:14 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:07:14 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:07:14 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-17 15:07:14 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-17 15:07:14 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:07:14 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:07:14 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:07:14 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:07:16 -Tomcat initialized with port(s): 8081 (http)
2019-03-17 15:07:16 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-17 15:07:16 -Starting service [Tomcat]
2019-03-17 15:07:16 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-17 15:07:16 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-17 15:07:17 -Initializing Spring embedded WebApplicationContext
2019-03-17 15:07:17 -Root WebApplicationContext: initialization completed in 11931 ms
2019-03-17 15:07:18 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-17 15:07:18 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-17 15:07:18 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-17 15:07:18 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-17 15:07:18 -Filter xssFilter was not registered (disabled)
2019-03-17 15:07:18 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-17 15:07:18 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-17 15:07:18 -Servlet statViewServlet mapped to [/druid/*]
2019-03-17 15:07:18 -Servlet dispatcherServlet mapped to [/]
2019-03-17 15:07:22 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ed3068a: startup date [Sun Mar 17 15:07:05 CST 2019]; root of context hierarchy
2019-03-17 15:07:22 -Using default implementation for ThreadExecutor
2019-03-17 15:07:22 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-17 15:07:22 -Quartz Scheduler v.2.2.1 created.
2019-03-17 15:07:22 -RAMJobStore initialized.
2019-03-17 15:07:22 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-17 15:07:22 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-17 15:07:22 -Quartz scheduler version: 2.2.1
2019-03-17 15:07:22 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3cc74fc4
2019-03-17 15:07:23 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-17 15:07:23 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-17 15:07:27 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-17 15:07:27 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-17 15:07:27 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-17 15:07:27 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-17 15:07:27 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-17 15:07:27 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-17 15:07:27 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-17 15:07:27 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-17 15:07:27 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-17 15:07:27 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:27 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-17 15:07:27 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-17 15:07:27 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-17 15:07:27 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-17 15:07:27 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:27 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-17 15:07:27 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-17 15:07:27 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-17 15:07:27 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-17 15:07:27 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-17 15:07:27 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:27 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-17 15:07:27 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-17 15:07:27 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:27 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-17 15:07:27 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-17 15:07:27 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:27 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-17 15:07:27 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 15:07:27 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-17 15:07:27 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 15:07:27 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-17 15:07:27 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-17 15:07:27 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-17 15:07:27 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-17 15:07:27 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-17 15:07:27 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:27 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-17 15:07:27 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-17 15:07:27 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:27 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-17 15:07:27 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-17 15:07:27 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-17 15:07:27 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-17 15:07:27 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:27 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-17 15:07:27 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-17 15:07:27 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 15:07:27 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 15:07:28 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-17 15:07:28 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-17 15:07:28 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-17 15:07:28 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-17 15:07:28 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-17 15:07:28 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-17 15:07:28 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-17 15:07:28 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-17 15:07:28 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-17 15:07:28 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-17 15:07:28 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-17 15:07:28 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 15:07:28 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 15:07:28 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-17 15:07:28 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-17 15:07:28 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 15:07:28 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-17 15:07:28 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-17 15:07:28 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-17 15:07:28 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-17 15:07:28 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-17 15:07:28 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-17 15:07:28 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-17 15:07:28 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-17 15:07:28 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-17 15:07:28 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-17 15:07:28 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 15:07:28 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 15:07:28 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-17 15:07:28 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 15:07:28 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-17 15:07:28 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-17 15:07:28 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-17 15:07:28 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-17 15:07:28 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-17 15:07:28 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-17 15:07:28 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 15:07:28 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 15:07:28 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-17 15:07:28 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-17 15:07:28 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-17 15:07:28 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 15:07:28 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 15:07:28 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-17 15:07:28 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-17 15:07:28 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-17 15:07:28 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 15:07:28 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 15:07:28 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-17 15:07:28 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-17 15:07:28 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-17 15:07:28 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-17 15:07:28 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-17 15:07:28 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-17 15:07:28 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-17 15:07:28 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-17 15:07:28 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-17 15:07:28 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-17 15:07:28 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-17 15:07:28 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-17 15:07:28 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-17 15:07:28 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-17 15:07:28 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-17 15:07:28 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-17 15:07:28 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-17 15:07:28 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-17 15:07:28 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-17 15:07:28 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-17 15:07:28 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-17 15:07:28 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-17 15:07:28 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 15:07:28 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 15:07:28 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-17 15:07:28 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-17 15:07:28 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-17 15:07:28 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-17 15:07:28 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-17 15:07:28 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-17 15:07:28 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-17 15:07:28 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-17 15:07:28 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-17 15:07:28 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-17 15:07:28 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-17 15:07:28 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-17 15:07:28 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-17 15:07:28 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-17 15:07:28 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-17 15:07:28 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-17 15:07:28 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-17 15:07:28 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-17 15:07:28 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 15:07:28 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-17 15:07:28 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 15:07:28 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 15:07:28 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-17 15:07:28 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-17 15:07:28 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-17 15:07:28 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-17 15:07:28 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-17 15:07:28 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-17 15:07:28 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-17 15:07:28 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-17 15:07:28 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-17 15:07:28 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-17 15:07:28 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-17 15:07:28 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-17 15:07:28 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-17 15:07:28 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-17 15:07:28 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-17 15:07:28 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-17 15:07:28 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 15:07:28 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 15:07:28 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:07:28 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-17 15:07:28 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:07:28 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-17 15:07:28 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 15:07:28 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-17 15:07:28 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-17 15:07:28 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-17 15:07:28 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-17 15:07:29 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-17 15:07:29 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-17 15:07:29 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 15:07:30 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@ed3068a: startup date [Sun Mar 17 15:07:05 CST 2019]; root of context hierarchy
2019-03-17 15:07:30 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 15:07:30 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 15:07:30 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 15:07:30 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-17 15:07:30 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-17 15:07:33 -Registering beans for JMX exposure on startup
2019-03-17 15:07:33 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-17 15:07:33 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-17 15:07:33 -Starting beans in phase 2147483647
2019-03-17 15:07:33 -Context refreshed
2019-03-17 15:07:33 -Found 1 custom documentation plugin(s)
2019-03-17 15:07:33 -Scanning for api listing references
2019-03-17 15:07:34 -Generating unique operation named: removeUsingPOST_1
2019-03-17 15:07:34 -Generating unique operation named: addUsingGET_1
2019-03-17 15:07:34 -Generating unique operation named: editUsingGET_1
2019-03-17 15:07:34 -Generating unique operation named: listUsingGET_1
2019-03-17 15:07:34 -Generating unique operation named: removeUsingPOST_2
2019-03-17 15:07:34 -Generating unique operation named: removeUsingPOST_3
2019-03-17 15:07:34 -Generating unique operation named: saveUsingPOST_1
2019-03-17 15:07:34 -Generating unique operation named: updateUsingGET_1
2019-03-17 15:07:34 -Generating unique operation named: updateUsingHEAD_1
2019-03-17 15:07:34 -Generating unique operation named: updateUsingPOST_1
2019-03-17 15:07:34 -Generating unique operation named: updateUsingPUT_1
2019-03-17 15:07:34 -Generating unique operation named: updateUsingPATCH_1
2019-03-17 15:07:34 -Generating unique operation named: updateUsingDELETE_1
2019-03-17 15:07:34 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-17 15:07:34 -Generating unique operation named: updateUsingTRACE_1
2019-03-17 15:07:34 -Generating unique operation named: addUsingGET_2
2019-03-17 15:07:34 -Generating unique operation named: editUsingGET_2
2019-03-17 15:07:34 -Generating unique operation named: listUsingGET_2
2019-03-17 15:07:34 -Generating unique operation named: removeUsingPOST_4
2019-03-17 15:07:34 -Generating unique operation named: removeUsingPOST_5
2019-03-17 15:07:34 -Generating unique operation named: saveUsingPOST_2
2019-03-17 15:07:34 -Generating unique operation named: updateUsingGET_2
2019-03-17 15:07:34 -Generating unique operation named: updateUsingHEAD_2
2019-03-17 15:07:34 -Generating unique operation named: updateUsingPOST_2
2019-03-17 15:07:34 -Generating unique operation named: updateUsingPUT_2
2019-03-17 15:07:34 -Generating unique operation named: updateUsingPATCH_2
2019-03-17 15:07:34 -Generating unique operation named: updateUsingDELETE_2
2019-03-17 15:07:34 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-17 15:07:34 -Generating unique operation named: updateUsingTRACE_2
2019-03-17 15:07:34 -Generating unique operation named: addUsingGET_3
2019-03-17 15:07:34 -Generating unique operation named: editUsingGET_3
2019-03-17 15:07:34 -Generating unique operation named: listUsingGET_3
2019-03-17 15:07:35 -Generating unique operation named: removeUsingPOST_6
2019-03-17 15:07:35 -Generating unique operation named: removeUsingPOST_7
2019-03-17 15:07:35 -Generating unique operation named: saveUsingPOST_3
2019-03-17 15:07:35 -Generating unique operation named: updateUsingGET_3
2019-03-17 15:07:35 -Generating unique operation named: updateUsingHEAD_3
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPOST_3
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPUT_3
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPATCH_3
2019-03-17 15:07:35 -Generating unique operation named: updateUsingDELETE_3
2019-03-17 15:07:35 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-17 15:07:35 -Generating unique operation named: updateUsingTRACE_3
2019-03-17 15:07:35 -Generating unique operation named: addUsingGET_4
2019-03-17 15:07:35 -Generating unique operation named: editUsingGET_4
2019-03-17 15:07:35 -Generating unique operation named: listUsingGET_4
2019-03-17 15:07:35 -Generating unique operation named: removeUsingPOST_8
2019-03-17 15:07:35 -Generating unique operation named: removeUsingPOST_9
2019-03-17 15:07:35 -Generating unique operation named: saveUsingPOST_4
2019-03-17 15:07:35 -Generating unique operation named: updateUsingGET_4
2019-03-17 15:07:35 -Generating unique operation named: updateUsingHEAD_4
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPOST_4
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPUT_4
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPATCH_4
2019-03-17 15:07:35 -Generating unique operation named: updateUsingDELETE_4
2019-03-17 15:07:35 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-17 15:07:35 -Generating unique operation named: updateUsingTRACE_4
2019-03-17 15:07:35 -Generating unique operation named: ElecUsingGET_1
2019-03-17 15:07:35 -Generating unique operation named: addUsingGET_5
2019-03-17 15:07:35 -Generating unique operation named: editUsingGET_5
2019-03-17 15:07:35 -Generating unique operation named: listUsingGET_5
2019-03-17 15:07:35 -Generating unique operation named: removeUsingPOST_10
2019-03-17 15:07:35 -Generating unique operation named: removeUsingPOST_11
2019-03-17 15:07:35 -Generating unique operation named: saveUsingPOST_5
2019-03-17 15:07:35 -Generating unique operation named: updateUsingGET_5
2019-03-17 15:07:35 -Generating unique operation named: updateUsingHEAD_5
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPOST_5
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPUT_5
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPATCH_5
2019-03-17 15:07:35 -Generating unique operation named: updateUsingDELETE_5
2019-03-17 15:07:35 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-17 15:07:35 -Generating unique operation named: updateUsingTRACE_5
2019-03-17 15:07:35 -Generating unique operation named: editUsingGET_6
2019-03-17 15:07:35 -Generating unique operation named: listUsingGET_6
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPOST_6
2019-03-17 15:07:35 -Generating unique operation named: addUsingGET_6
2019-03-17 15:07:35 -Generating unique operation named: editUsingGET_7
2019-03-17 15:07:35 -Generating unique operation named: listUsingGET_7
2019-03-17 15:07:35 -Generating unique operation named: removeUsingPOST_12
2019-03-17 15:07:35 -Generating unique operation named: removeUsingPOST_13
2019-03-17 15:07:35 -Generating unique operation named: saveUsingPOST_6
2019-03-17 15:07:35 -Generating unique operation named: updateUsingGET_6
2019-03-17 15:07:35 -Generating unique operation named: updateUsingHEAD_6
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPOST_7
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPUT_6
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPATCH_6
2019-03-17 15:07:35 -Generating unique operation named: updateUsingDELETE_6
2019-03-17 15:07:35 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-17 15:07:35 -Generating unique operation named: updateUsingTRACE_6
2019-03-17 15:07:35 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-17 15:07:35 -Generating unique operation named: addUsingGET_7
2019-03-17 15:07:35 -Generating unique operation named: editUsingGET_8
2019-03-17 15:07:35 -Generating unique operation named: listUsingGET_8
2019-03-17 15:07:35 -Generating unique operation named: removeUsingPOST_14
2019-03-17 15:07:35 -Generating unique operation named: removeUsingPOST_15
2019-03-17 15:07:35 -Generating unique operation named: saveUsingPOST_7
2019-03-17 15:07:35 -Generating unique operation named: updateUsingGET_7
2019-03-17 15:07:35 -Generating unique operation named: updateUsingHEAD_7
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPOST_8
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPUT_7
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPATCH_7
2019-03-17 15:07:35 -Generating unique operation named: updateUsingDELETE_7
2019-03-17 15:07:35 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-17 15:07:35 -Generating unique operation named: updateUsingTRACE_7
2019-03-17 15:07:35 -Generating unique operation named: addUsingGET_8
2019-03-17 15:07:35 -Generating unique operation named: editUsingGET_9
2019-03-17 15:07:35 -Generating unique operation named: listUsingGET_9
2019-03-17 15:07:35 -Generating unique operation named: removeUsingPOST_16
2019-03-17 15:07:35 -Generating unique operation named: removeUsingPOST_17
2019-03-17 15:07:35 -Generating unique operation named: saveUsingPOST_8
2019-03-17 15:07:35 -Generating unique operation named: updateUsingGET_8
2019-03-17 15:07:35 -Generating unique operation named: updateUsingHEAD_8
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPOST_9
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPUT_8
2019-03-17 15:07:35 -Generating unique operation named: updateUsingPATCH_8
2019-03-17 15:07:35 -Generating unique operation named: updateUsingDELETE_8
2019-03-17 15:07:35 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-17 15:07:35 -Generating unique operation named: updateUsingTRACE_8
2019-03-17 15:07:35 -Generating unique operation named: addUsingGET_9
2019-03-17 15:07:35 -Generating unique operation named: editUsingGET_10
2019-03-17 15:07:35 -Generating unique operation named: infoUsingGET_1
2019-03-17 15:07:36 -Generating unique operation named: infoUsingHEAD_1
2019-03-17 15:07:36 -Generating unique operation named: infoUsingPOST_1
2019-03-17 15:07:36 -Generating unique operation named: infoUsingPUT_1
2019-03-17 15:07:36 -Generating unique operation named: infoUsingPATCH_1
2019-03-17 15:07:36 -Generating unique operation named: infoUsingDELETE_1
2019-03-17 15:07:36 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-17 15:07:36 -Generating unique operation named: infoUsingTRACE_1
2019-03-17 15:07:36 -Generating unique operation named: listUsingGET_10
2019-03-17 15:07:36 -Generating unique operation named: removeUsingPOST_18
2019-03-17 15:07:36 -Generating unique operation named: removeUsingPOST_19
2019-03-17 15:07:36 -Generating unique operation named: saveUsingPOST_9
2019-03-17 15:07:36 -Generating unique operation named: updateUsingPOST_10
2019-03-17 15:07:36 -Generating unique operation named: listUsingGET_11
2019-03-17 15:07:36 -Generating unique operation named: removeUsingPOST_20
2019-03-17 15:07:36 -Generating unique operation named: welcomeUsingGET_1
2019-03-17 15:07:36 -Generating unique operation named: addUsingGET_10
2019-03-17 15:07:36 -Generating unique operation named: editUsingGET_11
2019-03-17 15:07:36 -Generating unique operation named: listUsingGET_12
2019-03-17 15:07:36 -Generating unique operation named: removeUsingPOST_21
2019-03-17 15:07:36 -Generating unique operation named: saveUsingPOST_10
2019-03-17 15:07:36 -Generating unique operation named: treeUsingGET_1
2019-03-17 15:07:36 -Generating unique operation named: treeUsingGET_2
2019-03-17 15:07:36 -Generating unique operation named: updateUsingPOST_11
2019-03-17 15:07:36 -Generating unique operation named: addUsingGET_11
2019-03-17 15:07:36 -Generating unique operation named: editUsingGET_12
2019-03-17 15:07:36 -Generating unique operation named: listUsingGET_13
2019-03-17 15:07:36 -Generating unique operation named: removeUsingPOST_22
2019-03-17 15:07:36 -Generating unique operation named: removeUsingPOST_23
2019-03-17 15:07:36 -Generating unique operation named: saveUsingPOST_11
2019-03-17 15:07:36 -Generating unique operation named: updateUsingGET_9
2019-03-17 15:07:36 -Generating unique operation named: updateUsingHEAD_9
2019-03-17 15:07:36 -Generating unique operation named: updateUsingPOST_12
2019-03-17 15:07:36 -Generating unique operation named: updateUsingPUT_9
2019-03-17 15:07:36 -Generating unique operation named: updateUsingPATCH_9
2019-03-17 15:07:36 -Generating unique operation named: updateUsingDELETE_9
2019-03-17 15:07:36 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-17 15:07:36 -Generating unique operation named: updateUsingTRACE_9
2019-03-17 15:07:36 -Generating unique operation named: addUsingGET_12
2019-03-17 15:07:36 -Generating unique operation named: editUsingGET_13
2019-03-17 15:07:36 -Generating unique operation named: listUsingGET_14
2019-03-17 15:07:36 -Generating unique operation named: removeUsingPOST_24
2019-03-17 15:07:36 -Generating unique operation named: removeUsingPOST_25
2019-03-17 15:07:36 -Generating unique operation named: saveUsingPOST_12
2019-03-17 15:07:36 -Generating unique operation named: updateUsingGET_10
2019-03-17 15:07:36 -Generating unique operation named: updateUsingHEAD_10
2019-03-17 15:07:36 -Generating unique operation named: updateUsingPOST_13
2019-03-17 15:07:36 -Generating unique operation named: updateUsingPUT_10
2019-03-17 15:07:36 -Generating unique operation named: updateUsingPATCH_10
2019-03-17 15:07:36 -Generating unique operation named: updateUsingDELETE_10
2019-03-17 15:07:36 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-17 15:07:36 -Generating unique operation named: updateUsingTRACE_10
2019-03-17 15:07:36 -Generating unique operation named: addUsingGET_13
2019-03-17 15:07:36 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-17 15:07:36 -Generating unique operation named: editUsingGET_14
2019-03-17 15:07:36 -Generating unique operation named: listUsingGET_15
2019-03-17 15:07:36 -Generating unique operation named: saveUsingPOST_13
2019-03-17 15:07:36 -Generating unique operation named: saveUsingPOST_14
2019-03-17 15:07:36 -Generating unique operation named: updateUsingPOST_14
2019-03-17 15:07:36 -Generating unique operation named: listUsingGET_16
2019-03-17 15:07:36 -Generating unique operation named: listUsingHEAD_1
2019-03-17 15:07:36 -Generating unique operation named: listUsingPOST_1
2019-03-17 15:07:36 -Generating unique operation named: listUsingPUT_1
2019-03-17 15:07:36 -Generating unique operation named: listUsingPATCH_1
2019-03-17 15:07:36 -Generating unique operation named: listUsingDELETE_1
2019-03-17 15:07:36 -Generating unique operation named: listUsingOPTIONS_1
2019-03-17 15:07:36 -Generating unique operation named: listUsingTRACE_1
2019-03-17 15:07:36 -Generating unique operation named: addUsingGET_14
2019-03-17 15:07:36 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-17 15:07:36 -Generating unique operation named: editUsingGET_15
2019-03-17 15:07:36 -Generating unique operation named: listUsingGET_17
2019-03-17 15:07:37 -Generating unique operation named: removeUsingPOST_26
2019-03-17 15:07:37 -Generating unique operation named: saveUsingPOST_15
2019-03-17 15:07:37 -Generating unique operation named: treeUsingGET_3
2019-03-17 15:07:37 -Generating unique operation named: treeViewUsingGET_1
2019-03-17 15:07:37 -Generating unique operation named: updateUsingPOST_15
2019-03-17 15:07:37 -Generating unique operation named: addUsingGET_15
2019-03-17 15:07:37 -Generating unique operation named: editUsingGET_16
2019-03-17 15:07:37 -Generating unique operation named: listUsingGET_18
2019-03-17 15:07:37 -Generating unique operation named: removeUsingPOST_27
2019-03-17 15:07:37 -Generating unique operation named: removeUsingPOST_28
2019-03-17 15:07:37 -Generating unique operation named: saveUsingPOST_16
2019-03-17 15:07:37 -Generating unique operation named: updateUsingGET_11
2019-03-17 15:07:37 -Generating unique operation named: updateUsingHEAD_11
2019-03-17 15:07:37 -Generating unique operation named: updateUsingPOST_16
2019-03-17 15:07:37 -Generating unique operation named: updateUsingPUT_11
2019-03-17 15:07:37 -Generating unique operation named: updateUsingPATCH_11
2019-03-17 15:07:37 -Generating unique operation named: updateUsingDELETE_11
2019-03-17 15:07:37 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-17 15:07:37 -Generating unique operation named: updateUsingTRACE_11
2019-03-17 15:07:37 -Generating unique operation named: addUsingGET_16
2019-03-17 15:07:37 -Generating unique operation named: editUsingGET_17
2019-03-17 15:07:37 -Generating unique operation named: listUsingGET_19
2019-03-17 15:07:37 -Generating unique operation named: removeUsingPOST_29
2019-03-17 15:07:37 -Generating unique operation named: removeUsingPOST_30
2019-03-17 15:07:37 -Generating unique operation named: saveUsingPOST_17
2019-03-17 15:07:37 -Generating unique operation named: updateUsingGET_12
2019-03-17 15:07:37 -Generating unique operation named: updateUsingHEAD_12
2019-03-17 15:07:37 -Generating unique operation named: updateUsingPOST_17
2019-03-17 15:07:37 -Generating unique operation named: updateUsingPUT_12
2019-03-17 15:07:37 -Generating unique operation named: updateUsingPATCH_12
2019-03-17 15:07:37 -Generating unique operation named: updateUsingDELETE_12
2019-03-17 15:07:37 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-17 15:07:37 -Generating unique operation named: updateUsingTRACE_12
2019-03-17 15:07:37 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-17 15:07:37 -Generating unique operation named: addUsingGET_17
2019-03-17 15:07:37 -Generating unique operation named: editUsingGET_18
2019-03-17 15:07:37 -Generating unique operation named: listUsingGET_20
2019-03-17 15:07:37 -Generating unique operation named: removeUsingPOST_31
2019-03-17 15:07:37 -Generating unique operation named: removeUsingPOST_32
2019-03-17 15:07:37 -Generating unique operation named: saveUsingPOST_18
2019-03-17 15:07:37 -Generating unique operation named: updateUsingGET_13
2019-03-17 15:07:37 -Generating unique operation named: updateUsingHEAD_13
2019-03-17 15:07:37 -Generating unique operation named: updateUsingPOST_18
2019-03-17 15:07:37 -Generating unique operation named: updateUsingPUT_13
2019-03-17 15:07:37 -Generating unique operation named: updateUsingPATCH_13
2019-03-17 15:07:37 -Generating unique operation named: updateUsingDELETE_13
2019-03-17 15:07:37 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-17 15:07:37 -Generating unique operation named: updateUsingTRACE_13
2019-03-17 15:07:37 -Generating unique operation named: addUsingGET_18
2019-03-17 15:07:37 -Generating unique operation named: editUsingGET_19
2019-03-17 15:07:37 -Generating unique operation named: listUsingGET_21
2019-03-17 15:07:37 -Generating unique operation named: removeUsingPOST_33
2019-03-17 15:07:37 -Generating unique operation named: removeUsingPOST_34
2019-03-17 15:07:37 -Generating unique operation named: saveUsingPOST_19
2019-03-17 15:07:37 -Generating unique operation named: updateUsingGET_14
2019-03-17 15:07:37 -Generating unique operation named: updateUsingHEAD_14
2019-03-17 15:07:37 -Generating unique operation named: updateUsingPOST_19
2019-03-17 15:07:37 -Generating unique operation named: updateUsingPUT_14
2019-03-17 15:07:37 -Generating unique operation named: updateUsingPATCH_14
2019-03-17 15:07:37 -Generating unique operation named: updateUsingDELETE_14
2019-03-17 15:07:37 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-17 15:07:37 -Generating unique operation named: updateUsingTRACE_14
2019-03-17 15:07:37 -Starting Quartz Scheduler now
2019-03-17 15:07:37 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-17 15:07:37 -Starting...
2019-03-17 15:07:37 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-17 15:07:37 -Started.
2019-03-17 15:07:37 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-17 15:07:37 -Using a shared selector for servlet write/read
2019-03-17 15:07:37 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-17 15:07:37 -Started BootdoApplication in 35.509 seconds (JVM running for 37.578)
2019-03-17 15:07:38 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-17 15:07:38 -==> Parameters: 
2019-03-17 15:07:38 -<==      Total: 1
2019-03-17 15:08:17 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-17 15:08:17 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-17 15:08:17 -FrameworkServlet 'dispatcherServlet': initialization completed in 96 ms
2019-03-17 15:08:17 -Enabling session validation scheduler...
2019-03-17 15:08:17 -请求地址 : http://localhost:8081/
2019-03-17 15:08:17 -HTTP METHOD : GET
2019-03-17 15:08:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-17 15:08:17 -参数 : [{}]
2019-03-17 15:08:17 -耗时 : 5
2019-03-17 15:08:17 -返回值 : redirect:/index
2019-03-17 15:08:18 -请求地址 : http://localhost:8081/login;JSESSIONID=d6ebe16a-6059-4cd9-8354-96c6ff8d73f8
2019-03-17 15:08:18 -HTTP METHOD : GET
2019-03-17 15:08:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 15:08:18 -参数 : [{}]
2019-03-17 15:08:18 -耗时 : 1
2019-03-17 15:08:18 -返回值 : login
2019-03-17 15:08:19 -请求地址 : http://localhost:8081/getVerify
2019-03-17 15:08:19 -HTTP METHOD : GET
2019-03-17 15:08:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-17 15:08:19 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3e6269f2, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7b60e05a]
2019-03-17 15:08:26 -2791
2019-03-17 15:08:26 -耗时 : 6830
2019-03-17 15:08:26 -返回值 : null
2019-03-17 15:08:26 -请求地址 : http://localhost:8081/login
2019-03-17 15:08:26 -HTTP METHOD : GET
2019-03-17 15:08:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 15:08:26 -参数 : [{}]
2019-03-17 15:08:26 -耗时 : 0
2019-03-17 15:08:26 -返回值 : login
2019-03-17 15:08:29 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-17 15:08:40 -请求地址 : http://localhost:8081/login
2019-03-17 15:08:40 -HTTP METHOD : POST
2019-03-17 15:08:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 15:08:40 -参数 : [admin, 111111, 2791, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4e66da5c]
2019-03-17 15:08:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-17 15:08:40 -==> Parameters: admin(String)
2019-03-17 15:08:40 -<==      Total: 1
2019-03-17 15:08:40 -耗时 : 138
2019-03-17 15:08:40 -返回值 : {msg=操作成功, code=0}
2019-03-17 15:08:40 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-17 15:08:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 15:08:40 -==> Parameters: 1(Long), admin(String), 登录(String), 138(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 15:08:40.317(Timestamp)
2019-03-17 15:08:40 -<==    Updates: 1
2019-03-17 15:08:40 -请求地址 : http://localhost:8081/index
2019-03-17 15:08:40 -HTTP METHOD : GET
2019-03-17 15:08:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 15:08:40 -参数 : [{}]
2019-03-17 15:08:40 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 15:08:40 -==> Parameters: 1(Long)
2019-03-17 15:08:40 -<==      Total: 45
2019-03-17 15:08:40 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 15:08:40 -==> Parameters: 138(Long)
2019-03-17 15:08:40 -<==      Total: 1
2019-03-17 15:08:40 -耗时 : 512
2019-03-17 15:08:40 -返回值 : index_v1
2019-03-17 15:08:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 15:08:41 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 512(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 15:08:41.186(Timestamp)
2019-03-17 15:08:41 -请求地址 : http://localhost:8081/main
2019-03-17 15:08:41 -HTTP METHOD : GET
2019-03-17 15:08:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 15:08:41 -参数 : []
2019-03-17 15:08:41 -耗时 : 1
2019-03-17 15:08:41 -返回值 : main
2019-03-17 15:08:41 -<==    Updates: 1
2019-03-17 15:08:42 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 15:08:42 -HTTP METHOD : GET
2019-03-17 15:08:42 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 15:08:42 -参数 : []
2019-03-17 15:08:42 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 15:08:42 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 15:08:42 -<==      Total: 0
2019-03-17 15:08:42 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 15:08:42 -==> Parameters: 1(Long), 0(String)
2019-03-17 15:08:42 -<==      Total: 1
2019-03-17 15:08:42 -耗时 : 42
2019-03-17 15:08:42 -返回值 : com.bootdo.common.utils.PageUtils@346eb5b3
2019-03-17 15:08:43 -请求地址 : http://localhost:8081/main
2019-03-17 15:08:43 -HTTP METHOD : GET
2019-03-17 15:08:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 15:08:43 -参数 : []
2019-03-17 15:08:43 -耗时 : 0
2019-03-17 15:08:43 -返回值 : main
2019-03-17 15:08:45 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.socket.sockjs.SockJsException: Uncaught failure in SockJS request, uri=http://localhost:8081/endpointChat/518/q4gomlbl/xhr_streaming; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to open session; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to write SockJsFrame content='o'; nested exception is org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] with root cause
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(Unknown Source)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(Unknown Source)
	at sun.nio.ch.IOUtil.write(Unknown Source)
	at sun.nio.ch.SocketChannelImpl.write(Unknown Source)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1276)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1564)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:352)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:90)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:358)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:324)
	at org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession.handleRequestInternal(StreamingSockJsSession.java:64)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.handleInitialRequest(AbstractHttpSockJsSession.java:229)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequestInternal(AbstractHttpSendingTransportHandler.java:76)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequest(AbstractHttpSendingTransportHandler.java:66)
	at org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService.handleTransportRequest(TransportHandlingSockJsService.java:312)
	at org.springframework.web.socket.sockjs.support.AbstractSockJsService.handleRequest(AbstractSockJsService.java:432)
	at org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.handleRequest(SockJsHttpRequestHandler.java:133)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-17 15:08:45 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-17 15:09:10 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 15:09:10 -==> Parameters: 1(Long)
2019-03-17 15:09:10 -<==      Total: 86
2019-03-17 15:09:10 -请求地址 : http://localhost:8081/heat/heat
2019-03-17 15:09:10 -HTTP METHOD : GET
2019-03-17 15:09:10 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-17 15:09:10 -参数 : []
2019-03-17 15:09:10 -耗时 : 1
2019-03-17 15:09:10 -返回值 : heat/heat/heat
2019-03-17 15:09:11 -请求地址 : http://localhost:8081/heat/heatInto
2019-03-17 15:09:11 -HTTP METHOD : GET
2019-03-17 15:09:11 -CLASS_METHOD : com.bootdo.heat.controller.HeatIntoController.HeatInto
2019-03-17 15:09:11 -参数 : []
2019-03-17 15:09:11 -耗时 : 1
2019-03-17 15:09:11 -返回值 : heat/heatInto/heatInto
2019-03-17 15:09:11 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 15:09:11 -HTTP METHOD : GET
2019-03-17 15:09:11 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 15:09:11 -参数 : [userType]
2019-03-17 15:09:11 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 15:09:11 -==> Parameters: userType(String)
2019-03-17 15:09:11 -<==      Total: 2
2019-03-17 15:09:11 -耗时 : 57
2019-03-17 15:09:11 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 15:09:11 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-17 15:09:11 -HTTP METHOD : GET
2019-03-17 15:09:11 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-17 15:09:11 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-17 15:09:11 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-17 15:09:11 -==> Parameters: 0(Integer), 3(Integer)
2019-03-17 15:09:11 -<==      Total: 3
2019-03-17 15:09:11 -==>  Preparing: select count(*) from heat 
2019-03-17 15:09:11 -==> Parameters: 
2019-03-17 15:09:11 -<==      Total: 1
2019-03-17 15:09:11 -耗时 : 45
2019-03-17 15:09:11 -返回值 : com.bootdo.common.utils.PageUtils@6f19729b
2019-03-17 15:09:18 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 15:09:18 -HTTP METHOD : GET
2019-03-17 15:09:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 15:09:18 -参数 : []
2019-03-17 15:09:18 -耗时 : 1
2019-03-17 15:09:18 -返回值 : system/dept/deptTree
2019-03-17 15:09:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 15:09:18 -HTTP METHOD : GET
2019-03-17 15:09:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 15:09:18 -参数 : []
2019-03-17 15:09:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 15:09:18 -==> Parameters: 
2019-03-17 15:09:18 -<==      Total: 3
2019-03-17 15:09:18 -耗时 : 21
2019-03-17 15:09:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 15:09:20 -请求地址 : http://localhost:8081/heat/heatInto/exprotHeatIntoExcel
2019-03-17 15:09:20 -HTTP METHOD : GET
2019-03-17 15:09:20 -CLASS_METHOD : com.bootdo.heat.controller.HeatIntoController.exprotExcel
2019-03-17 15:09:20 -参数 : [com.bootdo.heat.vo.HeatVo@78173eab, org.apache.shiro.web.servlet.ShiroHttpServletResponse@74d0a629]
2019-03-17 15:09:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? 
2019-03-17 15:09:20 -==> Parameters: 2019-03(String), 3(Long)
2019-03-17 15:09:20 -<==      Total: 3
2019-03-17 15:09:21 -耗时 : 1166
2019-03-17 15:09:21 -返回值 : null
2019-03-17 15:10:49 -请求地址 : http://localhost:8081/file/downImport/userInto
2019-03-17 15:10:49 -HTTP METHOD : GET
2019-03-17 15:10:49 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-17 15:10:49 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@75f0d5a4, userInto]
2019-03-17 15:10:49 -耗时 : 55
2019-03-17 15:10:49 -返回值 : null
2019-03-17 15:12:23 -Starting BootdoApplication on ZJZL-20180906VX with PID 2144 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-17 15:12:23 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-17 15:12:23 -The following profiles are active: dev
2019-03-17 15:12:23 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@419a20a6: startup date [Sun Mar 17 15:12:23 CST 2019]; root of context hierarchy
2019-03-17 15:12:27 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-17 15:12:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dd32a96e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:12:30 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$cf8bd815] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:12:31 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:12:31 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:12:31 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:12:31 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-17 15:12:31 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-17 15:12:31 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:12:31 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:12:32 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:12:32 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:12:33 -Tomcat initialized with port(s): 8081 (http)
2019-03-17 15:12:33 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-17 15:12:33 -Starting service [Tomcat]
2019-03-17 15:12:33 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-17 15:12:33 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-17 15:12:34 -Initializing Spring embedded WebApplicationContext
2019-03-17 15:12:34 -Root WebApplicationContext: initialization completed in 10660 ms
2019-03-17 15:12:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-17 15:12:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-17 15:12:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-17 15:12:35 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-17 15:12:35 -Filter xssFilter was not registered (disabled)
2019-03-17 15:12:35 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-17 15:12:35 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-17 15:12:35 -Servlet statViewServlet mapped to [/druid/*]
2019-03-17 15:12:35 -Servlet dispatcherServlet mapped to [/]
2019-03-17 15:12:38 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@419a20a6: startup date [Sun Mar 17 15:12:23 CST 2019]; root of context hierarchy
2019-03-17 15:12:38 -Using default implementation for ThreadExecutor
2019-03-17 15:12:38 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-17 15:12:39 -Quartz Scheduler v.2.2.1 created.
2019-03-17 15:12:39 -RAMJobStore initialized.
2019-03-17 15:12:39 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-17 15:12:39 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-17 15:12:39 -Quartz scheduler version: 2.2.1
2019-03-17 15:12:39 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@11a67420
2019-03-17 15:12:39 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-17 15:12:39 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-17 15:12:42 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-17 15:12:42 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-17 15:12:42 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-17 15:12:42 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-17 15:12:42 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-17 15:12:42 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-17 15:12:42 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-17 15:12:42 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-17 15:12:42 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-17 15:12:42 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:42 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-17 15:12:42 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:42 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-17 15:12:42 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-17 15:12:42 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-17 15:12:42 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-17 15:12:42 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-17 15:12:42 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-17 15:12:42 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-17 15:12:42 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-17 15:12:42 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:42 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-17 15:12:42 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-17 15:12:42 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:42 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-17 15:12:42 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-17 15:12:42 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:42 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-17 15:12:42 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 15:12:42 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-17 15:12:42 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 15:12:42 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-17 15:12:42 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-17 15:12:42 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-17 15:12:42 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-17 15:12:42 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-17 15:12:42 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:42 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-17 15:12:42 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-17 15:12:42 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:42 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-17 15:12:42 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-17 15:12:42 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-17 15:12:42 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-17 15:12:42 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:42 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-17 15:12:42 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-17 15:12:42 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 15:12:42 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 15:12:42 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-17 15:12:42 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-17 15:12:42 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-17 15:12:42 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-17 15:12:42 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-17 15:12:42 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-17 15:12:42 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:42 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-17 15:12:42 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-17 15:12:42 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-17 15:12:42 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-17 15:12:42 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-17 15:12:42 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-17 15:12:42 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-17 15:12:42 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 15:12:42 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:42 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 15:12:42 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:42 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-17 15:12:42 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-17 15:12:42 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 15:12:42 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-17 15:12:42 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-17 15:12:42 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-17 15:12:42 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-17 15:12:42 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:42 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-17 15:12:42 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-17 15:12:42 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-17 15:12:42 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-17 15:12:42 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-17 15:12:42 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-17 15:12:42 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-17 15:12:42 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-17 15:12:42 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 15:12:42 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:42 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 15:12:42 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:42 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-17 15:12:42 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-17 15:12:42 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-17 15:12:42 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 15:12:42 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-17 15:12:42 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-17 15:12:42 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-17 15:12:42 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-17 15:12:42 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-17 15:12:42 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 15:12:42 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:42 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 15:12:42 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:42 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-17 15:12:42 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-17 15:12:42 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-17 15:12:42 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-17 15:12:42 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 15:12:42 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:42 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 15:12:42 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:42 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-17 15:12:42 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-17 15:12:42 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-17 15:12:42 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-17 15:12:42 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 15:12:42 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:42 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 15:12:42 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:42 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-17 15:12:43 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-17 15:12:43 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-17 15:12:43 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-17 15:12:43 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-17 15:12:43 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:43 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-17 15:12:43 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-17 15:12:43 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-17 15:12:43 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:43 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-17 15:12:43 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-17 15:12:43 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-17 15:12:43 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-17 15:12:43 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-17 15:12:43 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:43 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-17 15:12:43 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-17 15:12:43 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-17 15:12:43 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-17 15:12:43 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-17 15:12:43 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-17 15:12:43 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-17 15:12:43 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-17 15:12:43 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-17 15:12:43 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-17 15:12:43 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-17 15:12:43 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-17 15:12:43 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 15:12:43 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 15:12:43 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-17 15:12:43 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-17 15:12:43 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-17 15:12:43 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:43 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-17 15:12:43 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-17 15:12:43 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-17 15:12:43 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 15:12:43 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-17 15:12:43 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-17 15:12:43 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-17 15:12:43 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-17 15:12:43 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-17 15:12:43 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-17 15:12:43 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-17 15:12:43 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-17 15:12:43 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-17 15:12:43 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-17 15:12:43 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-17 15:12:43 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:43 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-17 15:12:43 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-17 15:12:43 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:43 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-17 15:12:43 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-17 15:12:43 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-17 15:12:43 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 15:12:43 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-17 15:12:43 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-17 15:12:43 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 15:12:43 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 15:12:43 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 15:12:43 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-17 15:12:43 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-17 15:12:43 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-17 15:12:43 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-17 15:12:43 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-17 15:12:43 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:43 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-17 15:12:43 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:43 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-17 15:12:43 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:43 -Mapped "{[/water/waterCost/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.add()
2019-03-17 15:12:43 -Mapped "{[/water/waterCost/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long)
2019-03-17 15:12:43 -Mapped "{[/water/waterCost/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.remove(java.lang.Long[])
2019-03-17 15:12:43 -Mapped "{[/water/waterCost/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.update(com.bootdo.water.domain.WaterCostDO)
2019-03-17 15:12:43 -Mapped "{[/water/waterCost/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterCostController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:43 -Mapped "{[/water/waterCost/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterCostController.save(com.bootdo.water.domain.WaterCostDO)
2019-03-17 15:12:43 -Mapped "{[/water/waterCost/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/water/waterCost],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterCostController.WaterCost()
2019-03-17 15:12:43 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-17 15:12:43 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-17 15:12:43 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-17 15:12:43 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-17 15:12:43 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-17 15:12:43 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 15:12:43 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:43 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 15:12:43 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:12:43 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-17 15:12:43 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:12:43 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-17 15:12:43 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 15:12:43 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-17 15:12:43 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-17 15:12:43 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-17 15:12:43 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-17 15:12:43 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-17 15:12:43 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-17 15:12:45 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 15:12:45 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@419a20a6: startup date [Sun Mar 17 15:12:23 CST 2019]; root of context hierarchy
2019-03-17 15:12:45 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 15:12:45 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 15:12:45 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 15:12:45 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-17 15:12:45 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-17 15:12:48 -Registering beans for JMX exposure on startup
2019-03-17 15:12:48 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-17 15:12:48 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-17 15:12:48 -Starting beans in phase 2147483647
2019-03-17 15:12:48 -Context refreshed
2019-03-17 15:12:48 -Found 1 custom documentation plugin(s)
2019-03-17 15:12:48 -Scanning for api listing references
2019-03-17 15:12:48 -Generating unique operation named: removeUsingPOST_1
2019-03-17 15:12:49 -Generating unique operation named: addUsingGET_1
2019-03-17 15:12:49 -Generating unique operation named: editUsingGET_1
2019-03-17 15:12:49 -Generating unique operation named: listUsingGET_1
2019-03-17 15:12:49 -Generating unique operation named: removeUsingPOST_2
2019-03-17 15:12:49 -Generating unique operation named: removeUsingPOST_3
2019-03-17 15:12:49 -Generating unique operation named: saveUsingPOST_1
2019-03-17 15:12:49 -Generating unique operation named: updateUsingGET_1
2019-03-17 15:12:49 -Generating unique operation named: updateUsingHEAD_1
2019-03-17 15:12:49 -Generating unique operation named: updateUsingPOST_1
2019-03-17 15:12:49 -Generating unique operation named: updateUsingPUT_1
2019-03-17 15:12:49 -Generating unique operation named: updateUsingPATCH_1
2019-03-17 15:12:49 -Generating unique operation named: updateUsingDELETE_1
2019-03-17 15:12:49 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-17 15:12:49 -Generating unique operation named: updateUsingTRACE_1
2019-03-17 15:12:49 -Generating unique operation named: addUsingGET_2
2019-03-17 15:12:49 -Generating unique operation named: editUsingGET_2
2019-03-17 15:12:49 -Generating unique operation named: listUsingGET_2
2019-03-17 15:12:49 -Generating unique operation named: removeUsingPOST_4
2019-03-17 15:12:49 -Generating unique operation named: removeUsingPOST_5
2019-03-17 15:12:49 -Generating unique operation named: saveUsingPOST_2
2019-03-17 15:12:49 -Generating unique operation named: updateUsingGET_2
2019-03-17 15:12:49 -Generating unique operation named: updateUsingHEAD_2
2019-03-17 15:12:49 -Generating unique operation named: updateUsingPOST_2
2019-03-17 15:12:49 -Generating unique operation named: updateUsingPUT_2
2019-03-17 15:12:49 -Generating unique operation named: updateUsingPATCH_2
2019-03-17 15:12:49 -Generating unique operation named: updateUsingDELETE_2
2019-03-17 15:12:49 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-17 15:12:49 -Generating unique operation named: updateUsingTRACE_2
2019-03-17 15:12:49 -Generating unique operation named: addUsingGET_3
2019-03-17 15:12:49 -Generating unique operation named: editUsingGET_3
2019-03-17 15:12:49 -Generating unique operation named: listUsingGET_3
2019-03-17 15:12:49 -Generating unique operation named: removeUsingPOST_6
2019-03-17 15:12:49 -Generating unique operation named: removeUsingPOST_7
2019-03-17 15:12:49 -Generating unique operation named: saveUsingPOST_3
2019-03-17 15:12:49 -Generating unique operation named: updateUsingGET_3
2019-03-17 15:12:49 -Generating unique operation named: updateUsingHEAD_3
2019-03-17 15:12:49 -Generating unique operation named: updateUsingPOST_3
2019-03-17 15:12:49 -Generating unique operation named: updateUsingPUT_3
2019-03-17 15:12:49 -Generating unique operation named: updateUsingPATCH_3
2019-03-17 15:12:49 -Generating unique operation named: updateUsingDELETE_3
2019-03-17 15:12:49 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-17 15:12:49 -Generating unique operation named: updateUsingTRACE_3
2019-03-17 15:12:49 -Generating unique operation named: addUsingGET_4
2019-03-17 15:12:49 -Generating unique operation named: editUsingGET_4
2019-03-17 15:12:49 -Generating unique operation named: listUsingGET_4
2019-03-17 15:12:49 -Generating unique operation named: removeUsingPOST_8
2019-03-17 15:12:49 -Generating unique operation named: removeUsingPOST_9
2019-03-17 15:12:49 -Generating unique operation named: saveUsingPOST_4
2019-03-17 15:12:49 -Generating unique operation named: updateUsingGET_4
2019-03-17 15:12:49 -Generating unique operation named: updateUsingHEAD_4
2019-03-17 15:12:49 -Generating unique operation named: updateUsingPOST_4
2019-03-17 15:12:49 -Generating unique operation named: updateUsingPUT_4
2019-03-17 15:12:49 -Generating unique operation named: updateUsingPATCH_4
2019-03-17 15:12:49 -Generating unique operation named: updateUsingDELETE_4
2019-03-17 15:12:49 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-17 15:12:49 -Generating unique operation named: updateUsingTRACE_4
2019-03-17 15:12:49 -Generating unique operation named: ElecUsingGET_1
2019-03-17 15:12:49 -Generating unique operation named: addUsingGET_5
2019-03-17 15:12:49 -Generating unique operation named: editUsingGET_5
2019-03-17 15:12:49 -Generating unique operation named: listUsingGET_5
2019-03-17 15:12:49 -Generating unique operation named: removeUsingPOST_10
2019-03-17 15:12:49 -Generating unique operation named: removeUsingPOST_11
2019-03-17 15:12:49 -Generating unique operation named: saveUsingPOST_5
2019-03-17 15:12:49 -Generating unique operation named: updateUsingGET_5
2019-03-17 15:12:49 -Generating unique operation named: updateUsingHEAD_5
2019-03-17 15:12:49 -Generating unique operation named: updateUsingPOST_5
2019-03-17 15:12:49 -Generating unique operation named: updateUsingPUT_5
2019-03-17 15:12:49 -Generating unique operation named: updateUsingPATCH_5
2019-03-17 15:12:49 -Generating unique operation named: updateUsingDELETE_5
2019-03-17 15:12:49 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-17 15:12:49 -Generating unique operation named: updateUsingTRACE_5
2019-03-17 15:12:49 -Generating unique operation named: editUsingGET_6
2019-03-17 15:12:49 -Generating unique operation named: listUsingGET_6
2019-03-17 15:12:49 -Generating unique operation named: updateUsingPOST_6
2019-03-17 15:12:49 -Generating unique operation named: addUsingGET_6
2019-03-17 15:12:50 -Generating unique operation named: editUsingGET_7
2019-03-17 15:12:50 -Generating unique operation named: listUsingGET_7
2019-03-17 15:12:50 -Generating unique operation named: removeUsingPOST_12
2019-03-17 15:12:50 -Generating unique operation named: removeUsingPOST_13
2019-03-17 15:12:50 -Generating unique operation named: saveUsingPOST_6
2019-03-17 15:12:50 -Generating unique operation named: updateUsingGET_6
2019-03-17 15:12:50 -Generating unique operation named: updateUsingHEAD_6
2019-03-17 15:12:50 -Generating unique operation named: updateUsingPOST_7
2019-03-17 15:12:50 -Generating unique operation named: updateUsingPUT_6
2019-03-17 15:12:50 -Generating unique operation named: updateUsingPATCH_6
2019-03-17 15:12:50 -Generating unique operation named: updateUsingDELETE_6
2019-03-17 15:12:50 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-17 15:12:50 -Generating unique operation named: updateUsingTRACE_6
2019-03-17 15:12:50 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-17 15:12:50 -Generating unique operation named: addUsingGET_7
2019-03-17 15:12:50 -Generating unique operation named: editUsingGET_8
2019-03-17 15:12:50 -Generating unique operation named: listUsingGET_8
2019-03-17 15:12:50 -Generating unique operation named: removeUsingPOST_14
2019-03-17 15:12:50 -Generating unique operation named: removeUsingPOST_15
2019-03-17 15:12:50 -Generating unique operation named: saveUsingPOST_7
2019-03-17 15:12:50 -Generating unique operation named: updateUsingGET_7
2019-03-17 15:12:50 -Generating unique operation named: updateUsingHEAD_7
2019-03-17 15:12:50 -Generating unique operation named: updateUsingPOST_8
2019-03-17 15:12:50 -Generating unique operation named: updateUsingPUT_7
2019-03-17 15:12:50 -Generating unique operation named: updateUsingPATCH_7
2019-03-17 15:12:50 -Generating unique operation named: updateUsingDELETE_7
2019-03-17 15:12:50 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-17 15:12:50 -Generating unique operation named: updateUsingTRACE_7
2019-03-17 15:12:50 -Generating unique operation named: addUsingGET_8
2019-03-17 15:12:50 -Generating unique operation named: editUsingGET_9
2019-03-17 15:12:50 -Generating unique operation named: listUsingGET_9
2019-03-17 15:12:50 -Generating unique operation named: removeUsingPOST_16
2019-03-17 15:12:50 -Generating unique operation named: removeUsingPOST_17
2019-03-17 15:12:50 -Generating unique operation named: saveUsingPOST_8
2019-03-17 15:12:50 -Generating unique operation named: updateUsingGET_8
2019-03-17 15:12:50 -Generating unique operation named: updateUsingHEAD_8
2019-03-17 15:12:50 -Generating unique operation named: updateUsingPOST_9
2019-03-17 15:12:50 -Generating unique operation named: updateUsingPUT_8
2019-03-17 15:12:50 -Generating unique operation named: updateUsingPATCH_8
2019-03-17 15:12:50 -Generating unique operation named: updateUsingDELETE_8
2019-03-17 15:12:50 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-17 15:12:50 -Generating unique operation named: updateUsingTRACE_8
2019-03-17 15:12:50 -Generating unique operation named: addUsingGET_9
2019-03-17 15:12:50 -Generating unique operation named: editUsingGET_10
2019-03-17 15:12:50 -Generating unique operation named: infoUsingGET_1
2019-03-17 15:12:50 -Generating unique operation named: infoUsingHEAD_1
2019-03-17 15:12:50 -Generating unique operation named: infoUsingPOST_1
2019-03-17 15:12:50 -Generating unique operation named: infoUsingPUT_1
2019-03-17 15:12:50 -Generating unique operation named: infoUsingPATCH_1
2019-03-17 15:12:50 -Generating unique operation named: infoUsingDELETE_1
2019-03-17 15:12:50 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-17 15:12:50 -Generating unique operation named: infoUsingTRACE_1
2019-03-17 15:12:50 -Generating unique operation named: listUsingGET_10
2019-03-17 15:12:50 -Generating unique operation named: removeUsingPOST_18
2019-03-17 15:12:50 -Generating unique operation named: removeUsingPOST_19
2019-03-17 15:12:50 -Generating unique operation named: saveUsingPOST_9
2019-03-17 15:12:50 -Generating unique operation named: updateUsingPOST_10
2019-03-17 15:12:50 -Generating unique operation named: listUsingGET_11
2019-03-17 15:12:50 -Generating unique operation named: removeUsingPOST_20
2019-03-17 15:12:50 -Generating unique operation named: welcomeUsingGET_1
2019-03-17 15:12:50 -Generating unique operation named: addUsingGET_10
2019-03-17 15:12:50 -Generating unique operation named: editUsingGET_11
2019-03-17 15:12:50 -Generating unique operation named: listUsingGET_12
2019-03-17 15:12:50 -Generating unique operation named: removeUsingPOST_21
2019-03-17 15:12:50 -Generating unique operation named: saveUsingPOST_10
2019-03-17 15:12:50 -Generating unique operation named: treeUsingGET_1
2019-03-17 15:12:50 -Generating unique operation named: treeUsingGET_2
2019-03-17 15:12:50 -Generating unique operation named: updateUsingPOST_11
2019-03-17 15:12:50 -Generating unique operation named: addUsingGET_11
2019-03-17 15:12:50 -Generating unique operation named: editUsingGET_12
2019-03-17 15:12:50 -Generating unique operation named: listUsingGET_13
2019-03-17 15:12:50 -Generating unique operation named: removeUsingPOST_22
2019-03-17 15:12:50 -Generating unique operation named: removeUsingPOST_23
2019-03-17 15:12:50 -Generating unique operation named: saveUsingPOST_11
2019-03-17 15:12:50 -Generating unique operation named: updateUsingGET_9
2019-03-17 15:12:50 -Generating unique operation named: updateUsingHEAD_9
2019-03-17 15:12:50 -Generating unique operation named: updateUsingPOST_12
2019-03-17 15:12:50 -Generating unique operation named: updateUsingPUT_9
2019-03-17 15:12:50 -Generating unique operation named: updateUsingPATCH_9
2019-03-17 15:12:50 -Generating unique operation named: updateUsingDELETE_9
2019-03-17 15:12:50 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-17 15:12:50 -Generating unique operation named: updateUsingTRACE_9
2019-03-17 15:12:50 -Generating unique operation named: addUsingGET_12
2019-03-17 15:12:50 -Generating unique operation named: editUsingGET_13
2019-03-17 15:12:50 -Generating unique operation named: listUsingGET_14
2019-03-17 15:12:50 -Generating unique operation named: removeUsingPOST_24
2019-03-17 15:12:50 -Generating unique operation named: removeUsingPOST_25
2019-03-17 15:12:50 -Generating unique operation named: saveUsingPOST_12
2019-03-17 15:12:51 -Generating unique operation named: updateUsingGET_10
2019-03-17 15:12:51 -Generating unique operation named: updateUsingHEAD_10
2019-03-17 15:12:51 -Generating unique operation named: updateUsingPOST_13
2019-03-17 15:12:51 -Generating unique operation named: updateUsingPUT_10
2019-03-17 15:12:51 -Generating unique operation named: updateUsingPATCH_10
2019-03-17 15:12:51 -Generating unique operation named: updateUsingDELETE_10
2019-03-17 15:12:51 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-17 15:12:51 -Generating unique operation named: updateUsingTRACE_10
2019-03-17 15:12:51 -Generating unique operation named: addUsingGET_13
2019-03-17 15:12:51 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-17 15:12:51 -Generating unique operation named: editUsingGET_14
2019-03-17 15:12:51 -Generating unique operation named: listUsingGET_15
2019-03-17 15:12:51 -Generating unique operation named: saveUsingPOST_13
2019-03-17 15:12:51 -Generating unique operation named: saveUsingPOST_14
2019-03-17 15:12:51 -Generating unique operation named: updateUsingPOST_14
2019-03-17 15:12:51 -Generating unique operation named: listUsingGET_16
2019-03-17 15:12:51 -Generating unique operation named: listUsingHEAD_1
2019-03-17 15:12:51 -Generating unique operation named: listUsingPOST_1
2019-03-17 15:12:51 -Generating unique operation named: listUsingPUT_1
2019-03-17 15:12:51 -Generating unique operation named: listUsingPATCH_1
2019-03-17 15:12:51 -Generating unique operation named: listUsingDELETE_1
2019-03-17 15:12:51 -Generating unique operation named: listUsingOPTIONS_1
2019-03-17 15:12:51 -Generating unique operation named: listUsingTRACE_1
2019-03-17 15:12:51 -Generating unique operation named: addUsingGET_14
2019-03-17 15:12:51 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-17 15:12:51 -Generating unique operation named: editUsingGET_15
2019-03-17 15:12:51 -Generating unique operation named: listUsingGET_17
2019-03-17 15:12:51 -Generating unique operation named: removeUsingPOST_26
2019-03-17 15:12:51 -Generating unique operation named: saveUsingPOST_15
2019-03-17 15:12:51 -Generating unique operation named: treeUsingGET_3
2019-03-17 15:12:51 -Generating unique operation named: treeViewUsingGET_1
2019-03-17 15:12:51 -Generating unique operation named: updateUsingPOST_15
2019-03-17 15:12:51 -Generating unique operation named: addUsingGET_15
2019-03-17 15:12:51 -Generating unique operation named: editUsingGET_16
2019-03-17 15:12:51 -Generating unique operation named: listUsingGET_18
2019-03-17 15:12:51 -Generating unique operation named: removeUsingPOST_27
2019-03-17 15:12:51 -Generating unique operation named: removeUsingPOST_28
2019-03-17 15:12:51 -Generating unique operation named: saveUsingPOST_16
2019-03-17 15:12:51 -Generating unique operation named: updateUsingGET_11
2019-03-17 15:12:51 -Generating unique operation named: updateUsingHEAD_11
2019-03-17 15:12:51 -Generating unique operation named: updateUsingPOST_16
2019-03-17 15:12:51 -Generating unique operation named: updateUsingPUT_11
2019-03-17 15:12:51 -Generating unique operation named: updateUsingPATCH_11
2019-03-17 15:12:51 -Generating unique operation named: updateUsingDELETE_11
2019-03-17 15:12:51 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-17 15:12:51 -Generating unique operation named: updateUsingTRACE_11
2019-03-17 15:12:51 -Generating unique operation named: addUsingGET_16
2019-03-17 15:12:51 -Generating unique operation named: editUsingGET_17
2019-03-17 15:12:51 -Generating unique operation named: listUsingGET_19
2019-03-17 15:12:51 -Generating unique operation named: removeUsingPOST_29
2019-03-17 15:12:51 -Generating unique operation named: removeUsingPOST_30
2019-03-17 15:12:51 -Generating unique operation named: saveUsingPOST_17
2019-03-17 15:12:51 -Generating unique operation named: updateUsingGET_12
2019-03-17 15:12:51 -Generating unique operation named: updateUsingHEAD_12
2019-03-17 15:12:51 -Generating unique operation named: updateUsingPOST_17
2019-03-17 15:12:51 -Generating unique operation named: updateUsingPUT_12
2019-03-17 15:12:51 -Generating unique operation named: updateUsingPATCH_12
2019-03-17 15:12:51 -Generating unique operation named: updateUsingDELETE_12
2019-03-17 15:12:51 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-17 15:12:51 -Generating unique operation named: updateUsingTRACE_12
2019-03-17 15:12:51 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-17 15:12:51 -Generating unique operation named: addUsingGET_17
2019-03-17 15:12:51 -Generating unique operation named: editUsingGET_18
2019-03-17 15:12:51 -Generating unique operation named: listUsingGET_20
2019-03-17 15:12:51 -Generating unique operation named: removeUsingPOST_31
2019-03-17 15:12:51 -Generating unique operation named: removeUsingPOST_32
2019-03-17 15:12:51 -Generating unique operation named: saveUsingPOST_18
2019-03-17 15:12:51 -Generating unique operation named: updateUsingGET_13
2019-03-17 15:12:51 -Generating unique operation named: updateUsingHEAD_13
2019-03-17 15:12:51 -Generating unique operation named: updateUsingPOST_18
2019-03-17 15:12:51 -Generating unique operation named: updateUsingPUT_13
2019-03-17 15:12:51 -Generating unique operation named: updateUsingPATCH_13
2019-03-17 15:12:51 -Generating unique operation named: updateUsingDELETE_13
2019-03-17 15:12:51 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-17 15:12:51 -Generating unique operation named: updateUsingTRACE_13
2019-03-17 15:12:51 -Generating unique operation named: addUsingGET_18
2019-03-17 15:12:51 -Generating unique operation named: editUsingGET_19
2019-03-17 15:12:51 -Generating unique operation named: listUsingGET_21
2019-03-17 15:12:51 -Generating unique operation named: removeUsingPOST_33
2019-03-17 15:12:51 -Generating unique operation named: removeUsingPOST_34
2019-03-17 15:12:51 -Generating unique operation named: saveUsingPOST_19
2019-03-17 15:12:51 -Generating unique operation named: updateUsingGET_14
2019-03-17 15:12:51 -Generating unique operation named: updateUsingHEAD_14
2019-03-17 15:12:51 -Generating unique operation named: updateUsingPOST_19
2019-03-17 15:12:51 -Generating unique operation named: updateUsingPUT_14
2019-03-17 15:12:51 -Generating unique operation named: updateUsingPATCH_14
2019-03-17 15:12:51 -Generating unique operation named: updateUsingDELETE_14
2019-03-17 15:12:51 -Generating unique operation named: updateUsingOPTIONS_14
2019-03-17 15:12:51 -Generating unique operation named: updateUsingTRACE_14
2019-03-17 15:12:51 -Starting Quartz Scheduler now
2019-03-17 15:12:51 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-17 15:12:51 -Starting...
2019-03-17 15:12:51 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-17 15:12:51 -Started.
2019-03-17 15:12:52 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-17 15:12:54 -Using a shared selector for servlet write/read
2019-03-17 15:12:54 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-17 15:12:54 -Started BootdoApplication in 33.325 seconds (JVM running for 35.312)
2019-03-17 15:12:54 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-17 15:12:55 -==> Parameters: 
2019-03-17 15:12:55 -<==      Total: 1
2019-03-17 15:13:43 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-17 15:15:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-17 15:15:06 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-17 15:15:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 80 ms
2019-03-17 15:15:06 -Enabling session validation scheduler...
2019-03-17 15:15:06 -请求地址 : http://localhost:8081/login;JSESSIONID=951408f3-e56a-4155-835e-bf8fd9df05a7
2019-03-17 15:15:06 -HTTP METHOD : GET
2019-03-17 15:15:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 15:15:06 -参数 : [{}]
2019-03-17 15:15:06 -耗时 : 4
2019-03-17 15:15:06 -返回值 : login
2019-03-17 15:15:08 -请求地址 : http://localhost:8081/getVerify
2019-03-17 15:15:08 -HTTP METHOD : GET
2019-03-17 15:15:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-17 15:15:08 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@152de75d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@11126120]
2019-03-17 15:15:11 -3136
2019-03-17 15:15:12 -耗时 : 3350
2019-03-17 15:15:12 -返回值 : null
2019-03-17 15:15:47 -请求地址 : http://localhost:8081/login
2019-03-17 15:15:47 -HTTP METHOD : POST
2019-03-17 15:15:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 15:15:47 -参数 : [admin, 111111, 3136, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4db61ae4]
2019-03-17 15:15:47 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-17 15:15:47 -==> Parameters: admin(String)
2019-03-17 15:15:47 -<==      Total: 1
2019-03-17 15:15:48 -耗时 : 147
2019-03-17 15:15:48 -返回值 : {msg=操作成功, code=0}
2019-03-17 15:15:48 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-17 15:15:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 15:15:48 -==> Parameters: 1(Long), admin(String), 登录(String), 147(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 15:15:48.104(Timestamp)
2019-03-17 15:15:48 -请求地址 : http://localhost:8081/index
2019-03-17 15:15:48 -HTTP METHOD : GET
2019-03-17 15:15:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 15:15:48 -参数 : [{}]
2019-03-17 15:15:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 15:15:48 -==> Parameters: 1(Long)
2019-03-17 15:15:48 -<==    Updates: 1
2019-03-17 15:15:48 -<==      Total: 45
2019-03-17 15:15:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 15:15:48 -==> Parameters: 138(Long)
2019-03-17 15:15:48 -<==      Total: 1
2019-03-17 15:15:48 -耗时 : 294
2019-03-17 15:15:48 -返回值 : index_v1
2019-03-17 15:15:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 15:15:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 295(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 15:15:48.538(Timestamp)
2019-03-17 15:15:48 -请求地址 : http://localhost:8081/main
2019-03-17 15:15:48 -HTTP METHOD : GET
2019-03-17 15:15:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 15:15:48 -参数 : []
2019-03-17 15:15:48 -耗时 : 1
2019-03-17 15:15:48 -返回值 : main
2019-03-17 15:15:48 -<==    Updates: 1
2019-03-17 15:15:49 -请求地址 : http://localhost:8081/main
2019-03-17 15:15:49 -HTTP METHOD : GET
2019-03-17 15:15:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 15:15:49 -参数 : []
2019-03-17 15:15:49 -耗时 : 1
2019-03-17 15:15:49 -返回值 : main
2019-03-17 15:15:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 15:15:49 -HTTP METHOD : GET
2019-03-17 15:15:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 15:15:49 -参数 : []
2019-03-17 15:15:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 15:15:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 15:15:49 -<==      Total: 0
2019-03-17 15:15:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 15:15:49 -==> Parameters: 1(Long), 0(String)
2019-03-17 15:15:49 -<==      Total: 1
2019-03-17 15:15:49 -耗时 : 118
2019-03-17 15:15:49 -返回值 : com.bootdo.common.utils.PageUtils@67159ec5
2019-03-17 15:17:53 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 15:17:53 -==> Parameters: 1(Long)
2019-03-17 15:17:53 -<==      Total: 86
2019-03-17 15:17:53 -请求地址 : http://localhost:8081/water/waterInto
2019-03-17 15:17:53 -HTTP METHOD : GET
2019-03-17 15:17:53 -CLASS_METHOD : com.bootdo.water.controller.WaterIntoController.WaterInto
2019-03-17 15:17:53 -参数 : []
2019-03-17 15:17:53 -耗时 : 0
2019-03-17 15:17:53 -返回值 : water/waterInto/waterInto
2019-03-17 15:18:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 15:18:00 -HTTP METHOD : GET
2019-03-17 15:18:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 15:18:00 -参数 : []
2019-03-17 15:18:00 -耗时 : 1
2019-03-17 15:18:00 -返回值 : system/dept/deptTree
2019-03-17 15:18:00 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 15:18:00 -HTTP METHOD : GET
2019-03-17 15:18:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 15:18:00 -参数 : []
2019-03-17 15:18:00 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 15:18:00 -==> Parameters: 
2019-03-17 15:18:00 -<==      Total: 3
2019-03-17 15:18:00 -耗时 : 32
2019-03-17 15:18:00 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 15:18:02 -请求地址 : http://localhost:8081/water/waterInto/exprotWaterIntoExcel
2019-03-17 15:18:02 -HTTP METHOD : GET
2019-03-17 15:18:02 -CLASS_METHOD : com.bootdo.water.controller.WaterIntoController.exprotExcel
2019-03-17 15:18:02 -参数 : [com.bootdo.water.vo.WaterVo@3c42b155, org.apache.shiro.web.servlet.ShiroHttpServletResponse@162cc102]
2019-03-17 15:18:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? 
2019-03-17 15:18:02 -==> Parameters: 2019-03(String), 3(Long)
2019-03-17 15:18:02 -<==      Total: 0
2019-03-17 15:18:02 -耗时 : 373
2019-03-17 15:18:02 -返回值 : null
2019-03-17 15:19:59 -请求地址 : http://localhost:8081/index
2019-03-17 15:19:59 -HTTP METHOD : GET
2019-03-17 15:19:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 15:19:59 -参数 : [{}]
2019-03-17 15:19:59 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 15:19:59 -==> Parameters: 1(Long)
2019-03-17 15:19:59 -<==      Total: 45
2019-03-17 15:19:59 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 15:19:59 -==> Parameters: 138(Long)
2019-03-17 15:19:59 -<==      Total: 1
2019-03-17 15:19:59 -耗时 : 34
2019-03-17 15:19:59 -返回值 : index_v1
2019-03-17 15:19:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 15:19:59 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 15:19:59.775(Timestamp)
2019-03-17 15:19:59 -请求地址 : http://localhost:8081/main
2019-03-17 15:19:59 -HTTP METHOD : GET
2019-03-17 15:19:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 15:19:59 -参数 : []
2019-03-17 15:19:59 -耗时 : 1
2019-03-17 15:19:59 -返回值 : main
2019-03-17 15:20:00 -<==    Updates: 1
2019-03-17 15:20:00 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 15:20:00 -HTTP METHOD : GET
2019-03-17 15:20:00 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 15:20:00 -参数 : []
2019-03-17 15:20:00 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 15:20:00 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 15:20:00 -<==      Total: 0
2019-03-17 15:20:00 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 15:20:00 -==> Parameters: 1(Long), 0(String)
2019-03-17 15:20:00 -<==      Total: 1
2019-03-17 15:20:00 -耗时 : 12
2019-03-17 15:20:00 -返回值 : com.bootdo.common.utils.PageUtils@4c920d9f
2019-03-17 15:20:00 -请求地址 : http://localhost:8081/main
2019-03-17 15:20:00 -HTTP METHOD : GET
2019-03-17 15:20:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 15:20:00 -参数 : []
2019-03-17 15:20:00 -耗时 : 1
2019-03-17 15:20:00 -返回值 : main
2019-03-17 15:20:02 -请求地址 : http://localhost:8081/water/waterInto
2019-03-17 15:20:02 -HTTP METHOD : GET
2019-03-17 15:20:02 -CLASS_METHOD : com.bootdo.water.controller.WaterIntoController.WaterInto
2019-03-17 15:20:02 -参数 : []
2019-03-17 15:20:02 -耗时 : 1
2019-03-17 15:20:02 -返回值 : water/waterInto/waterInto
2019-03-17 15:20:05 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 15:20:05 -HTTP METHOD : GET
2019-03-17 15:20:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 15:20:05 -参数 : []
2019-03-17 15:20:05 -耗时 : 0
2019-03-17 15:20:05 -返回值 : system/dept/deptTree
2019-03-17 15:20:05 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 15:20:05 -HTTP METHOD : GET
2019-03-17 15:20:05 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 15:20:05 -参数 : []
2019-03-17 15:20:05 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 15:20:05 -==> Parameters: 
2019-03-17 15:20:05 -<==      Total: 3
2019-03-17 15:20:05 -耗时 : 4
2019-03-17 15:20:05 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 15:20:08 -请求地址 : http://localhost:8081/water/waterInto/exprotWaterIntoExcel
2019-03-17 15:20:08 -HTTP METHOD : GET
2019-03-17 15:20:08 -CLASS_METHOD : com.bootdo.water.controller.WaterIntoController.exprotExcel
2019-03-17 15:20:08 -参数 : [com.bootdo.water.vo.WaterVo@635b4142, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1886bc7e]
2019-03-17 15:20:08 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water WHERE `user_type` = 'B' and CREATE_TIME = ? and user_org = ? 
2019-03-17 15:20:08 -==> Parameters: 2019-03(String), 3(Long)
2019-03-17 15:20:08 -<==      Total: 1
2019-03-17 15:20:08 -耗时 : 17
2019-03-17 15:20:08 -返回值 : null
2019-03-17 15:20:44 -请求地址 : http://localhost:8081/file/downImport/userInto
2019-03-17 15:20:44 -HTTP METHOD : GET
2019-03-17 15:20:44 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-03-17 15:20:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@557c6c7b, userInto]
2019-03-17 15:20:44 -耗时 : 27
2019-03-17 15:20:44 -返回值 : null
2019-03-17 15:34:19 -Starting BootdoApplication on ZJZL-20180906VX with PID 5476 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-17 15:34:19 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-17 15:34:19 -The following profiles are active: dev
2019-03-17 15:34:20 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@58359ebd: startup date [Sun Mar 17 15:34:20 CST 2019]; root of context hierarchy
2019-03-17 15:34:24 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-17 15:34:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6959cd18] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:34:27 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5bb2fbbf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:34:29 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:34:30 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:34:30 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:34:30 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-17 15:34:30 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-17 15:34:30 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:34:30 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:34:30 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:34:30 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:34:32 -Tomcat initialized with port(s): 8081 (http)
2019-03-17 15:34:32 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-17 15:34:32 -Starting service [Tomcat]
2019-03-17 15:34:32 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-17 15:34:32 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-17 15:34:33 -Initializing Spring embedded WebApplicationContext
2019-03-17 15:34:33 -Root WebApplicationContext: initialization completed in 13412 ms
2019-03-17 15:34:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-17 15:34:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-17 15:34:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-17 15:34:35 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-17 15:34:35 -Filter xssFilter was not registered (disabled)
2019-03-17 15:34:35 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-17 15:34:35 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-17 15:34:35 -Servlet statViewServlet mapped to [/druid/*]
2019-03-17 15:34:35 -Servlet dispatcherServlet mapped to [/]
2019-03-17 15:34:39 -Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logAspect': Unsatisfied dependency expressed through field 'logService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logServiceImpl': Unsatisfied dependency expressed through field 'logMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\common\dao\LogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterCostMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.water.domain.WaterCostDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.water.domain.WaterCostDO
2019-03-17 15:34:39 -Stopping service [Tomcat]
2019-03-17 15:34:39 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-03-17 15:34:39 -Application run failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logAspect': Unsatisfied dependency expressed through field 'logService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logServiceImpl': Unsatisfied dependency expressed through field 'logMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\common\dao\LogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterCostMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.water.domain.WaterCostDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.water.domain.WaterCostDO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:760)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:20)
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logServiceImpl': Unsatisfied dependency expressed through field 'logMapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\common\dao\LogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterCostMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.water.domain.WaterCostDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.water.domain.WaterCostDO
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:587)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:91)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:373)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1350)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 19 common frames omitted
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'logDao' defined in file [D:\eclipse2018-work\bootdo\target\classes\com\bootdo\common\dao\LogDao.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterCostMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.water.domain.WaterCostDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.water.domain.WaterCostDO
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1445)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1332)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:580)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:584)
	... 32 common frames omitted
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterCostMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.water.domain.WaterCostDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.water.domain.WaterCostDO
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1065)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1430)
	... 43 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterCostMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.water.domain.WaterCostDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.water.domain.WaterCostDO
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	... 55 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [D:\eclipse2018-work\bootdo\target\classes\mybatis\water\WaterCostMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.water.domain.WaterCostDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.water.domain.WaterCostDO
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:522)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:381)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:546)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:130)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$9c2e1e48.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$9c2e1e48$$FastClassBySpringCGLIB$$c0107ac3.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$9c2e1e48.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 56 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.water.domain.WaterCostDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.water.domain.WaterCostDO
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:92)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:520)
	... 69 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.water.domain.WaterCostDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.water.domain.WaterCostDO
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:74)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:135)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:128)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:118)
	... 71 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'com.bootdo.water.domain.WaterCostDO'.  Cause: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.water.domain.WaterCostDO
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 75 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: com.bootdo.water.domain.WaterCostDO
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 77 common frames omitted
2019-03-17 15:35:49 -Starting BootdoApplication on ZJZL-20180906VX with PID 12012 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-17 15:35:49 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-17 15:35:49 -The following profiles are active: dev
2019-03-17 15:35:49 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67ab1c47: startup date [Sun Mar 17 15:35:49 CST 2019]; root of context hierarchy
2019-03-17 15:35:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-17 15:35:57 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8d45bbf6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:35:57 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$7f9eea9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:35:58 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:35:59 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:35:59 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:35:59 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-17 15:35:59 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-17 15:35:59 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:35:59 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:35:59 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:35:59 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 15:36:01 -Tomcat initialized with port(s): 8081 (http)
2019-03-17 15:36:01 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-17 15:36:01 -Starting service [Tomcat]
2019-03-17 15:36:01 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-17 15:36:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-17 15:36:01 -Initializing Spring embedded WebApplicationContext
2019-03-17 15:36:01 -Root WebApplicationContext: initialization completed in 11791 ms
2019-03-17 15:36:02 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-17 15:36:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-17 15:36:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-17 15:36:02 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-17 15:36:02 -Filter xssFilter was not registered (disabled)
2019-03-17 15:36:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-17 15:36:02 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-17 15:36:02 -Servlet statViewServlet mapped to [/druid/*]
2019-03-17 15:36:02 -Servlet dispatcherServlet mapped to [/]
2019-03-17 15:36:05 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67ab1c47: startup date [Sun Mar 17 15:35:49 CST 2019]; root of context hierarchy
2019-03-17 15:36:06 -Using default implementation for ThreadExecutor
2019-03-17 15:36:06 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-17 15:36:06 -Quartz Scheduler v.2.2.1 created.
2019-03-17 15:36:06 -RAMJobStore initialized.
2019-03-17 15:36:06 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-17 15:36:06 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-17 15:36:06 -Quartz scheduler version: 2.2.1
2019-03-17 15:36:06 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7131d668
2019-03-17 15:36:07 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-17 15:36:07 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-17 15:36:11 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-17 15:36:11 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-17 15:36:11 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-17 15:36:11 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-17 15:36:11 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-17 15:36:11 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-17 15:36:11 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-17 15:36:11 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-17 15:36:11 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-17 15:36:11 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:11 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-17 15:36:11 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-17 15:36:11 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-17 15:36:11 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-17 15:36:11 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-17 15:36:11 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:11 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-17 15:36:11 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-17 15:36:11 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-17 15:36:11 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-17 15:36:11 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:11 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-17 15:36:11 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-17 15:36:11 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-17 15:36:11 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-17 15:36:11 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:11 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:11 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-17 15:36:11 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 15:36:11 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 15:36:11 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-17 15:36:11 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-17 15:36:11 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-17 15:36:11 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-17 15:36:11 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-17 15:36:11 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-17 15:36:11 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:11 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-17 15:36:11 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-17 15:36:11 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-17 15:36:11 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-17 15:36:11 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:11 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-17 15:36:11 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-17 15:36:11 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:11 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-17 15:36:11 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-17 15:36:11 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 15:36:11 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 15:36:11 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-17 15:36:11 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-17 15:36:11 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-17 15:36:11 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-17 15:36:11 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-17 15:36:11 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-17 15:36:11 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-17 15:36:11 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:11 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-17 15:36:12 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-17 15:36:12 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-17 15:36:12 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-17 15:36:12 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-17 15:36:12 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-17 15:36:12 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 15:36:12 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:12 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 15:36:12 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-17 15:36:12 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-17 15:36:12 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 15:36:12 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-17 15:36:12 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-17 15:36:12 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-17 15:36:12 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-17 15:36:12 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:12 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-17 15:36:12 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-17 15:36:12 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-17 15:36:12 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-17 15:36:12 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-17 15:36:12 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-17 15:36:12 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-17 15:36:12 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 15:36:12 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:12 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 15:36:12 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-17 15:36:12 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-17 15:36:12 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-17 15:36:12 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 15:36:12 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-17 15:36:12 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-17 15:36:12 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-17 15:36:12 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-17 15:36:12 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-17 15:36:12 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 15:36:12 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:12 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 15:36:12 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-17 15:36:12 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-17 15:36:12 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-17 15:36:12 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-17 15:36:12 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 15:36:12 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:12 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 15:36:12 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-17 15:36:12 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-17 15:36:12 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-17 15:36:12 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-17 15:36:12 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 15:36:12 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:12 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 15:36:12 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-17 15:36:12 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-17 15:36:12 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-17 15:36:12 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-17 15:36:12 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-17 15:36:12 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:12 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-17 15:36:12 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-17 15:36:12 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-17 15:36:12 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:12 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-17 15:36:12 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-17 15:36:12 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-17 15:36:12 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-17 15:36:12 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-17 15:36:12 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:12 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-17 15:36:12 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-17 15:36:12 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-17 15:36:12 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-17 15:36:12 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-17 15:36:12 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-17 15:36:12 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-17 15:36:12 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-17 15:36:12 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-17 15:36:12 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-17 15:36:12 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-17 15:36:12 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 15:36:12 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 15:36:12 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-17 15:36:12 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-17 15:36:12 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-17 15:36:12 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-17 15:36:12 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:12 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-17 15:36:12 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-17 15:36:12 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-17 15:36:12 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 15:36:12 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-17 15:36:12 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-17 15:36:12 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-17 15:36:12 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-17 15:36:12 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-17 15:36:12 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-17 15:36:12 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-17 15:36:12 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-17 15:36:12 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-17 15:36:12 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-17 15:36:12 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-17 15:36:12 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:12 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-17 15:36:12 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-17 15:36:12 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:12 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-17 15:36:12 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-17 15:36:12 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-17 15:36:12 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-17 15:36:12 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 15:36:12 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 15:36:12 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-17 15:36:12 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 15:36:12 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 15:36:12 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-17 15:36:12 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-17 15:36:12 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-17 15:36:12 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-17 15:36:12 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-17 15:36:12 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:12 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-17 15:36:12 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:12 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:12 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-17 15:36:12 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-17 15:36:12 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-17 15:36:12 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-17 15:36:12 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-17 15:36:12 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-17 15:36:12 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 15:36:12 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:12 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 15:36:12 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-17 15:36:12 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 15:36:12 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 15:36:12 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-17 15:36:12 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 15:36:12 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-17 15:36:12 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-17 15:36:12 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-17 15:36:12 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-17 15:36:13 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-17 15:36:13 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-17 15:36:13 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 15:36:14 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@67ab1c47: startup date [Sun Mar 17 15:35:49 CST 2019]; root of context hierarchy
2019-03-17 15:36:14 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 15:36:14 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 15:36:14 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 15:36:14 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-17 15:36:14 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-17 15:36:17 -Registering beans for JMX exposure on startup
2019-03-17 15:36:17 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-17 15:36:17 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-17 15:36:17 -Starting beans in phase 2147483647
2019-03-17 15:36:17 -Context refreshed
2019-03-17 15:36:17 -Found 1 custom documentation plugin(s)
2019-03-17 15:36:17 -Scanning for api listing references
2019-03-17 15:36:18 -Generating unique operation named: removeUsingPOST_1
2019-03-17 15:36:18 -Generating unique operation named: addUsingGET_1
2019-03-17 15:36:18 -Generating unique operation named: editUsingGET_1
2019-03-17 15:36:18 -Generating unique operation named: listUsingGET_1
2019-03-17 15:36:18 -Generating unique operation named: removeUsingPOST_2
2019-03-17 15:36:18 -Generating unique operation named: removeUsingPOST_3
2019-03-17 15:36:18 -Generating unique operation named: saveUsingPOST_1
2019-03-17 15:36:18 -Generating unique operation named: updateUsingGET_1
2019-03-17 15:36:18 -Generating unique operation named: updateUsingHEAD_1
2019-03-17 15:36:18 -Generating unique operation named: updateUsingPOST_1
2019-03-17 15:36:18 -Generating unique operation named: updateUsingPUT_1
2019-03-17 15:36:19 -Generating unique operation named: updateUsingPATCH_1
2019-03-17 15:36:19 -Generating unique operation named: updateUsingDELETE_1
2019-03-17 15:36:19 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-17 15:36:19 -Generating unique operation named: updateUsingTRACE_1
2019-03-17 15:36:19 -Generating unique operation named: addUsingGET_2
2019-03-17 15:36:19 -Generating unique operation named: editUsingGET_2
2019-03-17 15:36:19 -Generating unique operation named: listUsingGET_2
2019-03-17 15:36:19 -Generating unique operation named: removeUsingPOST_4
2019-03-17 15:36:19 -Generating unique operation named: removeUsingPOST_5
2019-03-17 15:36:19 -Generating unique operation named: saveUsingPOST_2
2019-03-17 15:36:19 -Generating unique operation named: updateUsingGET_2
2019-03-17 15:36:19 -Generating unique operation named: updateUsingHEAD_2
2019-03-17 15:36:19 -Generating unique operation named: updateUsingPOST_2
2019-03-17 15:36:19 -Generating unique operation named: updateUsingPUT_2
2019-03-17 15:36:19 -Generating unique operation named: updateUsingPATCH_2
2019-03-17 15:36:19 -Generating unique operation named: updateUsingDELETE_2
2019-03-17 15:36:19 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-17 15:36:19 -Generating unique operation named: updateUsingTRACE_2
2019-03-17 15:36:19 -Generating unique operation named: addUsingGET_3
2019-03-17 15:36:19 -Generating unique operation named: editUsingGET_3
2019-03-17 15:36:19 -Generating unique operation named: listUsingGET_3
2019-03-17 15:36:19 -Generating unique operation named: removeUsingPOST_6
2019-03-17 15:36:19 -Generating unique operation named: removeUsingPOST_7
2019-03-17 15:36:19 -Generating unique operation named: saveUsingPOST_3
2019-03-17 15:36:19 -Generating unique operation named: updateUsingGET_3
2019-03-17 15:36:19 -Generating unique operation named: updateUsingHEAD_3
2019-03-17 15:36:19 -Generating unique operation named: updateUsingPOST_3
2019-03-17 15:36:19 -Generating unique operation named: updateUsingPUT_3
2019-03-17 15:36:19 -Generating unique operation named: updateUsingPATCH_3
2019-03-17 15:36:19 -Generating unique operation named: updateUsingDELETE_3
2019-03-17 15:36:19 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-17 15:36:19 -Generating unique operation named: updateUsingTRACE_3
2019-03-17 15:36:19 -Generating unique operation named: addUsingGET_4
2019-03-17 15:36:19 -Generating unique operation named: editUsingGET_4
2019-03-17 15:36:19 -Generating unique operation named: listUsingGET_4
2019-03-17 15:36:19 -Generating unique operation named: removeUsingPOST_8
2019-03-17 15:36:19 -Generating unique operation named: removeUsingPOST_9
2019-03-17 15:36:19 -Generating unique operation named: saveUsingPOST_4
2019-03-17 15:36:19 -Generating unique operation named: updateUsingGET_4
2019-03-17 15:36:19 -Generating unique operation named: updateUsingHEAD_4
2019-03-17 15:36:19 -Generating unique operation named: updateUsingPOST_4
2019-03-17 15:36:19 -Generating unique operation named: updateUsingPUT_4
2019-03-17 15:36:19 -Generating unique operation named: updateUsingPATCH_4
2019-03-17 15:36:19 -Generating unique operation named: updateUsingDELETE_4
2019-03-17 15:36:19 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-17 15:36:19 -Generating unique operation named: updateUsingTRACE_4
2019-03-17 15:36:19 -Generating unique operation named: ElecUsingGET_1
2019-03-17 15:36:19 -Generating unique operation named: addUsingGET_5
2019-03-17 15:36:19 -Generating unique operation named: editUsingGET_5
2019-03-17 15:36:19 -Generating unique operation named: listUsingGET_5
2019-03-17 15:36:19 -Generating unique operation named: removeUsingPOST_10
2019-03-17 15:36:19 -Generating unique operation named: removeUsingPOST_11
2019-03-17 15:36:19 -Generating unique operation named: saveUsingPOST_5
2019-03-17 15:36:19 -Generating unique operation named: updateUsingGET_5
2019-03-17 15:36:19 -Generating unique operation named: updateUsingHEAD_5
2019-03-17 15:36:19 -Generating unique operation named: updateUsingPOST_5
2019-03-17 15:36:19 -Generating unique operation named: updateUsingPUT_5
2019-03-17 15:36:19 -Generating unique operation named: updateUsingPATCH_5
2019-03-17 15:36:19 -Generating unique operation named: updateUsingDELETE_5
2019-03-17 15:36:19 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-17 15:36:19 -Generating unique operation named: updateUsingTRACE_5
2019-03-17 15:36:19 -Generating unique operation named: editUsingGET_6
2019-03-17 15:36:19 -Generating unique operation named: listUsingGET_6
2019-03-17 15:36:19 -Generating unique operation named: updateUsingPOST_6
2019-03-17 15:36:19 -Generating unique operation named: addUsingGET_6
2019-03-17 15:36:19 -Generating unique operation named: editUsingGET_7
2019-03-17 15:36:19 -Generating unique operation named: listUsingGET_7
2019-03-17 15:36:19 -Generating unique operation named: removeUsingPOST_12
2019-03-17 15:36:19 -Generating unique operation named: removeUsingPOST_13
2019-03-17 15:36:19 -Generating unique operation named: saveUsingPOST_6
2019-03-17 15:36:19 -Generating unique operation named: updateUsingGET_6
2019-03-17 15:36:19 -Generating unique operation named: updateUsingHEAD_6
2019-03-17 15:36:19 -Generating unique operation named: updateUsingPOST_7
2019-03-17 15:36:19 -Generating unique operation named: updateUsingPUT_6
2019-03-17 15:36:19 -Generating unique operation named: updateUsingPATCH_6
2019-03-17 15:36:19 -Generating unique operation named: updateUsingDELETE_6
2019-03-17 15:36:19 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-17 15:36:19 -Generating unique operation named: updateUsingTRACE_6
2019-03-17 15:36:19 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-17 15:36:20 -Generating unique operation named: addUsingGET_7
2019-03-17 15:36:20 -Generating unique operation named: editUsingGET_8
2019-03-17 15:36:20 -Generating unique operation named: listUsingGET_8
2019-03-17 15:36:20 -Generating unique operation named: removeUsingPOST_14
2019-03-17 15:36:20 -Generating unique operation named: removeUsingPOST_15
2019-03-17 15:36:20 -Generating unique operation named: saveUsingPOST_7
2019-03-17 15:36:20 -Generating unique operation named: updateUsingGET_7
2019-03-17 15:36:20 -Generating unique operation named: updateUsingHEAD_7
2019-03-17 15:36:20 -Generating unique operation named: updateUsingPOST_8
2019-03-17 15:36:20 -Generating unique operation named: updateUsingPUT_7
2019-03-17 15:36:20 -Generating unique operation named: updateUsingPATCH_7
2019-03-17 15:36:20 -Generating unique operation named: updateUsingDELETE_7
2019-03-17 15:36:20 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-17 15:36:20 -Generating unique operation named: updateUsingTRACE_7
2019-03-17 15:36:20 -Generating unique operation named: addUsingGET_8
2019-03-17 15:36:20 -Generating unique operation named: editUsingGET_9
2019-03-17 15:36:20 -Generating unique operation named: listUsingGET_9
2019-03-17 15:36:20 -Generating unique operation named: removeUsingPOST_16
2019-03-17 15:36:20 -Generating unique operation named: removeUsingPOST_17
2019-03-17 15:36:20 -Generating unique operation named: saveUsingPOST_8
2019-03-17 15:36:20 -Generating unique operation named: updateUsingGET_8
2019-03-17 15:36:20 -Generating unique operation named: updateUsingHEAD_8
2019-03-17 15:36:20 -Generating unique operation named: updateUsingPOST_9
2019-03-17 15:36:20 -Generating unique operation named: updateUsingPUT_8
2019-03-17 15:36:20 -Generating unique operation named: updateUsingPATCH_8
2019-03-17 15:36:20 -Generating unique operation named: updateUsingDELETE_8
2019-03-17 15:36:20 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-17 15:36:20 -Generating unique operation named: updateUsingTRACE_8
2019-03-17 15:36:20 -Generating unique operation named: addUsingGET_9
2019-03-17 15:36:20 -Generating unique operation named: editUsingGET_10
2019-03-17 15:36:20 -Generating unique operation named: infoUsingGET_1
2019-03-17 15:36:20 -Generating unique operation named: infoUsingHEAD_1
2019-03-17 15:36:20 -Generating unique operation named: infoUsingPOST_1
2019-03-17 15:36:20 -Generating unique operation named: infoUsingPUT_1
2019-03-17 15:36:20 -Generating unique operation named: infoUsingPATCH_1
2019-03-17 15:36:20 -Generating unique operation named: infoUsingDELETE_1
2019-03-17 15:36:20 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-17 15:36:20 -Generating unique operation named: infoUsingTRACE_1
2019-03-17 15:36:20 -Generating unique operation named: listUsingGET_10
2019-03-17 15:36:20 -Generating unique operation named: removeUsingPOST_18
2019-03-17 15:36:20 -Generating unique operation named: removeUsingPOST_19
2019-03-17 15:36:20 -Generating unique operation named: saveUsingPOST_9
2019-03-17 15:36:20 -Generating unique operation named: updateUsingPOST_10
2019-03-17 15:36:20 -Generating unique operation named: listUsingGET_11
2019-03-17 15:36:20 -Generating unique operation named: removeUsingPOST_20
2019-03-17 15:36:20 -Generating unique operation named: welcomeUsingGET_1
2019-03-17 15:36:20 -Generating unique operation named: addUsingGET_10
2019-03-17 15:36:20 -Generating unique operation named: editUsingGET_11
2019-03-17 15:36:20 -Generating unique operation named: listUsingGET_12
2019-03-17 15:36:20 -Generating unique operation named: removeUsingPOST_21
2019-03-17 15:36:20 -Generating unique operation named: saveUsingPOST_10
2019-03-17 15:36:20 -Generating unique operation named: treeUsingGET_1
2019-03-17 15:36:20 -Generating unique operation named: treeUsingGET_2
2019-03-17 15:36:20 -Generating unique operation named: updateUsingPOST_11
2019-03-17 15:36:20 -Generating unique operation named: addUsingGET_11
2019-03-17 15:36:20 -Generating unique operation named: editUsingGET_12
2019-03-17 15:36:20 -Generating unique operation named: listUsingGET_13
2019-03-17 15:36:20 -Generating unique operation named: removeUsingPOST_22
2019-03-17 15:36:20 -Generating unique operation named: removeUsingPOST_23
2019-03-17 15:36:20 -Generating unique operation named: saveUsingPOST_11
2019-03-17 15:36:20 -Generating unique operation named: updateUsingGET_9
2019-03-17 15:36:20 -Generating unique operation named: updateUsingHEAD_9
2019-03-17 15:36:20 -Generating unique operation named: updateUsingPOST_12
2019-03-17 15:36:20 -Generating unique operation named: updateUsingPUT_9
2019-03-17 15:36:20 -Generating unique operation named: updateUsingPATCH_9
2019-03-17 15:36:20 -Generating unique operation named: updateUsingDELETE_9
2019-03-17 15:36:20 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-17 15:36:20 -Generating unique operation named: updateUsingTRACE_9
2019-03-17 15:36:20 -Generating unique operation named: addUsingGET_12
2019-03-17 15:36:20 -Generating unique operation named: editUsingGET_13
2019-03-17 15:36:20 -Generating unique operation named: listUsingGET_14
2019-03-17 15:36:20 -Generating unique operation named: removeUsingPOST_24
2019-03-17 15:36:20 -Generating unique operation named: removeUsingPOST_25
2019-03-17 15:36:20 -Generating unique operation named: saveUsingPOST_12
2019-03-17 15:36:20 -Generating unique operation named: updateUsingGET_10
2019-03-17 15:36:21 -Generating unique operation named: updateUsingHEAD_10
2019-03-17 15:36:21 -Generating unique operation named: updateUsingPOST_13
2019-03-17 15:36:21 -Generating unique operation named: updateUsingPUT_10
2019-03-17 15:36:21 -Generating unique operation named: updateUsingPATCH_10
2019-03-17 15:36:21 -Generating unique operation named: updateUsingDELETE_10
2019-03-17 15:36:21 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-17 15:36:21 -Generating unique operation named: updateUsingTRACE_10
2019-03-17 15:36:21 -Generating unique operation named: addUsingGET_13
2019-03-17 15:36:21 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-17 15:36:21 -Generating unique operation named: editUsingGET_14
2019-03-17 15:36:21 -Generating unique operation named: listUsingGET_15
2019-03-17 15:36:21 -Generating unique operation named: saveUsingPOST_13
2019-03-17 15:36:21 -Generating unique operation named: saveUsingPOST_14
2019-03-17 15:36:21 -Generating unique operation named: updateUsingPOST_14
2019-03-17 15:36:21 -Generating unique operation named: listUsingGET_16
2019-03-17 15:36:21 -Generating unique operation named: listUsingHEAD_1
2019-03-17 15:36:21 -Generating unique operation named: listUsingPOST_1
2019-03-17 15:36:21 -Generating unique operation named: listUsingPUT_1
2019-03-17 15:36:21 -Generating unique operation named: listUsingPATCH_1
2019-03-17 15:36:21 -Generating unique operation named: listUsingDELETE_1
2019-03-17 15:36:21 -Generating unique operation named: listUsingOPTIONS_1
2019-03-17 15:36:21 -Generating unique operation named: listUsingTRACE_1
2019-03-17 15:36:21 -Generating unique operation named: addUsingGET_14
2019-03-17 15:36:21 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-17 15:36:21 -Generating unique operation named: editUsingGET_15
2019-03-17 15:36:21 -Generating unique operation named: listUsingGET_17
2019-03-17 15:36:21 -Generating unique operation named: removeUsingPOST_26
2019-03-17 15:36:21 -Generating unique operation named: saveUsingPOST_15
2019-03-17 15:36:21 -Generating unique operation named: treeUsingGET_3
2019-03-17 15:36:21 -Generating unique operation named: treeViewUsingGET_1
2019-03-17 15:36:21 -Generating unique operation named: updateUsingPOST_15
2019-03-17 15:36:21 -Generating unique operation named: addUsingGET_15
2019-03-17 15:36:21 -Generating unique operation named: editUsingGET_16
2019-03-17 15:36:21 -Generating unique operation named: listUsingGET_18
2019-03-17 15:36:21 -Generating unique operation named: removeUsingPOST_27
2019-03-17 15:36:21 -Generating unique operation named: removeUsingPOST_28
2019-03-17 15:36:21 -Generating unique operation named: saveUsingPOST_16
2019-03-17 15:36:21 -Generating unique operation named: updateUsingGET_11
2019-03-17 15:36:21 -Generating unique operation named: updateUsingHEAD_11
2019-03-17 15:36:21 -Generating unique operation named: updateUsingPOST_16
2019-03-17 15:36:21 -Generating unique operation named: updateUsingPUT_11
2019-03-17 15:36:21 -Generating unique operation named: updateUsingPATCH_11
2019-03-17 15:36:21 -Generating unique operation named: updateUsingDELETE_11
2019-03-17 15:36:21 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-17 15:36:21 -Generating unique operation named: updateUsingTRACE_11
2019-03-17 15:36:21 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-17 15:36:21 -Generating unique operation named: addUsingGET_16
2019-03-17 15:36:21 -Generating unique operation named: editUsingGET_17
2019-03-17 15:36:21 -Generating unique operation named: listUsingGET_19
2019-03-17 15:36:21 -Generating unique operation named: removeUsingPOST_29
2019-03-17 15:36:21 -Generating unique operation named: removeUsingPOST_30
2019-03-17 15:36:21 -Generating unique operation named: saveUsingPOST_17
2019-03-17 15:36:21 -Generating unique operation named: updateUsingGET_12
2019-03-17 15:36:21 -Generating unique operation named: updateUsingHEAD_12
2019-03-17 15:36:21 -Generating unique operation named: updateUsingPOST_17
2019-03-17 15:36:21 -Generating unique operation named: updateUsingPUT_12
2019-03-17 15:36:21 -Generating unique operation named: updateUsingPATCH_12
2019-03-17 15:36:21 -Generating unique operation named: updateUsingDELETE_12
2019-03-17 15:36:21 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-17 15:36:21 -Generating unique operation named: updateUsingTRACE_12
2019-03-17 15:36:21 -Generating unique operation named: addUsingGET_17
2019-03-17 15:36:21 -Generating unique operation named: editUsingGET_18
2019-03-17 15:36:21 -Generating unique operation named: listUsingGET_20
2019-03-17 15:36:21 -Generating unique operation named: removeUsingPOST_31
2019-03-17 15:36:21 -Generating unique operation named: removeUsingPOST_32
2019-03-17 15:36:21 -Generating unique operation named: saveUsingPOST_18
2019-03-17 15:36:21 -Generating unique operation named: updateUsingGET_13
2019-03-17 15:36:21 -Generating unique operation named: updateUsingHEAD_13
2019-03-17 15:36:21 -Generating unique operation named: updateUsingPOST_18
2019-03-17 15:36:21 -Generating unique operation named: updateUsingPUT_13
2019-03-17 15:36:21 -Generating unique operation named: updateUsingPATCH_13
2019-03-17 15:36:21 -Generating unique operation named: updateUsingDELETE_13
2019-03-17 15:36:21 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-17 15:36:21 -Generating unique operation named: updateUsingTRACE_13
2019-03-17 15:36:21 -Starting Quartz Scheduler now
2019-03-17 15:36:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-17 15:36:21 -Starting...
2019-03-17 15:36:21 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-17 15:36:21 -Started.
2019-03-17 15:36:21 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-17 15:36:24 -Using a shared selector for servlet write/read
2019-03-17 15:36:24 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-17 15:36:24 -Started BootdoApplication in 37.64 seconds (JVM running for 39.348)
2019-03-17 15:36:24 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-17 15:36:25 -==> Parameters: 
2019-03-17 15:36:25 -<==      Total: 1
2019-03-17 15:36:49 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-17 15:36:49 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-17 15:36:49 -FrameworkServlet 'dispatcherServlet': initialization completed in 58 ms
2019-03-17 15:36:49 -Enabling session validation scheduler...
2019-03-17 15:36:49 -请求地址 : http://localhost:8081/login;JSESSIONID=08657013-634d-48ee-97a3-70d0f2595707
2019-03-17 15:36:49 -HTTP METHOD : GET
2019-03-17 15:36:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 15:36:49 -参数 : [{}]
2019-03-17 15:36:49 -耗时 : 3
2019-03-17 15:36:49 -返回值 : login
2019-03-17 15:36:51 -请求地址 : http://localhost:8081/getVerify
2019-03-17 15:36:51 -HTTP METHOD : GET
2019-03-17 15:36:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-17 15:36:51 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@1f03c4b4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6ff38937]
2019-03-17 15:36:54 -9147
2019-03-17 15:36:54 -耗时 : 3540
2019-03-17 15:36:54 -返回值 : null
2019-03-17 15:37:07 -请求地址 : http://localhost:8081/login
2019-03-17 15:37:07 -HTTP METHOD : POST
2019-03-17 15:37:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 15:37:07 -参数 : [admin, 111111, 9147, org.apache.shiro.web.servlet.ShiroHttpServletRequest@2eb6418e]
2019-03-17 15:37:08 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-17 15:37:08 -==> Parameters: admin(String)
2019-03-17 15:37:08 -<==      Total: 1
2019-03-17 15:37:08 -耗时 : 102
2019-03-17 15:37:08 -返回值 : {msg=操作成功, code=0}
2019-03-17 15:37:08 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-17 15:37:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 15:37:08 -==> Parameters: 1(Long), admin(String), 登录(String), 103(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 15:37:08.218(Timestamp)
2019-03-17 15:37:08 -<==    Updates: 1
2019-03-17 15:37:08 -请求地址 : http://localhost:8081/index
2019-03-17 15:37:08 -HTTP METHOD : GET
2019-03-17 15:37:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 15:37:08 -参数 : [{}]
2019-03-17 15:37:08 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 15:37:08 -==> Parameters: 1(Long)
2019-03-17 15:37:08 -<==      Total: 45
2019-03-17 15:37:08 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 15:37:08 -==> Parameters: 138(Long)
2019-03-17 15:37:08 -<==      Total: 1
2019-03-17 15:37:08 -耗时 : 243
2019-03-17 15:37:08 -返回值 : index_v1
2019-03-17 15:37:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 15:37:08 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 243(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 15:37:08.689(Timestamp)
2019-03-17 15:37:08 -<==    Updates: 1
2019-03-17 15:37:08 -请求地址 : http://localhost:8081/main
2019-03-17 15:37:08 -HTTP METHOD : GET
2019-03-17 15:37:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 15:37:08 -参数 : []
2019-03-17 15:37:08 -耗时 : 1
2019-03-17 15:37:08 -返回值 : main
2019-03-17 15:37:09 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 15:37:09 -HTTP METHOD : GET
2019-03-17 15:37:09 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 15:37:09 -参数 : []
2019-03-17 15:37:09 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 15:37:09 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 15:37:09 -<==      Total: 0
2019-03-17 15:37:09 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 15:37:09 -==> Parameters: 1(Long), 0(String)
2019-03-17 15:37:09 -<==      Total: 1
2019-03-17 15:37:09 -耗时 : 48
2019-03-17 15:37:09 -返回值 : com.bootdo.common.utils.PageUtils@7125f7be
2019-03-17 15:37:09 -请求地址 : http://localhost:8081/main
2019-03-17 15:37:09 -HTTP METHOD : GET
2019-03-17 15:37:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 15:37:09 -参数 : []
2019-03-17 15:37:09 -耗时 : 1
2019-03-17 15:37:09 -返回值 : main
2019-03-17 15:37:13 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1]
2019-03-17 15:37:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 15:37:16 -==> Parameters: 1(Long)
2019-03-17 15:37:16 -<==      Total: 86
2019-03-17 15:37:16 -请求地址 : http://localhost:8081/elec/elec
2019-03-17 15:37:16 -HTTP METHOD : GET
2019-03-17 15:37:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-17 15:37:16 -参数 : []
2019-03-17 15:37:16 -耗时 : 1
2019-03-17 15:37:16 -返回值 : elec/elec/elec
2019-03-17 15:37:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 15:37:17 -HTTP METHOD : GET
2019-03-17 15:37:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 15:37:17 -参数 : [userType]
2019-03-17 15:37:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 15:37:17 -==> Parameters: userType(String)
2019-03-17 15:37:17 -<==      Total: 2
2019-03-17 15:37:17 -耗时 : 29
2019-03-17 15:37:17 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 15:37:17 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 15:37:17 -HTTP METHOD : GET
2019-03-17 15:37:17 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 15:37:17 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@1d423dc]
2019-03-17 15:37:17 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-17 15:37:17 -==> Parameters: 0(Integer), 3(Integer)
2019-03-17 15:37:17 -<==      Total: 3
2019-03-17 15:37:17 -==>  Preparing: select count(*) from elec 
2019-03-17 15:37:17 -==> Parameters: 
2019-03-17 15:37:17 -<==      Total: 1
2019-03-17 15:37:17 -耗时 : 104
2019-03-17 15:37:17 -返回值 : com.bootdo.common.utils.PageUtils@d9c757b
2019-03-17 15:37:24 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 15:37:24 -HTTP METHOD : GET
2019-03-17 15:37:24 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 15:37:24 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@1fe57c1c]
2019-03-17 15:37:24 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 15:37:24 -==> Parameters: 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 15:37:24 -<==      Total: 3
2019-03-17 15:37:24 -==>  Preparing: select count(*) from elec WHERE create_time = ? 
2019-03-17 15:37:24 -==> Parameters: 2019-03(String)
2019-03-17 15:37:24 -<==      Total: 1
2019-03-17 15:37:24 -耗时 : 19
2019-03-17 15:37:24 -返回值 : com.bootdo.common.utils.PageUtils@707e1f25
2019-03-17 15:37:28 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 15:37:28 -HTTP METHOD : GET
2019-03-17 15:37:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 15:37:28 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@214ea5a0]
2019-03-17 15:37:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 15:37:28 -==> Parameters: 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 15:37:28 -<==      Total: 3
2019-03-17 15:37:28 -==>  Preparing: select count(*) from elec WHERE create_time = ? 
2019-03-17 15:37:28 -==> Parameters: 2019-03(String)
2019-03-17 15:37:28 -<==      Total: 1
2019-03-17 15:37:28 -耗时 : 16
2019-03-17 15:37:28 -返回值 : com.bootdo.common.utils.PageUtils@7bc44e34
2019-03-17 15:37:36 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 15:37:36 -HTTP METHOD : GET
2019-03-17 15:37:36 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 15:37:36 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-02}, com.bootdo.elec.domain.ElecDO@780765e7]
2019-03-17 15:37:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 15:37:36 -==> Parameters: 2019-02(String), 0(Integer), 3(Integer)
2019-03-17 15:37:36 -<==      Total: 3
2019-03-17 15:37:36 -==>  Preparing: select count(*) from elec WHERE create_time = ? 
2019-03-17 15:37:36 -==> Parameters: 2019-02(String)
2019-03-17 15:37:36 -<==      Total: 1
2019-03-17 15:37:36 -耗时 : 16
2019-03-17 15:37:36 -返回值 : com.bootdo.common.utils.PageUtils@61608e69
2019-03-17 15:37:43 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 15:37:43 -HTTP METHOD : GET
2019-03-17 15:37:43 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 15:37:43 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@72b20d14]
2019-03-17 15:37:43 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 15:37:43 -==> Parameters: 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 15:37:43 -<==      Total: 3
2019-03-17 15:37:43 -==>  Preparing: select count(*) from elec WHERE create_time = ? 
2019-03-17 15:37:43 -==> Parameters: 2019-03(String)
2019-03-17 15:37:43 -<==      Total: 1
2019-03-17 15:37:43 -耗时 : 22
2019-03-17 15:37:43 -返回值 : com.bootdo.common.utils.PageUtils@166e7313
2019-03-17 15:37:46 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 15:37:46 -HTTP METHOD : GET
2019-03-17 15:37:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 15:37:46 -参数 : [{limit=3, offset=0, userType=B, userOrg=, userId=, createTime=2019-03, type=B}, com.bootdo.elec.domain.ElecDO@7dbc74d2]
2019-03-17 15:37:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 15:37:46 -==> Parameters: B(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 15:37:46 -<==      Total: 1
2019-03-17 15:37:46 -==>  Preparing: select count(*) from elec WHERE user_type = ? and create_time = ? 
2019-03-17 15:37:46 -==> Parameters: B(String), 2019-03(String)
2019-03-17 15:37:46 -<==      Total: 1
2019-03-17 15:37:46 -耗时 : 48
2019-03-17 15:37:46 -返回值 : com.bootdo.common.utils.PageUtils@18ad5963
2019-03-17 15:37:48 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 15:37:48 -HTTP METHOD : GET
2019-03-17 15:37:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 15:37:48 -参数 : []
2019-03-17 15:37:48 -耗时 : 0
2019-03-17 15:37:48 -返回值 : system/dept/deptTree
2019-03-17 15:37:48 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 15:37:48 -HTTP METHOD : GET
2019-03-17 15:37:48 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 15:37:48 -参数 : []
2019-03-17 15:37:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 15:37:49 -==> Parameters: 
2019-03-17 15:37:49 -<==      Total: 3
2019-03-17 15:37:49 -耗时 : 26
2019-03-17 15:37:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 15:37:53 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 15:37:53 -HTTP METHOD : GET
2019-03-17 15:37:53 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 15:37:53 -参数 : [{limit=3, offset=0, userType=B, userOrg=3, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@7b75caac]
2019-03-17 15:37:53 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 15:37:53 -==> Parameters: B(String), 3(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 15:37:53 -<==      Total: 1
2019-03-17 15:37:53 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-17 15:37:53 -==> Parameters: B(String), 3(String), 2019-03(String)
2019-03-17 15:37:53 -<==      Total: 1
2019-03-17 15:37:53 -耗时 : 13
2019-03-17 15:37:53 -返回值 : com.bootdo.common.utils.PageUtils@568db66a
2019-03-17 15:37:55 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 15:37:55 -HTTP METHOD : GET
2019-03-17 15:37:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 15:37:55 -参数 : []
2019-03-17 15:37:55 -耗时 : 0
2019-03-17 15:37:55 -返回值 : system/dept/deptTree
2019-03-17 15:37:55 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 15:37:55 -HTTP METHOD : GET
2019-03-17 15:37:55 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 15:37:55 -参数 : []
2019-03-17 15:37:55 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 15:37:55 -==> Parameters: 
2019-03-17 15:37:55 -<==      Total: 3
2019-03-17 15:37:55 -耗时 : 4
2019-03-17 15:37:55 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 15:37:57 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 15:37:57 -HTTP METHOD : GET
2019-03-17 15:37:57 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 15:37:57 -参数 : [{limit=3, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@74561667]
2019-03-17 15:37:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 15:37:57 -==> Parameters: B(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 15:37:57 -<==      Total: 0
2019-03-17 15:37:57 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-17 15:37:57 -==> Parameters: B(String), 2(String), 2019-03(String)
2019-03-17 15:37:57 -<==      Total: 1
2019-03-17 15:37:57 -耗时 : 10
2019-03-17 15:37:57 -返回值 : com.bootdo.common.utils.PageUtils@11dd3274
2019-03-17 15:38:06 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 15:38:06 -HTTP METHOD : GET
2019-03-17 15:38:06 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 15:38:06 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@4cdde647]
2019-03-17 15:38:06 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 15:38:06 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 15:38:06 -<==      Total: 3
2019-03-17 15:38:06 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-17 15:38:06 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-17 15:38:06 -<==      Total: 1
2019-03-17 15:38:06 -耗时 : 12
2019-03-17 15:38:06 -返回值 : com.bootdo.common.utils.PageUtils@395aace1
2019-03-17 15:38:10 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 15:38:10 -HTTP METHOD : GET
2019-03-17 15:38:10 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 15:38:10 -参数 : []
2019-03-17 15:38:10 -耗时 : 0
2019-03-17 15:38:10 -返回值 : system/dept/deptTree
2019-03-17 15:38:10 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 15:38:10 -HTTP METHOD : GET
2019-03-17 15:38:10 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 15:38:10 -参数 : []
2019-03-17 15:38:10 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 15:38:10 -==> Parameters: 
2019-03-17 15:38:10 -<==      Total: 3
2019-03-17 15:38:10 -耗时 : 4
2019-03-17 15:38:10 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 15:38:14 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 15:38:14 -HTTP METHOD : GET
2019-03-17 15:38:14 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 15:38:14 -参数 : [{limit=3, offset=0, userType=, userOrg=2, userId=, createTime=2019-03, type=}, com.bootdo.elec.domain.ElecDO@480c5c0b]
2019-03-17 15:38:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 15:38:14 -==> Parameters: 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 15:38:14 -<==      Total: 3
2019-03-17 15:38:14 -==>  Preparing: select count(*) from elec WHERE user_org = ? and create_time = ? 
2019-03-17 15:38:14 -==> Parameters: 2(String), 2019-03(String)
2019-03-17 15:38:14 -<==      Total: 1
2019-03-17 15:38:14 -耗时 : 52
2019-03-17 15:38:14 -返回值 : com.bootdo.common.utils.PageUtils@1dcb444
2019-03-17 15:38:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 15:38:17 -HTTP METHOD : GET
2019-03-17 15:38:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 15:38:17 -参数 : []
2019-03-17 15:38:17 -耗时 : 1
2019-03-17 15:38:17 -返回值 : system/dept/deptTree
2019-03-17 15:38:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 15:38:17 -HTTP METHOD : GET
2019-03-17 15:38:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 15:38:17 -参数 : []
2019-03-17 15:38:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 15:38:17 -==> Parameters: 
2019-03-17 15:38:17 -<==      Total: 3
2019-03-17 15:38:17 -耗时 : 4
2019-03-17 15:38:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 15:38:19 -请求地址 : http://localhost:8081/index
2019-03-17 15:38:19 -HTTP METHOD : GET
2019-03-17 15:38:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 15:38:19 -参数 : [{}]
2019-03-17 15:38:19 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 15:38:19 -==> Parameters: 1(Long)
2019-03-17 15:38:19 -<==      Total: 45
2019-03-17 15:38:19 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 15:38:19 -==> Parameters: 138(Long)
2019-03-17 15:38:19 -<==      Total: 1
2019-03-17 15:38:19 -耗时 : 19
2019-03-17 15:38:19 -返回值 : index_v1
2019-03-17 15:38:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 15:38:19 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 15:38:19.847(Timestamp)
2019-03-17 15:38:19 -<==    Updates: 1
2019-03-17 15:38:19 -请求地址 : http://localhost:8081/main
2019-03-17 15:38:19 -HTTP METHOD : GET
2019-03-17 15:38:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 15:38:19 -参数 : []
2019-03-17 15:38:19 -耗时 : 0
2019-03-17 15:38:19 -返回值 : main
2019-03-17 15:38:20 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 15:38:20 -HTTP METHOD : GET
2019-03-17 15:38:20 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 15:38:20 -参数 : []
2019-03-17 15:38:20 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 15:38:20 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 15:38:20 -<==      Total: 0
2019-03-17 15:38:20 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 15:38:20 -==> Parameters: 1(Long), 0(String)
2019-03-17 15:38:20 -<==      Total: 1
2019-03-17 15:38:20 -耗时 : 8
2019-03-17 15:38:20 -返回值 : com.bootdo.common.utils.PageUtils@6dcb370b
2019-03-17 15:38:20 -请求地址 : http://localhost:8081/main
2019-03-17 15:38:20 -HTTP METHOD : GET
2019-03-17 15:38:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 15:38:20 -参数 : []
2019-03-17 15:38:20 -耗时 : 1
2019-03-17 15:38:20 -返回值 : main
2019-03-17 15:38:22 -请求地址 : http://localhost:8081/elec/elec
2019-03-17 15:38:22 -HTTP METHOD : GET
2019-03-17 15:38:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-17 15:38:22 -参数 : []
2019-03-17 15:38:22 -耗时 : 0
2019-03-17 15:38:22 -返回值 : elec/elec/elec
2019-03-17 15:38:22 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 15:38:22 -HTTP METHOD : GET
2019-03-17 15:38:22 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 15:38:22 -参数 : [userType]
2019-03-17 15:38:22 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 15:38:22 -==> Parameters: userType(String)
2019-03-17 15:38:22 -<==      Total: 2
2019-03-17 15:38:22 -耗时 : 5
2019-03-17 15:38:22 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 15:38:22 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 15:38:22 -HTTP METHOD : GET
2019-03-17 15:38:22 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 15:38:22 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@37826bd]
2019-03-17 15:38:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-17 15:38:22 -==> Parameters: 0(Integer), 3(Integer)
2019-03-17 15:38:22 -<==      Total: 3
2019-03-17 15:38:22 -==>  Preparing: select count(*) from elec 
2019-03-17 15:38:22 -==> Parameters: 
2019-03-17 15:38:22 -<==      Total: 1
2019-03-17 15:38:22 -耗时 : 10
2019-03-17 15:38:22 -返回值 : com.bootdo.common.utils.PageUtils@7af6708
2019-03-17 15:38:23 -请求地址 : http://localhost:8081/elec/elecInto
2019-03-17 15:38:23 -HTTP METHOD : GET
2019-03-17 15:38:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-03-17 15:38:23 -参数 : []
2019-03-17 15:38:23 -耗时 : 0
2019-03-17 15:38:23 -返回值 : elec/elecInto/elecInto
2019-03-17 16:48:41 -Starting BootdoApplication on ZJZL-20180906VX with PID 12652 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-17 16:48:41 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-17 16:48:41 -The following profiles are active: dev
2019-03-17 16:48:43 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@18025ced: startup date [Sun Mar 17 16:48:43 CST 2019]; root of context hierarchy
2019-03-17 16:48:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-17 16:49:00 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ab06796f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 16:49:00 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$9d5fa816] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 16:49:02 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 16:49:03 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 16:49:03 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 16:49:03 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-17 16:49:03 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-17 16:49:03 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 16:49:03 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 16:49:03 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 16:49:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 16:49:05 -Tomcat initialized with port(s): 8081 (http)
2019-03-17 16:49:05 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-17 16:49:05 -Starting service [Tomcat]
2019-03-17 16:49:05 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-17 16:49:05 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-17 16:49:06 -Initializing Spring embedded WebApplicationContext
2019-03-17 16:49:06 -Root WebApplicationContext: initialization completed in 23050 ms
2019-03-17 16:49:07 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-17 16:49:07 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-17 16:49:07 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-17 16:49:07 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-17 16:49:07 -Filter xssFilter was not registered (disabled)
2019-03-17 16:49:07 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-17 16:49:07 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-17 16:49:07 -Servlet statViewServlet mapped to [/druid/*]
2019-03-17 16:49:07 -Servlet dispatcherServlet mapped to [/]
2019-03-17 16:49:10 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@18025ced: startup date [Sun Mar 17 16:48:43 CST 2019]; root of context hierarchy
2019-03-17 16:49:11 -Using default implementation for ThreadExecutor
2019-03-17 16:49:11 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-17 16:49:11 -Quartz Scheduler v.2.2.1 created.
2019-03-17 16:49:11 -RAMJobStore initialized.
2019-03-17 16:49:11 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-17 16:49:11 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-17 16:49:11 -Quartz scheduler version: 2.2.1
2019-03-17 16:49:11 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@287317df
2019-03-17 16:49:11 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-17 16:49:12 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-17 16:49:15 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-17 16:49:15 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-17 16:49:15 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-17 16:49:15 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-17 16:49:15 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-17 16:49:15 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-17 16:49:15 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-17 16:49:15 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-17 16:49:15 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-17 16:49:15 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-17 16:49:15 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-17 16:49:15 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-17 16:49:15 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-17 16:49:15 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-17 16:49:15 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-17 16:49:15 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-17 16:49:15 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-17 16:49:15 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-17 16:49:15 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-17 16:49:15 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-17 16:49:15 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 16:49:15 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-17 16:49:15 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 16:49:15 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-17 16:49:15 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-17 16:49:15 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-17 16:49:15 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-17 16:49:15 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-17 16:49:15 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-17 16:49:15 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-17 16:49:15 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-17 16:49:15 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-17 16:49:15 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 16:49:15 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 16:49:15 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-17 16:49:15 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-17 16:49:15 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-17 16:49:15 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-17 16:49:15 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-17 16:49:15 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-17 16:49:15 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-17 16:49:15 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-17 16:49:15 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-17 16:49:15 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-17 16:49:15 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-17 16:49:15 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 16:49:15 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 16:49:15 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-17 16:49:15 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-17 16:49:15 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 16:49:15 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-17 16:49:15 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-17 16:49:15 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-17 16:49:15 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-17 16:49:15 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-17 16:49:15 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-17 16:49:15 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-17 16:49:15 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-17 16:49:15 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-17 16:49:15 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-17 16:49:15 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 16:49:15 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 16:49:15 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-17 16:49:15 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-17 16:49:15 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-17 16:49:15 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 16:49:15 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-17 16:49:15 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-17 16:49:15 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-17 16:49:15 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-17 16:49:15 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 16:49:15 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 16:49:15 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-17 16:49:15 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-17 16:49:15 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-17 16:49:15 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 16:49:15 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 16:49:15 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-17 16:49:15 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-17 16:49:15 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-17 16:49:15 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 16:49:15 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 16:49:15 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-17 16:49:15 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-17 16:49:15 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-17 16:49:15 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-17 16:49:15 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-17 16:49:15 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-17 16:49:15 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-17 16:49:15 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-17 16:49:15 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-17 16:49:15 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-17 16:49:15 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-17 16:49:15 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-17 16:49:15 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-17 16:49:15 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-17 16:49:15 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-17 16:49:15 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-17 16:49:15 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-17 16:49:15 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-17 16:49:15 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-17 16:49:15 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-17 16:49:15 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-17 16:49:15 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 16:49:15 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 16:49:15 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-17 16:49:15 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-17 16:49:15 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-17 16:49:15 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-17 16:49:15 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-17 16:49:15 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-17 16:49:15 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-17 16:49:15 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-17 16:49:15 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-17 16:49:15 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-17 16:49:15 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-17 16:49:15 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-17 16:49:15 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-17 16:49:15 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-17 16:49:15 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-17 16:49:15 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-17 16:49:15 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-17 16:49:15 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-17 16:49:15 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-17 16:49:15 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 16:49:15 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 16:49:15 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-17 16:49:15 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 16:49:15 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-17 16:49:15 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-17 16:49:15 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-17 16:49:15 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-17 16:49:15 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-17 16:49:15 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-17 16:49:15 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-17 16:49:15 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-17 16:49:15 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-17 16:49:15 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-17 16:49:15 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-17 16:49:15 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 16:49:15 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 16:49:15 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 16:49:15 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-17 16:49:15 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-17 16:49:15 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 16:49:15 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 16:49:15 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-17 16:49:15 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-17 16:49:15 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-17 16:49:16 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-17 16:49:16 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-17 16:49:16 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-17 16:49:17 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 16:49:17 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@18025ced: startup date [Sun Mar 17 16:48:43 CST 2019]; root of context hierarchy
2019-03-17 16:49:17 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 16:49:17 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 16:49:17 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 16:49:18 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-17 16:49:18 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-17 16:49:21 -Registering beans for JMX exposure on startup
2019-03-17 16:49:21 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-17 16:49:21 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-17 16:49:21 -Starting beans in phase 2147483647
2019-03-17 16:49:21 -Context refreshed
2019-03-17 16:49:22 -Found 1 custom documentation plugin(s)
2019-03-17 16:49:22 -Scanning for api listing references
2019-03-17 16:49:23 -Generating unique operation named: removeUsingPOST_1
2019-03-17 16:49:23 -Generating unique operation named: addUsingGET_1
2019-03-17 16:49:23 -Generating unique operation named: editUsingGET_1
2019-03-17 16:49:23 -Generating unique operation named: listUsingGET_1
2019-03-17 16:49:23 -Generating unique operation named: removeUsingPOST_2
2019-03-17 16:49:23 -Generating unique operation named: removeUsingPOST_3
2019-03-17 16:49:23 -Generating unique operation named: saveUsingPOST_1
2019-03-17 16:49:23 -Generating unique operation named: updateUsingGET_1
2019-03-17 16:49:23 -Generating unique operation named: updateUsingHEAD_1
2019-03-17 16:49:23 -Generating unique operation named: updateUsingPOST_1
2019-03-17 16:49:23 -Generating unique operation named: updateUsingPUT_1
2019-03-17 16:49:23 -Generating unique operation named: updateUsingPATCH_1
2019-03-17 16:49:23 -Generating unique operation named: updateUsingDELETE_1
2019-03-17 16:49:23 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-17 16:49:23 -Generating unique operation named: updateUsingTRACE_1
2019-03-17 16:49:23 -Generating unique operation named: addUsingGET_2
2019-03-17 16:49:23 -Generating unique operation named: editUsingGET_2
2019-03-17 16:49:23 -Generating unique operation named: listUsingGET_2
2019-03-17 16:49:23 -Generating unique operation named: removeUsingPOST_4
2019-03-17 16:49:23 -Generating unique operation named: removeUsingPOST_5
2019-03-17 16:49:23 -Generating unique operation named: saveUsingPOST_2
2019-03-17 16:49:23 -Generating unique operation named: updateUsingGET_2
2019-03-17 16:49:23 -Generating unique operation named: updateUsingHEAD_2
2019-03-17 16:49:23 -Generating unique operation named: updateUsingPOST_2
2019-03-17 16:49:23 -Generating unique operation named: updateUsingPUT_2
2019-03-17 16:49:23 -Generating unique operation named: updateUsingPATCH_2
2019-03-17 16:49:23 -Generating unique operation named: updateUsingDELETE_2
2019-03-17 16:49:23 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-17 16:49:23 -Generating unique operation named: updateUsingTRACE_2
2019-03-17 16:49:23 -Generating unique operation named: addUsingGET_3
2019-03-17 16:49:23 -Generating unique operation named: editUsingGET_3
2019-03-17 16:49:23 -Generating unique operation named: listUsingGET_3
2019-03-17 16:49:23 -Generating unique operation named: removeUsingPOST_6
2019-03-17 16:49:23 -Generating unique operation named: removeUsingPOST_7
2019-03-17 16:49:23 -Generating unique operation named: saveUsingPOST_3
2019-03-17 16:49:23 -Generating unique operation named: updateUsingGET_3
2019-03-17 16:49:23 -Generating unique operation named: updateUsingHEAD_3
2019-03-17 16:49:23 -Generating unique operation named: updateUsingPOST_3
2019-03-17 16:49:23 -Generating unique operation named: updateUsingPUT_3
2019-03-17 16:49:23 -Generating unique operation named: updateUsingPATCH_3
2019-03-17 16:49:23 -Generating unique operation named: updateUsingDELETE_3
2019-03-17 16:49:23 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-17 16:49:23 -Generating unique operation named: updateUsingTRACE_3
2019-03-17 16:49:23 -Generating unique operation named: addUsingGET_4
2019-03-17 16:49:23 -Generating unique operation named: editUsingGET_4
2019-03-17 16:49:23 -Generating unique operation named: listUsingGET_4
2019-03-17 16:49:23 -Generating unique operation named: removeUsingPOST_8
2019-03-17 16:49:23 -Generating unique operation named: removeUsingPOST_9
2019-03-17 16:49:23 -Generating unique operation named: saveUsingPOST_4
2019-03-17 16:49:23 -Generating unique operation named: updateUsingGET_4
2019-03-17 16:49:23 -Generating unique operation named: updateUsingHEAD_4
2019-03-17 16:49:23 -Generating unique operation named: updateUsingPOST_4
2019-03-17 16:49:23 -Generating unique operation named: updateUsingPUT_4
2019-03-17 16:49:23 -Generating unique operation named: updateUsingPATCH_4
2019-03-17 16:49:23 -Generating unique operation named: updateUsingDELETE_4
2019-03-17 16:49:23 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-17 16:49:23 -Generating unique operation named: updateUsingTRACE_4
2019-03-17 16:49:23 -Generating unique operation named: ElecUsingGET_1
2019-03-17 16:49:23 -Generating unique operation named: addUsingGET_5
2019-03-17 16:49:23 -Generating unique operation named: editUsingGET_5
2019-03-17 16:49:23 -Generating unique operation named: listUsingGET_5
2019-03-17 16:49:23 -Generating unique operation named: removeUsingPOST_10
2019-03-17 16:49:23 -Generating unique operation named: removeUsingPOST_11
2019-03-17 16:49:23 -Generating unique operation named: saveUsingPOST_5
2019-03-17 16:49:23 -Generating unique operation named: updateUsingGET_5
2019-03-17 16:49:23 -Generating unique operation named: updateUsingHEAD_5
2019-03-17 16:49:23 -Generating unique operation named: updateUsingPOST_5
2019-03-17 16:49:23 -Generating unique operation named: updateUsingPUT_5
2019-03-17 16:49:23 -Generating unique operation named: updateUsingPATCH_5
2019-03-17 16:49:23 -Generating unique operation named: updateUsingDELETE_5
2019-03-17 16:49:23 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-17 16:49:23 -Generating unique operation named: updateUsingTRACE_5
2019-03-17 16:49:23 -Generating unique operation named: editUsingGET_6
2019-03-17 16:49:23 -Generating unique operation named: listUsingGET_6
2019-03-17 16:49:23 -Generating unique operation named: updateUsingPOST_6
2019-03-17 16:49:23 -Generating unique operation named: addUsingGET_6
2019-03-17 16:49:23 -Generating unique operation named: editUsingGET_7
2019-03-17 16:49:23 -Generating unique operation named: listUsingGET_7
2019-03-17 16:49:23 -Generating unique operation named: removeUsingPOST_12
2019-03-17 16:49:24 -Generating unique operation named: removeUsingPOST_13
2019-03-17 16:49:24 -Generating unique operation named: saveUsingPOST_6
2019-03-17 16:49:24 -Generating unique operation named: updateUsingGET_6
2019-03-17 16:49:24 -Generating unique operation named: updateUsingHEAD_6
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPOST_7
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPUT_6
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPATCH_6
2019-03-17 16:49:24 -Generating unique operation named: updateUsingDELETE_6
2019-03-17 16:49:24 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-17 16:49:24 -Generating unique operation named: updateUsingTRACE_6
2019-03-17 16:49:24 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-17 16:49:24 -Generating unique operation named: addUsingGET_7
2019-03-17 16:49:24 -Generating unique operation named: editUsingGET_8
2019-03-17 16:49:24 -Generating unique operation named: listUsingGET_8
2019-03-17 16:49:24 -Generating unique operation named: removeUsingPOST_14
2019-03-17 16:49:24 -Generating unique operation named: removeUsingPOST_15
2019-03-17 16:49:24 -Generating unique operation named: saveUsingPOST_7
2019-03-17 16:49:24 -Generating unique operation named: updateUsingGET_7
2019-03-17 16:49:24 -Generating unique operation named: updateUsingHEAD_7
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPOST_8
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPUT_7
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPATCH_7
2019-03-17 16:49:24 -Generating unique operation named: updateUsingDELETE_7
2019-03-17 16:49:24 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-17 16:49:24 -Generating unique operation named: updateUsingTRACE_7
2019-03-17 16:49:24 -Generating unique operation named: addUsingGET_8
2019-03-17 16:49:24 -Generating unique operation named: editUsingGET_9
2019-03-17 16:49:24 -Generating unique operation named: listUsingGET_9
2019-03-17 16:49:24 -Generating unique operation named: removeUsingPOST_16
2019-03-17 16:49:24 -Generating unique operation named: removeUsingPOST_17
2019-03-17 16:49:24 -Generating unique operation named: saveUsingPOST_8
2019-03-17 16:49:24 -Generating unique operation named: updateUsingGET_8
2019-03-17 16:49:24 -Generating unique operation named: updateUsingHEAD_8
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPOST_9
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPUT_8
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPATCH_8
2019-03-17 16:49:24 -Generating unique operation named: updateUsingDELETE_8
2019-03-17 16:49:24 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-17 16:49:24 -Generating unique operation named: updateUsingTRACE_8
2019-03-17 16:49:24 -Generating unique operation named: addUsingGET_9
2019-03-17 16:49:24 -Generating unique operation named: editUsingGET_10
2019-03-17 16:49:24 -Generating unique operation named: infoUsingGET_1
2019-03-17 16:49:24 -Generating unique operation named: infoUsingHEAD_1
2019-03-17 16:49:24 -Generating unique operation named: infoUsingPOST_1
2019-03-17 16:49:24 -Generating unique operation named: infoUsingPUT_1
2019-03-17 16:49:24 -Generating unique operation named: infoUsingPATCH_1
2019-03-17 16:49:24 -Generating unique operation named: infoUsingDELETE_1
2019-03-17 16:49:24 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-17 16:49:24 -Generating unique operation named: infoUsingTRACE_1
2019-03-17 16:49:24 -Generating unique operation named: listUsingGET_10
2019-03-17 16:49:24 -Generating unique operation named: removeUsingPOST_18
2019-03-17 16:49:24 -Generating unique operation named: removeUsingPOST_19
2019-03-17 16:49:24 -Generating unique operation named: saveUsingPOST_9
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPOST_10
2019-03-17 16:49:24 -Generating unique operation named: listUsingGET_11
2019-03-17 16:49:24 -Generating unique operation named: removeUsingPOST_20
2019-03-17 16:49:24 -Generating unique operation named: welcomeUsingGET_1
2019-03-17 16:49:24 -Generating unique operation named: addUsingGET_10
2019-03-17 16:49:24 -Generating unique operation named: editUsingGET_11
2019-03-17 16:49:24 -Generating unique operation named: listUsingGET_12
2019-03-17 16:49:24 -Generating unique operation named: removeUsingPOST_21
2019-03-17 16:49:24 -Generating unique operation named: saveUsingPOST_10
2019-03-17 16:49:24 -Generating unique operation named: treeUsingGET_1
2019-03-17 16:49:24 -Generating unique operation named: treeUsingGET_2
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPOST_11
2019-03-17 16:49:24 -Generating unique operation named: addUsingGET_11
2019-03-17 16:49:24 -Generating unique operation named: editUsingGET_12
2019-03-17 16:49:24 -Generating unique operation named: listUsingGET_13
2019-03-17 16:49:24 -Generating unique operation named: removeUsingPOST_22
2019-03-17 16:49:24 -Generating unique operation named: removeUsingPOST_23
2019-03-17 16:49:24 -Generating unique operation named: saveUsingPOST_11
2019-03-17 16:49:24 -Generating unique operation named: updateUsingGET_9
2019-03-17 16:49:24 -Generating unique operation named: updateUsingHEAD_9
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPOST_12
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPUT_9
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPATCH_9
2019-03-17 16:49:24 -Generating unique operation named: updateUsingDELETE_9
2019-03-17 16:49:24 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-17 16:49:24 -Generating unique operation named: updateUsingTRACE_9
2019-03-17 16:49:24 -Generating unique operation named: addUsingGET_12
2019-03-17 16:49:24 -Generating unique operation named: editUsingGET_13
2019-03-17 16:49:24 -Generating unique operation named: listUsingGET_14
2019-03-17 16:49:24 -Generating unique operation named: removeUsingPOST_24
2019-03-17 16:49:24 -Generating unique operation named: removeUsingPOST_25
2019-03-17 16:49:24 -Generating unique operation named: saveUsingPOST_12
2019-03-17 16:49:24 -Generating unique operation named: updateUsingGET_10
2019-03-17 16:49:24 -Generating unique operation named: updateUsingHEAD_10
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPOST_13
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPUT_10
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPATCH_10
2019-03-17 16:49:24 -Generating unique operation named: updateUsingDELETE_10
2019-03-17 16:49:24 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-17 16:49:24 -Generating unique operation named: updateUsingTRACE_10
2019-03-17 16:49:24 -Generating unique operation named: addUsingGET_13
2019-03-17 16:49:24 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-17 16:49:24 -Generating unique operation named: editUsingGET_14
2019-03-17 16:49:24 -Generating unique operation named: listUsingGET_15
2019-03-17 16:49:24 -Generating unique operation named: saveUsingPOST_13
2019-03-17 16:49:24 -Generating unique operation named: saveUsingPOST_14
2019-03-17 16:49:24 -Generating unique operation named: updateUsingPOST_14
2019-03-17 16:49:24 -Generating unique operation named: listUsingGET_16
2019-03-17 16:49:24 -Generating unique operation named: listUsingHEAD_1
2019-03-17 16:49:24 -Generating unique operation named: listUsingPOST_1
2019-03-17 16:49:24 -Generating unique operation named: listUsingPUT_1
2019-03-17 16:49:24 -Generating unique operation named: listUsingPATCH_1
2019-03-17 16:49:24 -Generating unique operation named: listUsingDELETE_1
2019-03-17 16:49:24 -Generating unique operation named: listUsingOPTIONS_1
2019-03-17 16:49:24 -Generating unique operation named: listUsingTRACE_1
2019-03-17 16:49:24 -Generating unique operation named: addUsingGET_14
2019-03-17 16:49:24 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-17 16:49:24 -Generating unique operation named: editUsingGET_15
2019-03-17 16:49:24 -Generating unique operation named: listUsingGET_17
2019-03-17 16:49:25 -Generating unique operation named: removeUsingPOST_26
2019-03-17 16:49:25 -Generating unique operation named: saveUsingPOST_15
2019-03-17 16:49:25 -Generating unique operation named: treeUsingGET_3
2019-03-17 16:49:25 -Generating unique operation named: treeViewUsingGET_1
2019-03-17 16:49:25 -Generating unique operation named: updateUsingPOST_15
2019-03-17 16:49:25 -Generating unique operation named: addUsingGET_15
2019-03-17 16:49:25 -Generating unique operation named: editUsingGET_16
2019-03-17 16:49:25 -Generating unique operation named: listUsingGET_18
2019-03-17 16:49:25 -Generating unique operation named: removeUsingPOST_27
2019-03-17 16:49:25 -Generating unique operation named: removeUsingPOST_28
2019-03-17 16:49:25 -Generating unique operation named: saveUsingPOST_16
2019-03-17 16:49:25 -Generating unique operation named: updateUsingGET_11
2019-03-17 16:49:25 -Generating unique operation named: updateUsingHEAD_11
2019-03-17 16:49:25 -Generating unique operation named: updateUsingPOST_16
2019-03-17 16:49:25 -Generating unique operation named: updateUsingPUT_11
2019-03-17 16:49:25 -Generating unique operation named: updateUsingPATCH_11
2019-03-17 16:49:25 -Generating unique operation named: updateUsingDELETE_11
2019-03-17 16:49:25 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-17 16:49:25 -Generating unique operation named: updateUsingTRACE_11
2019-03-17 16:49:25 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-17 16:49:25 -Generating unique operation named: addUsingGET_16
2019-03-17 16:49:25 -Generating unique operation named: editUsingGET_17
2019-03-17 16:49:25 -Generating unique operation named: listUsingGET_19
2019-03-17 16:49:25 -Generating unique operation named: removeUsingPOST_29
2019-03-17 16:49:25 -Generating unique operation named: removeUsingPOST_30
2019-03-17 16:49:25 -Generating unique operation named: saveUsingPOST_17
2019-03-17 16:49:25 -Generating unique operation named: updateUsingGET_12
2019-03-17 16:49:25 -Generating unique operation named: updateUsingHEAD_12
2019-03-17 16:49:25 -Generating unique operation named: updateUsingPOST_17
2019-03-17 16:49:25 -Generating unique operation named: updateUsingPUT_12
2019-03-17 16:49:25 -Generating unique operation named: updateUsingPATCH_12
2019-03-17 16:49:25 -Generating unique operation named: updateUsingDELETE_12
2019-03-17 16:49:25 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-17 16:49:25 -Generating unique operation named: updateUsingTRACE_12
2019-03-17 16:49:25 -Generating unique operation named: addUsingGET_17
2019-03-17 16:49:25 -Generating unique operation named: editUsingGET_18
2019-03-17 16:49:25 -Generating unique operation named: listUsingGET_20
2019-03-17 16:49:25 -Generating unique operation named: removeUsingPOST_31
2019-03-17 16:49:25 -Generating unique operation named: removeUsingPOST_32
2019-03-17 16:49:25 -Generating unique operation named: saveUsingPOST_18
2019-03-17 16:49:25 -Generating unique operation named: updateUsingGET_13
2019-03-17 16:49:25 -Generating unique operation named: updateUsingHEAD_13
2019-03-17 16:49:25 -Generating unique operation named: updateUsingPOST_18
2019-03-17 16:49:25 -Generating unique operation named: updateUsingPUT_13
2019-03-17 16:49:25 -Generating unique operation named: updateUsingPATCH_13
2019-03-17 16:49:25 -Generating unique operation named: updateUsingDELETE_13
2019-03-17 16:49:25 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-17 16:49:25 -Generating unique operation named: updateUsingTRACE_13
2019-03-17 16:49:25 -Starting Quartz Scheduler now
2019-03-17 16:49:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-17 16:49:25 -Starting...
2019-03-17 16:49:25 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-17 16:49:25 -Started.
2019-03-17 16:49:25 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-17 16:49:25 -Using a shared selector for servlet write/read
2019-03-17 16:49:25 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-17 16:49:25 -Started BootdoApplication in 53.851 seconds (JVM running for 56.892)
2019-03-17 16:49:26 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-17 16:49:26 -==> Parameters: 
2019-03-17 16:49:26 -<==      Total: 1
2019-03-17 16:49:47 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-17 16:49:47 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-17 16:49:47 -FrameworkServlet 'dispatcherServlet': initialization completed in 63 ms
2019-03-17 16:49:47 -Enabling session validation scheduler...
2019-03-17 16:49:48 -请求地址 : http://localhost:8081/
2019-03-17 16:49:48 -HTTP METHOD : GET
2019-03-17 16:49:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-17 16:49:48 -参数 : [{}]
2019-03-17 16:49:48 -耗时 : 6
2019-03-17 16:49:48 -返回值 : redirect:/index
2019-03-17 16:49:48 -请求地址 : http://localhost:8081/login;JSESSIONID=9fe571dd-5c55-4a3f-8ca2-769b92f5dfcc
2019-03-17 16:49:48 -HTTP METHOD : GET
2019-03-17 16:49:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 16:49:48 -参数 : [{}]
2019-03-17 16:49:48 -耗时 : 1
2019-03-17 16:49:48 -返回值 : login
2019-03-17 16:49:55 -请求地址 : http://localhost:8081/getVerify
2019-03-17 16:49:55 -HTTP METHOD : GET
2019-03-17 16:49:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-17 16:49:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@23fd5c12, org.apache.shiro.web.servlet.ShiroHttpServletResponse@66ffc609]
2019-03-17 16:50:00 -7851
2019-03-17 16:50:01 -耗时 : 5962
2019-03-17 16:50:01 -返回值 : null
2019-03-17 16:50:16 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-17 16:50:33 -请求地址 : http://localhost:8081/login
2019-03-17 16:50:33 -HTTP METHOD : POST
2019-03-17 16:50:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 16:50:33 -参数 : [admin, 111111, 7851, org.apache.shiro.web.servlet.ShiroHttpServletRequest@614c335e]
2019-03-17 16:50:33 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-17 16:50:34 -==> Parameters: admin(String)
2019-03-17 16:50:34 -<==      Total: 1
2019-03-17 16:50:34 -耗时 : 265
2019-03-17 16:50:34 -返回值 : {msg=操作成功, code=0}
2019-03-17 16:50:34 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-17 16:50:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 16:50:34 -==> Parameters: 1(Long), admin(String), 登录(String), 266(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 16:50:34.167(Timestamp)
2019-03-17 16:50:34 -<==    Updates: 1
2019-03-17 16:50:34 -请求地址 : http://localhost:8081/index
2019-03-17 16:50:34 -HTTP METHOD : GET
2019-03-17 16:50:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 16:50:34 -参数 : [{}]
2019-03-17 16:50:34 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 16:50:35 -==> Parameters: 1(Long)
2019-03-17 16:50:35 -<==      Total: 45
2019-03-17 16:50:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 16:50:35 -==> Parameters: 138(Long)
2019-03-17 16:50:35 -<==      Total: 1
2019-03-17 16:50:35 -耗时 : 540
2019-03-17 16:50:35 -返回值 : index_v1
2019-03-17 16:50:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 16:50:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 540(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 16:50:35.229(Timestamp)
2019-03-17 16:50:35 -<==    Updates: 1
2019-03-17 16:50:35 -请求地址 : http://localhost:8081/main
2019-03-17 16:50:35 -HTTP METHOD : GET
2019-03-17 16:50:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 16:50:35 -参数 : []
2019-03-17 16:50:35 -耗时 : 1
2019-03-17 16:50:35 -返回值 : main
2019-03-17 16:50:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 16:50:37 -HTTP METHOD : GET
2019-03-17 16:50:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 16:50:37 -参数 : []
2019-03-17 16:50:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 16:50:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 16:50:37 -<==      Total: 0
2019-03-17 16:50:37 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 16:50:37 -==> Parameters: 1(Long), 0(String)
2019-03-17 16:50:37 -<==      Total: 1
2019-03-17 16:50:37 -耗时 : 77
2019-03-17 16:50:37 -返回值 : com.bootdo.common.utils.PageUtils@159d554c
2019-03-17 16:50:37 -请求地址 : http://localhost:8081/main
2019-03-17 16:50:37 -HTTP METHOD : GET
2019-03-17 16:50:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 16:50:37 -参数 : []
2019-03-17 16:50:37 -耗时 : 2
2019-03-17 16:50:37 -返回值 : main
2019-03-17 16:50:50 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 16:50:50 -==> Parameters: 1(Long)
2019-03-17 16:50:50 -<==      Total: 86
2019-03-17 16:50:50 -请求地址 : http://localhost:8081/elec/elec
2019-03-17 16:50:50 -HTTP METHOD : GET
2019-03-17 16:50:50 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-17 16:50:50 -参数 : []
2019-03-17 16:50:50 -耗时 : 1
2019-03-17 16:50:50 -返回值 : elec/elec/elec
2019-03-17 16:50:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 16:50:51 -HTTP METHOD : GET
2019-03-17 16:50:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 16:50:51 -参数 : [userType]
2019-03-17 16:50:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 16:50:51 -==> Parameters: userType(String)
2019-03-17 16:50:51 -<==      Total: 2
2019-03-17 16:50:51 -耗时 : 35
2019-03-17 16:50:51 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 16:50:52 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 16:50:52 -HTTP METHOD : GET
2019-03-17 16:50:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 16:50:52 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@2a969b25]
2019-03-17 16:50:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-17 16:50:52 -==> Parameters: 0(Integer), 3(Integer)
2019-03-17 16:50:52 -<==      Total: 3
2019-03-17 16:50:52 -==>  Preparing: select count(*) from elec 
2019-03-17 16:50:52 -==> Parameters: 
2019-03-17 16:50:52 -<==      Total: 1
2019-03-17 16:50:52 -耗时 : 67
2019-03-17 16:50:52 -返回值 : com.bootdo.common.utils.PageUtils@52891317
2019-03-17 16:51:00 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 16:51:00 -HTTP METHOD : GET
2019-03-17 16:51:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 16:51:00 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-02}, com.bootdo.elec.domain.ElecDO@3012fef4]
2019-03-17 16:51:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 16:51:00 -==> Parameters: 2019-02(String), 0(Integer), 3(Integer)
2019-03-17 16:51:00 -<==      Total: 3
2019-03-17 16:51:00 -==>  Preparing: select count(*) from elec WHERE create_time = ? 
2019-03-17 16:51:00 -==> Parameters: 2019-02(String)
2019-03-17 16:51:00 -<==      Total: 1
2019-03-17 16:51:00 -耗时 : 19
2019-03-17 16:51:00 -返回值 : com.bootdo.common.utils.PageUtils@7d5af827
2019-03-17 16:51:10 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 16:51:10 -HTTP METHOD : GET
2019-03-17 16:51:10 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 16:51:10 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@fcbfe56]
2019-03-17 16:51:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 16:51:10 -==> Parameters: 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:51:10 -<==      Total: 3
2019-03-17 16:51:10 -==>  Preparing: select count(*) from elec WHERE create_time = ? 
2019-03-17 16:51:10 -==> Parameters: 2019-03(String)
2019-03-17 16:51:10 -<==      Total: 1
2019-03-17 16:51:10 -耗时 : 17
2019-03-17 16:51:10 -返回值 : com.bootdo.common.utils.PageUtils@994ca73
2019-03-17 16:51:13 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 16:51:13 -HTTP METHOD : GET
2019-03-17 16:51:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 16:51:13 -参数 : [{limit=3, offset=0, userType=B, userOrg=, userId=, createTime=2019-03, type=B}, com.bootdo.elec.domain.ElecDO@14e8e1ea]
2019-03-17 16:51:13 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 16:51:13 -==> Parameters: B(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:51:13 -<==      Total: 1
2019-03-17 16:51:13 -==>  Preparing: select count(*) from elec WHERE user_type = ? and create_time = ? 
2019-03-17 16:51:13 -==> Parameters: B(String), 2019-03(String)
2019-03-17 16:51:13 -<==      Total: 1
2019-03-17 16:51:13 -耗时 : 27
2019-03-17 16:51:13 -返回值 : com.bootdo.common.utils.PageUtils@1d669527
2019-03-17 16:51:16 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 16:51:16 -HTTP METHOD : GET
2019-03-17 16:51:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 16:51:16 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@18ab908f]
2019-03-17 16:51:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 16:51:16 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:51:16 -<==      Total: 3
2019-03-17 16:51:16 -==>  Preparing: select count(*) from elec WHERE user_type = ? and create_time = ? 
2019-03-17 16:51:16 -==> Parameters: A(String), 2019-03(String)
2019-03-17 16:51:16 -<==      Total: 1
2019-03-17 16:51:16 -耗时 : 22
2019-03-17 16:51:16 -返回值 : com.bootdo.common.utils.PageUtils@6ff5b2c7
2019-03-17 16:51:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 16:51:17 -HTTP METHOD : GET
2019-03-17 16:51:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 16:51:17 -参数 : []
2019-03-17 16:51:17 -耗时 : 3
2019-03-17 16:51:17 -返回值 : system/dept/deptTree
2019-03-17 16:51:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 16:51:17 -HTTP METHOD : GET
2019-03-17 16:51:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 16:51:17 -参数 : []
2019-03-17 16:51:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 16:51:17 -==> Parameters: 
2019-03-17 16:51:17 -<==      Total: 3
2019-03-17 16:51:17 -耗时 : 21
2019-03-17 16:51:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 16:51:21 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 16:51:21 -HTTP METHOD : GET
2019-03-17 16:51:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 16:51:21 -参数 : []
2019-03-17 16:51:21 -耗时 : 1
2019-03-17 16:51:21 -返回值 : system/dept/deptTree
2019-03-17 16:51:21 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 16:51:21 -HTTP METHOD : GET
2019-03-17 16:51:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 16:51:21 -参数 : []
2019-03-17 16:51:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 16:51:21 -==> Parameters: 
2019-03-17 16:51:21 -<==      Total: 3
2019-03-17 16:51:21 -耗时 : 4
2019-03-17 16:51:21 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 16:51:23 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 16:51:23 -HTTP METHOD : GET
2019-03-17 16:51:23 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 16:51:23 -参数 : [{limit=3, offset=0, userType=A, userOrg=3, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@2f060897]
2019-03-17 16:51:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 16:51:23 -==> Parameters: A(String), 3(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:51:23 -<==      Total: 0
2019-03-17 16:51:23 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-17 16:51:23 -==> Parameters: A(String), 3(String), 2019-03(String)
2019-03-17 16:51:23 -<==      Total: 1
2019-03-17 16:51:23 -耗时 : 14
2019-03-17 16:51:23 -返回值 : com.bootdo.common.utils.PageUtils@14591404
2019-03-17 16:51:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 16:51:24 -HTTP METHOD : GET
2019-03-17 16:51:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 16:51:24 -参数 : []
2019-03-17 16:51:24 -耗时 : 0
2019-03-17 16:51:24 -返回值 : system/dept/deptTree
2019-03-17 16:51:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 16:51:24 -HTTP METHOD : GET
2019-03-17 16:51:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 16:51:24 -参数 : []
2019-03-17 16:51:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 16:51:24 -==> Parameters: 
2019-03-17 16:51:24 -<==      Total: 3
2019-03-17 16:51:24 -耗时 : 3
2019-03-17 16:51:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 16:51:26 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 16:51:26 -HTTP METHOD : GET
2019-03-17 16:51:26 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 16:51:26 -参数 : [{limit=3, offset=0, userType=A, userOrg=3, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@39e4a04e]
2019-03-17 16:51:26 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 16:51:26 -==> Parameters: A(String), 3(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:51:26 -<==      Total: 0
2019-03-17 16:51:26 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-17 16:51:26 -==> Parameters: A(String), 3(String), 2019-03(String)
2019-03-17 16:51:26 -<==      Total: 1
2019-03-17 16:51:26 -耗时 : 10
2019-03-17 16:51:26 -返回值 : com.bootdo.common.utils.PageUtils@165c3420
2019-03-17 16:51:28 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 16:51:28 -HTTP METHOD : GET
2019-03-17 16:51:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 16:51:28 -参数 : [{limit=3, offset=0, userType=A, userOrg=3, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@67b415a0]
2019-03-17 16:51:28 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 16:51:28 -==> Parameters: A(String), 3(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:51:28 -<==      Total: 0
2019-03-17 16:51:28 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-17 16:51:28 -==> Parameters: A(String), 3(String), 2019-03(String)
2019-03-17 16:51:28 -<==      Total: 1
2019-03-17 16:51:28 -耗时 : 10
2019-03-17 16:51:28 -返回值 : com.bootdo.common.utils.PageUtils@14accb5b
2019-03-17 16:51:29 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 16:51:29 -HTTP METHOD : GET
2019-03-17 16:51:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 16:51:29 -参数 : []
2019-03-17 16:51:29 -耗时 : 1
2019-03-17 16:51:29 -返回值 : system/dept/deptTree
2019-03-17 16:51:29 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 16:51:29 -HTTP METHOD : GET
2019-03-17 16:51:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 16:51:29 -参数 : []
2019-03-17 16:51:29 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 16:51:29 -==> Parameters: 
2019-03-17 16:51:29 -<==      Total: 3
2019-03-17 16:51:29 -耗时 : 4
2019-03-17 16:51:29 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 16:51:31 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 16:51:31 -HTTP METHOD : GET
2019-03-17 16:51:31 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 16:51:31 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@71d869c2]
2019-03-17 16:51:31 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 16:51:31 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:51:31 -<==      Total: 3
2019-03-17 16:51:31 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-17 16:51:31 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-17 16:51:31 -<==      Total: 1
2019-03-17 16:51:31 -耗时 : 25
2019-03-17 16:51:31 -返回值 : com.bootdo.common.utils.PageUtils@38b72e6
2019-03-17 16:51:36 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 16:51:36 -HTTP METHOD : GET
2019-03-17 16:51:36 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 16:51:36 -参数 : [{limit=3, offset=0, userType=B, userOrg=2, userId=, createTime=2019-03, type=B}, com.bootdo.elec.domain.ElecDO@7ec02462]
2019-03-17 16:51:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 16:51:36 -==> Parameters: B(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:51:36 -<==      Total: 0
2019-03-17 16:51:36 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-17 16:51:36 -==> Parameters: B(String), 2(String), 2019-03(String)
2019-03-17 16:51:36 -<==      Total: 1
2019-03-17 16:51:36 -耗时 : 23
2019-03-17 16:51:36 -返回值 : com.bootdo.common.utils.PageUtils@48895ee5
2019-03-17 16:51:39 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 16:51:39 -HTTP METHOD : GET
2019-03-17 16:51:39 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 16:51:39 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03, type=A}, com.bootdo.elec.domain.ElecDO@630ea532]
2019-03-17 16:51:39 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 16:51:39 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:51:39 -<==      Total: 3
2019-03-17 16:51:39 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-17 16:51:39 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-17 16:51:39 -<==      Total: 1
2019-03-17 16:51:39 -耗时 : 30
2019-03-17 16:51:39 -返回值 : com.bootdo.common.utils.PageUtils@15055e61
2019-03-17 16:51:41 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 16:51:41 -HTTP METHOD : GET
2019-03-17 16:51:41 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 16:51:41 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@16edd2df]
2019-03-17 16:51:41 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 16:51:41 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:51:41 -<==      Total: 3
2019-03-17 16:51:41 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-17 16:51:41 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-17 16:51:41 -<==      Total: 1
2019-03-17 16:51:41 -耗时 : 10
2019-03-17 16:51:41 -返回值 : com.bootdo.common.utils.PageUtils@1341d955
2019-03-17 16:51:42 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 16:51:42 -HTTP METHOD : GET
2019-03-17 16:51:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 16:51:42 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@5372c57b]
2019-03-17 16:51:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 16:51:42 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:51:42 -<==      Total: 3
2019-03-17 16:51:42 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-17 16:51:42 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-17 16:51:42 -<==      Total: 1
2019-03-17 16:51:42 -耗时 : 9
2019-03-17 16:51:42 -返回值 : com.bootdo.common.utils.PageUtils@417823d3
2019-03-17 16:51:42 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 16:51:42 -HTTP METHOD : GET
2019-03-17 16:51:42 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 16:51:42 -参数 : [{limit=3, offset=0, userType=A, userOrg=2, userId=, createTime=2019-03}, com.bootdo.elec.domain.ElecDO@30c738f]
2019-03-17 16:51:42 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 16:51:42 -==> Parameters: A(String), 2(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:51:42 -<==      Total: 3
2019-03-17 16:51:42 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-17 16:51:42 -==> Parameters: A(String), 2(String), 2019-03(String)
2019-03-17 16:51:42 -<==      Total: 1
2019-03-17 16:51:42 -耗时 : 9
2019-03-17 16:51:42 -返回值 : com.bootdo.common.utils.PageUtils@53aaabc5
2019-03-17 16:51:52 -请求地址 : http://localhost:8081/water/water
2019-03-17 16:51:52 -HTTP METHOD : GET
2019-03-17 16:51:52 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-03-17 16:51:52 -参数 : []
2019-03-17 16:51:52 -耗时 : 1
2019-03-17 16:51:52 -返回值 : water/water/water
2019-03-17 16:51:52 -请求地址 : http://localhost:8081/water/water/list
2019-03-17 16:51:52 -HTTP METHOD : GET
2019-03-17 16:51:52 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-17 16:51:52 -参数 : [{limit=10, offset=0}]
2019-03-17 16:51:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id desc limit ?, ? 
2019-03-17 16:51:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-17 16:51:52 -<==      Total: 2
2019-03-17 16:51:52 -==>  Preparing: select count(*) from water 
2019-03-17 16:51:52 -==> Parameters: 
2019-03-17 16:51:52 -<==      Total: 1
2019-03-17 16:51:52 -耗时 : 31
2019-03-17 16:51:52 -返回值 : com.bootdo.common.utils.PageUtils@422155df
2019-03-17 16:53:48 -请求地址 : http://localhost:8081/index
2019-03-17 16:53:48 -HTTP METHOD : GET
2019-03-17 16:53:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 16:53:48 -参数 : [{}]
2019-03-17 16:53:48 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 16:53:48 -==> Parameters: 1(Long)
2019-03-17 16:53:48 -<==      Total: 45
2019-03-17 16:53:48 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 16:53:48 -==> Parameters: 138(Long)
2019-03-17 16:53:48 -<==      Total: 1
2019-03-17 16:53:48 -耗时 : 27
2019-03-17 16:53:48 -返回值 : index_v1
2019-03-17 16:53:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 16:53:48 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 16:53:48.534(Timestamp)
2019-03-17 16:53:48 -<==    Updates: 1
2019-03-17 16:53:48 -请求地址 : http://localhost:8081/main
2019-03-17 16:53:48 -HTTP METHOD : GET
2019-03-17 16:53:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 16:53:48 -参数 : []
2019-03-17 16:53:48 -耗时 : 1
2019-03-17 16:53:48 -返回值 : main
2019-03-17 16:53:49 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 16:53:49 -HTTP METHOD : GET
2019-03-17 16:53:49 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 16:53:49 -参数 : []
2019-03-17 16:53:49 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 16:53:49 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 16:53:49 -<==      Total: 0
2019-03-17 16:53:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 16:53:49 -==> Parameters: 1(Long), 0(String)
2019-03-17 16:53:49 -<==      Total: 1
2019-03-17 16:53:49 -耗时 : 7
2019-03-17 16:53:49 -返回值 : com.bootdo.common.utils.PageUtils@6330b0cc
2019-03-17 16:53:49 -请求地址 : http://localhost:8081/main
2019-03-17 16:53:49 -HTTP METHOD : GET
2019-03-17 16:53:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 16:53:49 -参数 : []
2019-03-17 16:53:49 -耗时 : 1
2019-03-17 16:53:49 -返回值 : main
2019-03-17 16:53:51 -请求地址 : http://localhost:8081/water/water
2019-03-17 16:53:51 -HTTP METHOD : GET
2019-03-17 16:53:51 -CLASS_METHOD : com.bootdo.water.controller.WaterController.Water
2019-03-17 16:53:51 -参数 : []
2019-03-17 16:53:51 -耗时 : 0
2019-03-17 16:53:51 -返回值 : water/water/water
2019-03-17 16:53:52 -请求地址 : http://localhost:8081/water/water/list
2019-03-17 16:53:52 -HTTP METHOD : GET
2019-03-17 16:53:52 -CLASS_METHOD : com.bootdo.water.controller.WaterController.list
2019-03-17 16:53:52 -参数 : [{limit=10, offset=0}]
2019-03-17 16:53:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`water_type`,`water_price`,`water_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from water order by id desc limit ?, ? 
2019-03-17 16:53:52 -==> Parameters: 0(Integer), 10(Integer)
2019-03-17 16:53:52 -<==      Total: 2
2019-03-17 16:53:52 -==>  Preparing: select count(*) from water 
2019-03-17 16:53:52 -==> Parameters: 
2019-03-17 16:53:52 -<==      Total: 1
2019-03-17 16:53:52 -耗时 : 6
2019-03-17 16:53:52 -返回值 : com.bootdo.common.utils.PageUtils@6eff16f9
2019-03-17 16:54:24 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:23)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:26)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
2019-03-17 16:56:59 -请求地址 : http://localhost:8081/heat/heat
2019-03-17 16:56:59 -HTTP METHOD : GET
2019-03-17 16:56:59 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-03-17 16:56:59 -参数 : []
2019-03-17 16:56:59 -耗时 : 0
2019-03-17 16:56:59 -返回值 : heat/heat/heat
2019-03-17 16:56:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 16:56:59 -HTTP METHOD : GET
2019-03-17 16:56:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 16:56:59 -参数 : [userType]
2019-03-17 16:56:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 16:56:59 -==> Parameters: userType(String)
2019-03-17 16:56:59 -<==      Total: 2
2019-03-17 16:56:59 -耗时 : 7
2019-03-17 16:56:59 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 16:56:59 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-17 16:56:59 -HTTP METHOD : GET
2019-03-17 16:56:59 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-17 16:56:59 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}]
2019-03-17 16:56:59 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-03-17 16:56:59 -==> Parameters: 0(Integer), 3(Integer)
2019-03-17 16:56:59 -<==      Total: 3
2019-03-17 16:56:59 -==>  Preparing: select count(*) from heat 
2019-03-17 16:56:59 -==> Parameters: 
2019-03-17 16:56:59 -<==      Total: 1
2019-03-17 16:56:59 -耗时 : 32
2019-03-17 16:56:59 -返回值 : com.bootdo.common.utils.PageUtils@6f6d58eb
2019-03-17 16:57:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 16:57:00 -HTTP METHOD : GET
2019-03-17 16:57:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 16:57:00 -参数 : []
2019-03-17 16:57:00 -耗时 : 0
2019-03-17 16:57:00 -返回值 : system/dept/deptTree
2019-03-17 16:57:00 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 16:57:00 -HTTP METHOD : GET
2019-03-17 16:57:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 16:57:00 -参数 : []
2019-03-17 16:57:00 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 16:57:00 -==> Parameters: 
2019-03-17 16:57:00 -<==      Total: 3
2019-03-17 16:57:00 -耗时 : 4
2019-03-17 16:57:00 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 16:57:07 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-17 16:57:07 -HTTP METHOD : GET
2019-03-17 16:57:07 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-17 16:57:07 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03}]
2019-03-17 16:57:07 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE create_time = ? order by id asc limit ?, ? 
2019-03-17 16:57:07 -==> Parameters: 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:57:07 -<==      Total: 3
2019-03-17 16:57:07 -==>  Preparing: select count(*) from heat WHERE create_time = ? 
2019-03-17 16:57:07 -==> Parameters: 2019-03(String)
2019-03-17 16:57:07 -<==      Total: 1
2019-03-17 16:57:07 -耗时 : 10
2019-03-17 16:57:07 -返回值 : com.bootdo.common.utils.PageUtils@3a60fbf1
2019-03-17 16:57:10 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-17 16:57:10 -HTTP METHOD : GET
2019-03-17 16:57:10 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-17 16:57:10 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=2019-03}]
2019-03-17 16:57:10 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE create_time = ? order by id asc limit ?, ? 
2019-03-17 16:57:10 -==> Parameters: 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:57:10 -<==      Total: 3
2019-03-17 16:57:10 -==>  Preparing: select count(*) from heat WHERE create_time = ? 
2019-03-17 16:57:10 -==> Parameters: 2019-03(String)
2019-03-17 16:57:10 -<==      Total: 1
2019-03-17 16:57:10 -耗时 : 8
2019-03-17 16:57:10 -返回值 : com.bootdo.common.utils.PageUtils@61a2850f
2019-03-17 16:57:14 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-17 16:57:14 -HTTP METHOD : GET
2019-03-17 16:57:14 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-17 16:57:14 -参数 : [{limit=3, offset=0, userType=A, userOrg=, userId=, createTime=2019-03}]
2019-03-17 16:57:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and create_time = ? order by id asc limit ?, ? 
2019-03-17 16:57:14 -==> Parameters: A(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:57:14 -<==      Total: 3
2019-03-17 16:57:14 -==>  Preparing: select count(*) from heat WHERE user_type = ? and create_time = ? 
2019-03-17 16:57:14 -==> Parameters: A(String), 2019-03(String)
2019-03-17 16:57:14 -<==      Total: 1
2019-03-17 16:57:14 -耗时 : 28
2019-03-17 16:57:14 -返回值 : com.bootdo.common.utils.PageUtils@5fef09d
2019-03-17 16:57:16 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-17 16:57:16 -HTTP METHOD : GET
2019-03-17 16:57:16 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-17 16:57:16 -参数 : [{limit=3, offset=0, userType=B, userOrg=, userId=, createTime=2019-03}]
2019-03-17 16:57:16 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and create_time = ? order by id asc limit ?, ? 
2019-03-17 16:57:16 -==> Parameters: B(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:57:16 -<==      Total: 3
2019-03-17 16:57:16 -==>  Preparing: select count(*) from heat WHERE user_type = ? and create_time = ? 
2019-03-17 16:57:16 -==> Parameters: B(String), 2019-03(String)
2019-03-17 16:57:16 -<==      Total: 1
2019-03-17 16:57:16 -耗时 : 18
2019-03-17 16:57:16 -返回值 : com.bootdo.common.utils.PageUtils@506352aa
2019-03-17 16:57:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 16:57:17 -HTTP METHOD : GET
2019-03-17 16:57:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 16:57:17 -参数 : []
2019-03-17 16:57:17 -耗时 : 1
2019-03-17 16:57:17 -返回值 : system/dept/deptTree
2019-03-17 16:57:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 16:57:17 -HTTP METHOD : GET
2019-03-17 16:57:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 16:57:17 -参数 : []
2019-03-17 16:57:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 16:57:17 -==> Parameters: 
2019-03-17 16:57:17 -<==      Total: 3
2019-03-17 16:57:17 -耗时 : 8
2019-03-17 16:57:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 16:57:19 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-17 16:57:19 -HTTP METHOD : GET
2019-03-17 16:57:19 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-17 16:57:19 -参数 : [{limit=3, offset=0, userType=B, userOrg=3, userId=, createTime=2019-03}]
2019-03-17 16:57:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and user_org = ? and create_time = ? order by id asc limit ?, ? 
2019-03-17 16:57:19 -==> Parameters: B(String), 3(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:57:19 -<==      Total: 3
2019-03-17 16:57:19 -==>  Preparing: select count(*) from heat WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-17 16:57:19 -==> Parameters: B(String), 3(String), 2019-03(String)
2019-03-17 16:57:19 -<==      Total: 1
2019-03-17 16:57:19 -耗时 : 30
2019-03-17 16:57:19 -返回值 : com.bootdo.common.utils.PageUtils@225d625a
2019-03-17 16:57:19 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-17 16:57:19 -HTTP METHOD : GET
2019-03-17 16:57:19 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-17 16:57:19 -参数 : [{limit=3, offset=0, userType=B, userOrg=3, userId=, createTime=2019-03}]
2019-03-17 16:57:19 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and user_org = ? and create_time = ? order by id asc limit ?, ? 
2019-03-17 16:57:19 -==> Parameters: B(String), 3(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:57:19 -<==      Total: 3
2019-03-17 16:57:19 -==>  Preparing: select count(*) from heat WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-17 16:57:19 -==> Parameters: B(String), 3(String), 2019-03(String)
2019-03-17 16:57:19 -<==      Total: 1
2019-03-17 16:57:19 -耗时 : 9
2019-03-17 16:57:19 -返回值 : com.bootdo.common.utils.PageUtils@6e3e6844
2019-03-17 16:57:20 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-17 16:57:20 -HTTP METHOD : GET
2019-03-17 16:57:20 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-17 16:57:20 -参数 : [{limit=3, offset=0, userType=B, userOrg=3, userId=, createTime=2019-03}]
2019-03-17 16:57:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and user_org = ? and create_time = ? order by id asc limit ?, ? 
2019-03-17 16:57:20 -==> Parameters: B(String), 3(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:57:20 -<==      Total: 3
2019-03-17 16:57:20 -==>  Preparing: select count(*) from heat WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-17 16:57:20 -==> Parameters: B(String), 3(String), 2019-03(String)
2019-03-17 16:57:20 -<==      Total: 1
2019-03-17 16:57:20 -耗时 : 9
2019-03-17 16:57:20 -返回值 : com.bootdo.common.utils.PageUtils@373b7796
2019-03-17 16:57:20 -请求地址 : http://localhost:8081/heat/heat/list
2019-03-17 16:57:20 -HTTP METHOD : GET
2019-03-17 16:57:20 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-03-17 16:57:20 -参数 : [{limit=3, offset=0, userType=B, userOrg=3, userId=, createTime=2019-03}]
2019-03-17 16:57:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat WHERE user_type = ? and user_org = ? and create_time = ? order by id asc limit ?, ? 
2019-03-17 16:57:20 -==> Parameters: B(String), 3(String), 2019-03(String), 0(Integer), 3(Integer)
2019-03-17 16:57:20 -<==      Total: 3
2019-03-17 16:57:20 -==>  Preparing: select count(*) from heat WHERE user_type = ? and user_org = ? and create_time = ? 
2019-03-17 16:57:20 -==> Parameters: B(String), 3(String), 2019-03(String)
2019-03-17 16:57:20 -<==      Total: 1
2019-03-17 16:57:20 -耗时 : 7
2019-03-17 16:57:20 -返回值 : com.bootdo.common.utils.PageUtils@5968d2f6
2019-03-17 17:20:16 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 429]
2019-03-17 17:49:47 -Validating all active sessions...
2019-03-17 17:49:47 -Finished session validation.  [1] sessions were stopped.
2019-03-17 17:50:16 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 862]
2019-03-17 18:20:16 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1278]
2019-03-17 18:50:16 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 3 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 24], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1710]
2019-03-17 18:51:47 -Starting BootdoApplication on ZJZL-20180906VX with PID 9680 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-17 18:51:47 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-17 18:51:47 -The following profiles are active: dev
2019-03-17 18:51:47 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62f4ff3b: startup date [Sun Mar 17 18:51:47 CST 2019]; root of context hierarchy
2019-03-17 18:51:51 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-17 18:51:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6bd6da26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 18:51:53 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5e3008cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 18:51:54 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 18:51:54 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 18:51:54 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 18:51:54 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-17 18:51:54 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-17 18:51:54 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 18:51:54 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 18:51:54 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 18:51:54 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 18:51:55 -Tomcat initialized with port(s): 8081 (http)
2019-03-17 18:51:55 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-17 18:51:55 -Starting service [Tomcat]
2019-03-17 18:51:55 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-17 18:51:55 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-17 18:51:56 -Initializing Spring embedded WebApplicationContext
2019-03-17 18:51:56 -Root WebApplicationContext: initialization completed in 8278 ms
2019-03-17 18:51:56 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-17 18:51:56 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-17 18:51:56 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-17 18:51:56 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-17 18:51:56 -Filter xssFilter was not registered (disabled)
2019-03-17 18:51:56 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-17 18:51:56 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-17 18:51:56 -Servlet statViewServlet mapped to [/druid/*]
2019-03-17 18:51:56 -Servlet dispatcherServlet mapped to [/]
2019-03-17 18:51:59 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62f4ff3b: startup date [Sun Mar 17 18:51:47 CST 2019]; root of context hierarchy
2019-03-17 18:51:59 -Using default implementation for ThreadExecutor
2019-03-17 18:51:59 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-17 18:51:59 -Quartz Scheduler v.2.2.1 created.
2019-03-17 18:51:59 -RAMJobStore initialized.
2019-03-17 18:51:59 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-17 18:51:59 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-17 18:51:59 -Quartz scheduler version: 2.2.1
2019-03-17 18:51:59 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@79424f25
2019-03-17 18:52:00 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-17 18:52:00 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-17 18:52:03 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-17 18:52:03 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-17 18:52:03 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-17 18:52:03 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-17 18:52:03 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-17 18:52:03 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-17 18:52:03 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-17 18:52:03 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-17 18:52:03 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-17 18:52:03 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-17 18:52:03 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-17 18:52:03 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-17 18:52:03 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-17 18:52:03 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-17 18:52:03 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-17 18:52:03 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-17 18:52:03 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-17 18:52:03 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-17 18:52:03 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-17 18:52:03 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-17 18:52:03 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 18:52:03 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 18:52:03 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-17 18:52:03 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-17 18:52:03 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-17 18:52:03 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-17 18:52:03 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-17 18:52:03 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-17 18:52:03 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-17 18:52:03 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-17 18:52:03 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-17 18:52:03 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-17 18:52:03 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 18:52:03 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 18:52:03 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-17 18:52:03 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-17 18:52:03 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-17 18:52:03 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-17 18:52:03 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-17 18:52:03 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-17 18:52:03 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-17 18:52:03 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-17 18:52:03 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-17 18:52:03 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-17 18:52:03 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-17 18:52:03 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-17 18:52:03 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 18:52:03 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 18:52:03 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-17 18:52:03 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-17 18:52:03 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 18:52:03 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-17 18:52:03 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-17 18:52:03 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-17 18:52:03 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-17 18:52:03 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-17 18:52:03 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-17 18:52:03 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-17 18:52:03 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-17 18:52:03 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-17 18:52:03 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-17 18:52:03 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 18:52:03 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 18:52:03 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-17 18:52:03 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 18:52:03 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-17 18:52:03 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-17 18:52:03 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-17 18:52:03 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-17 18:52:03 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-17 18:52:03 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-17 18:52:03 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 18:52:03 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 18:52:03 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-17 18:52:03 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-17 18:52:03 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-17 18:52:03 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 18:52:03 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 18:52:03 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-17 18:52:03 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-17 18:52:03 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-17 18:52:03 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 18:52:03 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 18:52:03 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-17 18:52:03 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-17 18:52:03 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-17 18:52:03 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-17 18:52:03 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-17 18:52:03 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-17 18:52:03 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-17 18:52:03 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-17 18:52:03 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-17 18:52:03 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-17 18:52:03 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-17 18:52:03 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-17 18:52:03 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-17 18:52:03 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-17 18:52:03 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-17 18:52:03 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-17 18:52:03 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-17 18:52:03 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-17 18:52:03 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-17 18:52:03 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-17 18:52:03 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-17 18:52:03 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 18:52:03 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 18:52:03 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-17 18:52:03 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-17 18:52:03 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-17 18:52:03 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-17 18:52:03 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-17 18:52:03 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-17 18:52:03 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-17 18:52:03 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-17 18:52:03 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-17 18:52:03 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-17 18:52:03 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-17 18:52:03 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-17 18:52:03 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-17 18:52:03 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-17 18:52:03 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-17 18:52:03 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-17 18:52:03 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-17 18:52:03 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-17 18:52:03 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-17 18:52:03 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 18:52:03 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 18:52:03 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-17 18:52:03 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 18:52:03 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-17 18:52:03 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-17 18:52:03 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-17 18:52:03 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-17 18:52:03 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-17 18:52:03 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-17 18:52:03 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-17 18:52:03 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-17 18:52:03 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-17 18:52:03 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-17 18:52:03 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-17 18:52:03 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 18:52:03 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 18:52:03 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-17 18:52:03 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 18:52:03 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 18:52:03 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-17 18:52:03 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 18:52:03 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-17 18:52:03 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-17 18:52:03 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-17 18:52:03 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-17 18:52:03 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-17 18:52:04 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-17 18:52:04 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 18:52:04 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62f4ff3b: startup date [Sun Mar 17 18:51:47 CST 2019]; root of context hierarchy
2019-03-17 18:52:05 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 18:52:05 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 18:52:05 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 18:52:05 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-17 18:52:05 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-17 18:52:07 -Registering beans for JMX exposure on startup
2019-03-17 18:52:07 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-17 18:52:07 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-17 18:52:07 -Starting beans in phase 2147483647
2019-03-17 18:52:07 -Context refreshed
2019-03-17 18:52:07 -Found 1 custom documentation plugin(s)
2019-03-17 18:52:07 -Scanning for api listing references
2019-03-17 18:52:08 -Generating unique operation named: removeUsingPOST_1
2019-03-17 18:52:08 -Generating unique operation named: addUsingGET_1
2019-03-17 18:52:08 -Generating unique operation named: editUsingGET_1
2019-03-17 18:52:08 -Generating unique operation named: listUsingGET_1
2019-03-17 18:52:08 -Generating unique operation named: removeUsingPOST_2
2019-03-17 18:52:08 -Generating unique operation named: removeUsingPOST_3
2019-03-17 18:52:08 -Generating unique operation named: saveUsingPOST_1
2019-03-17 18:52:08 -Generating unique operation named: updateUsingGET_1
2019-03-17 18:52:08 -Generating unique operation named: updateUsingHEAD_1
2019-03-17 18:52:08 -Generating unique operation named: updateUsingPOST_1
2019-03-17 18:52:08 -Generating unique operation named: updateUsingPUT_1
2019-03-17 18:52:08 -Generating unique operation named: updateUsingPATCH_1
2019-03-17 18:52:08 -Generating unique operation named: updateUsingDELETE_1
2019-03-17 18:52:08 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-17 18:52:08 -Generating unique operation named: updateUsingTRACE_1
2019-03-17 18:52:08 -Generating unique operation named: addUsingGET_2
2019-03-17 18:52:08 -Generating unique operation named: editUsingGET_2
2019-03-17 18:52:08 -Generating unique operation named: listUsingGET_2
2019-03-17 18:52:08 -Generating unique operation named: removeUsingPOST_4
2019-03-17 18:52:08 -Generating unique operation named: removeUsingPOST_5
2019-03-17 18:52:08 -Generating unique operation named: saveUsingPOST_2
2019-03-17 18:52:08 -Generating unique operation named: updateUsingGET_2
2019-03-17 18:52:08 -Generating unique operation named: updateUsingHEAD_2
2019-03-17 18:52:08 -Generating unique operation named: updateUsingPOST_2
2019-03-17 18:52:08 -Generating unique operation named: updateUsingPUT_2
2019-03-17 18:52:08 -Generating unique operation named: updateUsingPATCH_2
2019-03-17 18:52:08 -Generating unique operation named: updateUsingDELETE_2
2019-03-17 18:52:08 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-17 18:52:08 -Generating unique operation named: updateUsingTRACE_2
2019-03-17 18:52:08 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-17 18:52:08 -Generating unique operation named: addUsingGET_3
2019-03-17 18:52:08 -Generating unique operation named: editUsingGET_3
2019-03-17 18:52:08 -Generating unique operation named: listUsingGET_3
2019-03-17 18:52:08 -Generating unique operation named: removeUsingPOST_6
2019-03-17 18:52:08 -Generating unique operation named: removeUsingPOST_7
2019-03-17 18:52:08 -Generating unique operation named: saveUsingPOST_3
2019-03-17 18:52:08 -Generating unique operation named: updateUsingGET_3
2019-03-17 18:52:08 -Generating unique operation named: updateUsingHEAD_3
2019-03-17 18:52:08 -Generating unique operation named: updateUsingPOST_3
2019-03-17 18:52:08 -Generating unique operation named: updateUsingPUT_3
2019-03-17 18:52:08 -Generating unique operation named: updateUsingPATCH_3
2019-03-17 18:52:08 -Generating unique operation named: updateUsingDELETE_3
2019-03-17 18:52:08 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-17 18:52:08 -Generating unique operation named: updateUsingTRACE_3
2019-03-17 18:52:08 -Generating unique operation named: addUsingGET_4
2019-03-17 18:52:08 -Generating unique operation named: editUsingGET_4
2019-03-17 18:52:08 -Generating unique operation named: listUsingGET_4
2019-03-17 18:52:08 -Generating unique operation named: removeUsingPOST_8
2019-03-17 18:52:08 -Generating unique operation named: removeUsingPOST_9
2019-03-17 18:52:08 -Generating unique operation named: saveUsingPOST_4
2019-03-17 18:52:08 -Generating unique operation named: updateUsingGET_4
2019-03-17 18:52:08 -Generating unique operation named: updateUsingHEAD_4
2019-03-17 18:52:08 -Generating unique operation named: updateUsingPOST_4
2019-03-17 18:52:08 -Generating unique operation named: updateUsingPUT_4
2019-03-17 18:52:08 -Generating unique operation named: updateUsingPATCH_4
2019-03-17 18:52:08 -Generating unique operation named: updateUsingDELETE_4
2019-03-17 18:52:08 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-17 18:52:08 -Generating unique operation named: updateUsingTRACE_4
2019-03-17 18:52:08 -Generating unique operation named: ElecUsingGET_1
2019-03-17 18:52:08 -Generating unique operation named: addUsingGET_5
2019-03-17 18:52:08 -Generating unique operation named: editUsingGET_5
2019-03-17 18:52:08 -Generating unique operation named: listUsingGET_5
2019-03-17 18:52:08 -Generating unique operation named: removeUsingPOST_10
2019-03-17 18:52:08 -Generating unique operation named: removeUsingPOST_11
2019-03-17 18:52:08 -Generating unique operation named: saveUsingPOST_5
2019-03-17 18:52:08 -Generating unique operation named: updateUsingGET_5
2019-03-17 18:52:08 -Generating unique operation named: updateUsingHEAD_5
2019-03-17 18:52:08 -Generating unique operation named: updateUsingPOST_5
2019-03-17 18:52:08 -Generating unique operation named: updateUsingPUT_5
2019-03-17 18:52:08 -Generating unique operation named: updateUsingPATCH_5
2019-03-17 18:52:08 -Generating unique operation named: updateUsingDELETE_5
2019-03-17 18:52:08 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-17 18:52:08 -Generating unique operation named: updateUsingTRACE_5
2019-03-17 18:52:09 -Generating unique operation named: editUsingGET_6
2019-03-17 18:52:09 -Generating unique operation named: listUsingGET_6
2019-03-17 18:52:09 -Generating unique operation named: updateUsingPOST_6
2019-03-17 18:52:09 -Generating unique operation named: addUsingGET_6
2019-03-17 18:52:09 -Generating unique operation named: editUsingGET_7
2019-03-17 18:52:09 -Generating unique operation named: listUsingGET_7
2019-03-17 18:52:09 -Generating unique operation named: removeUsingPOST_12
2019-03-17 18:52:09 -Generating unique operation named: removeUsingPOST_13
2019-03-17 18:52:09 -Generating unique operation named: saveUsingPOST_6
2019-03-17 18:52:09 -Generating unique operation named: updateUsingGET_6
2019-03-17 18:52:09 -Generating unique operation named: updateUsingHEAD_6
2019-03-17 18:52:09 -Generating unique operation named: updateUsingPOST_7
2019-03-17 18:52:09 -Generating unique operation named: updateUsingPUT_6
2019-03-17 18:52:09 -Generating unique operation named: updateUsingPATCH_6
2019-03-17 18:52:09 -Generating unique operation named: updateUsingDELETE_6
2019-03-17 18:52:09 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-17 18:52:09 -Generating unique operation named: updateUsingTRACE_6
2019-03-17 18:52:09 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-17 18:52:09 -Generating unique operation named: addUsingGET_7
2019-03-17 18:52:09 -Generating unique operation named: editUsingGET_8
2019-03-17 18:52:09 -Generating unique operation named: listUsingGET_8
2019-03-17 18:52:09 -Generating unique operation named: removeUsingPOST_14
2019-03-17 18:52:09 -Generating unique operation named: removeUsingPOST_15
2019-03-17 18:52:09 -Generating unique operation named: saveUsingPOST_7
2019-03-17 18:52:09 -Generating unique operation named: updateUsingGET_7
2019-03-17 18:52:09 -Generating unique operation named: updateUsingHEAD_7
2019-03-17 18:52:09 -Generating unique operation named: updateUsingPOST_8
2019-03-17 18:52:09 -Generating unique operation named: updateUsingPUT_7
2019-03-17 18:52:09 -Generating unique operation named: updateUsingPATCH_7
2019-03-17 18:52:09 -Generating unique operation named: updateUsingDELETE_7
2019-03-17 18:52:09 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-17 18:52:09 -Generating unique operation named: updateUsingTRACE_7
2019-03-17 18:52:09 -Generating unique operation named: addUsingGET_8
2019-03-17 18:52:09 -Generating unique operation named: editUsingGET_9
2019-03-17 18:52:09 -Generating unique operation named: listUsingGET_9
2019-03-17 18:52:09 -Generating unique operation named: removeUsingPOST_16
2019-03-17 18:52:09 -Generating unique operation named: removeUsingPOST_17
2019-03-17 18:52:09 -Generating unique operation named: saveUsingPOST_8
2019-03-17 18:52:09 -Generating unique operation named: updateUsingGET_8
2019-03-17 18:52:09 -Generating unique operation named: updateUsingHEAD_8
2019-03-17 18:52:09 -Generating unique operation named: updateUsingPOST_9
2019-03-17 18:52:09 -Generating unique operation named: updateUsingPUT_8
2019-03-17 18:52:09 -Generating unique operation named: updateUsingPATCH_8
2019-03-17 18:52:09 -Generating unique operation named: updateUsingDELETE_8
2019-03-17 18:52:09 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-17 18:52:09 -Generating unique operation named: updateUsingTRACE_8
2019-03-17 18:52:09 -Generating unique operation named: addUsingGET_9
2019-03-17 18:52:09 -Generating unique operation named: editUsingGET_10
2019-03-17 18:52:09 -Generating unique operation named: infoUsingGET_1
2019-03-17 18:52:09 -Generating unique operation named: infoUsingHEAD_1
2019-03-17 18:52:09 -Generating unique operation named: infoUsingPOST_1
2019-03-17 18:52:09 -Generating unique operation named: infoUsingPUT_1
2019-03-17 18:52:09 -Generating unique operation named: infoUsingPATCH_1
2019-03-17 18:52:09 -Generating unique operation named: infoUsingDELETE_1
2019-03-17 18:52:09 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-17 18:52:09 -Generating unique operation named: infoUsingTRACE_1
2019-03-17 18:52:09 -Generating unique operation named: listUsingGET_10
2019-03-17 18:52:09 -Generating unique operation named: removeUsingPOST_18
2019-03-17 18:52:09 -Generating unique operation named: removeUsingPOST_19
2019-03-17 18:52:09 -Generating unique operation named: saveUsingPOST_9
2019-03-17 18:52:09 -Generating unique operation named: updateUsingPOST_10
2019-03-17 18:52:09 -Generating unique operation named: listUsingGET_11
2019-03-17 18:52:09 -Generating unique operation named: removeUsingPOST_20
2019-03-17 18:52:09 -Generating unique operation named: welcomeUsingGET_1
2019-03-17 18:52:09 -Generating unique operation named: addUsingGET_10
2019-03-17 18:52:09 -Generating unique operation named: editUsingGET_11
2019-03-17 18:52:09 -Generating unique operation named: listUsingGET_12
2019-03-17 18:52:09 -Generating unique operation named: removeUsingPOST_21
2019-03-17 18:52:09 -Generating unique operation named: saveUsingPOST_10
2019-03-17 18:52:09 -Generating unique operation named: treeUsingGET_1
2019-03-17 18:52:09 -Generating unique operation named: treeUsingGET_2
2019-03-17 18:52:09 -Generating unique operation named: updateUsingPOST_11
2019-03-17 18:52:09 -Generating unique operation named: addUsingGET_11
2019-03-17 18:52:09 -Generating unique operation named: editUsingGET_12
2019-03-17 18:52:09 -Generating unique operation named: listUsingGET_13
2019-03-17 18:52:09 -Generating unique operation named: removeUsingPOST_22
2019-03-17 18:52:09 -Generating unique operation named: removeUsingPOST_23
2019-03-17 18:52:09 -Generating unique operation named: saveUsingPOST_11
2019-03-17 18:52:09 -Generating unique operation named: updateUsingGET_9
2019-03-17 18:52:09 -Generating unique operation named: updateUsingHEAD_9
2019-03-17 18:52:09 -Generating unique operation named: updateUsingPOST_12
2019-03-17 18:52:09 -Generating unique operation named: updateUsingPUT_9
2019-03-17 18:52:09 -Generating unique operation named: updateUsingPATCH_9
2019-03-17 18:52:09 -Generating unique operation named: updateUsingDELETE_9
2019-03-17 18:52:09 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-17 18:52:09 -Generating unique operation named: updateUsingTRACE_9
2019-03-17 18:52:09 -Generating unique operation named: addUsingGET_12
2019-03-17 18:52:09 -Generating unique operation named: editUsingGET_13
2019-03-17 18:52:09 -Generating unique operation named: listUsingGET_14
2019-03-17 18:52:09 -Generating unique operation named: removeUsingPOST_24
2019-03-17 18:52:09 -Generating unique operation named: removeUsingPOST_25
2019-03-17 18:52:10 -Generating unique operation named: saveUsingPOST_12
2019-03-17 18:52:10 -Generating unique operation named: updateUsingGET_10
2019-03-17 18:52:10 -Generating unique operation named: updateUsingHEAD_10
2019-03-17 18:52:10 -Generating unique operation named: updateUsingPOST_13
2019-03-17 18:52:10 -Generating unique operation named: updateUsingPUT_10
2019-03-17 18:52:10 -Generating unique operation named: updateUsingPATCH_10
2019-03-17 18:52:10 -Generating unique operation named: updateUsingDELETE_10
2019-03-17 18:52:10 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-17 18:52:10 -Generating unique operation named: updateUsingTRACE_10
2019-03-17 18:52:10 -Generating unique operation named: addUsingGET_13
2019-03-17 18:52:10 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-17 18:52:10 -Generating unique operation named: editUsingGET_14
2019-03-17 18:52:10 -Generating unique operation named: listUsingGET_15
2019-03-17 18:52:10 -Generating unique operation named: saveUsingPOST_13
2019-03-17 18:52:10 -Generating unique operation named: saveUsingPOST_14
2019-03-17 18:52:10 -Generating unique operation named: updateUsingPOST_14
2019-03-17 18:52:10 -Generating unique operation named: listUsingGET_16
2019-03-17 18:52:10 -Generating unique operation named: listUsingHEAD_1
2019-03-17 18:52:10 -Generating unique operation named: listUsingPOST_1
2019-03-17 18:52:10 -Generating unique operation named: listUsingPUT_1
2019-03-17 18:52:10 -Generating unique operation named: listUsingPATCH_1
2019-03-17 18:52:10 -Generating unique operation named: listUsingDELETE_1
2019-03-17 18:52:10 -Generating unique operation named: listUsingOPTIONS_1
2019-03-17 18:52:10 -Generating unique operation named: listUsingTRACE_1
2019-03-17 18:52:10 -Generating unique operation named: addUsingGET_14
2019-03-17 18:52:10 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-17 18:52:10 -Generating unique operation named: editUsingGET_15
2019-03-17 18:52:10 -Generating unique operation named: listUsingGET_17
2019-03-17 18:52:10 -Generating unique operation named: removeUsingPOST_26
2019-03-17 18:52:10 -Generating unique operation named: saveUsingPOST_15
2019-03-17 18:52:10 -Generating unique operation named: treeUsingGET_3
2019-03-17 18:52:10 -Generating unique operation named: treeViewUsingGET_1
2019-03-17 18:52:10 -Generating unique operation named: updateUsingPOST_15
2019-03-17 18:52:10 -Generating unique operation named: addUsingGET_15
2019-03-17 18:52:10 -Generating unique operation named: editUsingGET_16
2019-03-17 18:52:10 -Generating unique operation named: listUsingGET_18
2019-03-17 18:52:10 -Generating unique operation named: removeUsingPOST_27
2019-03-17 18:52:10 -Generating unique operation named: removeUsingPOST_28
2019-03-17 18:52:10 -Generating unique operation named: saveUsingPOST_16
2019-03-17 18:52:10 -Generating unique operation named: updateUsingGET_11
2019-03-17 18:52:10 -Generating unique operation named: updateUsingHEAD_11
2019-03-17 18:52:10 -Generating unique operation named: updateUsingPOST_16
2019-03-17 18:52:10 -Generating unique operation named: updateUsingPUT_11
2019-03-17 18:52:10 -Generating unique operation named: updateUsingPATCH_11
2019-03-17 18:52:10 -Generating unique operation named: updateUsingDELETE_11
2019-03-17 18:52:10 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-17 18:52:10 -Generating unique operation named: updateUsingTRACE_11
2019-03-17 18:52:10 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-17 18:52:10 -Generating unique operation named: addUsingGET_16
2019-03-17 18:52:10 -Generating unique operation named: editUsingGET_17
2019-03-17 18:52:10 -Generating unique operation named: listUsingGET_19
2019-03-17 18:52:10 -Generating unique operation named: removeUsingPOST_29
2019-03-17 18:52:10 -Generating unique operation named: removeUsingPOST_30
2019-03-17 18:52:10 -Generating unique operation named: saveUsingPOST_17
2019-03-17 18:52:10 -Generating unique operation named: updateUsingGET_12
2019-03-17 18:52:10 -Generating unique operation named: updateUsingHEAD_12
2019-03-17 18:52:10 -Generating unique operation named: updateUsingPOST_17
2019-03-17 18:52:10 -Generating unique operation named: updateUsingPUT_12
2019-03-17 18:52:10 -Generating unique operation named: updateUsingPATCH_12
2019-03-17 18:52:10 -Generating unique operation named: updateUsingDELETE_12
2019-03-17 18:52:10 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-17 18:52:10 -Generating unique operation named: updateUsingTRACE_12
2019-03-17 18:52:10 -Generating unique operation named: addUsingGET_17
2019-03-17 18:52:10 -Generating unique operation named: editUsingGET_18
2019-03-17 18:52:10 -Generating unique operation named: listUsingGET_20
2019-03-17 18:52:10 -Generating unique operation named: removeUsingPOST_31
2019-03-17 18:52:10 -Generating unique operation named: removeUsingPOST_32
2019-03-17 18:52:10 -Generating unique operation named: saveUsingPOST_18
2019-03-17 18:52:10 -Generating unique operation named: updateUsingGET_13
2019-03-17 18:52:10 -Generating unique operation named: updateUsingHEAD_13
2019-03-17 18:52:10 -Generating unique operation named: updateUsingPOST_18
2019-03-17 18:52:10 -Generating unique operation named: updateUsingPUT_13
2019-03-17 18:52:10 -Generating unique operation named: updateUsingPATCH_13
2019-03-17 18:52:10 -Generating unique operation named: updateUsingDELETE_13
2019-03-17 18:52:10 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-17 18:52:10 -Generating unique operation named: updateUsingTRACE_13
2019-03-17 18:52:10 -Starting Quartz Scheduler now
2019-03-17 18:52:10 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-17 18:52:10 -Starting...
2019-03-17 18:52:10 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-17 18:52:10 -Started.
2019-03-17 18:52:10 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-17 18:52:10 -Using a shared selector for servlet write/read
2019-03-17 18:52:10 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-17 18:52:10 -Started BootdoApplication in 25.386 seconds (JVM running for 26.816)
2019-03-17 18:52:11 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-17 18:52:11 -==> Parameters: 
2019-03-17 18:52:11 -<==      Total: 1
2019-03-17 18:52:18 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-17 18:52:18 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-17 18:52:18 -FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
2019-03-17 18:52:18 -Enabling session validation scheduler...
2019-03-17 18:52:19 -请求地址 : http://localhost:8081/login;JSESSIONID=a767a744-6f69-4c83-ad0e-77f915672425
2019-03-17 18:52:19 -HTTP METHOD : GET
2019-03-17 18:52:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 18:52:19 -参数 : [{}]
2019-03-17 18:52:19 -耗时 : 3
2019-03-17 18:52:19 -返回值 : login
2019-03-17 18:52:20 -请求地址 : http://localhost:8081/getVerify
2019-03-17 18:52:20 -HTTP METHOD : GET
2019-03-17 18:52:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-17 18:52:20 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2c8a2985, org.apache.shiro.web.servlet.ShiroHttpServletResponse@28b5a8cc]
2019-03-17 18:52:29 -7785
2019-03-17 18:52:29 -耗时 : 9196
2019-03-17 18:52:29 -返回值 : null
2019-03-17 18:52:30 -请求地址 : http://localhost:8081/login
2019-03-17 18:52:30 -HTTP METHOD : GET
2019-03-17 18:52:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 18:52:30 -参数 : [{}]
2019-03-17 18:52:30 -耗时 : 0
2019-03-17 18:52:30 -返回值 : login
2019-03-17 18:52:36 -请求地址 : http://localhost:8081/login
2019-03-17 18:52:36 -HTTP METHOD : POST
2019-03-17 18:52:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 18:52:36 -参数 : [admin, 111111, 7785, org.apache.shiro.web.servlet.ShiroHttpServletRequest@43670851]
2019-03-17 18:52:37 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-17 18:52:37 -==> Parameters: admin(String)
2019-03-17 18:52:37 -<==      Total: 1
2019-03-17 18:52:37 -耗时 : 166
2019-03-17 18:52:37 -返回值 : {msg=操作成功, code=0}
2019-03-17 18:52:37 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-17 18:52:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 18:52:37 -==> Parameters: 1(Long), admin(String), 登录(String), 166(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 18:52:37.264(Timestamp)
2019-03-17 18:52:37 -<==    Updates: 1
2019-03-17 18:52:37 -请求地址 : http://localhost:8081/index
2019-03-17 18:52:37 -HTTP METHOD : GET
2019-03-17 18:52:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 18:52:37 -参数 : [{}]
2019-03-17 18:52:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 18:52:37 -==> Parameters: 1(Long)
2019-03-17 18:52:37 -<==      Total: 45
2019-03-17 18:52:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 18:52:37 -==> Parameters: 138(Long)
2019-03-17 18:52:37 -<==      Total: 1
2019-03-17 18:52:37 -耗时 : 157
2019-03-17 18:52:37 -返回值 : index_v1
2019-03-17 18:52:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 18:52:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 158(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 18:52:37.703(Timestamp)
2019-03-17 18:52:37 -<==    Updates: 1
2019-03-17 18:52:37 -请求地址 : http://localhost:8081/main
2019-03-17 18:52:37 -HTTP METHOD : GET
2019-03-17 18:52:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 18:52:37 -参数 : []
2019-03-17 18:52:37 -耗时 : 1
2019-03-17 18:52:37 -返回值 : main
2019-03-17 18:52:38 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 18:52:38 -HTTP METHOD : GET
2019-03-17 18:52:38 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 18:52:38 -参数 : []
2019-03-17 18:52:38 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 18:52:38 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 18:52:38 -<==      Total: 0
2019-03-17 18:52:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 18:52:38 -==> Parameters: 1(Long), 0(String)
2019-03-17 18:52:38 -<==      Total: 1
2019-03-17 18:52:38 -耗时 : 77
2019-03-17 18:52:38 -返回值 : com.bootdo.common.utils.PageUtils@53c24538
2019-03-17 18:52:38 -请求地址 : http://localhost:8081/main
2019-03-17 18:52:38 -HTTP METHOD : GET
2019-03-17 18:52:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 18:52:38 -参数 : []
2019-03-17 18:52:38 -耗时 : 11
2019-03-17 18:52:38 -返回值 : main
2019-03-17 18:52:44 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 18:52:44 -==> Parameters: 1(Long)
2019-03-17 18:52:44 -<==      Total: 86
2019-03-17 18:52:44 -请求地址 : http://localhost:8081/elec/elec
2019-03-17 18:52:44 -HTTP METHOD : GET
2019-03-17 18:52:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-17 18:52:44 -参数 : []
2019-03-17 18:52:44 -耗时 : 1
2019-03-17 18:52:44 -返回值 : elec/elec/elec
2019-03-17 18:52:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 18:52:45 -HTTP METHOD : GET
2019-03-17 18:52:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 18:52:45 -参数 : [userType]
2019-03-17 18:52:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 18:52:45 -==> Parameters: userType(String)
2019-03-17 18:52:45 -<==      Total: 2
2019-03-17 18:52:45 -耗时 : 53
2019-03-17 18:52:45 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 18:52:46 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 18:52:46 -HTTP METHOD : GET
2019-03-17 18:52:46 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 18:52:46 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@1d8ac58f]
2019-03-17 18:52:46 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-17 18:52:46 -==> Parameters: 0(Integer), 3(Integer)
2019-03-17 18:52:46 -<==      Total: 3
2019-03-17 18:52:46 -==>  Preparing: select count(*) from elec 
2019-03-17 18:52:46 -==> Parameters: 
2019-03-17 18:52:46 -<==      Total: 1
2019-03-17 18:52:46 -耗时 : 56
2019-03-17 18:52:46 -返回值 : com.bootdo.common.utils.PageUtils@25593655
2019-03-17 18:52:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 18:52:58 -HTTP METHOD : GET
2019-03-17 18:52:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 18:52:58 -参数 : []
2019-03-17 18:52:58 -耗时 : 0
2019-03-17 18:52:58 -返回值 : system/dept/deptTree
2019-03-17 18:52:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 18:52:59 -HTTP METHOD : GET
2019-03-17 18:52:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 18:52:59 -参数 : []
2019-03-17 18:52:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 18:52:59 -==> Parameters: 
2019-03-17 18:52:59 -<==      Total: 3
2019-03-17 18:52:59 -耗时 : 29
2019-03-17 18:52:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 18:53:04 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 6]
2019-03-17 18:54:57 -请求地址 : http://localhost:8081/index
2019-03-17 18:54:57 -HTTP METHOD : GET
2019-03-17 18:54:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 18:54:57 -参数 : [{}]
2019-03-17 18:54:57 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 18:54:57 -==> Parameters: 1(Long)
2019-03-17 18:54:57 -<==      Total: 45
2019-03-17 18:54:57 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 18:54:57 -==> Parameters: 138(Long)
2019-03-17 18:54:57 -<==      Total: 1
2019-03-17 18:54:57 -耗时 : 39
2019-03-17 18:54:57 -返回值 : index_v1
2019-03-17 18:54:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 18:54:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 18:54:57.766(Timestamp)
2019-03-17 18:54:57 -<==    Updates: 1
2019-03-17 18:54:57 -请求地址 : http://localhost:8081/main
2019-03-17 18:54:57 -HTTP METHOD : GET
2019-03-17 18:54:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 18:54:57 -参数 : []
2019-03-17 18:54:57 -耗时 : 0
2019-03-17 18:54:57 -返回值 : main
2019-03-17 18:54:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 18:54:58 -HTTP METHOD : GET
2019-03-17 18:54:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 18:54:58 -参数 : []
2019-03-17 18:54:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 18:54:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 18:54:58 -<==      Total: 0
2019-03-17 18:54:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 18:54:58 -==> Parameters: 1(Long), 0(String)
2019-03-17 18:54:58 -<==      Total: 1
2019-03-17 18:54:58 -耗时 : 8
2019-03-17 18:54:58 -返回值 : com.bootdo.common.utils.PageUtils@39402826
2019-03-17 18:54:58 -请求地址 : http://localhost:8081/main
2019-03-17 18:54:58 -HTTP METHOD : GET
2019-03-17 18:54:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 18:54:58 -参数 : []
2019-03-17 18:54:58 -耗时 : 1
2019-03-17 18:54:58 -返回值 : main
2019-03-17 18:55:00 -请求地址 : http://localhost:8081/elec/elec
2019-03-17 18:55:00 -HTTP METHOD : GET
2019-03-17 18:55:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-17 18:55:00 -参数 : []
2019-03-17 18:55:00 -耗时 : 0
2019-03-17 18:55:00 -返回值 : elec/elec/elec
2019-03-17 18:55:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 18:55:00 -HTTP METHOD : GET
2019-03-17 18:55:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 18:55:00 -参数 : [userType]
2019-03-17 18:55:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 18:55:00 -==> Parameters: userType(String)
2019-03-17 18:55:00 -<==      Total: 2
2019-03-17 18:55:00 -耗时 : 8
2019-03-17 18:55:00 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 18:55:00 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 18:55:00 -HTTP METHOD : GET
2019-03-17 18:55:00 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 18:55:00 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@3f7f742a]
2019-03-17 18:55:00 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-17 18:55:00 -==> Parameters: 0(Integer), 3(Integer)
2019-03-17 18:55:00 -<==      Total: 3
2019-03-17 18:55:00 -==>  Preparing: select count(*) from elec 
2019-03-17 18:55:00 -==> Parameters: 
2019-03-17 18:55:00 -<==      Total: 1
2019-03-17 18:55:00 -耗时 : 8
2019-03-17 18:55:00 -返回值 : com.bootdo.common.utils.PageUtils@284a8b52
2019-03-17 18:55:28 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 18:55:28 -HTTP METHOD : GET
2019-03-17 18:55:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 18:55:28 -参数 : []
2019-03-17 18:55:28 -耗时 : 1
2019-03-17 18:55:28 -返回值 : system/dept/deptTree
2019-03-17 18:55:28 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 18:55:28 -HTTP METHOD : GET
2019-03-17 18:55:28 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 18:55:28 -参数 : []
2019-03-17 18:55:28 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 18:55:28 -==> Parameters: 
2019-03-17 18:55:28 -<==      Total: 3
2019-03-17 18:55:28 -耗时 : 5
2019-03-17 18:55:28 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 18:56:42 -请求地址 : http://localhost:8081/
2019-03-17 18:56:42 -HTTP METHOD : GET
2019-03-17 18:56:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-17 18:56:42 -参数 : [{}]
2019-03-17 18:56:42 -耗时 : 0
2019-03-17 18:56:42 -返回值 : redirect:/index
2019-03-17 18:56:42 -请求地址 : http://localhost:8081/login;JSESSIONID=05746dc9-d0b2-4396-ada3-a85ecb3ef88b
2019-03-17 18:56:42 -HTTP METHOD : GET
2019-03-17 18:56:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 18:56:42 -参数 : [{}]
2019-03-17 18:56:42 -耗时 : 1
2019-03-17 18:56:42 -返回值 : login
2019-03-17 18:56:43 -请求地址 : http://localhost:8081/getVerify
2019-03-17 18:56:43 -HTTP METHOD : GET
2019-03-17 18:56:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-17 18:56:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@22d61287, org.apache.shiro.web.servlet.ShiroHttpServletResponse@6708e626]
2019-03-17 18:56:43 -2927
2019-03-17 18:56:43 -耗时 : 27
2019-03-17 18:56:43 -返回值 : null
2019-03-17 18:56:43 -请求地址 : http://localhost:8081/login
2019-03-17 18:56:43 -HTTP METHOD : GET
2019-03-17 18:56:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 18:56:43 -参数 : [{}]
2019-03-17 18:56:43 -耗时 : 0
2019-03-17 18:56:43 -返回值 : login
2019-03-17 18:56:49 -请求地址 : http://localhost:8081/login
2019-03-17 18:56:49 -HTTP METHOD : POST
2019-03-17 18:56:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 18:56:49 -参数 : [admin, 111111, 2927, org.apache.shiro.web.servlet.ShiroHttpServletRequest@33c0a9f5]
2019-03-17 18:56:49 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-17 18:56:49 -==> Parameters: admin(String)
2019-03-17 18:56:49 -<==      Total: 1
2019-03-17 18:56:49 -耗时 : 8
2019-03-17 18:56:49 -返回值 : {msg=操作成功, code=0}
2019-03-17 18:56:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 18:56:49 -==> Parameters: 1(Long), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 18:56:49.346(Timestamp)
2019-03-17 18:56:49 -请求地址 : http://localhost:8081/index
2019-03-17 18:56:49 -HTTP METHOD : GET
2019-03-17 18:56:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 18:56:49 -参数 : [{}]
2019-03-17 18:56:49 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 18:56:49 -==> Parameters: 1(Long)
2019-03-17 18:56:49 -<==      Total: 45
2019-03-17 18:56:49 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 18:56:49 -==> Parameters: 138(Long)
2019-03-17 18:56:49 -<==      Total: 1
2019-03-17 18:56:49 -耗时 : 39
2019-03-17 18:56:49 -返回值 : index_v1
2019-03-17 18:56:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 18:56:49 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 42(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 18:56:49.432(Timestamp)
2019-03-17 18:56:49 -请求地址 : http://localhost:8081/main
2019-03-17 18:56:49 -HTTP METHOD : GET
2019-03-17 18:56:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 18:56:49 -参数 : []
2019-03-17 18:56:49 -耗时 : 0
2019-03-17 18:56:49 -返回值 : main
2019-03-17 18:56:49 -<==    Updates: 1
2019-03-17 18:56:49 -<==    Updates: 1
2019-03-17 18:56:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 18:56:52 -HTTP METHOD : GET
2019-03-17 18:56:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 18:56:52 -参数 : []
2019-03-17 18:56:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 18:56:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 18:56:52 -<==      Total: 0
2019-03-17 18:56:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 18:56:52 -==> Parameters: 1(Long), 0(String)
2019-03-17 18:56:52 -<==      Total: 1
2019-03-17 18:56:52 -耗时 : 12
2019-03-17 18:56:52 -返回值 : com.bootdo.common.utils.PageUtils@552c05c2
2019-03-17 18:56:52 -请求地址 : http://localhost:8081/main
2019-03-17 18:56:52 -HTTP METHOD : GET
2019-03-17 18:56:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 18:56:52 -参数 : []
2019-03-17 18:56:52 -耗时 : 0
2019-03-17 18:56:52 -返回值 : main
2019-03-17 18:56:56 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 18:56:56 -==> Parameters: 1(Long)
2019-03-17 18:56:56 -<==      Total: 86
2019-03-17 18:56:56 -请求地址 : http://localhost:8081/elec/elec
2019-03-17 18:56:56 -HTTP METHOD : GET
2019-03-17 18:56:56 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-17 18:56:56 -参数 : []
2019-03-17 18:56:56 -耗时 : 0
2019-03-17 18:56:56 -返回值 : elec/elec/elec
2019-03-17 18:56:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 18:56:57 -HTTP METHOD : GET
2019-03-17 18:56:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 18:56:57 -参数 : [userType]
2019-03-17 18:56:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 18:56:57 -==> Parameters: userType(String)
2019-03-17 18:56:57 -<==      Total: 2
2019-03-17 18:56:57 -耗时 : 28
2019-03-17 18:56:57 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 18:56:57 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 18:56:57 -HTTP METHOD : GET
2019-03-17 18:56:57 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 18:56:57 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@68334bb2]
2019-03-17 18:56:57 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-17 18:56:57 -==> Parameters: 0(Integer), 3(Integer)
2019-03-17 18:56:57 -<==      Total: 3
2019-03-17 18:56:57 -==>  Preparing: select count(*) from elec 
2019-03-17 18:56:57 -==> Parameters: 
2019-03-17 18:56:57 -<==      Total: 1
2019-03-17 18:56:57 -耗时 : 144
2019-03-17 18:56:57 -返回值 : com.bootdo.common.utils.PageUtils@72a4dab0
2019-03-17 18:57:02 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 18:57:02 -HTTP METHOD : GET
2019-03-17 18:57:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 18:57:02 -参数 : []
2019-03-17 18:57:02 -耗时 : 0
2019-03-17 18:57:02 -返回值 : system/dept/deptTree
2019-03-17 18:57:02 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 18:57:02 -HTTP METHOD : GET
2019-03-17 18:57:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 18:57:02 -参数 : []
2019-03-17 18:57:02 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 18:57:02 -==> Parameters: 
2019-03-17 18:57:02 -<==      Total: 3
2019-03-17 18:57:02 -耗时 : 7
2019-03-17 18:57:02 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 18:57:04 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-17 18:57:04 -HTTP METHOD : GET
2019-03-17 18:57:04 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-17 18:57:04 -参数 : [com.bootdo.elec.vo.ElecVo@32223feb, org.apache.shiro.web.servlet.ShiroHttpServletResponse@49ef4b59]
2019-03-17 18:57:04 -耗时 : 78
2019-03-17 18:57:04 -返回值 : null
2019-03-17 19:01:10 -Starting BootdoApplication on ZJZL-20180906VX with PID 13308 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-17 19:01:10 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-17 19:01:10 -The following profiles are active: dev
2019-03-17 19:01:11 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36676c1a: startup date [Sun Mar 17 19:01:11 CST 2019]; root of context hierarchy
2019-03-17 19:01:15 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-17 19:01:17 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$68e77944] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:01:17 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5b40a7eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:01:18 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:01:19 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:01:19 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:01:19 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-17 19:01:19 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-17 19:01:19 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:01:19 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:01:19 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:01:19 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:01:21 -Tomcat initialized with port(s): 8081 (http)
2019-03-17 19:01:21 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-17 19:01:21 -Starting service [Tomcat]
2019-03-17 19:01:21 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-17 19:01:21 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-17 19:01:21 -Initializing Spring embedded WebApplicationContext
2019-03-17 19:01:21 -Root WebApplicationContext: initialization completed in 10803 ms
2019-03-17 19:01:22 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-17 19:01:22 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-17 19:01:22 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-17 19:01:22 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-17 19:01:22 -Filter xssFilter was not registered (disabled)
2019-03-17 19:01:22 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-17 19:01:23 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-17 19:01:23 -Servlet statViewServlet mapped to [/druid/*]
2019-03-17 19:01:23 -Servlet dispatcherServlet mapped to [/]
2019-03-17 19:01:26 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36676c1a: startup date [Sun Mar 17 19:01:11 CST 2019]; root of context hierarchy
2019-03-17 19:01:27 -Using default implementation for ThreadExecutor
2019-03-17 19:01:27 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-17 19:01:27 -Quartz Scheduler v.2.2.1 created.
2019-03-17 19:01:27 -RAMJobStore initialized.
2019-03-17 19:01:27 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-17 19:01:27 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-17 19:01:27 -Quartz scheduler version: 2.2.1
2019-03-17 19:01:27 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@25c8c71e
2019-03-17 19:01:28 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-17 19:01:28 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-17 19:01:31 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-17 19:01:31 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-17 19:01:31 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-17 19:01:31 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-17 19:01:31 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-17 19:01:31 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-17 19:01:31 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-17 19:01:31 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-17 19:01:31 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-17 19:01:31 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:31 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-17 19:01:31 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-17 19:01:31 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-17 19:01:31 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-17 19:01:31 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:31 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-17 19:01:31 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-17 19:01:31 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-17 19:01:31 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-17 19:01:31 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-17 19:01:31 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:31 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-17 19:01:31 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-17 19:01:31 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-17 19:01:31 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-17 19:01:31 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:31 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:31 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-17 19:01:31 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 19:01:31 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-17 19:01:31 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 19:01:32 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-17 19:01:32 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-17 19:01:32 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-17 19:01:32 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-17 19:01:32 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-17 19:01:32 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-17 19:01:32 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-17 19:01:32 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-17 19:01:32 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-17 19:01:32 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-17 19:01:32 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 19:01:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 19:01:32 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-17 19:01:32 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-17 19:01:32 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-17 19:01:32 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-17 19:01:32 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-17 19:01:32 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-17 19:01:32 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-17 19:01:32 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-17 19:01:32 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-17 19:01:32 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-17 19:01:32 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-17 19:01:32 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-17 19:01:32 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 19:01:32 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 19:01:32 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-17 19:01:32 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-17 19:01:32 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 19:01:32 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-17 19:01:32 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-17 19:01:32 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-17 19:01:32 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-17 19:01:32 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-17 19:01:32 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-17 19:01:32 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-17 19:01:32 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-17 19:01:32 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-17 19:01:32 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-17 19:01:32 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 19:01:32 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 19:01:32 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-17 19:01:32 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 19:01:32 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-17 19:01:32 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-17 19:01:32 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-17 19:01:32 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-17 19:01:32 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-17 19:01:32 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-17 19:01:32 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 19:01:32 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 19:01:32 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-17 19:01:32 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-17 19:01:32 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-17 19:01:32 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 19:01:32 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 19:01:32 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-17 19:01:32 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-17 19:01:32 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-17 19:01:32 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 19:01:32 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 19:01:32 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-17 19:01:32 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-17 19:01:32 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-17 19:01:32 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-17 19:01:32 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-17 19:01:32 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-17 19:01:32 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-17 19:01:32 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-17 19:01:32 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-17 19:01:32 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-17 19:01:32 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-17 19:01:32 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-17 19:01:32 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-17 19:01:32 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-17 19:01:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-17 19:01:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-17 19:01:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-17 19:01:32 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-17 19:01:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-17 19:01:32 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-17 19:01:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-17 19:01:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-17 19:01:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 19:01:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 19:01:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-17 19:01:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-17 19:01:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-17 19:01:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-17 19:01:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-17 19:01:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-17 19:01:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-17 19:01:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-17 19:01:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-17 19:01:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-17 19:01:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-17 19:01:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-17 19:01:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-17 19:01:32 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-17 19:01:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-17 19:01:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-17 19:01:32 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-17 19:01:32 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-17 19:01:32 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-17 19:01:32 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 19:01:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 19:01:32 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 19:01:32 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-17 19:01:32 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-17 19:01:32 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-17 19:01:32 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-17 19:01:32 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-17 19:01:32 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-17 19:01:32 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-17 19:01:32 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-17 19:01:32 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-17 19:01:32 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-17 19:01:32 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-17 19:01:32 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 19:01:32 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 19:01:32 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:01:32 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-17 19:01:32 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:01:32 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-17 19:01:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 19:01:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-17 19:01:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-17 19:01:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-17 19:01:32 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-17 19:01:33 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-17 19:01:33 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-17 19:01:33 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 19:01:34 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@36676c1a: startup date [Sun Mar 17 19:01:11 CST 2019]; root of context hierarchy
2019-03-17 19:01:34 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 19:01:34 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 19:01:34 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 19:01:34 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-17 19:01:34 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-17 19:01:37 -Registering beans for JMX exposure on startup
2019-03-17 19:01:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-17 19:01:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-17 19:01:37 -Starting beans in phase 2147483647
2019-03-17 19:01:37 -Context refreshed
2019-03-17 19:01:37 -Found 1 custom documentation plugin(s)
2019-03-17 19:01:37 -Scanning for api listing references
2019-03-17 19:01:38 -Generating unique operation named: removeUsingPOST_1
2019-03-17 19:01:38 -Generating unique operation named: addUsingGET_1
2019-03-17 19:01:38 -Generating unique operation named: editUsingGET_1
2019-03-17 19:01:38 -Generating unique operation named: listUsingGET_1
2019-03-17 19:01:38 -Generating unique operation named: removeUsingPOST_2
2019-03-17 19:01:38 -Generating unique operation named: removeUsingPOST_3
2019-03-17 19:01:38 -Generating unique operation named: saveUsingPOST_1
2019-03-17 19:01:38 -Generating unique operation named: updateUsingGET_1
2019-03-17 19:01:38 -Generating unique operation named: updateUsingHEAD_1
2019-03-17 19:01:38 -Generating unique operation named: updateUsingPOST_1
2019-03-17 19:01:38 -Generating unique operation named: updateUsingPUT_1
2019-03-17 19:01:38 -Generating unique operation named: updateUsingPATCH_1
2019-03-17 19:01:38 -Generating unique operation named: updateUsingDELETE_1
2019-03-17 19:01:38 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-17 19:01:38 -Generating unique operation named: updateUsingTRACE_1
2019-03-17 19:01:38 -Generating unique operation named: addUsingGET_2
2019-03-17 19:01:38 -Generating unique operation named: editUsingGET_2
2019-03-17 19:01:38 -Generating unique operation named: listUsingGET_2
2019-03-17 19:01:38 -Generating unique operation named: removeUsingPOST_4
2019-03-17 19:01:38 -Generating unique operation named: removeUsingPOST_5
2019-03-17 19:01:38 -Generating unique operation named: saveUsingPOST_2
2019-03-17 19:01:38 -Generating unique operation named: updateUsingGET_2
2019-03-17 19:01:38 -Generating unique operation named: updateUsingHEAD_2
2019-03-17 19:01:38 -Generating unique operation named: updateUsingPOST_2
2019-03-17 19:01:38 -Generating unique operation named: updateUsingPUT_2
2019-03-17 19:01:38 -Generating unique operation named: updateUsingPATCH_2
2019-03-17 19:01:38 -Generating unique operation named: updateUsingDELETE_2
2019-03-17 19:01:38 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-17 19:01:38 -Generating unique operation named: updateUsingTRACE_2
2019-03-17 19:01:38 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-17 19:01:39 -Generating unique operation named: addUsingGET_3
2019-03-17 19:01:39 -Generating unique operation named: editUsingGET_3
2019-03-17 19:01:39 -Generating unique operation named: listUsingGET_3
2019-03-17 19:01:39 -Generating unique operation named: removeUsingPOST_6
2019-03-17 19:01:39 -Generating unique operation named: removeUsingPOST_7
2019-03-17 19:01:39 -Generating unique operation named: saveUsingPOST_3
2019-03-17 19:01:39 -Generating unique operation named: updateUsingGET_3
2019-03-17 19:01:39 -Generating unique operation named: updateUsingHEAD_3
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPOST_3
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPUT_3
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPATCH_3
2019-03-17 19:01:39 -Generating unique operation named: updateUsingDELETE_3
2019-03-17 19:01:39 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-17 19:01:39 -Generating unique operation named: updateUsingTRACE_3
2019-03-17 19:01:39 -Generating unique operation named: addUsingGET_4
2019-03-17 19:01:39 -Generating unique operation named: editUsingGET_4
2019-03-17 19:01:39 -Generating unique operation named: listUsingGET_4
2019-03-17 19:01:39 -Generating unique operation named: removeUsingPOST_8
2019-03-17 19:01:39 -Generating unique operation named: removeUsingPOST_9
2019-03-17 19:01:39 -Generating unique operation named: saveUsingPOST_4
2019-03-17 19:01:39 -Generating unique operation named: updateUsingGET_4
2019-03-17 19:01:39 -Generating unique operation named: updateUsingHEAD_4
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPOST_4
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPUT_4
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPATCH_4
2019-03-17 19:01:39 -Generating unique operation named: updateUsingDELETE_4
2019-03-17 19:01:39 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-17 19:01:39 -Generating unique operation named: updateUsingTRACE_4
2019-03-17 19:01:39 -Generating unique operation named: ElecUsingGET_1
2019-03-17 19:01:39 -Generating unique operation named: addUsingGET_5
2019-03-17 19:01:39 -Generating unique operation named: editUsingGET_5
2019-03-17 19:01:39 -Generating unique operation named: listUsingGET_5
2019-03-17 19:01:39 -Generating unique operation named: removeUsingPOST_10
2019-03-17 19:01:39 -Generating unique operation named: removeUsingPOST_11
2019-03-17 19:01:39 -Generating unique operation named: saveUsingPOST_5
2019-03-17 19:01:39 -Generating unique operation named: updateUsingGET_5
2019-03-17 19:01:39 -Generating unique operation named: updateUsingHEAD_5
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPOST_5
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPUT_5
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPATCH_5
2019-03-17 19:01:39 -Generating unique operation named: updateUsingDELETE_5
2019-03-17 19:01:39 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-17 19:01:39 -Generating unique operation named: updateUsingTRACE_5
2019-03-17 19:01:39 -Generating unique operation named: editUsingGET_6
2019-03-17 19:01:39 -Generating unique operation named: listUsingGET_6
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPOST_6
2019-03-17 19:01:39 -Generating unique operation named: addUsingGET_6
2019-03-17 19:01:39 -Generating unique operation named: editUsingGET_7
2019-03-17 19:01:39 -Generating unique operation named: listUsingGET_7
2019-03-17 19:01:39 -Generating unique operation named: removeUsingPOST_12
2019-03-17 19:01:39 -Generating unique operation named: removeUsingPOST_13
2019-03-17 19:01:39 -Generating unique operation named: saveUsingPOST_6
2019-03-17 19:01:39 -Generating unique operation named: updateUsingGET_6
2019-03-17 19:01:39 -Generating unique operation named: updateUsingHEAD_6
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPOST_7
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPUT_6
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPATCH_6
2019-03-17 19:01:39 -Generating unique operation named: updateUsingDELETE_6
2019-03-17 19:01:39 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-17 19:01:39 -Generating unique operation named: updateUsingTRACE_6
2019-03-17 19:01:39 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-17 19:01:39 -Generating unique operation named: addUsingGET_7
2019-03-17 19:01:39 -Generating unique operation named: editUsingGET_8
2019-03-17 19:01:39 -Generating unique operation named: listUsingGET_8
2019-03-17 19:01:39 -Generating unique operation named: removeUsingPOST_14
2019-03-17 19:01:39 -Generating unique operation named: removeUsingPOST_15
2019-03-17 19:01:39 -Generating unique operation named: saveUsingPOST_7
2019-03-17 19:01:39 -Generating unique operation named: updateUsingGET_7
2019-03-17 19:01:39 -Generating unique operation named: updateUsingHEAD_7
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPOST_8
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPUT_7
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPATCH_7
2019-03-17 19:01:39 -Generating unique operation named: updateUsingDELETE_7
2019-03-17 19:01:39 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-17 19:01:39 -Generating unique operation named: updateUsingTRACE_7
2019-03-17 19:01:39 -Generating unique operation named: addUsingGET_8
2019-03-17 19:01:39 -Generating unique operation named: editUsingGET_9
2019-03-17 19:01:39 -Generating unique operation named: listUsingGET_9
2019-03-17 19:01:39 -Generating unique operation named: removeUsingPOST_16
2019-03-17 19:01:39 -Generating unique operation named: removeUsingPOST_17
2019-03-17 19:01:39 -Generating unique operation named: saveUsingPOST_8
2019-03-17 19:01:39 -Generating unique operation named: updateUsingGET_8
2019-03-17 19:01:39 -Generating unique operation named: updateUsingHEAD_8
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPOST_9
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPUT_8
2019-03-17 19:01:39 -Generating unique operation named: updateUsingPATCH_8
2019-03-17 19:01:39 -Generating unique operation named: updateUsingDELETE_8
2019-03-17 19:01:39 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-17 19:01:39 -Generating unique operation named: updateUsingTRACE_8
2019-03-17 19:01:39 -Generating unique operation named: addUsingGET_9
2019-03-17 19:01:40 -Generating unique operation named: editUsingGET_10
2019-03-17 19:01:40 -Generating unique operation named: infoUsingGET_1
2019-03-17 19:01:40 -Generating unique operation named: infoUsingHEAD_1
2019-03-17 19:01:40 -Generating unique operation named: infoUsingPOST_1
2019-03-17 19:01:40 -Generating unique operation named: infoUsingPUT_1
2019-03-17 19:01:40 -Generating unique operation named: infoUsingPATCH_1
2019-03-17 19:01:40 -Generating unique operation named: infoUsingDELETE_1
2019-03-17 19:01:40 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-17 19:01:40 -Generating unique operation named: infoUsingTRACE_1
2019-03-17 19:01:40 -Generating unique operation named: listUsingGET_10
2019-03-17 19:01:40 -Generating unique operation named: removeUsingPOST_18
2019-03-17 19:01:40 -Generating unique operation named: removeUsingPOST_19
2019-03-17 19:01:40 -Generating unique operation named: saveUsingPOST_9
2019-03-17 19:01:40 -Generating unique operation named: updateUsingPOST_10
2019-03-17 19:01:40 -Generating unique operation named: listUsingGET_11
2019-03-17 19:01:40 -Generating unique operation named: removeUsingPOST_20
2019-03-17 19:01:40 -Generating unique operation named: welcomeUsingGET_1
2019-03-17 19:01:40 -Generating unique operation named: addUsingGET_10
2019-03-17 19:01:40 -Generating unique operation named: editUsingGET_11
2019-03-17 19:01:40 -Generating unique operation named: listUsingGET_12
2019-03-17 19:01:40 -Generating unique operation named: removeUsingPOST_21
2019-03-17 19:01:40 -Generating unique operation named: saveUsingPOST_10
2019-03-17 19:01:40 -Generating unique operation named: treeUsingGET_1
2019-03-17 19:01:40 -Generating unique operation named: treeUsingGET_2
2019-03-17 19:01:40 -Generating unique operation named: updateUsingPOST_11
2019-03-17 19:01:40 -Generating unique operation named: addUsingGET_11
2019-03-17 19:01:40 -Generating unique operation named: editUsingGET_12
2019-03-17 19:01:40 -Generating unique operation named: listUsingGET_13
2019-03-17 19:01:40 -Generating unique operation named: removeUsingPOST_22
2019-03-17 19:01:40 -Generating unique operation named: removeUsingPOST_23
2019-03-17 19:01:40 -Generating unique operation named: saveUsingPOST_11
2019-03-17 19:01:40 -Generating unique operation named: updateUsingGET_9
2019-03-17 19:01:40 -Generating unique operation named: updateUsingHEAD_9
2019-03-17 19:01:40 -Generating unique operation named: updateUsingPOST_12
2019-03-17 19:01:40 -Generating unique operation named: updateUsingPUT_9
2019-03-17 19:01:40 -Generating unique operation named: updateUsingPATCH_9
2019-03-17 19:01:40 -Generating unique operation named: updateUsingDELETE_9
2019-03-17 19:01:40 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-17 19:01:40 -Generating unique operation named: updateUsingTRACE_9
2019-03-17 19:01:40 -Generating unique operation named: addUsingGET_12
2019-03-17 19:01:40 -Generating unique operation named: editUsingGET_13
2019-03-17 19:01:40 -Generating unique operation named: listUsingGET_14
2019-03-17 19:01:40 -Generating unique operation named: removeUsingPOST_24
2019-03-17 19:01:40 -Generating unique operation named: removeUsingPOST_25
2019-03-17 19:01:40 -Generating unique operation named: saveUsingPOST_12
2019-03-17 19:01:40 -Generating unique operation named: updateUsingGET_10
2019-03-17 19:01:40 -Generating unique operation named: updateUsingHEAD_10
2019-03-17 19:01:40 -Generating unique operation named: updateUsingPOST_13
2019-03-17 19:01:40 -Generating unique operation named: updateUsingPUT_10
2019-03-17 19:01:40 -Generating unique operation named: updateUsingPATCH_10
2019-03-17 19:01:40 -Generating unique operation named: updateUsingDELETE_10
2019-03-17 19:01:40 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-17 19:01:40 -Generating unique operation named: updateUsingTRACE_10
2019-03-17 19:01:40 -Generating unique operation named: addUsingGET_13
2019-03-17 19:01:40 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-17 19:01:40 -Generating unique operation named: editUsingGET_14
2019-03-17 19:01:40 -Generating unique operation named: listUsingGET_15
2019-03-17 19:01:40 -Generating unique operation named: saveUsingPOST_13
2019-03-17 19:01:40 -Generating unique operation named: saveUsingPOST_14
2019-03-17 19:01:40 -Generating unique operation named: updateUsingPOST_14
2019-03-17 19:01:40 -Generating unique operation named: listUsingGET_16
2019-03-17 19:01:40 -Generating unique operation named: listUsingHEAD_1
2019-03-17 19:01:40 -Generating unique operation named: listUsingPOST_1
2019-03-17 19:01:40 -Generating unique operation named: listUsingPUT_1
2019-03-17 19:01:40 -Generating unique operation named: listUsingPATCH_1
2019-03-17 19:01:40 -Generating unique operation named: listUsingDELETE_1
2019-03-17 19:01:40 -Generating unique operation named: listUsingOPTIONS_1
2019-03-17 19:01:40 -Generating unique operation named: listUsingTRACE_1
2019-03-17 19:01:40 -Generating unique operation named: addUsingGET_14
2019-03-17 19:01:40 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-17 19:01:41 -Generating unique operation named: editUsingGET_15
2019-03-17 19:01:41 -Generating unique operation named: listUsingGET_17
2019-03-17 19:01:41 -Generating unique operation named: removeUsingPOST_26
2019-03-17 19:01:41 -Generating unique operation named: saveUsingPOST_15
2019-03-17 19:01:41 -Generating unique operation named: treeUsingGET_3
2019-03-17 19:01:41 -Generating unique operation named: treeViewUsingGET_1
2019-03-17 19:01:41 -Generating unique operation named: updateUsingPOST_15
2019-03-17 19:01:41 -Generating unique operation named: addUsingGET_15
2019-03-17 19:01:41 -Generating unique operation named: editUsingGET_16
2019-03-17 19:01:41 -Generating unique operation named: listUsingGET_18
2019-03-17 19:01:41 -Generating unique operation named: removeUsingPOST_27
2019-03-17 19:01:41 -Generating unique operation named: removeUsingPOST_28
2019-03-17 19:01:41 -Generating unique operation named: saveUsingPOST_16
2019-03-17 19:01:41 -Generating unique operation named: updateUsingGET_11
2019-03-17 19:01:41 -Generating unique operation named: updateUsingHEAD_11
2019-03-17 19:01:41 -Generating unique operation named: updateUsingPOST_16
2019-03-17 19:01:41 -Generating unique operation named: updateUsingPUT_11
2019-03-17 19:01:41 -Generating unique operation named: updateUsingPATCH_11
2019-03-17 19:01:41 -Generating unique operation named: updateUsingDELETE_11
2019-03-17 19:01:41 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-17 19:01:41 -Generating unique operation named: updateUsingTRACE_11
2019-03-17 19:01:41 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-17 19:01:41 -Generating unique operation named: addUsingGET_16
2019-03-17 19:01:41 -Generating unique operation named: editUsingGET_17
2019-03-17 19:01:41 -Generating unique operation named: listUsingGET_19
2019-03-17 19:01:41 -Generating unique operation named: removeUsingPOST_29
2019-03-17 19:01:41 -Generating unique operation named: removeUsingPOST_30
2019-03-17 19:01:41 -Generating unique operation named: saveUsingPOST_17
2019-03-17 19:01:41 -Generating unique operation named: updateUsingGET_12
2019-03-17 19:01:41 -Generating unique operation named: updateUsingHEAD_12
2019-03-17 19:01:41 -Generating unique operation named: updateUsingPOST_17
2019-03-17 19:01:41 -Generating unique operation named: updateUsingPUT_12
2019-03-17 19:01:41 -Generating unique operation named: updateUsingPATCH_12
2019-03-17 19:01:41 -Generating unique operation named: updateUsingDELETE_12
2019-03-17 19:01:41 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-17 19:01:41 -Generating unique operation named: updateUsingTRACE_12
2019-03-17 19:01:41 -Generating unique operation named: addUsingGET_17
2019-03-17 19:01:41 -Generating unique operation named: editUsingGET_18
2019-03-17 19:01:41 -Generating unique operation named: listUsingGET_20
2019-03-17 19:01:41 -Generating unique operation named: removeUsingPOST_31
2019-03-17 19:01:41 -Generating unique operation named: removeUsingPOST_32
2019-03-17 19:01:41 -Generating unique operation named: saveUsingPOST_18
2019-03-17 19:01:41 -Generating unique operation named: updateUsingGET_13
2019-03-17 19:01:41 -Generating unique operation named: updateUsingHEAD_13
2019-03-17 19:01:41 -Generating unique operation named: updateUsingPOST_18
2019-03-17 19:01:41 -Generating unique operation named: updateUsingPUT_13
2019-03-17 19:01:41 -Generating unique operation named: updateUsingPATCH_13
2019-03-17 19:01:41 -Generating unique operation named: updateUsingDELETE_13
2019-03-17 19:01:41 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-17 19:01:41 -Generating unique operation named: updateUsingTRACE_13
2019-03-17 19:01:41 -Starting Quartz Scheduler now
2019-03-17 19:01:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-17 19:01:41 -Starting...
2019-03-17 19:01:41 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-17 19:01:41 -Started.
2019-03-17 19:01:41 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-17 19:01:41 -Using a shared selector for servlet write/read
2019-03-17 19:01:41 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-17 19:01:41 -Started BootdoApplication in 33.364 seconds (JVM running for 35.429)
2019-03-17 19:01:41 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-17 19:01:42 -==> Parameters: 
2019-03-17 19:01:42 -<==      Total: 1
2019-03-17 19:01:56 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-17 19:01:56 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-17 19:01:56 -FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2019-03-17 19:01:56 -Enabling session validation scheduler...
2019-03-17 19:01:56 -请求地址 : http://localhost:8081/login;JSESSIONID=09c9ce5d-1f6d-4dfa-af53-0ef26b937e99
2019-03-17 19:01:56 -HTTP METHOD : GET
2019-03-17 19:01:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 19:01:56 -参数 : [{}]
2019-03-17 19:01:56 -耗时 : 5
2019-03-17 19:01:56 -返回值 : login
2019-03-17 19:01:58 -请求地址 : http://localhost:8081/getVerify
2019-03-17 19:01:58 -HTTP METHOD : GET
2019-03-17 19:01:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-17 19:01:58 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5c48fcf8, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2ab51028]
2019-03-17 19:02:01 -9433
2019-03-17 19:02:01 -耗时 : 2819
2019-03-17 19:02:01 -返回值 : null
2019-03-17 19:02:07 -请求地址 : http://localhost:8081/login
2019-03-17 19:02:07 -HTTP METHOD : POST
2019-03-17 19:02:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 19:02:07 -参数 : [admin, 111111, 0433, org.apache.shiro.web.servlet.ShiroHttpServletRequest@6da15f5]
2019-03-17 19:02:07 -耗时 : 10
2019-03-17 19:02:07 -返回值 : {msg=请输入正确的验证码, code=500}
2019-03-17 19:02:07 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-17 19:02:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 19:02:07 -==> Parameters: -1(Long), 获取用户信息为空(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 19:02:07.842(Timestamp)
2019-03-17 19:02:08 -<==    Updates: 1
2019-03-17 19:02:15 -请求地址 : http://localhost:8081/login
2019-03-17 19:02:15 -HTTP METHOD : POST
2019-03-17 19:02:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 19:02:15 -参数 : [admin, 111111, 9433, org.apache.shiro.web.servlet.ShiroHttpServletRequest@77b6ec21]
2019-03-17 19:02:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-17 19:02:15 -==> Parameters: admin(String)
2019-03-17 19:02:16 -<==      Total: 1
2019-03-17 19:02:16 -耗时 : 148
2019-03-17 19:02:16 -返回值 : {msg=操作成功, code=0}
2019-03-17 19:02:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 19:02:16 -==> Parameters: 1(Long), admin(String), 登录(String), 148(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 19:02:16.055(Timestamp)
2019-03-17 19:02:16 -请求地址 : http://localhost:8081/index
2019-03-17 19:02:16 -HTTP METHOD : GET
2019-03-17 19:02:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 19:02:16 -参数 : [{}]
2019-03-17 19:02:16 -<==    Updates: 1
2019-03-17 19:02:16 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 19:02:16 -==> Parameters: 1(Long)
2019-03-17 19:02:16 -<==      Total: 45
2019-03-17 19:02:16 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 19:02:16 -==> Parameters: 138(Long)
2019-03-17 19:02:16 -<==      Total: 1
2019-03-17 19:02:16 -耗时 : 475
2019-03-17 19:02:16 -返回值 : index_v1
2019-03-17 19:02:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 19:02:16 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 475(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 19:02:16.616(Timestamp)
2019-03-17 19:02:16 -<==    Updates: 1
2019-03-17 19:02:16 -请求地址 : http://localhost:8081/main
2019-03-17 19:02:16 -HTTP METHOD : GET
2019-03-17 19:02:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 19:02:16 -参数 : []
2019-03-17 19:02:16 -耗时 : 0
2019-03-17 19:02:16 -返回值 : main
2019-03-17 19:02:17 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 19:02:17 -HTTP METHOD : GET
2019-03-17 19:02:17 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 19:02:17 -参数 : []
2019-03-17 19:02:17 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 19:02:17 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 19:02:17 -请求地址 : http://localhost:8081/main
2019-03-17 19:02:17 -HTTP METHOD : GET
2019-03-17 19:02:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 19:02:17 -参数 : []
2019-03-17 19:02:17 -耗时 : 1
2019-03-17 19:02:17 -返回值 : main
2019-03-17 19:02:17 -<==      Total: 0
2019-03-17 19:02:17 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 19:02:17 -==> Parameters: 1(Long), 0(String)
2019-03-17 19:02:17 -<==      Total: 1
2019-03-17 19:02:17 -耗时 : 295
2019-03-17 19:02:17 -返回值 : com.bootdo.common.utils.PageUtils@84af1d0
2019-03-17 19:02:19 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 19:02:19 -==> Parameters: 1(Long)
2019-03-17 19:02:19 -<==      Total: 86
2019-03-17 19:02:19 -请求地址 : http://localhost:8081/elec/elec
2019-03-17 19:02:19 -HTTP METHOD : GET
2019-03-17 19:02:19 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-17 19:02:19 -参数 : []
2019-03-17 19:02:19 -耗时 : 1
2019-03-17 19:02:19 -返回值 : elec/elec/elec
2019-03-17 19:02:20 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 19:02:20 -HTTP METHOD : GET
2019-03-17 19:02:20 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 19:02:20 -参数 : [userType]
2019-03-17 19:02:20 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 19:02:20 -==> Parameters: userType(String)
2019-03-17 19:02:20 -<==      Total: 2
2019-03-17 19:02:20 -耗时 : 30
2019-03-17 19:02:20 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 19:02:20 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 19:02:20 -HTTP METHOD : GET
2019-03-17 19:02:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 19:02:20 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@6e9994da]
2019-03-17 19:02:20 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-17 19:02:20 -==> Parameters: 0(Integer), 3(Integer)
2019-03-17 19:02:20 -<==      Total: 3
2019-03-17 19:02:20 -==>  Preparing: select count(*) from elec 
2019-03-17 19:02:20 -==> Parameters: 
2019-03-17 19:02:20 -<==      Total: 1
2019-03-17 19:02:20 -耗时 : 97
2019-03-17 19:02:20 -返回值 : com.bootdo.common.utils.PageUtils@7baade9b
2019-03-17 19:02:24 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 19:02:24 -HTTP METHOD : GET
2019-03-17 19:02:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 19:02:24 -参数 : []
2019-03-17 19:02:24 -耗时 : 0
2019-03-17 19:02:24 -返回值 : system/dept/deptTree
2019-03-17 19:02:24 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 19:02:24 -HTTP METHOD : GET
2019-03-17 19:02:24 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 19:02:24 -参数 : []
2019-03-17 19:02:24 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 19:02:24 -==> Parameters: 
2019-03-17 19:02:24 -<==      Total: 3
2019-03-17 19:02:24 -耗时 : 24
2019-03-17 19:02:24 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 19:02:26 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-17 19:02:26 -HTTP METHOD : GET
2019-03-17 19:02:26 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-17 19:02:26 -参数 : [com.bootdo.elec.vo.ElecVo@7e29e7b5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@193f14ad]
2019-03-17 19:02:26 -耗时 : 16
2019-03-17 19:02:26 -返回值 : null
2019-03-17 19:02:33 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-03-17 19:03:22 -请求地址 : http://localhost:8081/
2019-03-17 19:03:22 -HTTP METHOD : GET
2019-03-17 19:03:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-17 19:03:22 -参数 : [{}]
2019-03-17 19:03:22 -耗时 : 1
2019-03-17 19:03:22 -返回值 : redirect:/index
2019-03-17 19:03:22 -请求地址 : http://localhost:8081/login;JSESSIONID=6b5548fb-eb9b-4cbc-900c-d812390bb401
2019-03-17 19:03:22 -HTTP METHOD : GET
2019-03-17 19:03:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 19:03:22 -参数 : [{}]
2019-03-17 19:03:22 -耗时 : 1
2019-03-17 19:03:22 -返回值 : login
2019-03-17 19:03:23 -请求地址 : http://localhost:8081/getVerify
2019-03-17 19:03:23 -HTTP METHOD : GET
2019-03-17 19:03:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-17 19:03:23 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3828ef11, org.apache.shiro.web.servlet.ShiroHttpServletResponse@2a435836]
2019-03-17 19:03:23 -0517
2019-03-17 19:03:23 -耗时 : 25
2019-03-17 19:03:23 -返回值 : null
2019-03-17 19:03:23 -请求地址 : http://localhost:8081/login
2019-03-17 19:03:23 -HTTP METHOD : GET
2019-03-17 19:03:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 19:03:23 -参数 : [{}]
2019-03-17 19:03:23 -耗时 : 0
2019-03-17 19:03:23 -返回值 : login
2019-03-17 19:03:28 -请求地址 : http://localhost:8081/login
2019-03-17 19:03:28 -HTTP METHOD : POST
2019-03-17 19:03:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 19:03:28 -参数 : [admin, 111111, 0517, org.apache.shiro.web.servlet.ShiroHttpServletRequest@55ec959a]
2019-03-17 19:03:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-17 19:03:28 -==> Parameters: admin(String)
2019-03-17 19:03:28 -<==      Total: 1
2019-03-17 19:03:28 -耗时 : 7
2019-03-17 19:03:28 -返回值 : {msg=操作成功, code=0}
2019-03-17 19:03:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 19:03:28 -==> Parameters: 1(Long), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 19:03:28.463(Timestamp)
2019-03-17 19:03:28 -请求地址 : http://localhost:8081/index
2019-03-17 19:03:28 -HTTP METHOD : GET
2019-03-17 19:03:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 19:03:28 -参数 : [{}]
2019-03-17 19:03:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 19:03:28 -==> Parameters: 1(Long)
2019-03-17 19:03:28 -<==    Updates: 1
2019-03-17 19:03:28 -<==      Total: 45
2019-03-17 19:03:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 19:03:28 -==> Parameters: 138(Long)
2019-03-17 19:03:28 -<==      Total: 1
2019-03-17 19:03:28 -耗时 : 234
2019-03-17 19:03:28 -返回值 : index_v1
2019-03-17 19:03:28 -请求地址 : http://localhost:8081/main
2019-03-17 19:03:28 -HTTP METHOD : GET
2019-03-17 19:03:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 19:03:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 19:03:28 -参数 : []
2019-03-17 19:03:28 -耗时 : 0
2019-03-17 19:03:28 -返回值 : main
2019-03-17 19:03:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 234(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 19:03:28.735(Timestamp)
2019-03-17 19:03:29 -<==    Updates: 1
2019-03-17 19:03:29 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 19:03:29 -HTTP METHOD : GET
2019-03-17 19:03:29 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 19:03:29 -参数 : []
2019-03-17 19:03:29 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 19:03:29 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 19:03:29 -<==      Total: 0
2019-03-17 19:03:29 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 19:03:29 -==> Parameters: 1(Long), 0(String)
2019-03-17 19:03:29 -<==      Total: 1
2019-03-17 19:03:29 -耗时 : 18
2019-03-17 19:03:29 -返回值 : com.bootdo.common.utils.PageUtils@97bbe00
2019-03-17 19:03:29 -请求地址 : http://localhost:8081/main
2019-03-17 19:03:29 -HTTP METHOD : GET
2019-03-17 19:03:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 19:03:29 -参数 : []
2019-03-17 19:03:29 -耗时 : 0
2019-03-17 19:03:29 -返回值 : main
2019-03-17 19:03:31 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 19:03:31 -==> Parameters: 1(Long)
2019-03-17 19:03:31 -<==      Total: 86
2019-03-17 19:03:31 -请求地址 : http://localhost:8081/elec/elec
2019-03-17 19:03:31 -HTTP METHOD : GET
2019-03-17 19:03:31 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-17 19:03:31 -参数 : []
2019-03-17 19:03:31 -耗时 : 1
2019-03-17 19:03:31 -返回值 : elec/elec/elec
2019-03-17 19:03:33 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 19:03:33 -HTTP METHOD : GET
2019-03-17 19:03:33 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 19:03:33 -参数 : [userType]
2019-03-17 19:03:33 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 19:03:33 -==> Parameters: userType(String)
2019-03-17 19:03:33 -<==      Total: 2
2019-03-17 19:03:33 -耗时 : 9
2019-03-17 19:03:33 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 19:03:33 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 19:03:33 -HTTP METHOD : GET
2019-03-17 19:03:33 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 19:03:33 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@605f8d6d]
2019-03-17 19:03:33 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-17 19:03:33 -==> Parameters: 0(Integer), 3(Integer)
2019-03-17 19:03:33 -<==      Total: 3
2019-03-17 19:03:33 -==>  Preparing: select count(*) from elec 
2019-03-17 19:03:33 -==> Parameters: 
2019-03-17 19:03:33 -<==      Total: 1
2019-03-17 19:03:33 -耗时 : 18
2019-03-17 19:03:33 -返回值 : com.bootdo.common.utils.PageUtils@e8b357b
2019-03-17 19:03:35 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 19:03:35 -HTTP METHOD : GET
2019-03-17 19:03:35 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 19:03:35 -参数 : []
2019-03-17 19:03:35 -耗时 : 1
2019-03-17 19:03:35 -返回值 : system/dept/deptTree
2019-03-17 19:03:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 19:03:36 -HTTP METHOD : GET
2019-03-17 19:03:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 19:03:36 -参数 : []
2019-03-17 19:03:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 19:03:36 -==> Parameters: 
2019-03-17 19:03:36 -<==      Total: 3
2019-03-17 19:03:36 -耗时 : 6
2019-03-17 19:03:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 19:03:43 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-17 19:03:43 -HTTP METHOD : GET
2019-03-17 19:03:43 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-17 19:03:43 -参数 : [com.bootdo.elec.vo.ElecVo@51318f20, org.apache.shiro.web.servlet.ShiroHttpServletResponse@e80ce90]
2019-03-17 19:03:43 -耗时 : 13
2019-03-17 19:03:43 -返回值 : null
2019-03-17 19:06:10 -Starting BootdoApplication on ZJZL-20180906VX with PID 15132 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-17 19:06:10 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-17 19:06:10 -The following profiles are active: dev
2019-03-17 19:06:10 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14b030a0: startup date [Sun Mar 17 19:06:10 CST 2019]; root of context hierarchy
2019-03-17 19:06:14 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-17 19:06:17 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6959cd18] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:06:17 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5bb2fbbf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:06:19 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:06:19 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:06:19 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:06:19 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-17 19:06:19 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-17 19:06:19 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:06:19 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:06:19 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:06:20 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:06:21 -Tomcat initialized with port(s): 8081 (http)
2019-03-17 19:06:21 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-17 19:06:21 -Starting service [Tomcat]
2019-03-17 19:06:21 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-17 19:06:21 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-17 19:06:22 -Initializing Spring embedded WebApplicationContext
2019-03-17 19:06:22 -Root WebApplicationContext: initialization completed in 11403 ms
2019-03-17 19:06:23 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-17 19:06:23 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-17 19:06:23 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-17 19:06:23 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-17 19:06:23 -Filter xssFilter was not registered (disabled)
2019-03-17 19:06:23 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-17 19:06:23 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-17 19:06:23 -Servlet statViewServlet mapped to [/druid/*]
2019-03-17 19:06:23 -Servlet dispatcherServlet mapped to [/]
2019-03-17 19:06:26 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14b030a0: startup date [Sun Mar 17 19:06:10 CST 2019]; root of context hierarchy
2019-03-17 19:06:27 -Using default implementation for ThreadExecutor
2019-03-17 19:06:27 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-17 19:06:27 -Quartz Scheduler v.2.2.1 created.
2019-03-17 19:06:27 -RAMJobStore initialized.
2019-03-17 19:06:27 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-17 19:06:27 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-17 19:06:27 -Quartz scheduler version: 2.2.1
2019-03-17 19:06:27 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@335896bd
2019-03-17 19:06:28 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-17 19:06:28 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-17 19:06:31 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-17 19:06:31 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-17 19:06:31 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-17 19:06:31 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-17 19:06:31 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-17 19:06:31 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-17 19:06:31 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-17 19:06:31 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-17 19:06:31 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-17 19:06:31 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:31 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-17 19:06:31 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-17 19:06:31 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-17 19:06:31 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-17 19:06:31 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-17 19:06:31 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:31 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-17 19:06:31 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-17 19:06:31 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-17 19:06:31 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-17 19:06:31 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:31 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-17 19:06:31 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-17 19:06:31 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-17 19:06:31 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-17 19:06:31 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:31 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:31 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-17 19:06:31 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 19:06:31 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-17 19:06:31 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-17 19:06:31 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 19:06:31 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-17 19:06:31 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-17 19:06:31 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-17 19:06:31 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-17 19:06:31 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:31 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-17 19:06:31 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-17 19:06:31 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:31 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-17 19:06:31 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-17 19:06:31 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-17 19:06:31 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-17 19:06:31 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:31 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-17 19:06:31 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-17 19:06:31 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 19:06:31 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 19:06:31 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-17 19:06:31 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-17 19:06:31 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-17 19:06:31 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-17 19:06:31 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-17 19:06:31 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-17 19:06:31 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:31 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-17 19:06:31 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-17 19:06:31 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-17 19:06:31 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-17 19:06:31 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-17 19:06:31 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-17 19:06:31 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-17 19:06:31 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-17 19:06:31 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 19:06:31 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:31 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 19:06:31 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:31 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-17 19:06:31 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 19:06:31 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-17 19:06:31 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-17 19:06:31 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-17 19:06:31 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-17 19:06:31 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-17 19:06:31 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:31 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-17 19:06:31 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-17 19:06:31 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-17 19:06:31 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-17 19:06:31 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-17 19:06:31 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-17 19:06:31 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-17 19:06:31 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-17 19:06:31 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 19:06:31 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:31 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 19:06:31 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:31 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-17 19:06:31 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-17 19:06:31 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 19:06:31 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-17 19:06:31 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-17 19:06:31 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-17 19:06:31 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-17 19:06:31 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-17 19:06:31 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-17 19:06:31 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 19:06:31 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:31 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 19:06:31 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:31 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-17 19:06:31 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-17 19:06:31 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-17 19:06:31 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-17 19:06:31 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 19:06:31 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:31 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 19:06:31 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:31 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-17 19:06:31 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-17 19:06:31 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-17 19:06:31 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-17 19:06:31 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 19:06:31 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:31 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 19:06:31 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:31 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-17 19:06:31 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-17 19:06:31 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-17 19:06:31 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-17 19:06:31 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-17 19:06:31 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:31 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:31 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-17 19:06:31 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-17 19:06:31 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:31 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-17 19:06:31 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:31 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-17 19:06:31 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-17 19:06:31 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-17 19:06:31 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-17 19:06:31 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-17 19:06:31 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:31 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-17 19:06:31 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:31 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-17 19:06:31 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:31 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:31 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-17 19:06:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-17 19:06:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-17 19:06:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-17 19:06:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-17 19:06:32 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-17 19:06:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-17 19:06:32 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-17 19:06:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-17 19:06:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-17 19:06:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-17 19:06:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-17 19:06:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 19:06:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-17 19:06:32 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 19:06:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-17 19:06:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-17 19:06:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-17 19:06:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-17 19:06:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-17 19:06:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-17 19:06:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 19:06:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-17 19:06:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-17 19:06:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-17 19:06:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-17 19:06:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-17 19:06:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-17 19:06:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-17 19:06:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-17 19:06:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-17 19:06:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-17 19:06:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-17 19:06:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-17 19:06:32 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-17 19:06:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-17 19:06:32 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-17 19:06:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-17 19:06:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-17 19:06:32 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-17 19:06:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-17 19:06:32 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 19:06:32 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-17 19:06:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 19:06:32 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:32 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 19:06:32 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-17 19:06:32 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 19:06:32 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-17 19:06:32 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-17 19:06:32 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-17 19:06:32 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-17 19:06:32 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-17 19:06:32 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-17 19:06:32 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:32 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-17 19:06:32 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:32 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:32 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:32 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-17 19:06:32 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-17 19:06:32 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-17 19:06:32 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-17 19:06:32 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-17 19:06:32 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-17 19:06:32 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 19:06:32 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:32 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 19:06:32 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:06:32 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-17 19:06:32 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:06:32 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-17 19:06:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 19:06:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-17 19:06:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-17 19:06:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-17 19:06:32 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-17 19:06:32 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-17 19:06:33 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-17 19:06:33 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 19:06:34 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@14b030a0: startup date [Sun Mar 17 19:06:10 CST 2019]; root of context hierarchy
2019-03-17 19:06:34 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 19:06:34 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 19:06:34 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 19:06:34 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-17 19:06:34 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-17 19:06:37 -Registering beans for JMX exposure on startup
2019-03-17 19:06:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-17 19:06:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-17 19:06:37 -Starting beans in phase 2147483647
2019-03-17 19:06:37 -Context refreshed
2019-03-17 19:06:37 -Found 1 custom documentation plugin(s)
2019-03-17 19:06:37 -Scanning for api listing references
2019-03-17 19:06:37 -Generating unique operation named: removeUsingPOST_1
2019-03-17 19:06:38 -Generating unique operation named: addUsingGET_1
2019-03-17 19:06:38 -Generating unique operation named: editUsingGET_1
2019-03-17 19:06:38 -Generating unique operation named: listUsingGET_1
2019-03-17 19:06:38 -Generating unique operation named: removeUsingPOST_2
2019-03-17 19:06:38 -Generating unique operation named: removeUsingPOST_3
2019-03-17 19:06:38 -Generating unique operation named: saveUsingPOST_1
2019-03-17 19:06:38 -Generating unique operation named: updateUsingGET_1
2019-03-17 19:06:38 -Generating unique operation named: updateUsingHEAD_1
2019-03-17 19:06:38 -Generating unique operation named: updateUsingPOST_1
2019-03-17 19:06:38 -Generating unique operation named: updateUsingPUT_1
2019-03-17 19:06:38 -Generating unique operation named: updateUsingPATCH_1
2019-03-17 19:06:38 -Generating unique operation named: updateUsingDELETE_1
2019-03-17 19:06:38 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-17 19:06:38 -Generating unique operation named: updateUsingTRACE_1
2019-03-17 19:06:38 -Generating unique operation named: addUsingGET_2
2019-03-17 19:06:38 -Generating unique operation named: editUsingGET_2
2019-03-17 19:06:38 -Generating unique operation named: listUsingGET_2
2019-03-17 19:06:38 -Generating unique operation named: removeUsingPOST_4
2019-03-17 19:06:38 -Generating unique operation named: removeUsingPOST_5
2019-03-17 19:06:38 -Generating unique operation named: saveUsingPOST_2
2019-03-17 19:06:38 -Generating unique operation named: updateUsingGET_2
2019-03-17 19:06:38 -Generating unique operation named: updateUsingHEAD_2
2019-03-17 19:06:38 -Generating unique operation named: updateUsingPOST_2
2019-03-17 19:06:38 -Generating unique operation named: updateUsingPUT_2
2019-03-17 19:06:38 -Generating unique operation named: updateUsingPATCH_2
2019-03-17 19:06:38 -Generating unique operation named: updateUsingDELETE_2
2019-03-17 19:06:38 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-17 19:06:38 -Generating unique operation named: updateUsingTRACE_2
2019-03-17 19:06:38 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-17 19:06:38 -Generating unique operation named: addUsingGET_3
2019-03-17 19:06:38 -Generating unique operation named: editUsingGET_3
2019-03-17 19:06:38 -Generating unique operation named: listUsingGET_3
2019-03-17 19:06:38 -Generating unique operation named: removeUsingPOST_6
2019-03-17 19:06:38 -Generating unique operation named: removeUsingPOST_7
2019-03-17 19:06:38 -Generating unique operation named: saveUsingPOST_3
2019-03-17 19:06:38 -Generating unique operation named: updateUsingGET_3
2019-03-17 19:06:38 -Generating unique operation named: updateUsingHEAD_3
2019-03-17 19:06:38 -Generating unique operation named: updateUsingPOST_3
2019-03-17 19:06:38 -Generating unique operation named: updateUsingPUT_3
2019-03-17 19:06:38 -Generating unique operation named: updateUsingPATCH_3
2019-03-17 19:06:38 -Generating unique operation named: updateUsingDELETE_3
2019-03-17 19:06:38 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-17 19:06:38 -Generating unique operation named: updateUsingTRACE_3
2019-03-17 19:06:38 -Generating unique operation named: addUsingGET_4
2019-03-17 19:06:38 -Generating unique operation named: editUsingGET_4
2019-03-17 19:06:38 -Generating unique operation named: listUsingGET_4
2019-03-17 19:06:38 -Generating unique operation named: removeUsingPOST_8
2019-03-17 19:06:38 -Generating unique operation named: removeUsingPOST_9
2019-03-17 19:06:38 -Generating unique operation named: saveUsingPOST_4
2019-03-17 19:06:38 -Generating unique operation named: updateUsingGET_4
2019-03-17 19:06:38 -Generating unique operation named: updateUsingHEAD_4
2019-03-17 19:06:38 -Generating unique operation named: updateUsingPOST_4
2019-03-17 19:06:38 -Generating unique operation named: updateUsingPUT_4
2019-03-17 19:06:38 -Generating unique operation named: updateUsingPATCH_4
2019-03-17 19:06:38 -Generating unique operation named: updateUsingDELETE_4
2019-03-17 19:06:38 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-17 19:06:38 -Generating unique operation named: updateUsingTRACE_4
2019-03-17 19:06:38 -Generating unique operation named: ElecUsingGET_1
2019-03-17 19:06:38 -Generating unique operation named: addUsingGET_5
2019-03-17 19:06:38 -Generating unique operation named: editUsingGET_5
2019-03-17 19:06:38 -Generating unique operation named: listUsingGET_5
2019-03-17 19:06:38 -Generating unique operation named: removeUsingPOST_10
2019-03-17 19:06:38 -Generating unique operation named: removeUsingPOST_11
2019-03-17 19:06:38 -Generating unique operation named: saveUsingPOST_5
2019-03-17 19:06:38 -Generating unique operation named: updateUsingGET_5
2019-03-17 19:06:38 -Generating unique operation named: updateUsingHEAD_5
2019-03-17 19:06:38 -Generating unique operation named: updateUsingPOST_5
2019-03-17 19:06:38 -Generating unique operation named: updateUsingPUT_5
2019-03-17 19:06:38 -Generating unique operation named: updateUsingPATCH_5
2019-03-17 19:06:38 -Generating unique operation named: updateUsingDELETE_5
2019-03-17 19:06:38 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-17 19:06:38 -Generating unique operation named: updateUsingTRACE_5
2019-03-17 19:06:39 -Generating unique operation named: editUsingGET_6
2019-03-17 19:06:39 -Generating unique operation named: listUsingGET_6
2019-03-17 19:06:39 -Generating unique operation named: updateUsingPOST_6
2019-03-17 19:06:39 -Generating unique operation named: addUsingGET_6
2019-03-17 19:06:39 -Generating unique operation named: editUsingGET_7
2019-03-17 19:06:39 -Generating unique operation named: listUsingGET_7
2019-03-17 19:06:39 -Generating unique operation named: removeUsingPOST_12
2019-03-17 19:06:39 -Generating unique operation named: removeUsingPOST_13
2019-03-17 19:06:39 -Generating unique operation named: saveUsingPOST_6
2019-03-17 19:06:39 -Generating unique operation named: updateUsingGET_6
2019-03-17 19:06:39 -Generating unique operation named: updateUsingHEAD_6
2019-03-17 19:06:39 -Generating unique operation named: updateUsingPOST_7
2019-03-17 19:06:39 -Generating unique operation named: updateUsingPUT_6
2019-03-17 19:06:39 -Generating unique operation named: updateUsingPATCH_6
2019-03-17 19:06:39 -Generating unique operation named: updateUsingDELETE_6
2019-03-17 19:06:39 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-17 19:06:39 -Generating unique operation named: updateUsingTRACE_6
2019-03-17 19:06:39 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-17 19:06:39 -Generating unique operation named: addUsingGET_7
2019-03-17 19:06:39 -Generating unique operation named: editUsingGET_8
2019-03-17 19:06:39 -Generating unique operation named: listUsingGET_8
2019-03-17 19:06:39 -Generating unique operation named: removeUsingPOST_14
2019-03-17 19:06:39 -Generating unique operation named: removeUsingPOST_15
2019-03-17 19:06:39 -Generating unique operation named: saveUsingPOST_7
2019-03-17 19:06:39 -Generating unique operation named: updateUsingGET_7
2019-03-17 19:06:39 -Generating unique operation named: updateUsingHEAD_7
2019-03-17 19:06:39 -Generating unique operation named: updateUsingPOST_8
2019-03-17 19:06:39 -Generating unique operation named: updateUsingPUT_7
2019-03-17 19:06:39 -Generating unique operation named: updateUsingPATCH_7
2019-03-17 19:06:39 -Generating unique operation named: updateUsingDELETE_7
2019-03-17 19:06:39 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-17 19:06:39 -Generating unique operation named: updateUsingTRACE_7
2019-03-17 19:06:39 -Generating unique operation named: addUsingGET_8
2019-03-17 19:06:39 -Generating unique operation named: editUsingGET_9
2019-03-17 19:06:39 -Generating unique operation named: listUsingGET_9
2019-03-17 19:06:39 -Generating unique operation named: removeUsingPOST_16
2019-03-17 19:06:39 -Generating unique operation named: removeUsingPOST_17
2019-03-17 19:06:39 -Generating unique operation named: saveUsingPOST_8
2019-03-17 19:06:39 -Generating unique operation named: updateUsingGET_8
2019-03-17 19:06:39 -Generating unique operation named: updateUsingHEAD_8
2019-03-17 19:06:39 -Generating unique operation named: updateUsingPOST_9
2019-03-17 19:06:39 -Generating unique operation named: updateUsingPUT_8
2019-03-17 19:06:39 -Generating unique operation named: updateUsingPATCH_8
2019-03-17 19:06:39 -Generating unique operation named: updateUsingDELETE_8
2019-03-17 19:06:39 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-17 19:06:39 -Generating unique operation named: updateUsingTRACE_8
2019-03-17 19:06:39 -Generating unique operation named: addUsingGET_9
2019-03-17 19:06:39 -Generating unique operation named: editUsingGET_10
2019-03-17 19:06:39 -Generating unique operation named: infoUsingGET_1
2019-03-17 19:06:39 -Generating unique operation named: infoUsingHEAD_1
2019-03-17 19:06:39 -Generating unique operation named: infoUsingPOST_1
2019-03-17 19:06:39 -Generating unique operation named: infoUsingPUT_1
2019-03-17 19:06:39 -Generating unique operation named: infoUsingPATCH_1
2019-03-17 19:06:39 -Generating unique operation named: infoUsingDELETE_1
2019-03-17 19:06:39 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-17 19:06:39 -Generating unique operation named: infoUsingTRACE_1
2019-03-17 19:06:39 -Generating unique operation named: listUsingGET_10
2019-03-17 19:06:39 -Generating unique operation named: removeUsingPOST_18
2019-03-17 19:06:39 -Generating unique operation named: removeUsingPOST_19
2019-03-17 19:06:39 -Generating unique operation named: saveUsingPOST_9
2019-03-17 19:06:39 -Generating unique operation named: updateUsingPOST_10
2019-03-17 19:06:39 -Generating unique operation named: listUsingGET_11
2019-03-17 19:06:39 -Generating unique operation named: removeUsingPOST_20
2019-03-17 19:06:39 -Generating unique operation named: welcomeUsingGET_1
2019-03-17 19:06:39 -Generating unique operation named: addUsingGET_10
2019-03-17 19:06:39 -Generating unique operation named: editUsingGET_11
2019-03-17 19:06:39 -Generating unique operation named: listUsingGET_12
2019-03-17 19:06:39 -Generating unique operation named: removeUsingPOST_21
2019-03-17 19:06:39 -Generating unique operation named: saveUsingPOST_10
2019-03-17 19:06:39 -Generating unique operation named: treeUsingGET_1
2019-03-17 19:06:39 -Generating unique operation named: treeUsingGET_2
2019-03-17 19:06:39 -Generating unique operation named: updateUsingPOST_11
2019-03-17 19:06:39 -Generating unique operation named: addUsingGET_11
2019-03-17 19:06:39 -Generating unique operation named: editUsingGET_12
2019-03-17 19:06:39 -Generating unique operation named: listUsingGET_13
2019-03-17 19:06:39 -Generating unique operation named: removeUsingPOST_22
2019-03-17 19:06:39 -Generating unique operation named: removeUsingPOST_23
2019-03-17 19:06:39 -Generating unique operation named: saveUsingPOST_11
2019-03-17 19:06:39 -Generating unique operation named: updateUsingGET_9
2019-03-17 19:06:39 -Generating unique operation named: updateUsingHEAD_9
2019-03-17 19:06:39 -Generating unique operation named: updateUsingPOST_12
2019-03-17 19:06:40 -Generating unique operation named: updateUsingPUT_9
2019-03-17 19:06:40 -Generating unique operation named: updateUsingPATCH_9
2019-03-17 19:06:40 -Generating unique operation named: updateUsingDELETE_9
2019-03-17 19:06:40 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-17 19:06:40 -Generating unique operation named: updateUsingTRACE_9
2019-03-17 19:06:40 -Generating unique operation named: addUsingGET_12
2019-03-17 19:06:40 -Generating unique operation named: editUsingGET_13
2019-03-17 19:06:40 -Generating unique operation named: listUsingGET_14
2019-03-17 19:06:40 -Generating unique operation named: removeUsingPOST_24
2019-03-17 19:06:40 -Generating unique operation named: removeUsingPOST_25
2019-03-17 19:06:40 -Generating unique operation named: saveUsingPOST_12
2019-03-17 19:06:40 -Generating unique operation named: updateUsingGET_10
2019-03-17 19:06:40 -Generating unique operation named: updateUsingHEAD_10
2019-03-17 19:06:40 -Generating unique operation named: updateUsingPOST_13
2019-03-17 19:06:40 -Generating unique operation named: updateUsingPUT_10
2019-03-17 19:06:40 -Generating unique operation named: updateUsingPATCH_10
2019-03-17 19:06:40 -Generating unique operation named: updateUsingDELETE_10
2019-03-17 19:06:40 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-17 19:06:40 -Generating unique operation named: updateUsingTRACE_10
2019-03-17 19:06:40 -Generating unique operation named: addUsingGET_13
2019-03-17 19:06:40 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-17 19:06:40 -Generating unique operation named: editUsingGET_14
2019-03-17 19:06:40 -Generating unique operation named: listUsingGET_15
2019-03-17 19:06:40 -Generating unique operation named: saveUsingPOST_13
2019-03-17 19:06:40 -Generating unique operation named: saveUsingPOST_14
2019-03-17 19:06:40 -Generating unique operation named: updateUsingPOST_14
2019-03-17 19:06:40 -Generating unique operation named: listUsingGET_16
2019-03-17 19:06:40 -Generating unique operation named: listUsingHEAD_1
2019-03-17 19:06:40 -Generating unique operation named: listUsingPOST_1
2019-03-17 19:06:40 -Generating unique operation named: listUsingPUT_1
2019-03-17 19:06:40 -Generating unique operation named: listUsingPATCH_1
2019-03-17 19:06:40 -Generating unique operation named: listUsingDELETE_1
2019-03-17 19:06:40 -Generating unique operation named: listUsingOPTIONS_1
2019-03-17 19:06:40 -Generating unique operation named: listUsingTRACE_1
2019-03-17 19:06:40 -Generating unique operation named: addUsingGET_14
2019-03-17 19:06:40 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-17 19:06:40 -Generating unique operation named: editUsingGET_15
2019-03-17 19:06:40 -Generating unique operation named: listUsingGET_17
2019-03-17 19:06:40 -Generating unique operation named: removeUsingPOST_26
2019-03-17 19:06:40 -Generating unique operation named: saveUsingPOST_15
2019-03-17 19:06:40 -Generating unique operation named: treeUsingGET_3
2019-03-17 19:06:40 -Generating unique operation named: treeViewUsingGET_1
2019-03-17 19:06:40 -Generating unique operation named: updateUsingPOST_15
2019-03-17 19:06:40 -Generating unique operation named: addUsingGET_15
2019-03-17 19:06:40 -Generating unique operation named: editUsingGET_16
2019-03-17 19:06:40 -Generating unique operation named: listUsingGET_18
2019-03-17 19:06:40 -Generating unique operation named: removeUsingPOST_27
2019-03-17 19:06:40 -Generating unique operation named: removeUsingPOST_28
2019-03-17 19:06:40 -Generating unique operation named: saveUsingPOST_16
2019-03-17 19:06:40 -Generating unique operation named: updateUsingGET_11
2019-03-17 19:06:40 -Generating unique operation named: updateUsingHEAD_11
2019-03-17 19:06:40 -Generating unique operation named: updateUsingPOST_16
2019-03-17 19:06:40 -Generating unique operation named: updateUsingPUT_11
2019-03-17 19:06:40 -Generating unique operation named: updateUsingPATCH_11
2019-03-17 19:06:40 -Generating unique operation named: updateUsingDELETE_11
2019-03-17 19:06:40 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-17 19:06:40 -Generating unique operation named: updateUsingTRACE_11
2019-03-17 19:06:40 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-17 19:06:40 -Generating unique operation named: addUsingGET_16
2019-03-17 19:06:40 -Generating unique operation named: editUsingGET_17
2019-03-17 19:06:40 -Generating unique operation named: listUsingGET_19
2019-03-17 19:06:40 -Generating unique operation named: removeUsingPOST_29
2019-03-17 19:06:40 -Generating unique operation named: removeUsingPOST_30
2019-03-17 19:06:40 -Generating unique operation named: saveUsingPOST_17
2019-03-17 19:06:40 -Generating unique operation named: updateUsingGET_12
2019-03-17 19:06:40 -Generating unique operation named: updateUsingHEAD_12
2019-03-17 19:06:40 -Generating unique operation named: updateUsingPOST_17
2019-03-17 19:06:40 -Generating unique operation named: updateUsingPUT_12
2019-03-17 19:06:40 -Generating unique operation named: updateUsingPATCH_12
2019-03-17 19:06:40 -Generating unique operation named: updateUsingDELETE_12
2019-03-17 19:06:40 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-17 19:06:40 -Generating unique operation named: updateUsingTRACE_12
2019-03-17 19:06:40 -Generating unique operation named: addUsingGET_17
2019-03-17 19:06:40 -Generating unique operation named: editUsingGET_18
2019-03-17 19:06:40 -Generating unique operation named: listUsingGET_20
2019-03-17 19:06:40 -Generating unique operation named: removeUsingPOST_31
2019-03-17 19:06:40 -Generating unique operation named: removeUsingPOST_32
2019-03-17 19:06:40 -Generating unique operation named: saveUsingPOST_18
2019-03-17 19:06:40 -Generating unique operation named: updateUsingGET_13
2019-03-17 19:06:41 -Generating unique operation named: updateUsingHEAD_13
2019-03-17 19:06:41 -Generating unique operation named: updateUsingPOST_18
2019-03-17 19:06:41 -Generating unique operation named: updateUsingPUT_13
2019-03-17 19:06:41 -Generating unique operation named: updateUsingPATCH_13
2019-03-17 19:06:41 -Generating unique operation named: updateUsingDELETE_13
2019-03-17 19:06:41 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-17 19:06:41 -Generating unique operation named: updateUsingTRACE_13
2019-03-17 19:06:41 -Starting Quartz Scheduler now
2019-03-17 19:06:41 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-17 19:06:41 -Starting...
2019-03-17 19:06:41 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-17 19:06:41 -Started.
2019-03-17 19:06:41 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-17 19:06:41 -Using a shared selector for servlet write/read
2019-03-17 19:06:41 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-17 19:06:41 -Started BootdoApplication in 33.15 seconds (JVM running for 35.147)
2019-03-17 19:06:41 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-17 19:06:41 -==> Parameters: 
2019-03-17 19:06:42 -<==      Total: 1
2019-03-17 19:07:32 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-03-17 19:07:47 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-17 19:07:47 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-17 19:07:47 -FrameworkServlet 'dispatcherServlet': initialization completed in 57 ms
2019-03-17 19:07:47 -Enabling session validation scheduler...
2019-03-17 19:07:47 -请求地址 : http://localhost:8081/
2019-03-17 19:07:47 -HTTP METHOD : GET
2019-03-17 19:07:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-17 19:07:47 -参数 : [{}]
2019-03-17 19:07:47 -耗时 : 3
2019-03-17 19:07:47 -返回值 : redirect:/index
2019-03-17 19:07:47 -请求地址 : http://localhost:8081/login;JSESSIONID=652466f0-921f-41e2-948b-3bffe934d648
2019-03-17 19:07:47 -HTTP METHOD : GET
2019-03-17 19:07:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 19:07:47 -参数 : [{}]
2019-03-17 19:07:47 -耗时 : 1
2019-03-17 19:07:47 -返回值 : login
2019-03-17 19:07:48 -请求地址 : http://localhost:8081/getVerify
2019-03-17 19:07:48 -HTTP METHOD : GET
2019-03-17 19:07:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-17 19:07:48 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@6cd7bbdc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@29d53822]
2019-03-17 19:07:51 -0988
2019-03-17 19:07:51 -耗时 : 2974
2019-03-17 19:07:51 -返回值 : null
2019-03-17 19:07:51 -请求地址 : http://localhost:8081/login
2019-03-17 19:07:51 -HTTP METHOD : GET
2019-03-17 19:07:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 19:07:51 -参数 : [{}]
2019-03-17 19:07:51 -耗时 : 0
2019-03-17 19:07:51 -返回值 : login
2019-03-17 19:08:02 -请求地址 : http://localhost:8081/login
2019-03-17 19:08:02 -HTTP METHOD : POST
2019-03-17 19:08:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 19:08:02 -参数 : [admin, 111111, 0988, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1c571f44]
2019-03-17 19:08:02 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-17 19:08:02 -==> Parameters: admin(String)
2019-03-17 19:08:02 -<==      Total: 1
2019-03-17 19:08:02 -耗时 : 84
2019-03-17 19:08:02 -返回值 : {msg=操作成功, code=0}
2019-03-17 19:08:02 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-17 19:08:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 19:08:02 -==> Parameters: 1(Long), admin(String), 登录(String), 85(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 19:08:02.482(Timestamp)
2019-03-17 19:08:02 -请求地址 : http://localhost:8081/index
2019-03-17 19:08:02 -HTTP METHOD : GET
2019-03-17 19:08:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 19:08:02 -参数 : [{}]
2019-03-17 19:08:02 -<==    Updates: 1
2019-03-17 19:08:02 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 19:08:02 -==> Parameters: 1(Long)
2019-03-17 19:08:03 -<==      Total: 45
2019-03-17 19:08:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 19:08:03 -==> Parameters: 138(Long)
2019-03-17 19:08:03 -<==      Total: 1
2019-03-17 19:08:03 -耗时 : 529
2019-03-17 19:08:03 -返回值 : index_v1
2019-03-17 19:08:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 19:08:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 529(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 19:08:03.151(Timestamp)
2019-03-17 19:08:03 -请求地址 : http://localhost:8081/main
2019-03-17 19:08:03 -HTTP METHOD : GET
2019-03-17 19:08:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 19:08:03 -参数 : []
2019-03-17 19:08:03 -耗时 : 1
2019-03-17 19:08:03 -返回值 : main
2019-03-17 19:08:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 19:08:03 -HTTP METHOD : GET
2019-03-17 19:08:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 19:08:03 -参数 : []
2019-03-17 19:08:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 19:08:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 19:08:03 -请求地址 : http://localhost:8081/main
2019-03-17 19:08:03 -HTTP METHOD : GET
2019-03-17 19:08:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 19:08:03 -参数 : []
2019-03-17 19:08:03 -耗时 : 0
2019-03-17 19:08:03 -返回值 : main
2019-03-17 19:08:04 -<==    Updates: 1
2019-03-17 19:08:05 -<==      Total: 0
2019-03-17 19:08:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 19:08:05 -==> Parameters: 1(Long), 0(String)
2019-03-17 19:08:05 -<==      Total: 1
2019-03-17 19:08:05 -耗时 : 2056
2019-03-17 19:08:05 -返回值 : com.bootdo.common.utils.PageUtils@528595de
2019-03-17 19:08:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 19:08:34 -==> Parameters: 1(Long)
2019-03-17 19:08:34 -<==      Total: 86
2019-03-17 19:08:34 -请求地址 : http://localhost:8081/elec/elec
2019-03-17 19:08:34 -HTTP METHOD : GET
2019-03-17 19:08:34 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-17 19:08:34 -参数 : []
2019-03-17 19:08:34 -耗时 : 0
2019-03-17 19:08:34 -返回值 : elec/elec/elec
2019-03-17 19:08:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 19:08:36 -HTTP METHOD : GET
2019-03-17 19:08:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 19:08:36 -参数 : [userType]
2019-03-17 19:08:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 19:08:36 -==> Parameters: userType(String)
2019-03-17 19:08:36 -<==      Total: 2
2019-03-17 19:08:36 -耗时 : 71
2019-03-17 19:08:36 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 19:08:36 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 19:08:36 -HTTP METHOD : GET
2019-03-17 19:08:36 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 19:08:36 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@22d0dd59]
2019-03-17 19:08:36 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-17 19:08:36 -==> Parameters: 0(Integer), 3(Integer)
2019-03-17 19:08:36 -<==      Total: 3
2019-03-17 19:08:36 -==>  Preparing: select count(*) from elec 
2019-03-17 19:08:36 -==> Parameters: 
2019-03-17 19:08:36 -<==      Total: 1
2019-03-17 19:08:36 -耗时 : 69
2019-03-17 19:08:36 -返回值 : com.bootdo.common.utils.PageUtils@4f70fd2e
2019-03-17 19:08:41 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 19:08:41 -HTTP METHOD : GET
2019-03-17 19:08:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 19:08:41 -参数 : []
2019-03-17 19:08:41 -耗时 : 0
2019-03-17 19:08:41 -返回值 : system/dept/deptTree
2019-03-17 19:08:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 19:08:41 -HTTP METHOD : GET
2019-03-17 19:08:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 19:08:41 -参数 : []
2019-03-17 19:08:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 19:08:41 -==> Parameters: 
2019-03-17 19:08:41 -<==      Total: 3
2019-03-17 19:08:41 -耗时 : 23
2019-03-17 19:08:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 19:09:02 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-17 19:09:02 -HTTP METHOD : GET
2019-03-17 19:09:02 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-17 19:09:02 -参数 : [com.bootdo.elec.vo.ElecVo@129cb974, org.apache.shiro.web.servlet.ShiroHttpServletResponse@559f2944]
2019-03-17 19:09:02 -耗时 : 23
2019-03-17 19:09:02 -返回值 : null
2019-03-17 19:17:25 -Starting BootdoApplication on ZJZL-20180906VX with PID 6888 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-03-17 19:17:25 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-03-17 19:17:25 -The following profiles are active: dev
2019-03-17 19:17:25 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62f4ff3b: startup date [Sun Mar 17 19:17:25 CST 2019]; root of context hierarchy
2019-03-17 19:17:29 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-03-17 19:17:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6dc90794] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:17:31 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6022363b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:17:32 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:17:32 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:17:32 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:17:32 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-03-17 19:17:33 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-03-17 19:17:33 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:17:33 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:17:33 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:17:33 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-03-17 19:17:34 -Tomcat initialized with port(s): 8081 (http)
2019-03-17 19:17:34 -Initializing ProtocolHandler ["http-nio-8081"]
2019-03-17 19:17:34 -Starting service [Tomcat]
2019-03-17 19:17:34 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-03-17 19:17:34 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_131\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_131/bin/server;C:/Program Files/Java/jre1.8.0_131/bin;C:/Program Files/Java/jre1.8.0_131/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;D:\pbb\pycSafefile\x64;D:\pbb\PBB Reader\x64;C:\Program Files\MySQL\MySQL Utilities 1.6\;D:\MAVEN\apache-maven-3.6.0\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-03-17 19:17:34 -Initializing Spring embedded WebApplicationContext
2019-03-17 19:17:34 -Root WebApplicationContext: initialization completed in 8645 ms
2019-03-17 19:17:35 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-03-17 19:17:35 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-03-17 19:17:35 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-03-17 19:17:35 -Mapping filter: 'requestContextFilter' to: [/*]
2019-03-17 19:17:35 -Filter xssFilter was not registered (disabled)
2019-03-17 19:17:35 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-03-17 19:17:35 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-03-17 19:17:35 -Servlet statViewServlet mapped to [/druid/*]
2019-03-17 19:17:35 -Servlet dispatcherServlet mapped to [/]
2019-03-17 19:17:37 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62f4ff3b: startup date [Sun Mar 17 19:17:25 CST 2019]; root of context hierarchy
2019-03-17 19:17:38 -Using default implementation for ThreadExecutor
2019-03-17 19:17:38 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-03-17 19:17:38 -Quartz Scheduler v.2.2.1 created.
2019-03-17 19:17:38 -RAMJobStore initialized.
2019-03-17 19:17:38 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-03-17 19:17:38 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-03-17 19:17:38 -Quartz scheduler version: 2.2.1
2019-03-17 19:17:38 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@72d16d6
2019-03-17 19:17:38 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-03-17 19:17:38 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-03-17 19:17:41 -Mapped "{[/charts/countDD],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-03-17 19:17:41 -Mapped "{[/charts/countMM],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-03-17 19:17:41 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-03-17 19:17:41 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-03-17 19:17:41 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-03-17 19:17:41 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-03-17 19:17:41 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-03-17 19:17:41 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-03-17 19:17:41 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-03-17 19:17:41 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-03-17 19:17:41 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-03-17 19:17:41 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-03-17 19:17:41 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-03-17 19:17:41 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-03-17 19:17:41 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-03-17 19:17:41 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-03-17 19:17:41 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-03-17 19:17:41 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-03-17 19:17:41 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-03-17 19:17:41 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-03-17 19:17:41 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 19:17:41 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-03-17 19:17:41 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-03-17 19:17:41 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-03-17 19:17:41 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-03-17 19:17:41 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-03-17 19:17:41 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-03-17 19:17:41 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-03-17 19:17:41 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-03-17 19:17:41 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-03-17 19:17:41 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-03-17 19:17:41 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-03-17 19:17:41 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 19:17:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 19:17:41 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-03-17 19:17:41 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-03-17 19:17:41 -Mapped "{[/elec/elec/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-03-17 19:17:41 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-03-17 19:17:41 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-03-17 19:17:41 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-03-17 19:17:41 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-17 19:17:41 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-03-17 19:17:41 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-03-17 19:17:41 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.domain.ElecDO) throws java.lang.Exception
2019-03-17 19:17:41 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-03-17 19:17:41 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-03-17 19:17:41 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 19:17:41 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO)
2019-03-17 19:17:41 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-03-17 19:17:41 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-03-17 19:17:41 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 19:17:41 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-03-17 19:17:41 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-03-17 19:17:41 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-03-17 19:17:41 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-03-17 19:17:41 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-03-17 19:17:41 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-03-17 19:17:41 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-03-17 19:17:41 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-03-17 19:17:41 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-03-17 19:17:41 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-03-17 19:17:41 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 19:17:41 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-03-17 19:17:41 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-03-17 19:17:41 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-03-17 19:17:41 -Mapped "{[/heat/heatUpLoad/importUserExcel],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-03-17 19:17:41 -Mapped "{[/heat/heatUpLoad/CreateHeat],methods=[POST]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.CreateHeat(com.bootdo.heat.domain.HeatDO,java.lang.String,int) throws java.lang.Exception
2019-03-17 19:17:41 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.lang.String com.bootdo.moneyList.controller.MoneyListController.queryAllUser(org.springframework.ui.Model,java.lang.String,java.lang.String,java.lang.String,int)
2019-03-17 19:17:41 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-03-17 19:17:41 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-03-17 19:17:41 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-03-17 19:17:41 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 19:17:41 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-03-17 19:17:41 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-03-17 19:17:41 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-03-17 19:17:41 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-03-17 19:17:41 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 19:17:41 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-03-17 19:17:41 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-03-17 19:17:41 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-03-17 19:17:41 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-03-17 19:17:41 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 19:17:41 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-03-17 19:17:41 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-03-17 19:17:41 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-03-17 19:17:41 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-03-17 19:17:41 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-03-17 19:17:41 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-03-17 19:17:41 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-03-17 19:17:41 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-03-17 19:17:41 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-03-17 19:17:41 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-03-17 19:17:41 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long[])
2019-03-17 19:17:41 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-03-17 19:17:41 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(com.bootdo.print.domain.PrintDO)
2019-03-17 19:17:41 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-03-17 19:17:41 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-03-17 19:17:41 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-03-17 19:17:41 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-03-17 19:17:41 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-03-17 19:17:41 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-03-17 19:17:41 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-03-17 19:17:41 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-03-17 19:17:41 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-03-17 19:17:41 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-03-17 19:17:41 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-03-17 19:17:41 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 19:17:41 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-03-17 19:17:41 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-03-17 19:17:41 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-03-17 19:17:41 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-03-17 19:17:41 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-03-17 19:17:41 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-03-17 19:17:41 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-03-17 19:17:41 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-03-17 19:17:41 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-03-17 19:17:41 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-03-17 19:17:41 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-03-17 19:17:41 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-03-17 19:17:41 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-03-17 19:17:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-03-17 19:17:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-03-17 19:17:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-03-17 19:17:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-03-17 19:17:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-03-17 19:17:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-03-17 19:17:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 19:17:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-03-17 19:17:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 19:17:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-03-17 19:17:41 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-03-17 19:17:41 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-03-17 19:17:41 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-03-17 19:17:41 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-03-17 19:17:41 -Mapped "{[/water/water/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.ArrearsElec(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/water/water/queryWater],methods=[POST]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.queryWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-03-17 19:17:41 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-03-17 19:17:41 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-03-17 19:17:41 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-03-17 19:17:41 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-03-17 19:17:41 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-03-17 19:17:41 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 19:17:41 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-03-17 19:17:41 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-03-17 19:17:41 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-03-17 19:17:41 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-03-17 19:17:41 -Mapped "{[/water/waterUpLoad/ArrearsWater],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterUpLoadController.ArrearsWater(java.util.Map<java.lang.String, java.lang.Object>)
2019-03-17 19:17:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-03-17 19:17:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-03-17 19:17:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-03-17 19:17:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-03-17 19:17:42 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-03-17 19:17:42 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-03-17 19:17:42 -Initializing ExecutorService  'brokerChannelExecutor'
2019-03-17 19:17:42 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 19:17:43 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62f4ff3b: startup date [Sun Mar 17 19:17:25 CST 2019]; root of context hierarchy
2019-03-17 19:17:43 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 19:17:43 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 19:17:43 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-03-17 19:17:43 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-03-17 19:17:43 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-03-17 19:17:45 -Registering beans for JMX exposure on startup
2019-03-17 19:17:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-03-17 19:17:45 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-03-17 19:17:45 -Starting beans in phase 2147483647
2019-03-17 19:17:45 -Context refreshed
2019-03-17 19:17:45 -Found 1 custom documentation plugin(s)
2019-03-17 19:17:45 -Scanning for api listing references
2019-03-17 19:17:46 -Generating unique operation named: removeUsingPOST_1
2019-03-17 19:17:46 -Generating unique operation named: addUsingGET_1
2019-03-17 19:17:46 -Generating unique operation named: editUsingGET_1
2019-03-17 19:17:46 -Generating unique operation named: listUsingGET_1
2019-03-17 19:17:46 -Generating unique operation named: removeUsingPOST_2
2019-03-17 19:17:46 -Generating unique operation named: removeUsingPOST_3
2019-03-17 19:17:46 -Generating unique operation named: saveUsingPOST_1
2019-03-17 19:17:46 -Generating unique operation named: updateUsingGET_1
2019-03-17 19:17:46 -Generating unique operation named: updateUsingHEAD_1
2019-03-17 19:17:46 -Generating unique operation named: updateUsingPOST_1
2019-03-17 19:17:46 -Generating unique operation named: updateUsingPUT_1
2019-03-17 19:17:46 -Generating unique operation named: updateUsingPATCH_1
2019-03-17 19:17:46 -Generating unique operation named: updateUsingDELETE_1
2019-03-17 19:17:46 -Generating unique operation named: updateUsingOPTIONS_1
2019-03-17 19:17:46 -Generating unique operation named: updateUsingTRACE_1
2019-03-17 19:17:46 -Generating unique operation named: addUsingGET_2
2019-03-17 19:17:46 -Generating unique operation named: editUsingGET_2
2019-03-17 19:17:46 -Generating unique operation named: listUsingGET_2
2019-03-17 19:17:46 -Generating unique operation named: removeUsingPOST_4
2019-03-17 19:17:46 -Generating unique operation named: removeUsingPOST_5
2019-03-17 19:17:46 -Generating unique operation named: saveUsingPOST_2
2019-03-17 19:17:46 -Generating unique operation named: updateUsingGET_2
2019-03-17 19:17:46 -Generating unique operation named: updateUsingHEAD_2
2019-03-17 19:17:46 -Generating unique operation named: updateUsingPOST_2
2019-03-17 19:17:46 -Generating unique operation named: updateUsingPUT_2
2019-03-17 19:17:46 -Generating unique operation named: updateUsingPATCH_2
2019-03-17 19:17:46 -Generating unique operation named: updateUsingDELETE_2
2019-03-17 19:17:46 -Generating unique operation named: updateUsingOPTIONS_2
2019-03-17 19:17:46 -Generating unique operation named: updateUsingTRACE_2
2019-03-17 19:17:46 -Generating unique operation named: exprotExcelUsingGET_1
2019-03-17 19:17:46 -Generating unique operation named: addUsingGET_3
2019-03-17 19:17:46 -Generating unique operation named: editUsingGET_3
2019-03-17 19:17:46 -Generating unique operation named: listUsingGET_3
2019-03-17 19:17:46 -Generating unique operation named: removeUsingPOST_6
2019-03-17 19:17:46 -Generating unique operation named: removeUsingPOST_7
2019-03-17 19:17:46 -Generating unique operation named: saveUsingPOST_3
2019-03-17 19:17:46 -Generating unique operation named: updateUsingGET_3
2019-03-17 19:17:46 -Generating unique operation named: updateUsingHEAD_3
2019-03-17 19:17:46 -Generating unique operation named: updateUsingPOST_3
2019-03-17 19:17:46 -Generating unique operation named: updateUsingPUT_3
2019-03-17 19:17:46 -Generating unique operation named: updateUsingPATCH_3
2019-03-17 19:17:46 -Generating unique operation named: updateUsingDELETE_3
2019-03-17 19:17:46 -Generating unique operation named: updateUsingOPTIONS_3
2019-03-17 19:17:46 -Generating unique operation named: updateUsingTRACE_3
2019-03-17 19:17:46 -Generating unique operation named: addUsingGET_4
2019-03-17 19:17:46 -Generating unique operation named: editUsingGET_4
2019-03-17 19:17:46 -Generating unique operation named: listUsingGET_4
2019-03-17 19:17:46 -Generating unique operation named: removeUsingPOST_8
2019-03-17 19:17:46 -Generating unique operation named: removeUsingPOST_9
2019-03-17 19:17:46 -Generating unique operation named: saveUsingPOST_4
2019-03-17 19:17:46 -Generating unique operation named: updateUsingGET_4
2019-03-17 19:17:46 -Generating unique operation named: updateUsingHEAD_4
2019-03-17 19:17:46 -Generating unique operation named: updateUsingPOST_4
2019-03-17 19:17:46 -Generating unique operation named: updateUsingPUT_4
2019-03-17 19:17:46 -Generating unique operation named: updateUsingPATCH_4
2019-03-17 19:17:46 -Generating unique operation named: updateUsingDELETE_4
2019-03-17 19:17:46 -Generating unique operation named: updateUsingOPTIONS_4
2019-03-17 19:17:46 -Generating unique operation named: updateUsingTRACE_4
2019-03-17 19:17:46 -Generating unique operation named: ElecUsingGET_1
2019-03-17 19:17:46 -Generating unique operation named: addUsingGET_5
2019-03-17 19:17:46 -Generating unique operation named: editUsingGET_5
2019-03-17 19:17:46 -Generating unique operation named: listUsingGET_5
2019-03-17 19:17:46 -Generating unique operation named: removeUsingPOST_10
2019-03-17 19:17:46 -Generating unique operation named: removeUsingPOST_11
2019-03-17 19:17:46 -Generating unique operation named: saveUsingPOST_5
2019-03-17 19:17:46 -Generating unique operation named: updateUsingGET_5
2019-03-17 19:17:46 -Generating unique operation named: updateUsingHEAD_5
2019-03-17 19:17:46 -Generating unique operation named: updateUsingPOST_5
2019-03-17 19:17:46 -Generating unique operation named: updateUsingPUT_5
2019-03-17 19:17:46 -Generating unique operation named: updateUsingPATCH_5
2019-03-17 19:17:46 -Generating unique operation named: updateUsingDELETE_5
2019-03-17 19:17:46 -Generating unique operation named: updateUsingOPTIONS_5
2019-03-17 19:17:46 -Generating unique operation named: updateUsingTRACE_5
2019-03-17 19:17:46 -Generating unique operation named: editUsingGET_6
2019-03-17 19:17:47 -Generating unique operation named: listUsingGET_6
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPOST_6
2019-03-17 19:17:47 -Generating unique operation named: addUsingGET_6
2019-03-17 19:17:47 -Generating unique operation named: editUsingGET_7
2019-03-17 19:17:47 -Generating unique operation named: listUsingGET_7
2019-03-17 19:17:47 -Generating unique operation named: removeUsingPOST_12
2019-03-17 19:17:47 -Generating unique operation named: removeUsingPOST_13
2019-03-17 19:17:47 -Generating unique operation named: saveUsingPOST_6
2019-03-17 19:17:47 -Generating unique operation named: updateUsingGET_6
2019-03-17 19:17:47 -Generating unique operation named: updateUsingHEAD_6
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPOST_7
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPUT_6
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPATCH_6
2019-03-17 19:17:47 -Generating unique operation named: updateUsingDELETE_6
2019-03-17 19:17:47 -Generating unique operation named: updateUsingOPTIONS_6
2019-03-17 19:17:47 -Generating unique operation named: updateUsingTRACE_6
2019-03-17 19:17:47 -Generating unique operation named: exprotExcelUsingGET_2
2019-03-17 19:17:47 -Generating unique operation named: addUsingGET_7
2019-03-17 19:17:47 -Generating unique operation named: editUsingGET_8
2019-03-17 19:17:47 -Generating unique operation named: listUsingGET_8
2019-03-17 19:17:47 -Generating unique operation named: removeUsingPOST_14
2019-03-17 19:17:47 -Generating unique operation named: removeUsingPOST_15
2019-03-17 19:17:47 -Generating unique operation named: saveUsingPOST_7
2019-03-17 19:17:47 -Generating unique operation named: updateUsingGET_7
2019-03-17 19:17:47 -Generating unique operation named: updateUsingHEAD_7
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPOST_8
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPUT_7
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPATCH_7
2019-03-17 19:17:47 -Generating unique operation named: updateUsingDELETE_7
2019-03-17 19:17:47 -Generating unique operation named: updateUsingOPTIONS_7
2019-03-17 19:17:47 -Generating unique operation named: updateUsingTRACE_7
2019-03-17 19:17:47 -Generating unique operation named: addUsingGET_8
2019-03-17 19:17:47 -Generating unique operation named: editUsingGET_9
2019-03-17 19:17:47 -Generating unique operation named: listUsingGET_9
2019-03-17 19:17:47 -Generating unique operation named: removeUsingPOST_16
2019-03-17 19:17:47 -Generating unique operation named: removeUsingPOST_17
2019-03-17 19:17:47 -Generating unique operation named: saveUsingPOST_8
2019-03-17 19:17:47 -Generating unique operation named: updateUsingGET_8
2019-03-17 19:17:47 -Generating unique operation named: updateUsingHEAD_8
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPOST_9
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPUT_8
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPATCH_8
2019-03-17 19:17:47 -Generating unique operation named: updateUsingDELETE_8
2019-03-17 19:17:47 -Generating unique operation named: updateUsingOPTIONS_8
2019-03-17 19:17:47 -Generating unique operation named: updateUsingTRACE_8
2019-03-17 19:17:47 -Generating unique operation named: addUsingGET_9
2019-03-17 19:17:47 -Generating unique operation named: editUsingGET_10
2019-03-17 19:17:47 -Generating unique operation named: infoUsingGET_1
2019-03-17 19:17:47 -Generating unique operation named: infoUsingHEAD_1
2019-03-17 19:17:47 -Generating unique operation named: infoUsingPOST_1
2019-03-17 19:17:47 -Generating unique operation named: infoUsingPUT_1
2019-03-17 19:17:47 -Generating unique operation named: infoUsingPATCH_1
2019-03-17 19:17:47 -Generating unique operation named: infoUsingDELETE_1
2019-03-17 19:17:47 -Generating unique operation named: infoUsingOPTIONS_1
2019-03-17 19:17:47 -Generating unique operation named: infoUsingTRACE_1
2019-03-17 19:17:47 -Generating unique operation named: listUsingGET_10
2019-03-17 19:17:47 -Generating unique operation named: removeUsingPOST_18
2019-03-17 19:17:47 -Generating unique operation named: removeUsingPOST_19
2019-03-17 19:17:47 -Generating unique operation named: saveUsingPOST_9
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPOST_10
2019-03-17 19:17:47 -Generating unique operation named: listUsingGET_11
2019-03-17 19:17:47 -Generating unique operation named: removeUsingPOST_20
2019-03-17 19:17:47 -Generating unique operation named: welcomeUsingGET_1
2019-03-17 19:17:47 -Generating unique operation named: addUsingGET_10
2019-03-17 19:17:47 -Generating unique operation named: editUsingGET_11
2019-03-17 19:17:47 -Generating unique operation named: listUsingGET_12
2019-03-17 19:17:47 -Generating unique operation named: removeUsingPOST_21
2019-03-17 19:17:47 -Generating unique operation named: saveUsingPOST_10
2019-03-17 19:17:47 -Generating unique operation named: treeUsingGET_1
2019-03-17 19:17:47 -Generating unique operation named: treeUsingGET_2
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPOST_11
2019-03-17 19:17:47 -Generating unique operation named: addUsingGET_11
2019-03-17 19:17:47 -Generating unique operation named: editUsingGET_12
2019-03-17 19:17:47 -Generating unique operation named: listUsingGET_13
2019-03-17 19:17:47 -Generating unique operation named: removeUsingPOST_22
2019-03-17 19:17:47 -Generating unique operation named: removeUsingPOST_23
2019-03-17 19:17:47 -Generating unique operation named: saveUsingPOST_11
2019-03-17 19:17:47 -Generating unique operation named: updateUsingGET_9
2019-03-17 19:17:47 -Generating unique operation named: updateUsingHEAD_9
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPOST_12
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPUT_9
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPATCH_9
2019-03-17 19:17:47 -Generating unique operation named: updateUsingDELETE_9
2019-03-17 19:17:47 -Generating unique operation named: updateUsingOPTIONS_9
2019-03-17 19:17:47 -Generating unique operation named: updateUsingTRACE_9
2019-03-17 19:17:47 -Generating unique operation named: addUsingGET_12
2019-03-17 19:17:47 -Generating unique operation named: editUsingGET_13
2019-03-17 19:17:47 -Generating unique operation named: listUsingGET_14
2019-03-17 19:17:47 -Generating unique operation named: removeUsingPOST_24
2019-03-17 19:17:47 -Generating unique operation named: removeUsingPOST_25
2019-03-17 19:17:47 -Generating unique operation named: saveUsingPOST_12
2019-03-17 19:17:47 -Generating unique operation named: updateUsingGET_10
2019-03-17 19:17:47 -Generating unique operation named: updateUsingHEAD_10
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPOST_13
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPUT_10
2019-03-17 19:17:47 -Generating unique operation named: updateUsingPATCH_10
2019-03-17 19:17:47 -Generating unique operation named: updateUsingDELETE_10
2019-03-17 19:17:47 -Generating unique operation named: updateUsingOPTIONS_10
2019-03-17 19:17:47 -Generating unique operation named: updateUsingTRACE_10
2019-03-17 19:17:47 -Generating unique operation named: addUsingGET_13
2019-03-17 19:17:47 -Generating unique operation named: batchRemoveUsingPOST_1
2019-03-17 19:17:47 -Generating unique operation named: editUsingGET_14
2019-03-17 19:17:47 -Generating unique operation named: listUsingGET_15
2019-03-17 19:17:47 -Generating unique operation named: saveUsingPOST_13
2019-03-17 19:17:47 -Generating unique operation named: saveUsingPOST_14
2019-03-17 19:17:48 -Generating unique operation named: updateUsingPOST_14
2019-03-17 19:17:48 -Generating unique operation named: listUsingGET_16
2019-03-17 19:17:48 -Generating unique operation named: listUsingHEAD_1
2019-03-17 19:17:48 -Generating unique operation named: listUsingPOST_1
2019-03-17 19:17:48 -Generating unique operation named: listUsingPUT_1
2019-03-17 19:17:48 -Generating unique operation named: listUsingPATCH_1
2019-03-17 19:17:48 -Generating unique operation named: listUsingDELETE_1
2019-03-17 19:17:48 -Generating unique operation named: listUsingOPTIONS_1
2019-03-17 19:17:48 -Generating unique operation named: listUsingTRACE_1
2019-03-17 19:17:48 -Generating unique operation named: addUsingGET_14
2019-03-17 19:17:48 -Generating unique operation named: batchRemoveUsingPOST_2
2019-03-17 19:17:48 -Generating unique operation named: editUsingGET_15
2019-03-17 19:17:48 -Generating unique operation named: listUsingGET_17
2019-03-17 19:17:48 -Generating unique operation named: removeUsingPOST_26
2019-03-17 19:17:48 -Generating unique operation named: saveUsingPOST_15
2019-03-17 19:17:48 -Generating unique operation named: treeUsingGET_3
2019-03-17 19:17:48 -Generating unique operation named: treeViewUsingGET_1
2019-03-17 19:17:48 -Generating unique operation named: updateUsingPOST_15
2019-03-17 19:17:48 -Generating unique operation named: addUsingGET_15
2019-03-17 19:17:48 -Generating unique operation named: editUsingGET_16
2019-03-17 19:17:48 -Generating unique operation named: listUsingGET_18
2019-03-17 19:17:48 -Generating unique operation named: removeUsingPOST_27
2019-03-17 19:17:48 -Generating unique operation named: removeUsingPOST_28
2019-03-17 19:17:48 -Generating unique operation named: saveUsingPOST_16
2019-03-17 19:17:48 -Generating unique operation named: updateUsingGET_11
2019-03-17 19:17:48 -Generating unique operation named: updateUsingHEAD_11
2019-03-17 19:17:48 -Generating unique operation named: updateUsingPOST_16
2019-03-17 19:17:48 -Generating unique operation named: updateUsingPUT_11
2019-03-17 19:17:48 -Generating unique operation named: updateUsingPATCH_11
2019-03-17 19:17:48 -Generating unique operation named: updateUsingDELETE_11
2019-03-17 19:17:48 -Generating unique operation named: updateUsingOPTIONS_11
2019-03-17 19:17:48 -Generating unique operation named: updateUsingTRACE_11
2019-03-17 19:17:48 -Generating unique operation named: exprotExcelUsingGET_3
2019-03-17 19:17:48 -Generating unique operation named: addUsingGET_16
2019-03-17 19:17:48 -Generating unique operation named: editUsingGET_17
2019-03-17 19:17:48 -Generating unique operation named: listUsingGET_19
2019-03-17 19:17:48 -Generating unique operation named: removeUsingPOST_29
2019-03-17 19:17:48 -Generating unique operation named: removeUsingPOST_30
2019-03-17 19:17:48 -Generating unique operation named: saveUsingPOST_17
2019-03-17 19:17:48 -Generating unique operation named: updateUsingGET_12
2019-03-17 19:17:48 -Generating unique operation named: updateUsingHEAD_12
2019-03-17 19:17:48 -Generating unique operation named: updateUsingPOST_17
2019-03-17 19:17:48 -Generating unique operation named: updateUsingPUT_12
2019-03-17 19:17:48 -Generating unique operation named: updateUsingPATCH_12
2019-03-17 19:17:48 -Generating unique operation named: updateUsingDELETE_12
2019-03-17 19:17:48 -Generating unique operation named: updateUsingOPTIONS_12
2019-03-17 19:17:48 -Generating unique operation named: updateUsingTRACE_12
2019-03-17 19:17:48 -Generating unique operation named: addUsingGET_17
2019-03-17 19:17:48 -Generating unique operation named: editUsingGET_18
2019-03-17 19:17:48 -Generating unique operation named: listUsingGET_20
2019-03-17 19:17:48 -Generating unique operation named: removeUsingPOST_31
2019-03-17 19:17:48 -Generating unique operation named: removeUsingPOST_32
2019-03-17 19:17:48 -Generating unique operation named: saveUsingPOST_18
2019-03-17 19:17:48 -Generating unique operation named: updateUsingGET_13
2019-03-17 19:17:48 -Generating unique operation named: updateUsingHEAD_13
2019-03-17 19:17:48 -Generating unique operation named: updateUsingPOST_18
2019-03-17 19:17:48 -Generating unique operation named: updateUsingPUT_13
2019-03-17 19:17:48 -Generating unique operation named: updateUsingPATCH_13
2019-03-17 19:17:48 -Generating unique operation named: updateUsingDELETE_13
2019-03-17 19:17:48 -Generating unique operation named: updateUsingOPTIONS_13
2019-03-17 19:17:48 -Generating unique operation named: updateUsingTRACE_13
2019-03-17 19:17:48 -Starting Quartz Scheduler now
2019-03-17 19:17:48 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-03-17 19:17:48 -Starting...
2019-03-17 19:17:48 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-03-17 19:17:48 -Started.
2019-03-17 19:17:48 -Starting ProtocolHandler ["http-nio-8081"]
2019-03-17 19:17:48 -Using a shared selector for servlet write/read
2019-03-17 19:17:48 -Tomcat started on port(s): 8081 (http) with context path ''
2019-03-17 19:17:48 -Started BootdoApplication in 25.648 seconds (JVM running for 27.211)
2019-03-17 19:17:48 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-03-17 19:17:49 -==> Parameters: 
2019-03-17 19:17:49 -<==      Total: 1
2019-03-17 19:17:55 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-03-17 19:17:55 -FrameworkServlet 'dispatcherServlet': initialization started
2019-03-17 19:17:55 -FrameworkServlet 'dispatcherServlet': initialization completed in 66 ms
2019-03-17 19:17:55 -Enabling session validation scheduler...
2019-03-17 19:17:55 -请求地址 : http://localhost:8081/
2019-03-17 19:17:55 -HTTP METHOD : GET
2019-03-17 19:17:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-03-17 19:17:55 -参数 : [{}]
2019-03-17 19:17:55 -耗时 : 2
2019-03-17 19:17:55 -返回值 : redirect:/index
2019-03-17 19:17:56 -请求地址 : http://localhost:8081/login;JSESSIONID=578a81de-ab36-4c53-a200-a6e3cb0ae53b
2019-03-17 19:17:56 -HTTP METHOD : GET
2019-03-17 19:17:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-03-17 19:17:56 -参数 : [{}]
2019-03-17 19:17:56 -耗时 : 1
2019-03-17 19:17:56 -返回值 : login
2019-03-17 19:17:57 -请求地址 : http://localhost:8081/getVerify
2019-03-17 19:17:57 -HTTP METHOD : GET
2019-03-17 19:17:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-03-17 19:17:57 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@30d6e774, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3e110f1e]
2019-03-17 19:17:57 -0502
2019-03-17 19:17:57 -耗时 : 481
2019-03-17 19:17:57 -返回值 : null
2019-03-17 19:18:05 -请求地址 : http://localhost:8081/login
2019-03-17 19:18:05 -HTTP METHOD : POST
2019-03-17 19:18:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-03-17 19:18:05 -参数 : [admin, 111111, 0502, org.apache.shiro.web.servlet.ShiroHttpServletRequest@4760b169]
2019-03-17 19:18:05 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-03-17 19:18:05 -==> Parameters: admin(String)
2019-03-17 19:18:05 -<==      Total: 1
2019-03-17 19:18:05 -耗时 : 151
2019-03-17 19:18:05 -返回值 : {msg=操作成功, code=0}
2019-03-17 19:18:05 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-03-17 19:18:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 19:18:05 -==> Parameters: 1(Long), admin(String), 登录(String), 152(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-03-17 19:18:05.303(Timestamp)
2019-03-17 19:18:05 -<==    Updates: 1
2019-03-17 19:18:05 -请求地址 : http://localhost:8081/index
2019-03-17 19:18:05 -HTTP METHOD : GET
2019-03-17 19:18:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 19:18:05 -参数 : [{}]
2019-03-17 19:18:05 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 19:18:05 -==> Parameters: 1(Long)
2019-03-17 19:18:05 -<==      Total: 45
2019-03-17 19:18:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 19:18:05 -==> Parameters: 138(Long)
2019-03-17 19:18:05 -<==      Total: 1
2019-03-17 19:18:05 -耗时 : 122
2019-03-17 19:18:05 -返回值 : index_v1
2019-03-17 19:18:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 19:18:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 122(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 19:18:05.544(Timestamp)
2019-03-17 19:18:05 -<==    Updates: 1
2019-03-17 19:18:05 -请求地址 : http://localhost:8081/main
2019-03-17 19:18:05 -HTTP METHOD : GET
2019-03-17 19:18:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 19:18:05 -参数 : []
2019-03-17 19:18:05 -耗时 : 0
2019-03-17 19:18:05 -返回值 : main
2019-03-17 19:18:05 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 19:18:05 -HTTP METHOD : GET
2019-03-17 19:18:05 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 19:18:05 -参数 : []
2019-03-17 19:18:05 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 19:18:05 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 19:18:05 -<==      Total: 0
2019-03-17 19:18:05 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 19:18:05 -==> Parameters: 1(Long), 0(String)
2019-03-17 19:18:05 -<==      Total: 1
2019-03-17 19:18:05 -耗时 : 46
2019-03-17 19:18:05 -返回值 : com.bootdo.common.utils.PageUtils@466a41be
2019-03-17 19:18:06 -请求地址 : http://localhost:8081/main
2019-03-17 19:18:06 -HTTP METHOD : GET
2019-03-17 19:18:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 19:18:06 -参数 : []
2019-03-17 19:18:06 -耗时 : 1
2019-03-17 19:18:06 -返回值 : main
2019-03-17 19:18:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-03-17 19:18:13 -==> Parameters: 1(Long)
2019-03-17 19:18:13 -<==      Total: 86
2019-03-17 19:18:13 -请求地址 : http://localhost:8081/elec/elec
2019-03-17 19:18:13 -HTTP METHOD : GET
2019-03-17 19:18:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-17 19:18:13 -参数 : []
2019-03-17 19:18:13 -耗时 : 0
2019-03-17 19:18:13 -返回值 : elec/elec/elec
2019-03-17 19:18:13 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 19:18:13 -HTTP METHOD : GET
2019-03-17 19:18:13 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 19:18:13 -参数 : [userType]
2019-03-17 19:18:13 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 19:18:13 -==> Parameters: userType(String)
2019-03-17 19:18:13 -<==      Total: 2
2019-03-17 19:18:13 -耗时 : 31
2019-03-17 19:18:13 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 19:18:14 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 19:18:14 -HTTP METHOD : GET
2019-03-17 19:18:14 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 19:18:14 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@1c5cad48]
2019-03-17 19:18:14 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-17 19:18:14 -==> Parameters: 0(Integer), 3(Integer)
2019-03-17 19:18:14 -<==      Total: 3
2019-03-17 19:18:14 -==>  Preparing: select count(*) from elec 
2019-03-17 19:18:14 -==> Parameters: 
2019-03-17 19:18:14 -<==      Total: 1
2019-03-17 19:18:14 -耗时 : 87
2019-03-17 19:18:14 -返回值 : com.bootdo.common.utils.PageUtils@5290677e
2019-03-17 19:18:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 19:18:17 -HTTP METHOD : GET
2019-03-17 19:18:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 19:18:17 -参数 : []
2019-03-17 19:18:17 -耗时 : 0
2019-03-17 19:18:17 -返回值 : system/dept/deptTree
2019-03-17 19:18:18 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 19:18:18 -HTTP METHOD : GET
2019-03-17 19:18:18 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 19:18:18 -参数 : []
2019-03-17 19:18:18 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 19:18:18 -==> Parameters: 
2019-03-17 19:18:18 -<==      Total: 3
2019-03-17 19:18:18 -耗时 : 26
2019-03-17 19:18:18 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 19:18:20 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-17 19:18:20 -HTTP METHOD : GET
2019-03-17 19:18:20 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-17 19:18:20 -参数 : [com.bootdo.elec.vo.ElecVo@784e16e4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@4bbc7c4d]
2019-03-17 19:18:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 9]
2019-03-17 19:19:28 -请求地址 : http://localhost:8081/index
2019-03-17 19:19:28 -HTTP METHOD : GET
2019-03-17 19:19:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-03-17 19:19:28 -参数 : [{}]
2019-03-17 19:19:28 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-03-17 19:19:28 -==> Parameters: 1(Long)
2019-03-17 19:19:28 -<==      Total: 45
2019-03-17 19:19:28 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-03-17 19:19:28 -==> Parameters: 138(Long)
2019-03-17 19:19:28 -<==      Total: 1
2019-03-17 19:19:28 -耗时 : 42
2019-03-17 19:19:28 -返回值 : index_v1
2019-03-17 19:19:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-03-17 19:19:28 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 42(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","parentId":"97","text":"欠费报表图"},{"attributes":{"icon":"fa fa-tachometer","url":"charts/countRun"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"112","parentId":"97","text":"走势图报表"}],"hasChildren":true,"hasParent":false,"id":"97","parentId":"0","text":"统计管理"},{"attributes":{"icon":"fa fa-bars","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-book","url":"/common/dict"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"78","parentId":"1","text":"数据字典"},{"attributes":{"icon":"fa fa-folder-open","url":"/common/sysFile"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"71","parentId":"1","text":"文件管理"}],"h(String), 127.0.0.1(String), 2019-03-17 19:19:28.201(Timestamp)
2019-03-17 19:19:28 -<==    Updates: 1
2019-03-17 19:19:28 -请求地址 : http://localhost:8081/main
2019-03-17 19:19:28 -HTTP METHOD : GET
2019-03-17 19:19:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 19:19:28 -参数 : []
2019-03-17 19:19:28 -耗时 : 5
2019-03-17 19:19:28 -返回值 : main
2019-03-17 19:19:28 -请求地址 : http://localhost:8081/oa/notify/message
2019-03-17 19:19:28 -HTTP METHOD : GET
2019-03-17 19:19:28 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-03-17 19:19:28 -参数 : []
2019-03-17 19:19:28 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-03-17 19:19:28 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-03-17 19:19:28 -<==      Total: 0
2019-03-17 19:19:28 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-03-17 19:19:28 -==> Parameters: 1(Long), 0(String)
2019-03-17 19:19:28 -<==      Total: 1
2019-03-17 19:19:28 -耗时 : 10
2019-03-17 19:19:28 -返回值 : com.bootdo.common.utils.PageUtils@175aaa10
2019-03-17 19:19:29 -请求地址 : http://localhost:8081/main
2019-03-17 19:19:29 -HTTP METHOD : GET
2019-03-17 19:19:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-03-17 19:19:29 -参数 : []
2019-03-17 19:19:29 -耗时 : 1
2019-03-17 19:19:29 -返回值 : main
2019-03-17 19:19:35 -请求地址 : http://localhost:8081/elec/elec
2019-03-17 19:19:35 -HTTP METHOD : GET
2019-03-17 19:19:35 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-03-17 19:19:35 -参数 : []
2019-03-17 19:19:35 -耗时 : 1
2019-03-17 19:19:35 -返回值 : elec/elec/elec
2019-03-17 19:19:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-03-17 19:19:35 -HTTP METHOD : GET
2019-03-17 19:19:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-03-17 19:19:35 -参数 : [userType]
2019-03-17 19:19:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-03-17 19:19:35 -==> Parameters: userType(String)
2019-03-17 19:19:35 -<==      Total: 2
2019-03-17 19:19:35 -耗时 : 13
2019-03-17 19:19:35 -返回值 : [DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=1, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-03-17 19:19:35 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 19:19:35 -HTTP METHOD : GET
2019-03-17 19:19:35 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 19:19:35 -参数 : [{limit=3, offset=0, userType=, userOrg=, userId=, createTime=}, com.bootdo.elec.domain.ElecDO@673349d9]
2019-03-17 19:19:35 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-03-17 19:19:35 -==> Parameters: 0(Integer), 3(Integer)
2019-03-17 19:19:35 -<==      Total: 3
2019-03-17 19:19:35 -==>  Preparing: select count(*) from elec 
2019-03-17 19:19:35 -==> Parameters: 
2019-03-17 19:19:35 -<==      Total: 1
2019-03-17 19:19:35 -耗时 : 9
2019-03-17 19:19:35 -返回值 : com.bootdo.common.utils.PageUtils@3b11510d
2019-03-17 19:19:42 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-03-17 19:19:42 -HTTP METHOD : GET
2019-03-17 19:19:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-03-17 19:19:42 -参数 : []
2019-03-17 19:19:42 -耗时 : 0
2019-03-17 19:19:42 -返回值 : system/dept/deptTree
2019-03-17 19:19:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-03-17 19:19:43 -HTTP METHOD : GET
2019-03-17 19:19:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-03-17 19:19:43 -参数 : []
2019-03-17 19:19:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-03-17 19:19:43 -==> Parameters: 
2019-03-17 19:19:43 -<==      Total: 3
2019-03-17 19:19:43 -耗时 : 5
2019-03-17 19:19:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-03-17 19:19:45 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-17 19:19:45 -HTTP METHOD : GET
2019-03-17 19:19:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-17 19:19:45 -参数 : [com.bootdo.elec.vo.ElecVo@69db55bc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@485589b5]
2019-03-17 19:19:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_org = ? and CREATE_TIME = ? 
2019-03-17 19:19:45 -==> Parameters: 2(Long), 2019-03(String)
2019-03-17 19:19:45 -<==      Total: 6
2019-03-17 19:19:45 -耗时 : 424
2019-03-17 19:19:45 -返回值 : null
2019-03-17 19:23:29 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-17 19:23:29 -HTTP METHOD : GET
2019-03-17 19:23:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-17 19:23:29 -参数 : [com.bootdo.elec.vo.ElecVo@2e1d3eec, org.apache.shiro.web.servlet.ShiroHttpServletResponse@42e20621]
2019-03-17 19:23:29 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_org = ? and CREATE_TIME = ? 
2019-03-17 19:23:29 -==> Parameters: 2(Long), 2019-02(String)
2019-03-17 19:23:29 -<==      Total: 2
2019-03-17 19:23:29 -耗时 : 27
2019-03-17 19:23:29 -返回值 : null
2019-03-17 19:25:49 -请求地址 : http://localhost:8081/elec/elec/list
2019-03-17 19:25:49 -HTTP METHOD : GET
2019-03-17 19:25:49 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-03-17 19:25:49 -参数 : [{limit=3, offset=0, userType=B, userOrg=2, userId=, createTime=2019-02, type=B}, com.bootdo.elec.domain.ElecDO@4691ba37]
2019-03-17 19:25:49 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? order by id asc limit ?, ? 
2019-03-17 19:25:49 -==> Parameters: B(String), 2(String), 2019-02(String), 0(Integer), 3(Integer)
2019-03-17 19:25:49 -<==      Total: 0
2019-03-17 19:25:49 -==>  Preparing: select count(*) from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-17 19:25:49 -==> Parameters: B(String), 2(String), 2019-02(String)
2019-03-17 19:25:49 -<==      Total: 1
2019-03-17 19:25:49 -耗时 : 10
2019-03-17 19:25:49 -返回值 : com.bootdo.common.utils.PageUtils@344316e4
2019-03-17 19:25:52 -请求地址 : http://localhost:8081/elec/elec/exprotElec
2019-03-17 19:25:52 -HTTP METHOD : GET
2019-03-17 19:25:52 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.exprotExcel
2019-03-17 19:25:52 -参数 : [com.bootdo.elec.vo.ElecVo@6da628e6, org.apache.shiro.web.servlet.ShiroHttpServletResponse@56253e1c]
2019-03-17 19:25:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE user_type = ? and user_org = ? and CREATE_TIME = ? 
2019-03-17 19:25:52 -==> Parameters: B(String), 2(Long), 2019-02(String)
2019-03-17 19:25:52 -<==      Total: 0
2019-03-17 19:25:52 -耗时 : 16
2019-03-17 19:25:52 -返回值 : null
2019-03-17 19:48:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 442]
2019-03-17 20:17:55 -Validating all active sessions...
2019-03-17 20:17:55 -Finished session validation.  [1] sessions were stopped.
2019-03-17 20:18:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 875]
2019-03-17 20:55:37 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 2, queued tasks = 0, completed tasks = 963]
2019-03-17 21:18:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1650]
2019-03-17 21:48:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2083]
2019-03-17 21:56:08 -Validating all active sessions...
2019-03-17 21:56:08 -Finished session validation.  No sessions were stopped.
2019-03-17 22:17:55 -Validating all active sessions...
2019-03-17 22:17:55 -Finished session validation.  No sessions were stopped.
2019-03-17 22:18:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2516]
2019-03-17 22:48:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 21], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 2949]

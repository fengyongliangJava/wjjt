2019-05-28 09:14:52 -Starting BootdoApplication on PC-201905091110 with PID 18424 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-28 09:14:52 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-28 09:14:52 -The following profiles are active: dev
2019-05-28 09:14:52 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@565b064f: startup date [Tue May 28 09:14:52 CST 2019]; root of context hierarchy
2019-05-28 09:15:02 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-28 09:15:10 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d479268c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 09:15:10 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c6d25533] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 09:15:12 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 09:15:12 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 09:15:12 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 09:15:12 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-28 09:15:12 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-28 09:15:12 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 09:15:13 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 09:15:13 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 09:15:13 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 09:15:14 -Tomcat initialized with port(s): 8081 (http)
2019-05-28 09:15:14 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-28 09:15:14 -Starting service [Tomcat]
2019-05-28 09:15:14 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-28 09:15:15 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-28 09:15:15 -Initializing Spring embedded WebApplicationContext
2019-05-28 09:15:15 -Root WebApplicationContext: initialization completed in 22980 ms
2019-05-28 09:15:16 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-28 09:15:16 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-28 09:15:16 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-28 09:15:16 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-28 09:15:16 -Filter xssFilter was not registered (disabled)
2019-05-28 09:15:16 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-28 09:15:16 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-28 09:15:16 -Servlet statViewServlet mapped to [/druid/*]
2019-05-28 09:15:16 -Servlet dispatcherServlet mapped to [/]
2019-05-28 09:15:22 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@565b064f: startup date [Tue May 28 09:14:52 CST 2019]; root of context hierarchy
2019-05-28 09:15:23 -Using default implementation for ThreadExecutor
2019-05-28 09:15:23 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-28 09:15:23 -Quartz Scheduler v.2.2.1 created.
2019-05-28 09:15:23 -RAMJobStore initialized.
2019-05-28 09:15:23 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-28 09:15:23 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-28 09:15:23 -Quartz scheduler version: 2.2.1
2019-05-28 09:15:23 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@dd060be
2019-05-28 09:15:24 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-28 09:15:24 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-28 09:15:28 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-28 09:15:28 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 09:15:28 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 09:15:28 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-28 09:15:28 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-28 09:15:28 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-28 09:15:28 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 09:15:28 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-28 09:15:28 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-28 09:15:28 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 09:15:28 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-28 09:15:28 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 09:15:28 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 09:15:28 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-28 09:15:28 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 09:15:28 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-28 09:15:28 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-28 09:15:28 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 09:15:28 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 09:15:28 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-28 09:15:28 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 09:15:28 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-28 09:15:28 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 09:15:28 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-28 09:15:28 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-28 09:15:28 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-28 09:15:28 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-28 09:15:28 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-28 09:15:28 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:28 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-28 09:15:28 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-28 09:15:28 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-28 09:15:28 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-28 09:15:28 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-28 09:15:28 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-28 09:15:28 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-28 09:15:28 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-28 09:15:28 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-28 09:15:28 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:28 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-28 09:15:28 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-28 09:15:28 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-28 09:15:28 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:28 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-28 09:15:28 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 09:15:28 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-28 09:15:28 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 09:15:28 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-28 09:15:28 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-28 09:15:28 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-28 09:15:28 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-28 09:15:28 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:28 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-28 09:15:28 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-28 09:15:28 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-28 09:15:28 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-28 09:15:28 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-28 09:15:28 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-28 09:15:28 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:28 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-28 09:15:28 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-28 09:15:28 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-28 09:15:28 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-28 09:15:28 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-28 09:15:28 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-28 09:15:28 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 09:15:28 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 09:15:28 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-28 09:15:28 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-28 09:15:28 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-28 09:15:28 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 09:15:28 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-28 09:15:28 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-28 09:15:28 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-28 09:15:28 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-28 09:15:28 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:28 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-28 09:15:28 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-28 09:15:28 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-28 09:15:28 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 09:15:28 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 09:15:28 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-28 09:15:28 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-28 09:15:28 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-28 09:15:28 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-28 09:15:28 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:28 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-28 09:15:28 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-28 09:15:28 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-28 09:15:28 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 09:15:28 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-28 09:15:28 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-28 09:15:28 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-28 09:15:28 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 09:15:28 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:28 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 09:15:28 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-28 09:15:28 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 09:15:28 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-28 09:15:28 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-28 09:15:28 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 09:15:28 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-28 09:15:28 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 09:15:28 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 09:15:28 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-28 09:15:28 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-28 09:15:28 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-28 09:15:28 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 09:15:28 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 09:15:28 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-28 09:15:28 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-28 09:15:28 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-28 09:15:28 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-28 09:15:28 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-28 09:15:28 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-28 09:15:28 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-28 09:15:28 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-28 09:15:28 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-28 09:15:28 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-28 09:15:28 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 09:15:28 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-28 09:15:28 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-28 09:15:28 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-28 09:15:28 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-28 09:15:28 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-28 09:15:28 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:28 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-28 09:15:28 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-28 09:15:28 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:28 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-28 09:15:28 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-28 09:15:28 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-28 09:15:28 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-28 09:15:28 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-28 09:15:28 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:28 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-28 09:15:28 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-28 09:15:28 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-28 09:15:28 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-28 09:15:28 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-28 09:15:28 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-28 09:15:28 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-28 09:15:28 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-28 09:15:28 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-28 09:15:28 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-28 09:15:28 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-28 09:15:28 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-28 09:15:28 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-28 09:15:28 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-28 09:15:28 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-28 09:15:28 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:28 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 09:15:28 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-28 09:15:28 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-28 09:15:28 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-28 09:15:28 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-28 09:15:29 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:29 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-28 09:15:29 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-28 09:15:29 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-28 09:15:29 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-28 09:15:29 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 09:15:29 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-28 09:15:29 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-28 09:15:29 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-28 09:15:29 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-28 09:15:29 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-28 09:15:29 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-28 09:15:29 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:29 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-28 09:15:29 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-28 09:15:29 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-28 09:15:29 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-28 09:15:29 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-28 09:15:29 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:29 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-28 09:15:29 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-28 09:15:29 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-28 09:15:29 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:29 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-28 09:15:29 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-28 09:15:29 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-28 09:15:29 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-28 09:15:29 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 09:15:29 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 09:15:29 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 09:15:29 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:29 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-28 09:15:29 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-28 09:15:29 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 09:15:29 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-28 09:15:29 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-28 09:15:29 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-28 09:15:29 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-28 09:15:29 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-28 09:15:29 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-28 09:15:29 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:29 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-28 09:15:29 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-28 09:15:29 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:29 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:29 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-28 09:15:29 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:29 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 09:15:29 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-28 09:15:29 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-28 09:15:29 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-28 09:15:29 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 09:15:29 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 09:15:29 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 09:15:29 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-28 09:15:29 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 09:15:29 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 09:15:29 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 09:15:29 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-28 09:15:29 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-28 09:15:29 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 09:15:29 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-28 09:15:29 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-28 09:15:29 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-28 09:15:29 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-28 09:15:30 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-28 09:15:30 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-28 09:15:30 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 09:15:31 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@565b064f: startup date [Tue May 28 09:14:52 CST 2019]; root of context hierarchy
2019-05-28 09:15:31 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 09:15:31 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 09:15:31 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 09:15:31 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-28 09:15:31 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-28 09:15:35 -Registering beans for JMX exposure on startup
2019-05-28 09:15:35 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-28 09:15:35 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-28 09:15:35 -Starting beans in phase 2147483647
2019-05-28 09:15:35 -Context refreshed
2019-05-28 09:15:35 -Found 1 custom documentation plugin(s)
2019-05-28 09:15:35 -Scanning for api listing references
2019-05-28 09:15:36 -Generating unique operation named: getCountDUsingPOST_1
2019-05-28 09:15:36 -Generating unique operation named: removeUsingPOST_1
2019-05-28 09:15:37 -Generating unique operation named: addUsingGET_1
2019-05-28 09:15:37 -Generating unique operation named: editUsingGET_1
2019-05-28 09:15:37 -Generating unique operation named: listUsingGET_1
2019-05-28 09:15:37 -Generating unique operation named: removeUsingPOST_2
2019-05-28 09:15:37 -Generating unique operation named: removeUsingPOST_3
2019-05-28 09:15:37 -Generating unique operation named: saveUsingPOST_1
2019-05-28 09:15:37 -Generating unique operation named: updateUsingGET_1
2019-05-28 09:15:37 -Generating unique operation named: updateUsingHEAD_1
2019-05-28 09:15:37 -Generating unique operation named: updateUsingPOST_1
2019-05-28 09:15:37 -Generating unique operation named: updateUsingPUT_1
2019-05-28 09:15:37 -Generating unique operation named: updateUsingPATCH_1
2019-05-28 09:15:37 -Generating unique operation named: updateUsingDELETE_1
2019-05-28 09:15:37 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-28 09:15:37 -Generating unique operation named: updateUsingTRACE_1
2019-05-28 09:15:37 -Generating unique operation named: addUsingGET_2
2019-05-28 09:15:37 -Generating unique operation named: editUsingGET_2
2019-05-28 09:15:37 -Generating unique operation named: listUsingGET_2
2019-05-28 09:15:37 -Generating unique operation named: removeUsingPOST_4
2019-05-28 09:15:37 -Generating unique operation named: removeUsingPOST_5
2019-05-28 09:15:37 -Generating unique operation named: saveUsingPOST_2
2019-05-28 09:15:37 -Generating unique operation named: updateUsingPOST_2
2019-05-28 09:15:37 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-28 09:15:37 -Generating unique operation named: addUsingGET_3
2019-05-28 09:15:37 -Generating unique operation named: editUsingGET_3
2019-05-28 09:15:37 -Generating unique operation named: listUsingGET_3
2019-05-28 09:15:37 -Generating unique operation named: removeUsingPOST_6
2019-05-28 09:15:37 -Generating unique operation named: removeUsingPOST_7
2019-05-28 09:15:37 -Generating unique operation named: saveUsingPOST_3
2019-05-28 09:15:37 -Generating unique operation named: updateUsingGET_2
2019-05-28 09:15:37 -Generating unique operation named: updateUsingHEAD_2
2019-05-28 09:15:37 -Generating unique operation named: updateUsingPOST_3
2019-05-28 09:15:37 -Generating unique operation named: updateUsingPUT_2
2019-05-28 09:15:37 -Generating unique operation named: updateUsingPATCH_2
2019-05-28 09:15:37 -Generating unique operation named: updateUsingDELETE_2
2019-05-28 09:15:37 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-28 09:15:37 -Generating unique operation named: updateUsingTRACE_2
2019-05-28 09:15:37 -Generating unique operation named: addUsingGET_4
2019-05-28 09:15:37 -Generating unique operation named: editUsingGET_4
2019-05-28 09:15:37 -Generating unique operation named: listUsingGET_4
2019-05-28 09:15:37 -Generating unique operation named: removeUsingPOST_8
2019-05-28 09:15:37 -Generating unique operation named: removeUsingPOST_9
2019-05-28 09:15:37 -Generating unique operation named: saveUsingPOST_4
2019-05-28 09:15:37 -Generating unique operation named: updateUsingGET_3
2019-05-28 09:15:37 -Generating unique operation named: updateUsingHEAD_3
2019-05-28 09:15:37 -Generating unique operation named: updateUsingPOST_4
2019-05-28 09:15:37 -Generating unique operation named: updateUsingPUT_3
2019-05-28 09:15:37 -Generating unique operation named: updateUsingPATCH_3
2019-05-28 09:15:37 -Generating unique operation named: updateUsingDELETE_3
2019-05-28 09:15:37 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-28 09:15:37 -Generating unique operation named: updateUsingTRACE_3
2019-05-28 09:15:37 -Generating unique operation named: ElecUsingGET_1
2019-05-28 09:15:37 -Generating unique operation named: addUsingGET_5
2019-05-28 09:15:37 -Generating unique operation named: editUsingGET_5
2019-05-28 09:15:37 -Generating unique operation named: listUsingGET_5
2019-05-28 09:15:37 -Generating unique operation named: removeUsingPOST_10
2019-05-28 09:15:37 -Generating unique operation named: removeUsingPOST_11
2019-05-28 09:15:37 -Generating unique operation named: saveUsingPOST_5
2019-05-28 09:15:37 -Generating unique operation named: updateUsingGET_4
2019-05-28 09:15:37 -Generating unique operation named: updateUsingHEAD_4
2019-05-28 09:15:37 -Generating unique operation named: updateUsingPOST_5
2019-05-28 09:15:37 -Generating unique operation named: updateUsingPUT_4
2019-05-28 09:15:37 -Generating unique operation named: updateUsingPATCH_4
2019-05-28 09:15:37 -Generating unique operation named: updateUsingDELETE_4
2019-05-28 09:15:37 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-28 09:15:37 -Generating unique operation named: updateUsingTRACE_4
2019-05-28 09:15:38 -Generating unique operation named: editUsingGET_6
2019-05-28 09:15:38 -Generating unique operation named: listUsingGET_6
2019-05-28 09:15:38 -Generating unique operation named: updateUsingPOST_6
2019-05-28 09:15:38 -Generating unique operation named: addUsingGET_6
2019-05-28 09:15:38 -Generating unique operation named: editUsingGET_7
2019-05-28 09:15:38 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-28 09:15:38 -Generating unique operation named: listUsingGET_7
2019-05-28 09:15:38 -Generating unique operation named: removeUsingPOST_12
2019-05-28 09:15:38 -Generating unique operation named: removeUsingPOST_13
2019-05-28 09:15:38 -Generating unique operation named: saveUsingPOST_6
2019-05-28 09:15:38 -Generating unique operation named: updateUsingGET_5
2019-05-28 09:15:38 -Generating unique operation named: updateUsingHEAD_5
2019-05-28 09:15:38 -Generating unique operation named: updateUsingPOST_7
2019-05-28 09:15:38 -Generating unique operation named: updateUsingPUT_5
2019-05-28 09:15:38 -Generating unique operation named: updateUsingPATCH_5
2019-05-28 09:15:38 -Generating unique operation named: updateUsingDELETE_5
2019-05-28 09:15:38 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-28 09:15:38 -Generating unique operation named: updateUsingTRACE_5
2019-05-28 09:15:38 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-28 09:15:38 -Generating unique operation named: addUsingGET_7
2019-05-28 09:15:38 -Generating unique operation named: editUsingGET_8
2019-05-28 09:15:38 -Generating unique operation named: listUsingGET_8
2019-05-28 09:15:38 -Generating unique operation named: removeUsingPOST_14
2019-05-28 09:15:38 -Generating unique operation named: removeUsingPOST_15
2019-05-28 09:15:38 -Generating unique operation named: saveUsingPOST_7
2019-05-28 09:15:38 -Generating unique operation named: updateUsingGET_6
2019-05-28 09:15:38 -Generating unique operation named: updateUsingHEAD_6
2019-05-28 09:15:38 -Generating unique operation named: updateUsingPOST_8
2019-05-28 09:15:38 -Generating unique operation named: updateUsingPUT_6
2019-05-28 09:15:38 -Generating unique operation named: updateUsingPATCH_6
2019-05-28 09:15:38 -Generating unique operation named: updateUsingDELETE_6
2019-05-28 09:15:38 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-28 09:15:38 -Generating unique operation named: updateUsingTRACE_6
2019-05-28 09:15:38 -Generating unique operation named: addUsingGET_8
2019-05-28 09:15:38 -Generating unique operation named: editUsingGET_9
2019-05-28 09:15:38 -Generating unique operation named: listUsingGET_9
2019-05-28 09:15:38 -Generating unique operation named: removeUsingPOST_16
2019-05-28 09:15:38 -Generating unique operation named: removeUsingPOST_17
2019-05-28 09:15:38 -Generating unique operation named: saveUsingPOST_8
2019-05-28 09:15:38 -Generating unique operation named: updateUsingGET_7
2019-05-28 09:15:38 -Generating unique operation named: updateUsingHEAD_7
2019-05-28 09:15:38 -Generating unique operation named: updateUsingPOST_9
2019-05-28 09:15:38 -Generating unique operation named: updateUsingPUT_7
2019-05-28 09:15:38 -Generating unique operation named: updateUsingPATCH_7
2019-05-28 09:15:38 -Generating unique operation named: updateUsingDELETE_7
2019-05-28 09:15:38 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-28 09:15:38 -Generating unique operation named: updateUsingTRACE_7
2019-05-28 09:15:38 -Generating unique operation named: addUsingGET_9
2019-05-28 09:15:38 -Generating unique operation named: editUsingGET_10
2019-05-28 09:15:38 -Generating unique operation named: infoUsingGET_1
2019-05-28 09:15:38 -Generating unique operation named: infoUsingHEAD_1
2019-05-28 09:15:38 -Generating unique operation named: infoUsingPOST_1
2019-05-28 09:15:38 -Generating unique operation named: infoUsingPUT_1
2019-05-28 09:15:38 -Generating unique operation named: infoUsingPATCH_1
2019-05-28 09:15:38 -Generating unique operation named: infoUsingDELETE_1
2019-05-28 09:15:38 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-28 09:15:38 -Generating unique operation named: infoUsingTRACE_1
2019-05-28 09:15:38 -Generating unique operation named: listUsingGET_10
2019-05-28 09:15:38 -Generating unique operation named: removeUsingPOST_18
2019-05-28 09:15:38 -Generating unique operation named: removeUsingPOST_19
2019-05-28 09:15:38 -Generating unique operation named: saveUsingPOST_9
2019-05-28 09:15:38 -Generating unique operation named: updateUsingPOST_10
2019-05-28 09:15:38 -Generating unique operation named: listUsingGET_11
2019-05-28 09:15:38 -Generating unique operation named: removeUsingPOST_20
2019-05-28 09:15:38 -Generating unique operation named: welcomeUsingGET_1
2019-05-28 09:15:38 -Generating unique operation named: addUsingGET_10
2019-05-28 09:15:38 -Generating unique operation named: editUsingGET_11
2019-05-28 09:15:38 -Generating unique operation named: listUsingGET_12
2019-05-28 09:15:39 -Generating unique operation named: removeUsingPOST_21
2019-05-28 09:15:39 -Generating unique operation named: saveUsingPOST_10
2019-05-28 09:15:39 -Generating unique operation named: treeUsingGET_1
2019-05-28 09:15:39 -Generating unique operation named: treeUsingGET_2
2019-05-28 09:15:39 -Generating unique operation named: updateUsingPOST_11
2019-05-28 09:15:39 -Generating unique operation named: addUsingGET_11
2019-05-28 09:15:39 -Generating unique operation named: editUsingGET_12
2019-05-28 09:15:39 -Generating unique operation named: listUsingGET_13
2019-05-28 09:15:39 -Generating unique operation named: removeUsingPOST_22
2019-05-28 09:15:39 -Generating unique operation named: removeUsingPOST_23
2019-05-28 09:15:39 -Generating unique operation named: updateUsingPOST_12
2019-05-28 09:15:39 -Generating unique operation named: addUsingGET_12
2019-05-28 09:15:39 -Generating unique operation named: editUsingGET_13
2019-05-28 09:15:39 -Generating unique operation named: listUsingGET_14
2019-05-28 09:15:39 -Generating unique operation named: removeUsingPOST_24
2019-05-28 09:15:39 -Generating unique operation named: removeUsingPOST_25
2019-05-28 09:15:39 -Generating unique operation named: saveUsingPOST_11
2019-05-28 09:15:39 -Generating unique operation named: updateUsingGET_8
2019-05-28 09:15:39 -Generating unique operation named: updateUsingHEAD_8
2019-05-28 09:15:39 -Generating unique operation named: updateUsingPOST_13
2019-05-28 09:15:39 -Generating unique operation named: updateUsingPUT_8
2019-05-28 09:15:39 -Generating unique operation named: updateUsingPATCH_8
2019-05-28 09:15:39 -Generating unique operation named: updateUsingDELETE_8
2019-05-28 09:15:39 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-28 09:15:39 -Generating unique operation named: updateUsingTRACE_8
2019-05-28 09:15:39 -Generating unique operation named: addUsingGET_13
2019-05-28 09:15:39 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-28 09:15:39 -Generating unique operation named: editUsingGET_14
2019-05-28 09:15:39 -Generating unique operation named: listUsingGET_15
2019-05-28 09:15:39 -Generating unique operation named: printEditUsingGET_1
2019-05-28 09:15:39 -Generating unique operation named: removeUsingPOST_26
2019-05-28 09:15:39 -Generating unique operation named: saveUsingPOST_12
2019-05-28 09:15:39 -Generating unique operation named: updateUsingGET_9
2019-05-28 09:15:39 -Generating unique operation named: updateUsingHEAD_9
2019-05-28 09:15:39 -Generating unique operation named: updateUsingPOST_14
2019-05-28 09:15:39 -Generating unique operation named: updateUsingPUT_9
2019-05-28 09:15:39 -Generating unique operation named: updateUsingPATCH_9
2019-05-28 09:15:39 -Generating unique operation named: updateUsingDELETE_9
2019-05-28 09:15:39 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-28 09:15:39 -Generating unique operation named: updateUsingTRACE_9
2019-05-28 09:15:39 -Generating unique operation named: addUsingGET_14
2019-05-28 09:15:39 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-28 09:15:39 -Generating unique operation named: editUsingGET_15
2019-05-28 09:15:39 -Generating unique operation named: listUsingGET_16
2019-05-28 09:15:39 -Generating unique operation named: saveUsingPOST_13
2019-05-28 09:15:39 -Generating unique operation named: saveUsingPOST_14
2019-05-28 09:15:39 -Generating unique operation named: updateUsingPOST_15
2019-05-28 09:15:39 -Generating unique operation named: listUsingGET_17
2019-05-28 09:15:39 -Generating unique operation named: listUsingHEAD_1
2019-05-28 09:15:39 -Generating unique operation named: listUsingPOST_1
2019-05-28 09:15:39 -Generating unique operation named: listUsingPUT_1
2019-05-28 09:15:39 -Generating unique operation named: listUsingPATCH_1
2019-05-28 09:15:39 -Generating unique operation named: listUsingDELETE_1
2019-05-28 09:15:39 -Generating unique operation named: listUsingOPTIONS_1
2019-05-28 09:15:39 -Generating unique operation named: listUsingTRACE_1
2019-05-28 09:15:39 -Generating unique operation named: countDDUsingGET_1
2019-05-28 09:15:39 -Generating unique operation named: exportDDUsingGET_1
2019-05-28 09:15:39 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-28 09:15:39 -Generating unique operation named: addUsingGET_15
2019-05-28 09:15:39 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-28 09:15:39 -Generating unique operation named: editUsingGET_16
2019-05-28 09:15:39 -Generating unique operation named: listUsingGET_18
2019-05-28 09:15:39 -Generating unique operation named: removeUsingPOST_27
2019-05-28 09:15:39 -Generating unique operation named: saveUsingPOST_15
2019-05-28 09:15:39 -Generating unique operation named: treeUsingGET_3
2019-05-28 09:15:39 -Generating unique operation named: treeViewUsingGET_1
2019-05-28 09:15:39 -Generating unique operation named: updateUsingPOST_16
2019-05-28 09:15:40 -Generating unique operation named: addUsingGET_16
2019-05-28 09:15:40 -Generating unique operation named: editUsingGET_17
2019-05-28 09:15:40 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-28 09:15:40 -Generating unique operation named: listUsingGET_19
2019-05-28 09:15:40 -Generating unique operation named: removeUsingPOST_28
2019-05-28 09:15:40 -Generating unique operation named: removeUsingPOST_29
2019-05-28 09:15:40 -Generating unique operation named: saveUsingPOST_16
2019-05-28 09:15:40 -Generating unique operation named: updateUsingGET_10
2019-05-28 09:15:40 -Generating unique operation named: updateUsingHEAD_10
2019-05-28 09:15:40 -Generating unique operation named: updateUsingPOST_17
2019-05-28 09:15:40 -Generating unique operation named: updateUsingPUT_10
2019-05-28 09:15:40 -Generating unique operation named: updateUsingPATCH_10
2019-05-28 09:15:40 -Generating unique operation named: updateUsingDELETE_10
2019-05-28 09:15:40 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-28 09:15:40 -Generating unique operation named: updateUsingTRACE_10
2019-05-28 09:15:40 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-28 09:15:40 -Generating unique operation named: addUsingGET_17
2019-05-28 09:15:40 -Generating unique operation named: editUsingGET_18
2019-05-28 09:15:40 -Generating unique operation named: listUsingGET_20
2019-05-28 09:15:40 -Generating unique operation named: removeUsingPOST_30
2019-05-28 09:15:40 -Generating unique operation named: removeUsingPOST_31
2019-05-28 09:15:40 -Generating unique operation named: saveUsingPOST_17
2019-05-28 09:15:40 -Generating unique operation named: updateUsingGET_11
2019-05-28 09:15:40 -Generating unique operation named: updateUsingHEAD_11
2019-05-28 09:15:40 -Generating unique operation named: updateUsingPOST_18
2019-05-28 09:15:40 -Generating unique operation named: updateUsingPUT_11
2019-05-28 09:15:40 -Generating unique operation named: updateUsingPATCH_11
2019-05-28 09:15:40 -Generating unique operation named: updateUsingDELETE_11
2019-05-28 09:15:40 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-28 09:15:40 -Generating unique operation named: updateUsingTRACE_11
2019-05-28 09:15:40 -Generating unique operation named: addUsingGET_18
2019-05-28 09:15:40 -Generating unique operation named: editUsingGET_19
2019-05-28 09:15:40 -Generating unique operation named: listUsingGET_21
2019-05-28 09:15:40 -Generating unique operation named: removeUsingPOST_32
2019-05-28 09:15:40 -Generating unique operation named: removeUsingPOST_33
2019-05-28 09:15:40 -Generating unique operation named: saveUsingPOST_18
2019-05-28 09:15:40 -Generating unique operation named: updateUsingGET_12
2019-05-28 09:15:40 -Generating unique operation named: updateUsingHEAD_12
2019-05-28 09:15:40 -Generating unique operation named: updateUsingPOST_19
2019-05-28 09:15:40 -Generating unique operation named: updateUsingPUT_12
2019-05-28 09:15:40 -Generating unique operation named: updateUsingPATCH_12
2019-05-28 09:15:40 -Generating unique operation named: updateUsingDELETE_12
2019-05-28 09:15:40 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-28 09:15:40 -Generating unique operation named: updateUsingTRACE_12
2019-05-28 09:15:40 -Starting Quartz Scheduler now
2019-05-28 09:15:40 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-28 09:15:40 -Starting...
2019-05-28 09:15:40 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-28 09:15:40 -Started.
2019-05-28 09:15:40 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-28 09:15:40 -Using a shared selector for servlet write/read
2019-05-28 09:15:40 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-28 09:15:40 -Started BootdoApplication in 54.34 seconds (JVM running for 63.105)
2019-05-28 09:15:41 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-28 09:15:41 -==> Parameters: 
2019-05-28 09:15:41 -<==      Total: 1
2019-05-28 09:16:02 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-28 09:16:02 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-28 09:16:02 -FrameworkServlet 'dispatcherServlet': initialization completed in 98 ms
2019-05-28 09:16:02 -Enabling session validation scheduler...
2019-05-28 09:16:03 -请求地址 : http://localhost:8081/login;JSESSIONID=d21d8a2a-b43f-491e-9725-c4773aab7156
2019-05-28 09:16:03 -HTTP METHOD : GET
2019-05-28 09:16:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 09:16:03 -参数 : [{}]
2019-05-28 09:16:03 -耗时 : 5
2019-05-28 09:16:03 -返回值 : login
2019-05-28 09:16:07 -请求地址 : http://localhost:8081/getVerify
2019-05-28 09:16:07 -HTTP METHOD : GET
2019-05-28 09:16:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-28 09:16:07 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@816fffc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@508db3ab]
2019-05-28 09:16:13 -2732
2019-05-28 09:16:13 -耗时 : 5981
2019-05-28 09:16:13 -返回值 : null
2019-05-28 09:16:30 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-28 09:16:43 -请求地址 : http://localhost:8081/login
2019-05-28 09:16:43 -HTTP METHOD : POST
2019-05-28 09:16:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-28 09:16:43 -参数 : [admin, 111111, 2732, org.apache.shiro.web.servlet.ShiroHttpServletRequest@69f4c47d]
2019-05-28 09:16:43 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-28 09:16:43 -==> Parameters: admin(String)
2019-05-28 09:16:43 -<==      Total: 1
2019-05-28 09:16:43 -耗时 : 232
2019-05-28 09:16:43 -返回值 : {msg=操作成功, code=0}
2019-05-28 09:16:43 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-28 09:16:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 09:16:43 -==> Parameters: 1(Long), admin(String), 登录(String), 232(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-28 09:16:43.895(Timestamp)
2019-05-28 09:16:44 -<==    Updates: 1
2019-05-28 09:16:44 -请求地址 : http://localhost:8081/index
2019-05-28 09:16:44 -HTTP METHOD : GET
2019-05-28 09:16:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 09:16:44 -参数 : [{}]
2019-05-28 09:16:44 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 09:16:44 -==> Parameters: 1(Long)
2019-05-28 09:16:44 -<==      Total: 50
2019-05-28 09:16:44 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 09:16:44 -==> Parameters: 138(Long)
2019-05-28 09:16:44 -<==      Total: 1
2019-05-28 09:16:44 -耗时 : 424
2019-05-28 09:16:44 -返回值 : index_v1
2019-05-28 09:16:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 09:16:44 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 424(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 09:16:44.793(Timestamp)
2019-05-28 09:16:44 -<==    Updates: 1
2019-05-28 09:16:45 -请求地址 : http://localhost:8081/main
2019-05-28 09:16:45 -HTTP METHOD : GET
2019-05-28 09:16:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 09:16:45 -参数 : []
2019-05-28 09:16:45 -耗时 : 1
2019-05-28 09:16:45 -返回值 : main
2019-05-28 09:16:46 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 09:16:46 -HTTP METHOD : GET
2019-05-28 09:16:46 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 09:16:46 -参数 : []
2019-05-28 09:16:47 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 09:16:47 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 09:16:47 -<==      Total: 0
2019-05-28 09:16:47 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 09:16:47 -==> Parameters: 1(Long), 0(String)
2019-05-28 09:16:47 -<==      Total: 1
2019-05-28 09:16:47 -耗时 : 87
2019-05-28 09:16:47 -返回值 : com.bootdo.common.utils.PageUtils@71da2b22
2019-05-28 09:16:47 -请求地址 : http://localhost:8081/main
2019-05-28 09:16:47 -HTTP METHOD : GET
2019-05-28 09:16:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 09:16:47 -参数 : []
2019-05-28 09:16:47 -耗时 : 0
2019-05-28 09:16:47 -返回值 : main
2019-05-28 09:17:06 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 09:17:06 -==> Parameters: 1(Long)
2019-05-28 09:17:06 -<==      Total: 94
2019-05-28 09:17:06 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 09:17:06 -HTTP METHOD : GET
2019-05-28 09:17:06 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 09:17:06 -参数 : []
2019-05-28 09:17:06 -耗时 : 11
2019-05-28 09:17:06 -返回值 : charts/tableElecYY
2019-05-28 09:17:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:17:08 -HTTP METHOD : GET
2019-05-28 09:17:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:17:08 -参数 : [userType]
2019-05-28 09:17:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:17:08 -==> Parameters: userType(String)
2019-05-28 09:17:08 -<==      Total: 4
2019-05-28 09:17:08 -耗时 : 88
2019-05-28 09:17:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:17:08 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:17:08 -HTTP METHOD : GET
2019-05-28 09:17:08 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:17:08 -参数 : []
2019-05-28 09:17:08 -耗时 : 10
2019-05-28 09:17:08 -返回值 : charts/tableHeatYY
2019-05-28 09:17:09 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:17:09 -HTTP METHOD : GET
2019-05-28 09:17:09 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:17:09 -参数 : [userType]
2019-05-28 09:17:09 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:17:09 -==> Parameters: userType(String)
2019-05-28 09:17:09 -<==      Total: 4
2019-05-28 09:17:09 -耗时 : 5
2019-05-28 09:17:09 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:17:12 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 09:17:12 -HTTP METHOD : GET
2019-05-28 09:17:12 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 09:17:12 -参数 : []
2019-05-28 09:17:12 -耗时 : 0
2019-05-28 09:17:12 -返回值 : system/dept/deptTree
2019-05-28 09:17:13 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 09:17:13 -HTTP METHOD : GET
2019-05-28 09:17:13 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 09:17:13 -参数 : []
2019-05-28 09:17:13 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 09:17:13 -==> Parameters: 
2019-05-28 09:17:13 -<==      Total: 3
2019-05-28 09:17:13 -耗时 : 17
2019-05-28 09:17:13 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 09:17:15 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-28 09:17:15 -HTTP METHOD : POST
2019-05-28 09:17:15 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:17:15 -参数 : [com.bootdo.heat.vo.HeatVo@3ba149e1, com.bootdo.moneyLog.vo.HeatLogVo@33360003]
2019-05-28 09:17:15 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:17:15 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:17:15 -<==      Total: 1
2019-05-28 09:17:15 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-28 09:17:15 -==> Parameters: 
2019-05-28 09:17:15 -<==      Total: 2
2019-05-28 09:17:15 -耗时 : 472
2019-05-28 09:17:15 -返回值 : {STotalyuOld=-10.00, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0.00, GMPreHeatCountYYNew=1, GSPreHeatSumYYNew=0.00, STotalyuNew=0.00, GSOweHeatCountYYNew=0, type=2, MHeatCostYYSum=402.00, SPreHeatCountYYOld=0, TotalPreyuNew=0.00, GSHeatAreaYY=1.00, SHeatCostYYCount=3, GMHeatCostYYCount=2, GMOweHeatSumYYNew=0.00, GSTotalhuOld=1, TotalCostyu=408.00, MHeatPrice=3.50, SHeatPrice=4.80, GMHeatPrice=3.50, SPreHeatCountYYNew=1, TotalPreyuOld=10.00, TotalOwehuNew=1, TotalCosthu=12, STotalhuOld=1, MOweHeatSumYYNew=-172.35, GSOweHeatSumYYOld=0.00, TotalLogyu=247.00, STotalhuNew=1, MTotalyuOld=0.00, MHeatLogYYCount=8, GSTotalhuNew=0, GSTotalyuOld=10.00, MOweHeatSumYYOld=0.00, GMOweHeatSumYYOld=0.00, GMHeatLogYYSum=80.00, GSOweHeatSumYYNew=0.00, MTotalhuNew=3, MTotalyuNew=-172.35, GSTotalyuNew=0.00, GSHeatPrice=4.80, MOweHeatCountYYOld=0, MHeatLogYYSum=126.00, TotalLoghu=11, GMHeatAreaYY=2.00, MOweHeatCountYYNew=1, TotalOweyuOld=-10.00, MPreHeatCountYYOld=0, MHeatCostYYCount=6, SOweHeatCountYYOld=1, GMTotalhuNew=1, SHeatLogYYSum=40.00, SHeatLogYYCount=1, SOweHeatSumYYOld=-10.00, MPreHeatCountYYNew=2, MTotalhuOld=0, GMTotalhuOld=0, GSHeatCostYYCount=1, GSPreHeatCountYYNew=0, TotalPrehuNew=4, SOweHeatSumYYNew=0.00, SPreHeatSumYYNew=0.00, GMPreHeatSumYYNew=0.00, GSPreHeatCountYYOld=1, TotalOweyuNew=-172.35, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, MHeatAreaYY=302.75, GMPreHeatSumYYOld=0.00, TotalPrehuOld=1, GSHeatCostYYSum=1.00, SPreHeatSumYYOld=0.00, GMHeatCostYYSum=2.00, SHeatAreaYY=3.50, GMTotalyuNew=0.00, TotalOwehuOld=1, PriceTotal=16.60, GSHeatLogYYSum=1.00, AreaTotalYY=309.25, GMTotalyuOld=0.00, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=1, TotalAllhuNew=5, TotalAllyuNew=-172.35, GMPreHeatCountYYOld=0, MPreHeatSumYYOld=0.00, SHeatCostYYSum=3.00, GSPreHeatSumYYOld=10.00, TotalAllhuOld=2, TotalAllyuOld=0.00}
2019-05-28 09:18:40 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 09:18:40 -HTTP METHOD : GET
2019-05-28 09:18:40 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 09:18:40 -参数 : []
2019-05-28 09:18:40 -耗时 : 11
2019-05-28 09:18:40 -返回值 : charts/tableWaterYY
2019-05-28 09:18:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:18:41 -HTTP METHOD : GET
2019-05-28 09:18:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:18:41 -参数 : [userType]
2019-05-28 09:18:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:18:41 -==> Parameters: userType(String)
2019-05-28 09:18:41 -<==      Total: 4
2019-05-28 09:18:41 -耗时 : 7
2019-05-28 09:18:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:18:41 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:18:41 -HTTP METHOD : GET
2019-05-28 09:18:41 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:18:41 -参数 : []
2019-05-28 09:18:41 -耗时 : 1
2019-05-28 09:18:41 -返回值 : charts/tableHeatYY
2019-05-28 09:18:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:18:42 -HTTP METHOD : GET
2019-05-28 09:18:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:18:42 -参数 : [userType]
2019-05-28 09:18:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:18:42 -==> Parameters: userType(String)
2019-05-28 09:18:42 -<==      Total: 4
2019-05-28 09:18:42 -耗时 : 16
2019-05-28 09:18:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:18:42 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 09:18:42 -HTTP METHOD : GET
2019-05-28 09:18:42 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 09:18:42 -参数 : []
2019-05-28 09:18:42 -耗时 : 0
2019-05-28 09:18:42 -返回值 : charts/tableElecYY
2019-05-28 09:18:42 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:18:42 -HTTP METHOD : GET
2019-05-28 09:18:42 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:18:42 -参数 : [userType]
2019-05-28 09:18:42 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:18:42 -==> Parameters: userType(String)
2019-05-28 09:18:42 -<==      Total: 4
2019-05-28 09:18:42 -耗时 : 4
2019-05-28 09:18:42 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:18:43 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:18:43 -HTTP METHOD : GET
2019-05-28 09:18:43 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:18:43 -参数 : []
2019-05-28 09:18:43 -耗时 : 0
2019-05-28 09:18:43 -返回值 : charts/tableHeatYY
2019-05-28 09:18:43 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:18:43 -HTTP METHOD : GET
2019-05-28 09:18:43 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:18:43 -参数 : [userType]
2019-05-28 09:18:43 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:18:43 -==> Parameters: userType(String)
2019-05-28 09:18:43 -<==      Total: 4
2019-05-28 09:18:43 -耗时 : 5
2019-05-28 09:18:43 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:18:43 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 09:18:43 -HTTP METHOD : GET
2019-05-28 09:18:43 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 09:18:43 -参数 : []
2019-05-28 09:18:43 -耗时 : 1
2019-05-28 09:18:43 -返回值 : charts/tableWaterYY
2019-05-28 09:18:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:18:44 -HTTP METHOD : GET
2019-05-28 09:18:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:18:44 -参数 : [userType]
2019-05-28 09:18:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:18:44 -==> Parameters: userType(String)
2019-05-28 09:18:44 -<==      Total: 4
2019-05-28 09:18:44 -耗时 : 4
2019-05-28 09:18:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:18:44 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:18:44 -HTTP METHOD : GET
2019-05-28 09:18:44 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:18:44 -参数 : []
2019-05-28 09:18:44 -耗时 : 0
2019-05-28 09:18:44 -返回值 : charts/tableHeatYY
2019-05-28 09:18:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:18:44 -HTTP METHOD : GET
2019-05-28 09:18:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:18:44 -参数 : [userType]
2019-05-28 09:18:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:18:44 -==> Parameters: userType(String)
2019-05-28 09:18:44 -<==      Total: 4
2019-05-28 09:18:44 -耗时 : 6
2019-05-28 09:18:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:18:44 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 09:18:44 -HTTP METHOD : GET
2019-05-28 09:18:44 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 09:18:44 -参数 : []
2019-05-28 09:18:44 -耗时 : 0
2019-05-28 09:18:44 -返回值 : charts/tableElecYY
2019-05-28 09:18:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:18:45 -HTTP METHOD : GET
2019-05-28 09:18:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:18:45 -参数 : [userType]
2019-05-28 09:18:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:18:45 -==> Parameters: userType(String)
2019-05-28 09:18:45 -<==      Total: 4
2019-05-28 09:18:45 -耗时 : 4
2019-05-28 09:18:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:18:45 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:18:45 -HTTP METHOD : GET
2019-05-28 09:18:45 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:18:45 -参数 : []
2019-05-28 09:18:45 -耗时 : 0
2019-05-28 09:18:45 -返回值 : charts/tableHeatYY
2019-05-28 09:18:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:18:45 -HTTP METHOD : GET
2019-05-28 09:18:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:18:45 -参数 : [userType]
2019-05-28 09:18:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:18:45 -==> Parameters: userType(String)
2019-05-28 09:18:45 -<==      Total: 4
2019-05-28 09:18:45 -耗时 : 5
2019-05-28 09:18:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:18:45 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 09:18:45 -HTTP METHOD : GET
2019-05-28 09:18:45 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 09:18:45 -参数 : []
2019-05-28 09:18:45 -耗时 : 0
2019-05-28 09:18:45 -返回值 : charts/tableWaterYY
2019-05-28 09:18:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:18:46 -HTTP METHOD : GET
2019-05-28 09:18:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:18:46 -参数 : [userType]
2019-05-28 09:18:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:18:46 -==> Parameters: userType(String)
2019-05-28 09:18:46 -<==      Total: 4
2019-05-28 09:18:46 -耗时 : 4
2019-05-28 09:18:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:18:46 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:18:46 -HTTP METHOD : GET
2019-05-28 09:18:46 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:18:46 -参数 : []
2019-05-28 09:18:46 -耗时 : 0
2019-05-28 09:18:46 -返回值 : charts/tableHeatYY
2019-05-28 09:18:46 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:18:46 -HTTP METHOD : GET
2019-05-28 09:18:46 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:18:46 -参数 : [userType]
2019-05-28 09:18:46 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:18:46 -==> Parameters: userType(String)
2019-05-28 09:18:46 -<==      Total: 4
2019-05-28 09:18:46 -耗时 : 5
2019-05-28 09:18:46 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:18:47 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 09:18:47 -HTTP METHOD : GET
2019-05-28 09:18:47 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 09:18:47 -参数 : []
2019-05-28 09:18:47 -耗时 : 0
2019-05-28 09:18:47 -返回值 : charts/tableElecYY
2019-05-28 09:18:47 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:18:47 -HTTP METHOD : GET
2019-05-28 09:18:47 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:18:47 -参数 : [userType]
2019-05-28 09:18:47 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:18:47 -==> Parameters: userType(String)
2019-05-28 09:18:47 -<==      Total: 4
2019-05-28 09:18:47 -耗时 : 4
2019-05-28 09:18:47 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:18:47 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:18:47 -HTTP METHOD : GET
2019-05-28 09:18:47 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:18:47 -参数 : []
2019-05-28 09:18:47 -耗时 : 0
2019-05-28 09:18:47 -返回值 : charts/tableHeatYY
2019-05-28 09:18:48 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:18:48 -HTTP METHOD : GET
2019-05-28 09:18:48 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:18:48 -参数 : [userType]
2019-05-28 09:18:48 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:18:48 -==> Parameters: userType(String)
2019-05-28 09:18:48 -<==      Total: 4
2019-05-28 09:18:48 -耗时 : 9
2019-05-28 09:18:48 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:18:58 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 09:18:58 -HTTP METHOD : GET
2019-05-28 09:18:58 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 09:18:58 -参数 : []
2019-05-28 09:18:58 -耗时 : 0
2019-05-28 09:18:58 -返回值 : charts/tableElecYY
2019-05-28 09:18:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:18:58 -HTTP METHOD : GET
2019-05-28 09:18:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:18:58 -参数 : [userType]
2019-05-28 09:18:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:18:58 -==> Parameters: userType(String)
2019-05-28 09:18:58 -<==      Total: 4
2019-05-28 09:18:58 -耗时 : 4
2019-05-28 09:18:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:18:59 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:18:59 -HTTP METHOD : GET
2019-05-28 09:18:59 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:18:59 -参数 : []
2019-05-28 09:18:59 -耗时 : 0
2019-05-28 09:18:59 -返回值 : charts/tableHeatYY
2019-05-28 09:18:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:18:59 -HTTP METHOD : GET
2019-05-28 09:18:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:18:59 -参数 : [userType]
2019-05-28 09:18:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:18:59 -==> Parameters: userType(String)
2019-05-28 09:18:59 -<==      Total: 4
2019-05-28 09:18:59 -耗时 : 4
2019-05-28 09:18:59 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:19:35 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 09:19:35 -HTTP METHOD : GET
2019-05-28 09:19:35 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 09:19:35 -参数 : []
2019-05-28 09:19:35 -耗时 : 0
2019-05-28 09:19:35 -返回值 : charts/tableWaterYY
2019-05-28 09:19:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:19:35 -HTTP METHOD : GET
2019-05-28 09:19:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:19:35 -参数 : [userType]
2019-05-28 09:19:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:19:35 -==> Parameters: userType(String)
2019-05-28 09:19:35 -<==      Total: 4
2019-05-28 09:19:35 -耗时 : 4
2019-05-28 09:19:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:19:35 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:19:35 -HTTP METHOD : GET
2019-05-28 09:19:35 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:19:35 -参数 : []
2019-05-28 09:19:35 -耗时 : 0
2019-05-28 09:19:35 -返回值 : charts/tableHeatYY
2019-05-28 09:19:35 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:19:35 -HTTP METHOD : GET
2019-05-28 09:19:35 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:19:35 -参数 : [userType]
2019-05-28 09:19:35 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:19:35 -==> Parameters: userType(String)
2019-05-28 09:19:35 -<==      Total: 4
2019-05-28 09:19:35 -耗时 : 4
2019-05-28 09:19:35 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:19:36 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 09:19:36 -HTTP METHOD : GET
2019-05-28 09:19:36 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 09:19:36 -参数 : []
2019-05-28 09:19:36 -耗时 : 0
2019-05-28 09:19:36 -返回值 : charts/tableElecYY
2019-05-28 09:19:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:19:36 -HTTP METHOD : GET
2019-05-28 09:19:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:19:36 -参数 : [userType]
2019-05-28 09:19:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:19:36 -==> Parameters: userType(String)
2019-05-28 09:19:36 -<==      Total: 4
2019-05-28 09:19:36 -耗时 : 4
2019-05-28 09:19:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:19:36 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:19:36 -HTTP METHOD : GET
2019-05-28 09:19:36 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:19:36 -参数 : []
2019-05-28 09:19:36 -耗时 : 1
2019-05-28 09:19:36 -返回值 : charts/tableHeatYY
2019-05-28 09:19:36 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:19:36 -HTTP METHOD : GET
2019-05-28 09:19:36 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:19:36 -参数 : [userType]
2019-05-28 09:19:36 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:19:36 -==> Parameters: userType(String)
2019-05-28 09:19:36 -<==      Total: 4
2019-05-28 09:19:36 -耗时 : 6
2019-05-28 09:19:36 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:19:37 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 09:19:37 -HTTP METHOD : GET
2019-05-28 09:19:37 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 09:19:37 -参数 : []
2019-05-28 09:19:37 -耗时 : 0
2019-05-28 09:19:37 -返回值 : charts/tableWaterYY
2019-05-28 09:19:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:19:37 -HTTP METHOD : GET
2019-05-28 09:19:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:19:37 -参数 : [userType]
2019-05-28 09:19:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:19:37 -==> Parameters: userType(String)
2019-05-28 09:19:37 -<==      Total: 4
2019-05-28 09:19:37 -耗时 : 6
2019-05-28 09:19:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:19:37 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:19:37 -HTTP METHOD : GET
2019-05-28 09:19:37 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:19:37 -参数 : []
2019-05-28 09:19:37 -耗时 : 0
2019-05-28 09:19:37 -返回值 : charts/tableHeatYY
2019-05-28 09:19:37 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:19:37 -HTTP METHOD : GET
2019-05-28 09:19:37 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:19:37 -参数 : [userType]
2019-05-28 09:19:37 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:19:37 -==> Parameters: userType(String)
2019-05-28 09:19:37 -<==      Total: 4
2019-05-28 09:19:37 -耗时 : 4
2019-05-28 09:19:37 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:19:38 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 09:19:38 -HTTP METHOD : GET
2019-05-28 09:19:38 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 09:19:38 -参数 : []
2019-05-28 09:19:38 -耗时 : 1
2019-05-28 09:19:38 -返回值 : charts/tableElecYY
2019-05-28 09:19:38 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:19:38 -HTTP METHOD : GET
2019-05-28 09:19:38 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:19:38 -参数 : [userType]
2019-05-28 09:19:38 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:19:38 -==> Parameters: userType(String)
2019-05-28 09:19:38 -<==      Total: 4
2019-05-28 09:19:38 -耗时 : 6
2019-05-28 09:19:38 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:19:38 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:19:38 -HTTP METHOD : GET
2019-05-28 09:19:38 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:19:38 -参数 : []
2019-05-28 09:19:38 -耗时 : 0
2019-05-28 09:19:38 -返回值 : charts/tableHeatYY
2019-05-28 09:19:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:19:39 -HTTP METHOD : GET
2019-05-28 09:19:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:19:39 -参数 : [userType]
2019-05-28 09:19:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:19:39 -==> Parameters: userType(String)
2019-05-28 09:19:39 -<==      Total: 4
2019-05-28 09:19:39 -耗时 : 4
2019-05-28 09:19:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:19:39 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 09:19:39 -HTTP METHOD : GET
2019-05-28 09:19:39 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 09:19:39 -参数 : []
2019-05-28 09:19:39 -耗时 : 1
2019-05-28 09:19:39 -返回值 : charts/tableWaterYY
2019-05-28 09:19:39 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:19:39 -HTTP METHOD : GET
2019-05-28 09:19:39 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:19:39 -参数 : [userType]
2019-05-28 09:19:39 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:19:39 -==> Parameters: userType(String)
2019-05-28 09:19:39 -<==      Total: 4
2019-05-28 09:19:39 -耗时 : 4
2019-05-28 09:19:39 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:19:40 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:19:40 -HTTP METHOD : GET
2019-05-28 09:19:40 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:19:40 -参数 : []
2019-05-28 09:19:40 -耗时 : 0
2019-05-28 09:19:40 -返回值 : charts/tableHeatYY
2019-05-28 09:19:40 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:19:40 -HTTP METHOD : GET
2019-05-28 09:19:40 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:19:40 -参数 : [userType]
2019-05-28 09:19:40 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:19:40 -==> Parameters: userType(String)
2019-05-28 09:19:40 -<==      Total: 4
2019-05-28 09:19:40 -耗时 : 4
2019-05-28 09:19:40 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:19:41 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 09:19:41 -HTTP METHOD : GET
2019-05-28 09:19:41 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 09:19:41 -参数 : []
2019-05-28 09:19:41 -耗时 : 0
2019-05-28 09:19:41 -返回值 : charts/tableElecYY
2019-05-28 09:19:41 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:19:41 -HTTP METHOD : GET
2019-05-28 09:19:41 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:19:41 -参数 : [userType]
2019-05-28 09:19:41 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:19:41 -==> Parameters: userType(String)
2019-05-28 09:19:41 -<==      Total: 4
2019-05-28 09:19:41 -耗时 : 4
2019-05-28 09:19:41 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:19:44 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:19:44 -HTTP METHOD : GET
2019-05-28 09:19:44 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:19:44 -参数 : []
2019-05-28 09:19:44 -耗时 : 1
2019-05-28 09:19:44 -返回值 : charts/tableHeatYY
2019-05-28 09:19:44 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:19:44 -HTTP METHOD : GET
2019-05-28 09:19:44 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:19:44 -参数 : [userType]
2019-05-28 09:19:44 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:19:44 -==> Parameters: userType(String)
2019-05-28 09:19:44 -<==      Total: 4
2019-05-28 09:19:44 -耗时 : 6
2019-05-28 09:19:44 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:19:50 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 09:19:50 -HTTP METHOD : GET
2019-05-28 09:19:50 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 09:19:50 -参数 : []
2019-05-28 09:19:50 -耗时 : 0
2019-05-28 09:19:50 -返回值 : system/dept/deptTree
2019-05-28 09:19:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 09:19:51 -HTTP METHOD : GET
2019-05-28 09:19:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 09:19:51 -参数 : []
2019-05-28 09:19:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 09:19:51 -==> Parameters: 
2019-05-28 09:19:51 -<==      Total: 3
2019-05-28 09:19:51 -耗时 : 4
2019-05-28 09:19:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 09:19:57 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-28 09:19:57 -HTTP METHOD : POST
2019-05-28 09:19:57 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:19:57 -参数 : [com.bootdo.heat.vo.HeatVo@756515af, com.bootdo.moneyLog.vo.HeatLogVo@1beec333]
2019-05-28 09:19:57 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:19:57 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:19:57 -<==      Total: 1
2019-05-28 09:19:57 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-28 09:19:57 -==> Parameters: 
2019-05-28 09:19:57 -<==      Total: 2
2019-05-28 09:19:57 -耗时 : 171
2019-05-28 09:19:57 -返回值 : {STotalyuOld=-10.00, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0.00, GMPreHeatCountYYNew=1, GSPreHeatSumYYNew=0.00, STotalyuNew=0.00, GSOweHeatCountYYNew=0, type=2, MHeatCostYYSum=402.00, SPreHeatCountYYOld=0, TotalPreyuNew=0.00, GSHeatAreaYY=1.00, SHeatCostYYCount=3, GMHeatCostYYCount=2, GMOweHeatSumYYNew=0.00, GSTotalhuOld=1, TotalCostyu=408.00, MHeatPrice=3.50, SHeatPrice=4.80, GMHeatPrice=3.50, SPreHeatCountYYNew=1, TotalPreyuOld=10.00, TotalOwehuNew=1, TotalCosthu=12, STotalhuOld=1, MOweHeatSumYYNew=-172.35, GSOweHeatSumYYOld=0.00, TotalLogyu=247.00, STotalhuNew=1, MTotalyuOld=0.00, MHeatLogYYCount=8, GSTotalhuNew=0, GSTotalyuOld=10.00, MOweHeatSumYYOld=0.00, GMOweHeatSumYYOld=0.00, GMHeatLogYYSum=80.00, GSOweHeatSumYYNew=0.00, MTotalhuNew=3, MTotalyuNew=-172.35, GSTotalyuNew=0.00, GSHeatPrice=4.80, MOweHeatCountYYOld=0, MHeatLogYYSum=126.00, TotalLoghu=11, GMHeatAreaYY=2.00, MOweHeatCountYYNew=1, TotalOweyuOld=-10.00, MPreHeatCountYYOld=0, MHeatCostYYCount=6, SOweHeatCountYYOld=1, GMTotalhuNew=1, SHeatLogYYSum=40.00, SHeatLogYYCount=1, SOweHeatSumYYOld=-10.00, MPreHeatCountYYNew=2, MTotalhuOld=0, GMTotalhuOld=0, GSHeatCostYYCount=1, GSPreHeatCountYYNew=0, TotalPrehuNew=4, SOweHeatSumYYNew=0.00, SPreHeatSumYYNew=0.00, GMPreHeatSumYYNew=0.00, GSPreHeatCountYYOld=1, TotalOweyuNew=-172.35, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, MHeatAreaYY=302.75, GMPreHeatSumYYOld=0.00, TotalPrehuOld=1, GSHeatCostYYSum=1.00, SPreHeatSumYYOld=0.00, GMHeatCostYYSum=2.00, SHeatAreaYY=3.50, GMTotalyuNew=0.00, TotalOwehuOld=1, PriceTotal=16.60, GSHeatLogYYSum=1.00, AreaTotalYY=309.25, GMTotalyuOld=0.00, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=1, TotalAllhuNew=5, TotalAllyuNew=-172.35, GMPreHeatCountYYOld=0, MPreHeatSumYYOld=0.00, SHeatCostYYSum=3.00, GSPreHeatSumYYOld=10.00, TotalAllhuOld=2, TotalAllyuOld=0.00}
2019-05-28 09:20:00 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 09:20:00 -HTTP METHOD : GET
2019-05-28 09:20:00 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 09:20:00 -参数 : []
2019-05-28 09:20:00 -耗时 : 0
2019-05-28 09:20:00 -返回值 : system/dept/deptTree
2019-05-28 09:20:01 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 09:20:01 -HTTP METHOD : GET
2019-05-28 09:20:01 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 09:20:01 -参数 : []
2019-05-28 09:20:01 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 09:20:01 -==> Parameters: 
2019-05-28 09:20:01 -<==      Total: 3
2019-05-28 09:20:01 -耗时 : 3
2019-05-28 09:20:01 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 09:20:03 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-28 09:20:03 -HTTP METHOD : POST
2019-05-28 09:20:03 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:20:03 -参数 : [com.bootdo.heat.vo.HeatVo@7b27ca14, com.bootdo.moneyLog.vo.HeatLogVo@2ecd92be]
2019-05-28 09:20:03 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 09:20:03 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 09:20:03 -<==      Total: 1
2019-05-28 09:20:03 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-28 09:20:03 -==> Parameters: 
2019-05-28 09:20:03 -<==      Total: 2
2019-05-28 09:20:03 -耗时 : 125
2019-05-28 09:20:03 -返回值 : {STotalyuOld=0.00, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0.00, GMPreHeatCountYYNew=0, GSPreHeatSumYYNew=0.00, STotalyuNew=0.00, GSOweHeatCountYYNew=0, type=3, MHeatCostYYSum=1.00, SPreHeatCountYYOld=0, TotalPreyuNew=0.00, GSHeatAreaYY=0.00, SHeatCostYYCount=0, GMHeatCostYYCount=0, GMOweHeatSumYYNew=0.00, GSTotalhuOld=0, TotalCostyu=1.00, MHeatPrice=3.50, SHeatPrice=4.80, SPreHeatCountYYNew=0, TotalPreyuOld=0.00, TotalOwehuNew=0, TotalCosthu=1, STotalhuOld=0, MOweHeatSumYYNew=0.00, GSOweHeatSumYYOld=0.00, TotalLogyu=0.00, STotalhuNew=0, MTotalyuOld=0.00, MHeatLogYYCount=0, GSTotalhuNew=0, GSTotalyuOld=0.00, MOweHeatSumYYOld=0.00, GMOweHeatSumYYOld=0.00, GMHeatLogYYSum=0.00, GSOweHeatSumYYNew=0.00, MTotalhuNew=0, MTotalyuNew=0.00, GSTotalyuNew=0.00, MOweHeatCountYYOld=0, MHeatLogYYSum=0.00, TotalLoghu=0, GMHeatAreaYY=0.00, MOweHeatCountYYNew=0, TotalOweyuOld=0.00, MPreHeatCountYYOld=0, MHeatCostYYCount=1, SOweHeatCountYYOld=0, GMTotalhuNew=0, SHeatLogYYSum=0.00, SHeatLogYYCount=0, SOweHeatSumYYOld=0.00, MPreHeatCountYYNew=0, MTotalhuOld=0, GMTotalhuOld=0, GSHeatCostYYCount=0, GSPreHeatCountYYNew=0, TotalPrehuNew=0, SOweHeatSumYYNew=0.00, SPreHeatSumYYNew=0.00, GMPreHeatSumYYNew=0.00, GSPreHeatCountYYOld=0, TotalOweyuNew=0.00, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, MHeatAreaYY=1.00, GMPreHeatSumYYOld=0.00, TotalPrehuOld=0, GSHeatCostYYSum=0.00, SPreHeatSumYYOld=0.00, GMHeatCostYYSum=0.00, SHeatAreaYY=0.00, GMTotalyuNew=0.00, TotalOwehuOld=0, PriceTotal=8.30, GSHeatLogYYSum=20.00, AreaTotalYY=1.00, GMTotalyuOld=0.00, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=0, TotalAllhuNew=0, TotalAllyuNew=0.00, GMPreHeatCountYYOld=0, MPreHeatSumYYOld=0.00, SHeatCostYYSum=0.00, GSPreHeatSumYYOld=0.00, TotalAllhuOld=0, TotalAllyuOld=0.00}
2019-05-28 09:20:07 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 09:20:07 -HTTP METHOD : GET
2019-05-28 09:20:07 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 09:20:07 -参数 : []
2019-05-28 09:20:07 -耗时 : 1
2019-05-28 09:20:07 -返回值 : charts/tableWaterYY
2019-05-28 09:20:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:20:07 -HTTP METHOD : GET
2019-05-28 09:20:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:20:07 -参数 : [userType]
2019-05-28 09:20:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:20:07 -==> Parameters: userType(String)
2019-05-28 09:20:07 -<==      Total: 4
2019-05-28 09:20:07 -耗时 : 3
2019-05-28 09:20:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:20:11 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 09:20:11 -HTTP METHOD : GET
2019-05-28 09:20:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 09:20:11 -参数 : []
2019-05-28 09:20:11 -耗时 : 0
2019-05-28 09:20:11 -返回值 : system/dept/deptTree
2019-05-28 09:20:11 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 09:20:11 -HTTP METHOD : GET
2019-05-28 09:20:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 09:20:11 -参数 : []
2019-05-28 09:20:11 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 09:20:11 -==> Parameters: 
2019-05-28 09:20:11 -<==      Total: 3
2019-05-28 09:20:11 -耗时 : 2
2019-05-28 09:20:11 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 09:20:13 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-28 09:20:13 -HTTP METHOD : POST
2019-05-28 09:20:13 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 09:20:13 -参数 : [com.bootdo.water.vo.WaterVo@7d9baf34, com.bootdo.moneyLog.vo.WaterLogVo@73a6cff9]
2019-05-28 09:20:13 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:13 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 09:20:13 -<==      Total: 1
2019-05-28 09:20:13 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:13 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:14 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 09:20:14 -<==      Total: 1
2019-05-28 09:20:14 -==>  Preparing: select m_water,s1_water,s2_water,s3_water,water_org from water_price 
2019-05-28 09:20:14 -==> Parameters: 
2019-05-28 09:20:14 -<==      Total: 2
2019-05-28 09:20:14 -耗时 : 461
2019-05-28 09:20:14 -返回值 : {S3TotalhuNew=1, S2PreWaterCountYYOld=0, S1OweWaterCountYYNew=1, S2PreWaterCountYYNew=2, S3WaterCostYYSum=12, S1OweWaterSumYYNew=-11, type=2, S3PreWaterSumYYNew=0, TotalPreyuNew=31, MWaterLogYYSum=249, S1OweWaterCountYYOld=0, S1OweWaterSumYYOld=0, TotalCostyu=56, S3PreWaterSumYYOld=0, MPreWaterCountYYOld=0, S1WaterPrice=11, S1TotalyuOld=0, TotalPreyuOld=0, S2WaterLogYYCount=2, S3TotalhuOld=0, MPreWaterCountYYNew=2, TotalOwehuNew=2, S2WaterLogYYSum=120, TotalCosthu=8, S1WaterLogYYCount=2, S3WaterLogYYSum=0, S2OweWaterSumYYOld=0, TotalLogyu=270, MPreWaterSumYYOld=0, S2TotalhuNew=2, MTotalyuOld=0, MPreWaterSumYYNew=31, MWaterPrice=1, S1WaterCostYYCount=2, S3PreWaterCountYYNew=1, MTotalhuNew=3, MTotalyuNew=16, S2WaterCostYYSum=24, TotalLoghu=23, S3PreWaterCountYYOld=0, S2TotalhuOld=0, S2TotalyuOld=0, S2OweWaterSumYYNew=0, TotalOweyuOld=0, S3OweWaterCountYYOld=0, S3WaterCostYYCount=2, S2TotalyuNew=0, S3WaterLogYYCount=0, S1TotalhuNew=1, MTotalhuOld=0, S3OweWaterSumYYOld=0, S1TotalhuOld=0, S1WaterCostYYSum=20, S2PreWaterSumYYNew=0, TotalPrehuNew=2, MOweWaterSumYYNew=-15, S3OweWaterSumYYNew=0, S2PreWaterSumYYOld=0, TotalOweyuNew=-26, MWaterCostYYCount=6, S3TotalyuOld=0, MWaterLogYYCount=21, S3OweWaterCountYYNew=0, S3TotalyuNew=0, TotalPrehuOld=0, MWaterCostYYSum=36, S1PreWaterCountYYNew=0, S1WaterLogYYSum=21, TotalOwehuOld=0, PriceTotal=12, S2OweWaterCountYYNew=0, S1PreWaterCountYYOld=0, S2WaterCostYYCount=4, MOweWaterSumYYOld=0, S1TotalyuNew=-11, MOweWaterCountYYNew=1, MOweWaterCountYYOld=0, S1PreWaterSumYYNew=0, TotalAllhuNew=4, TotalAllyuNew=5, TotalAllhuOld=0, S2OweWaterCountYYOld=0, S1PreWaterSumYYOld=0, TotalAllyuOld=0}
2019-05-28 09:20:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 09:20:16 -HTTP METHOD : GET
2019-05-28 09:20:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 09:20:16 -参数 : []
2019-05-28 09:20:16 -耗时 : 1
2019-05-28 09:20:16 -返回值 : system/dept/deptTree
2019-05-28 09:20:16 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 09:20:16 -HTTP METHOD : GET
2019-05-28 09:20:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 09:20:16 -参数 : []
2019-05-28 09:20:16 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 09:20:16 -==> Parameters: 
2019-05-28 09:20:16 -<==      Total: 3
2019-05-28 09:20:16 -耗时 : 3
2019-05-28 09:20:16 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 09:20:18 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-28 09:20:18 -HTTP METHOD : POST
2019-05-28 09:20:18 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 09:20:18 -参数 : [com.bootdo.water.vo.WaterVo@7fc67bc, com.bootdo.moneyLog.vo.WaterLogVo@23f6f7ef]
2019-05-28 09:20:18 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 09:20:18 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 09:20:18 -<==      Total: 1
2019-05-28 09:20:18 -==>  Preparing: select m_water,s1_water,s2_water,s3_water,water_org from water_price 
2019-05-28 09:20:18 -==> Parameters: 
2019-05-28 09:20:18 -<==      Total: 2
2019-05-28 09:20:18 -耗时 : 116
2019-05-28 09:20:18 -返回值 : {S3TotalhuNew=0, S2PreWaterCountYYOld=0, S1OweWaterCountYYNew=0, S2PreWaterCountYYNew=0, S3WaterCostYYSum=0, S1OweWaterSumYYNew=0, type=3, S3PreWaterSumYYNew=0, TotalPreyuNew=0, MWaterLogYYSum=0, S1OweWaterCountYYOld=0, S1OweWaterSumYYOld=0, TotalCostyu=0, S3PreWaterSumYYOld=0, MPreWaterCountYYOld=0, S1WaterPrice=10, S1TotalyuOld=0, TotalPreyuOld=0, S2WaterLogYYCount=0, S3TotalhuOld=0, MPreWaterCountYYNew=0, TotalOwehuNew=0, S2WaterLogYYSum=0, TotalCosthu=0, S1WaterLogYYCount=0, S3WaterLogYYSum=0, S2OweWaterSumYYOld=0, TotalLogyu=0, MPreWaterSumYYOld=0, S2TotalhuNew=0, MTotalyuOld=0, MPreWaterSumYYNew=0, MWaterPrice=5, S1WaterCostYYCount=0, S3PreWaterCountYYNew=0, MTotalhuNew=0, MTotalyuNew=0, S2WaterCostYYSum=0, TotalLoghu=0, S2WaterPrice=20, S3PreWaterCountYYOld=0, S2TotalhuOld=0, S2TotalyuOld=0, S2OweWaterSumYYNew=0, TotalOweyuOld=0, S3OweWaterCountYYOld=0, S3WaterCostYYCount=0, S2TotalyuNew=0, S3WaterLogYYCount=0, S1TotalhuNew=0, MTotalhuOld=0, S3OweWaterSumYYOld=0, S1TotalhuOld=0, S1WaterCostYYSum=0, S2PreWaterSumYYNew=0, TotalPrehuNew=0, MOweWaterSumYYNew=0, S3OweWaterSumYYNew=0, S2PreWaterSumYYOld=0, TotalOweyuNew=0, MWaterCostYYCount=0, S3TotalyuOld=0, S3WaterPrice=30, MWaterLogYYCount=0, S3OweWaterCountYYNew=0, S3TotalyuNew=0, TotalPrehuOld=0, MWaterCostYYSum=0, S1PreWaterCountYYNew=0, S1WaterLogYYSum=0, TotalOwehuOld=0, PriceTotal=65, S2OweWaterCountYYNew=0, S1PreWaterCountYYOld=0, S2WaterCostYYCount=0, MOweWaterSumYYOld=0, S1TotalyuNew=0, MOweWaterCountYYNew=0, MOweWaterCountYYOld=0, S1PreWaterSumYYNew=0, TotalAllhuNew=0, TotalAllyuNew=0, TotalAllhuOld=0, S2OweWaterCountYYOld=0, S1PreWaterSumYYOld=0, TotalAllyuOld=0}
2019-05-28 09:20:48 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:20:48 -HTTP METHOD : GET
2019-05-28 09:20:48 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:20:48 -参数 : []
2019-05-28 09:20:48 -耗时 : 0
2019-05-28 09:20:48 -返回值 : charts/tableHeatYY
2019-05-28 09:20:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:20:49 -HTTP METHOD : GET
2019-05-28 09:20:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:20:49 -参数 : [userType]
2019-05-28 09:20:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:20:49 -==> Parameters: userType(String)
2019-05-28 09:20:49 -<==      Total: 4
2019-05-28 09:20:49 -耗时 : 4
2019-05-28 09:20:49 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:20:49 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 09:20:49 -HTTP METHOD : GET
2019-05-28 09:20:49 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 09:20:49 -参数 : []
2019-05-28 09:20:49 -耗时 : 0
2019-05-28 09:20:49 -返回值 : charts/tableElecYY
2019-05-28 09:20:49 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:20:49 -HTTP METHOD : GET
2019-05-28 09:20:49 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:20:49 -参数 : [userType]
2019-05-28 09:20:49 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:20:49 -==> Parameters: userType(String)
2019-05-28 09:20:49 -<==      Total: 4
2019-05-28 09:20:49 -耗时 : 3
2019-05-28 09:20:49 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:20:50 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:20:50 -HTTP METHOD : GET
2019-05-28 09:20:50 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:20:50 -参数 : []
2019-05-28 09:20:50 -耗时 : 0
2019-05-28 09:20:50 -返回值 : charts/tableHeatYY
2019-05-28 09:20:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:20:50 -HTTP METHOD : GET
2019-05-28 09:20:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:20:50 -参数 : [userType]
2019-05-28 09:20:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:20:50 -==> Parameters: userType(String)
2019-05-28 09:20:50 -<==      Total: 4
2019-05-28 09:20:50 -耗时 : 4
2019-05-28 09:20:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:20:52 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 09:20:52 -HTTP METHOD : GET
2019-05-28 09:20:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 09:20:52 -参数 : []
2019-05-28 09:20:52 -耗时 : 0
2019-05-28 09:20:52 -返回值 : charts/tableElecYY
2019-05-28 09:20:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:20:52 -HTTP METHOD : GET
2019-05-28 09:20:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:20:52 -参数 : [userType]
2019-05-28 09:20:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:20:52 -==> Parameters: userType(String)
2019-05-28 09:20:52 -<==      Total: 4
2019-05-28 09:20:52 -耗时 : 4
2019-05-28 09:20:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:21:03 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:21:03 -HTTP METHOD : GET
2019-05-28 09:21:03 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:21:03 -参数 : []
2019-05-28 09:21:03 -耗时 : 0
2019-05-28 09:21:03 -返回值 : charts/tableHeatYY
2019-05-28 09:21:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:21:03 -HTTP METHOD : GET
2019-05-28 09:21:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:21:03 -参数 : [userType]
2019-05-28 09:21:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:21:03 -==> Parameters: userType(String)
2019-05-28 09:21:03 -<==      Total: 4
2019-05-28 09:21:03 -耗时 : 6
2019-05-28 09:21:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:21:04 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 09:21:04 -HTTP METHOD : GET
2019-05-28 09:21:04 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 09:21:04 -参数 : []
2019-05-28 09:21:04 -耗时 : 0
2019-05-28 09:21:04 -返回值 : charts/tableWaterYY
2019-05-28 09:21:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:21:04 -HTTP METHOD : GET
2019-05-28 09:21:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:21:04 -参数 : [userType]
2019-05-28 09:21:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:21:04 -==> Parameters: userType(String)
2019-05-28 09:21:04 -<==      Total: 4
2019-05-28 09:21:04 -耗时 : 4
2019-05-28 09:21:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:21:04 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:21:04 -HTTP METHOD : GET
2019-05-28 09:21:04 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:21:04 -参数 : []
2019-05-28 09:21:04 -耗时 : 0
2019-05-28 09:21:04 -返回值 : charts/tableHeatYY
2019-05-28 09:21:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:21:04 -HTTP METHOD : GET
2019-05-28 09:21:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:21:04 -参数 : [userType]
2019-05-28 09:21:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:21:04 -==> Parameters: userType(String)
2019-05-28 09:21:04 -<==      Total: 4
2019-05-28 09:21:04 -耗时 : 3
2019-05-28 09:21:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:21:05 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 09:21:05 -HTTP METHOD : GET
2019-05-28 09:21:05 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 09:21:05 -参数 : []
2019-05-28 09:21:05 -耗时 : 0
2019-05-28 09:21:05 -返回值 : charts/tableElecYY
2019-05-28 09:21:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:21:05 -HTTP METHOD : GET
2019-05-28 09:21:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:21:05 -参数 : [userType]
2019-05-28 09:21:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:21:05 -==> Parameters: userType(String)
2019-05-28 09:21:05 -<==      Total: 4
2019-05-28 09:21:05 -耗时 : 4
2019-05-28 09:21:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:21:05 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:21:05 -HTTP METHOD : GET
2019-05-28 09:21:05 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:21:05 -参数 : []
2019-05-28 09:21:05 -耗时 : 0
2019-05-28 09:21:05 -返回值 : charts/tableHeatYY
2019-05-28 09:21:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:21:06 -HTTP METHOD : GET
2019-05-28 09:21:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:21:06 -参数 : [userType]
2019-05-28 09:21:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:21:06 -==> Parameters: userType(String)
2019-05-28 09:21:06 -<==      Total: 4
2019-05-28 09:21:06 -耗时 : 5
2019-05-28 09:21:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:21:06 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 09:21:06 -HTTP METHOD : GET
2019-05-28 09:21:06 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 09:21:06 -参数 : []
2019-05-28 09:21:06 -耗时 : 0
2019-05-28 09:21:06 -返回值 : charts/tableWaterYY
2019-05-28 09:21:06 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:21:06 -HTTP METHOD : GET
2019-05-28 09:21:06 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:21:06 -参数 : [userType]
2019-05-28 09:21:06 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:21:06 -==> Parameters: userType(String)
2019-05-28 09:21:06 -<==      Total: 4
2019-05-28 09:21:06 -耗时 : 4
2019-05-28 09:21:06 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:21:07 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:21:07 -HTTP METHOD : GET
2019-05-28 09:21:07 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:21:07 -参数 : []
2019-05-28 09:21:07 -耗时 : 1
2019-05-28 09:21:07 -返回值 : charts/tableHeatYY
2019-05-28 09:21:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:21:07 -HTTP METHOD : GET
2019-05-28 09:21:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:21:07 -参数 : [userType]
2019-05-28 09:21:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:21:07 -==> Parameters: userType(String)
2019-05-28 09:21:07 -<==      Total: 4
2019-05-28 09:21:07 -耗时 : 5
2019-05-28 09:21:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:21:07 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 09:21:07 -HTTP METHOD : GET
2019-05-28 09:21:07 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 09:21:07 -参数 : []
2019-05-28 09:21:07 -耗时 : 1
2019-05-28 09:21:07 -返回值 : charts/tableElecYY
2019-05-28 09:21:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:21:07 -HTTP METHOD : GET
2019-05-28 09:21:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:21:07 -参数 : [userType]
2019-05-28 09:21:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:21:07 -==> Parameters: userType(String)
2019-05-28 09:21:07 -<==      Total: 4
2019-05-28 09:21:07 -耗时 : 3
2019-05-28 09:21:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:21:14 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:21:14 -HTTP METHOD : GET
2019-05-28 09:21:14 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:21:14 -参数 : []
2019-05-28 09:21:14 -耗时 : 1
2019-05-28 09:21:14 -返回值 : charts/tableHeatYY
2019-05-28 09:21:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:21:14 -HTTP METHOD : GET
2019-05-28 09:21:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:21:14 -参数 : [userType]
2019-05-28 09:21:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:21:14 -==> Parameters: userType(String)
2019-05-28 09:21:14 -<==      Total: 4
2019-05-28 09:21:14 -耗时 : 3
2019-05-28 09:21:14 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:21:15 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 09:21:15 -HTTP METHOD : GET
2019-05-28 09:21:15 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 09:21:15 -参数 : []
2019-05-28 09:21:15 -耗时 : 0
2019-05-28 09:21:15 -返回值 : charts/tableWaterYY
2019-05-28 09:21:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:21:15 -HTTP METHOD : GET
2019-05-28 09:21:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:21:15 -参数 : [userType]
2019-05-28 09:21:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:21:15 -==> Parameters: userType(String)
2019-05-28 09:21:15 -<==      Total: 4
2019-05-28 09:21:15 -耗时 : 4
2019-05-28 09:21:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:21:16 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:21:16 -HTTP METHOD : GET
2019-05-28 09:21:16 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:21:16 -参数 : []
2019-05-28 09:21:16 -耗时 : 1
2019-05-28 09:21:16 -返回值 : charts/tableHeatYY
2019-05-28 09:21:16 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:21:16 -HTTP METHOD : GET
2019-05-28 09:21:16 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:21:16 -参数 : [userType]
2019-05-28 09:21:16 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:21:16 -==> Parameters: userType(String)
2019-05-28 09:21:16 -<==      Total: 4
2019-05-28 09:21:16 -耗时 : 5
2019-05-28 09:21:16 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:21:16 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 09:21:16 -HTTP METHOD : GET
2019-05-28 09:21:16 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 09:21:16 -参数 : []
2019-05-28 09:21:16 -耗时 : 0
2019-05-28 09:21:16 -返回值 : charts/tableElecYY
2019-05-28 09:21:17 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:21:17 -HTTP METHOD : GET
2019-05-28 09:21:17 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:21:17 -参数 : [userType]
2019-05-28 09:21:17 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:21:17 -==> Parameters: userType(String)
2019-05-28 09:21:17 -<==      Total: 4
2019-05-28 09:21:17 -耗时 : 3
2019-05-28 09:21:17 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:25:57 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:25:57 -HTTP METHOD : GET
2019-05-28 09:25:57 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:25:57 -参数 : []
2019-05-28 09:25:57 -耗时 : 1
2019-05-28 09:25:57 -返回值 : charts/tableHeatYY
2019-05-28 09:25:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:25:57 -HTTP METHOD : GET
2019-05-28 09:25:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:25:57 -参数 : [userType]
2019-05-28 09:25:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:25:57 -==> Parameters: userType(String)
2019-05-28 09:25:57 -<==      Total: 4
2019-05-28 09:25:57 -耗时 : 5
2019-05-28 09:25:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:25:58 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 09:25:58 -HTTP METHOD : GET
2019-05-28 09:25:58 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 09:25:58 -参数 : []
2019-05-28 09:25:58 -耗时 : 0
2019-05-28 09:25:58 -返回值 : charts/tableWaterYY
2019-05-28 09:25:58 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:25:58 -HTTP METHOD : GET
2019-05-28 09:25:58 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:25:58 -参数 : [userType]
2019-05-28 09:25:58 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:25:58 -==> Parameters: userType(String)
2019-05-28 09:25:58 -<==      Total: 4
2019-05-28 09:25:58 -耗时 : 5
2019-05-28 09:25:58 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:25:58 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:25:58 -HTTP METHOD : GET
2019-05-28 09:25:58 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:25:58 -参数 : []
2019-05-28 09:25:58 -耗时 : 1
2019-05-28 09:25:58 -返回值 : charts/tableHeatYY
2019-05-28 09:25:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:25:59 -HTTP METHOD : GET
2019-05-28 09:25:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:25:59 -参数 : [userType]
2019-05-28 09:25:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:25:59 -==> Parameters: userType(String)
2019-05-28 09:25:59 -<==      Total: 4
2019-05-28 09:25:59 -耗时 : 6
2019-05-28 09:25:59 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:25:59 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 09:25:59 -HTTP METHOD : GET
2019-05-28 09:25:59 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 09:25:59 -参数 : []
2019-05-28 09:25:59 -耗时 : 1
2019-05-28 09:25:59 -返回值 : charts/tableElecYY
2019-05-28 09:25:59 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:25:59 -HTTP METHOD : GET
2019-05-28 09:25:59 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:25:59 -参数 : [userType]
2019-05-28 09:25:59 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:25:59 -==> Parameters: userType(String)
2019-05-28 09:25:59 -<==      Total: 4
2019-05-28 09:25:59 -耗时 : 3
2019-05-28 09:25:59 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:25:59 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:25:59 -HTTP METHOD : GET
2019-05-28 09:25:59 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:25:59 -参数 : []
2019-05-28 09:25:59 -耗时 : 0
2019-05-28 09:25:59 -返回值 : charts/tableHeatYY
2019-05-28 09:26:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:26:00 -HTTP METHOD : GET
2019-05-28 09:26:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:26:00 -参数 : [userType]
2019-05-28 09:26:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:26:00 -==> Parameters: userType(String)
2019-05-28 09:26:00 -<==      Total: 4
2019-05-28 09:26:00 -耗时 : 3
2019-05-28 09:26:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:26:00 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 09:26:00 -HTTP METHOD : GET
2019-05-28 09:26:00 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 09:26:00 -参数 : []
2019-05-28 09:26:00 -耗时 : 1
2019-05-28 09:26:00 -返回值 : charts/tableWaterYY
2019-05-28 09:26:00 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:26:00 -HTTP METHOD : GET
2019-05-28 09:26:00 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:26:00 -参数 : [userType]
2019-05-28 09:26:00 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:26:00 -==> Parameters: userType(String)
2019-05-28 09:26:00 -<==      Total: 4
2019-05-28 09:26:00 -耗时 : 3
2019-05-28 09:26:00 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:26:00 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:26:00 -HTTP METHOD : GET
2019-05-28 09:26:00 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:26:00 -参数 : []
2019-05-28 09:26:00 -耗时 : 0
2019-05-28 09:26:00 -返回值 : charts/tableHeatYY
2019-05-28 09:26:01 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:26:01 -HTTP METHOD : GET
2019-05-28 09:26:01 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:26:01 -参数 : [userType]
2019-05-28 09:26:01 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:26:01 -==> Parameters: userType(String)
2019-05-28 09:26:01 -<==      Total: 4
2019-05-28 09:26:01 -耗时 : 3
2019-05-28 09:26:01 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:26:07 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 09:26:07 -HTTP METHOD : GET
2019-05-28 09:26:07 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 09:26:07 -参数 : []
2019-05-28 09:26:07 -耗时 : 0
2019-05-28 09:26:07 -返回值 : charts/tableWaterYY
2019-05-28 09:26:07 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:26:07 -HTTP METHOD : GET
2019-05-28 09:26:07 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:26:07 -参数 : [userType]
2019-05-28 09:26:07 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:26:07 -==> Parameters: userType(String)
2019-05-28 09:26:07 -<==      Total: 4
2019-05-28 09:26:07 -耗时 : 4
2019-05-28 09:26:07 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:26:07 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 09:26:07 -HTTP METHOD : GET
2019-05-28 09:26:07 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 09:26:07 -参数 : []
2019-05-28 09:26:07 -耗时 : 0
2019-05-28 09:26:07 -返回值 : charts/tableHeatYY
2019-05-28 09:26:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:26:08 -HTTP METHOD : GET
2019-05-28 09:26:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:26:08 -参数 : [userType]
2019-05-28 09:26:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:26:08 -==> Parameters: userType(String)
2019-05-28 09:26:08 -<==      Total: 4
2019-05-28 09:26:08 -耗时 : 3
2019-05-28 09:26:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:26:08 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 09:26:08 -HTTP METHOD : GET
2019-05-28 09:26:08 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 09:26:08 -参数 : []
2019-05-28 09:26:08 -耗时 : 1
2019-05-28 09:26:08 -返回值 : charts/tableWaterYY
2019-05-28 09:26:08 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:26:08 -HTTP METHOD : GET
2019-05-28 09:26:08 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:26:08 -参数 : [userType]
2019-05-28 09:26:08 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:26:08 -==> Parameters: userType(String)
2019-05-28 09:26:08 -<==      Total: 4
2019-05-28 09:26:08 -耗时 : 3
2019-05-28 09:26:08 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:26:52 -请求地址 : http://localhost:8081/moneyList/moneyWZ
2019-05-28 09:26:52 -HTTP METHOD : GET
2019-05-28 09:26:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ
2019-05-28 09:26:52 -参数 : []
2019-05-28 09:26:52 -耗时 : 1
2019-05-28 09:26:52 -返回值 : /moneyList/moneyWZ
2019-05-28 09:26:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 09:26:52 -HTTP METHOD : GET
2019-05-28 09:26:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 09:26:52 -参数 : [userType]
2019-05-28 09:26:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 09:26:52 -==> Parameters: userType(String)
2019-05-28 09:26:52 -<==      Total: 4
2019-05-28 09:26:52 -耗时 : 3
2019-05-28 09:26:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 09:26:52 -请求地址 : http://localhost:8081/moneyList/moneyWZ/list
2019-05-28 09:26:52 -HTTP METHOD : GET
2019-05-28 09:26:52 -CLASS_METHOD : com.bootdo.moneyList.controller.MoneyListWZController.list
2019-05-28 09:26:52 -参数 : [{limit=100, offset=0, createTime=, userType=, userId=, queryType=1}, com.bootdo.elec.domain.ElecDO@715f2334]
2019-05-28 09:26:52 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec WHERE `user_id` LIKE 'W%' and user_org = '2' order by id asc limit ?, ? 
2019-05-28 09:26:52 -==> Parameters: 0(Integer), 100(Integer)
2019-05-28 09:26:52 -<==      Total: 0
2019-05-28 09:26:52 -==>  Preparing: select count(*) from elec WHERE `user_id` LIKE 'W%' and user_org = '2' 
2019-05-28 09:26:52 -==> Parameters: 
2019-05-28 09:26:52 -<==      Total: 1
2019-05-28 09:26:52 -耗时 : 187
2019-05-28 09:26:52 -返回值 : com.bootdo.common.utils.PageUtils@6225bd95
2019-05-28 09:46:30 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 429]
2019-05-28 10:16:03 -Validating all active sessions...
2019-05-28 10:16:03 -Finished session validation.  [1] sessions were stopped.
2019-05-28 10:16:30 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 862]
2019-05-28 10:21:04 -请求地址 : http://localhost:8081/login;JSESSIONID=7e5abd63-4660-40b2-bc25-c76173def886
2019-05-28 10:21:04 -HTTP METHOD : GET
2019-05-28 10:21:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 10:21:04 -参数 : [{}]
2019-05-28 10:21:04 -耗时 : 0
2019-05-28 10:21:04 -返回值 : login
2019-05-28 10:21:05 -请求地址 : http://localhost:8081/getVerify
2019-05-28 10:21:05 -HTTP METHOD : GET
2019-05-28 10:21:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-28 10:21:05 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@71b21283, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7ba9e245]
2019-05-28 10:21:05 -2708
2019-05-28 10:21:05 -耗时 : 24
2019-05-28 10:21:05 -返回值 : null
2019-05-28 10:21:05 -请求地址 : http://localhost:8081/login
2019-05-28 10:21:05 -HTTP METHOD : GET
2019-05-28 10:21:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 10:21:05 -参数 : [{}]
2019-05-28 10:21:05 -耗时 : 1
2019-05-28 10:21:05 -返回值 : login
2019-05-28 10:21:49 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 10:46:30 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1236]
2019-05-28 11:16:03 -Validating all active sessions...
2019-05-28 11:16:03 -Finished session validation.  [1] sessions were stopped.
2019-05-28 11:16:30 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1597]
2019-05-28 11:46:30 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 1958]
2019-05-28 12:16:03 -Validating all active sessions...
2019-05-28 12:16:03 -Finished session validation.  No sessions were stopped.
2019-05-28 12:16:30 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 15], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 2319]
2019-05-28 14:17:59 -Starting BootdoApplication on PC-201905091110 with PID 3384 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-28 14:17:59 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-28 14:17:59 -The following profiles are active: dev
2019-05-28 14:18:00 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4879f0f2: startup date [Tue May 28 14:18:00 CST 2019]; root of context hierarchy
2019-05-28 14:18:11 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-28 14:18:15 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a71f1bd4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:18:15 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$99784a7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:18:16 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:18:17 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:18:17 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:18:17 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-28 14:18:17 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-28 14:18:17 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:18:17 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:18:17 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:18:18 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:18:19 -Tomcat initialized with port(s): 8081 (http)
2019-05-28 14:18:19 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-28 14:18:19 -Starting service [Tomcat]
2019-05-28 14:18:19 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-28 14:18:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-28 14:18:20 -Initializing Spring embedded WebApplicationContext
2019-05-28 14:18:20 -Root WebApplicationContext: initialization completed in 20579 ms
2019-05-28 14:18:22 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-28 14:18:22 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-28 14:18:22 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-28 14:18:22 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-28 14:18:22 -Filter xssFilter was not registered (disabled)
2019-05-28 14:18:22 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-28 14:18:22 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-28 14:18:22 -Servlet statViewServlet mapped to [/druid/*]
2019-05-28 14:18:22 -Servlet dispatcherServlet mapped to [/]
2019-05-28 14:18:27 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4879f0f2: startup date [Tue May 28 14:18:00 CST 2019]; root of context hierarchy
2019-05-28 14:18:28 -Using default implementation for ThreadExecutor
2019-05-28 14:18:28 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-28 14:18:28 -Quartz Scheduler v.2.2.1 created.
2019-05-28 14:18:28 -RAMJobStore initialized.
2019-05-28 14:18:28 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-28 14:18:28 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-28 14:18:28 -Quartz scheduler version: 2.2.1
2019-05-28 14:18:28 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5305f936
2019-05-28 14:18:29 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-28 14:18:29 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-28 14:18:33 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-28 14:18:33 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:18:33 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:18:33 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-28 14:18:33 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-28 14:18:33 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-28 14:18:33 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:18:33 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-28 14:18:33 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:18:33 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-28 14:18:33 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:18:33 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-28 14:18:33 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 14:18:33 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-28 14:18:33 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 14:18:33 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-28 14:18:33 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:18:33 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-28 14:18:33 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:18:33 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-28 14:18:33 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 14:18:33 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-28 14:18:33 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-28 14:18:33 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 14:18:33 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-28 14:18:33 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-28 14:18:33 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-28 14:18:33 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-28 14:18:33 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-28 14:18:33 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-28 14:18:33 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-28 14:18:33 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-28 14:18:33 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-28 14:18:33 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-28 14:18:33 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-28 14:18:33 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-28 14:18:33 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-28 14:18:33 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 14:18:33 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-28 14:18:33 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 14:18:33 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-28 14:18:33 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-28 14:18:33 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-28 14:18:33 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-28 14:18:33 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-28 14:18:33 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-28 14:18:33 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-28 14:18:33 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-28 14:18:33 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-28 14:18:33 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 14:18:33 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 14:18:33 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-28 14:18:33 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-28 14:18:33 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-28 14:18:33 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 14:18:33 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-28 14:18:33 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-28 14:18:33 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-28 14:18:33 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-28 14:18:33 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-28 14:18:33 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 14:18:33 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 14:18:33 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-28 14:18:33 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-28 14:18:33 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-28 14:18:33 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-28 14:18:33 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-28 14:18:33 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-28 14:18:33 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 14:18:33 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-28 14:18:33 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-28 14:18:33 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 14:18:33 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 14:18:33 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-28 14:18:33 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 14:18:33 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-28 14:18:33 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-28 14:18:33 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-28 14:18:33 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 14:18:33 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 14:18:33 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 14:18:33 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-28 14:18:33 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 14:18:33 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 14:18:33 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-28 14:18:33 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-28 14:18:33 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-28 14:18:33 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-28 14:18:33 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-28 14:18:33 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-28 14:18:33 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-28 14:18:33 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 14:18:33 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-28 14:18:33 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-28 14:18:33 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-28 14:18:33 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-28 14:18:33 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-28 14:18:33 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-28 14:18:33 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-28 14:18:33 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-28 14:18:33 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-28 14:18:33 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-28 14:18:33 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-28 14:18:33 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-28 14:18:33 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-28 14:18:33 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-28 14:18:33 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-28 14:18:33 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-28 14:18:33 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-28 14:18:33 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-28 14:18:33 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-28 14:18:33 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 14:18:33 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-28 14:18:33 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-28 14:18:33 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-28 14:18:33 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-28 14:18:33 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-28 14:18:33 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-28 14:18:33 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-28 14:18:33 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-28 14:18:33 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-28 14:18:33 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-28 14:18:33 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-28 14:18:33 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-28 14:18:33 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-28 14:18:33 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-28 14:18:33 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-28 14:18:33 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-28 14:18:33 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 14:18:33 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 14:18:33 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 14:18:33 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-28 14:18:33 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-28 14:18:33 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-28 14:18:33 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-28 14:18:33 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-28 14:18:33 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-28 14:18:33 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-28 14:18:33 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 14:18:33 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-28 14:18:33 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-28 14:18:33 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-28 14:18:33 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 14:18:33 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:18:33 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 14:18:33 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:18:33 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-28 14:18:33 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:18:33 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-28 14:18:33 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-28 14:18:33 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 14:18:33 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 14:18:33 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-28 14:18:33 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-28 14:18:33 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-28 14:18:34 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-28 14:18:35 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-28 14:18:35 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-28 14:18:35 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 14:18:36 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4879f0f2: startup date [Tue May 28 14:18:00 CST 2019]; root of context hierarchy
2019-05-28 14:18:36 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 14:18:36 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 14:18:36 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 14:18:36 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-28 14:18:37 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-28 14:18:41 -Registering beans for JMX exposure on startup
2019-05-28 14:18:41 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-28 14:18:41 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-28 14:18:41 -Starting beans in phase 2147483647
2019-05-28 14:18:41 -Context refreshed
2019-05-28 14:18:41 -Found 1 custom documentation plugin(s)
2019-05-28 14:18:41 -Scanning for api listing references
2019-05-28 14:18:42 -Generating unique operation named: getCountDUsingPOST_1
2019-05-28 14:18:43 -Generating unique operation named: removeUsingPOST_1
2019-05-28 14:18:43 -Generating unique operation named: addUsingGET_1
2019-05-28 14:18:43 -Generating unique operation named: editUsingGET_1
2019-05-28 14:18:43 -Generating unique operation named: listUsingGET_1
2019-05-28 14:18:43 -Generating unique operation named: removeUsingPOST_2
2019-05-28 14:18:43 -Generating unique operation named: removeUsingPOST_3
2019-05-28 14:18:43 -Generating unique operation named: saveUsingPOST_1
2019-05-28 14:18:43 -Generating unique operation named: updateUsingGET_1
2019-05-28 14:18:43 -Generating unique operation named: updateUsingHEAD_1
2019-05-28 14:18:43 -Generating unique operation named: updateUsingPOST_1
2019-05-28 14:18:43 -Generating unique operation named: updateUsingPUT_1
2019-05-28 14:18:43 -Generating unique operation named: updateUsingPATCH_1
2019-05-28 14:18:43 -Generating unique operation named: updateUsingDELETE_1
2019-05-28 14:18:43 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-28 14:18:43 -Generating unique operation named: updateUsingTRACE_1
2019-05-28 14:18:43 -Generating unique operation named: addUsingGET_2
2019-05-28 14:18:43 -Generating unique operation named: editUsingGET_2
2019-05-28 14:18:43 -Generating unique operation named: listUsingGET_2
2019-05-28 14:18:43 -Generating unique operation named: removeUsingPOST_4
2019-05-28 14:18:43 -Generating unique operation named: removeUsingPOST_5
2019-05-28 14:18:43 -Generating unique operation named: saveUsingPOST_2
2019-05-28 14:18:43 -Generating unique operation named: updateUsingPOST_2
2019-05-28 14:18:43 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-28 14:18:43 -Generating unique operation named: addUsingGET_3
2019-05-28 14:18:43 -Generating unique operation named: editUsingGET_3
2019-05-28 14:18:43 -Generating unique operation named: listUsingGET_3
2019-05-28 14:18:43 -Generating unique operation named: removeUsingPOST_6
2019-05-28 14:18:43 -Generating unique operation named: removeUsingPOST_7
2019-05-28 14:18:43 -Generating unique operation named: saveUsingPOST_3
2019-05-28 14:18:43 -Generating unique operation named: updateUsingGET_2
2019-05-28 14:18:43 -Generating unique operation named: updateUsingHEAD_2
2019-05-28 14:18:43 -Generating unique operation named: updateUsingPOST_3
2019-05-28 14:18:43 -Generating unique operation named: updateUsingPUT_2
2019-05-28 14:18:43 -Generating unique operation named: updateUsingPATCH_2
2019-05-28 14:18:43 -Generating unique operation named: updateUsingDELETE_2
2019-05-28 14:18:43 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-28 14:18:43 -Generating unique operation named: updateUsingTRACE_2
2019-05-28 14:18:43 -Generating unique operation named: addUsingGET_4
2019-05-28 14:18:43 -Generating unique operation named: editUsingGET_4
2019-05-28 14:18:43 -Generating unique operation named: listUsingGET_4
2019-05-28 14:18:43 -Generating unique operation named: removeUsingPOST_8
2019-05-28 14:18:43 -Generating unique operation named: removeUsingPOST_9
2019-05-28 14:18:43 -Generating unique operation named: saveUsingPOST_4
2019-05-28 14:18:43 -Generating unique operation named: updateUsingGET_3
2019-05-28 14:18:43 -Generating unique operation named: updateUsingHEAD_3
2019-05-28 14:18:43 -Generating unique operation named: updateUsingPOST_4
2019-05-28 14:18:43 -Generating unique operation named: updateUsingPUT_3
2019-05-28 14:18:43 -Generating unique operation named: updateUsingPATCH_3
2019-05-28 14:18:43 -Generating unique operation named: updateUsingDELETE_3
2019-05-28 14:18:43 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-28 14:18:43 -Generating unique operation named: updateUsingTRACE_3
2019-05-28 14:18:43 -Generating unique operation named: ElecUsingGET_1
2019-05-28 14:18:43 -Generating unique operation named: addUsingGET_5
2019-05-28 14:18:43 -Generating unique operation named: editUsingGET_5
2019-05-28 14:18:43 -Generating unique operation named: listUsingGET_5
2019-05-28 14:18:43 -Generating unique operation named: removeUsingPOST_10
2019-05-28 14:18:43 -Generating unique operation named: removeUsingPOST_11
2019-05-28 14:18:43 -Generating unique operation named: saveUsingPOST_5
2019-05-28 14:18:44 -Generating unique operation named: updateUsingGET_4
2019-05-28 14:18:44 -Generating unique operation named: updateUsingHEAD_4
2019-05-28 14:18:44 -Generating unique operation named: updateUsingPOST_5
2019-05-28 14:18:44 -Generating unique operation named: updateUsingPUT_4
2019-05-28 14:18:44 -Generating unique operation named: updateUsingPATCH_4
2019-05-28 14:18:44 -Generating unique operation named: updateUsingDELETE_4
2019-05-28 14:18:44 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-28 14:18:44 -Generating unique operation named: updateUsingTRACE_4
2019-05-28 14:18:44 -Generating unique operation named: editUsingGET_6
2019-05-28 14:18:44 -Generating unique operation named: listUsingGET_6
2019-05-28 14:18:44 -Generating unique operation named: updateUsingPOST_6
2019-05-28 14:18:44 -Generating unique operation named: addUsingGET_6
2019-05-28 14:18:44 -Generating unique operation named: editUsingGET_7
2019-05-28 14:18:44 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-28 14:18:44 -Generating unique operation named: listUsingGET_7
2019-05-28 14:18:44 -Generating unique operation named: removeUsingPOST_12
2019-05-28 14:18:44 -Generating unique operation named: removeUsingPOST_13
2019-05-28 14:18:44 -Generating unique operation named: saveUsingPOST_6
2019-05-28 14:18:44 -Generating unique operation named: updateUsingGET_5
2019-05-28 14:18:44 -Generating unique operation named: updateUsingHEAD_5
2019-05-28 14:18:44 -Generating unique operation named: updateUsingPOST_7
2019-05-28 14:18:44 -Generating unique operation named: updateUsingPUT_5
2019-05-28 14:18:44 -Generating unique operation named: updateUsingPATCH_5
2019-05-28 14:18:44 -Generating unique operation named: updateUsingDELETE_5
2019-05-28 14:18:44 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-28 14:18:44 -Generating unique operation named: updateUsingTRACE_5
2019-05-28 14:18:44 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-28 14:18:44 -Generating unique operation named: addUsingGET_7
2019-05-28 14:18:44 -Generating unique operation named: editUsingGET_8
2019-05-28 14:18:44 -Generating unique operation named: listUsingGET_8
2019-05-28 14:18:44 -Generating unique operation named: removeUsingPOST_14
2019-05-28 14:18:44 -Generating unique operation named: removeUsingPOST_15
2019-05-28 14:18:44 -Generating unique operation named: saveUsingPOST_7
2019-05-28 14:18:44 -Generating unique operation named: updateUsingGET_6
2019-05-28 14:18:44 -Generating unique operation named: updateUsingHEAD_6
2019-05-28 14:18:44 -Generating unique operation named: updateUsingPOST_8
2019-05-28 14:18:44 -Generating unique operation named: updateUsingPUT_6
2019-05-28 14:18:44 -Generating unique operation named: updateUsingPATCH_6
2019-05-28 14:18:44 -Generating unique operation named: updateUsingDELETE_6
2019-05-28 14:18:44 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-28 14:18:44 -Generating unique operation named: updateUsingTRACE_6
2019-05-28 14:18:44 -Generating unique operation named: addUsingGET_8
2019-05-28 14:18:44 -Generating unique operation named: editUsingGET_9
2019-05-28 14:18:44 -Generating unique operation named: listUsingGET_9
2019-05-28 14:18:44 -Generating unique operation named: removeUsingPOST_16
2019-05-28 14:18:44 -Generating unique operation named: removeUsingPOST_17
2019-05-28 14:18:44 -Generating unique operation named: saveUsingPOST_8
2019-05-28 14:18:44 -Generating unique operation named: updateUsingGET_7
2019-05-28 14:18:44 -Generating unique operation named: updateUsingHEAD_7
2019-05-28 14:18:44 -Generating unique operation named: updateUsingPOST_9
2019-05-28 14:18:44 -Generating unique operation named: updateUsingPUT_7
2019-05-28 14:18:44 -Generating unique operation named: updateUsingPATCH_7
2019-05-28 14:18:44 -Generating unique operation named: updateUsingDELETE_7
2019-05-28 14:18:44 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-28 14:18:44 -Generating unique operation named: updateUsingTRACE_7
2019-05-28 14:18:44 -Generating unique operation named: addUsingGET_9
2019-05-28 14:18:44 -Generating unique operation named: editUsingGET_10
2019-05-28 14:18:44 -Generating unique operation named: infoUsingGET_1
2019-05-28 14:18:44 -Generating unique operation named: infoUsingHEAD_1
2019-05-28 14:18:44 -Generating unique operation named: infoUsingPOST_1
2019-05-28 14:18:44 -Generating unique operation named: infoUsingPUT_1
2019-05-28 14:18:44 -Generating unique operation named: infoUsingPATCH_1
2019-05-28 14:18:44 -Generating unique operation named: infoUsingDELETE_1
2019-05-28 14:18:44 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-28 14:18:44 -Generating unique operation named: infoUsingTRACE_1
2019-05-28 14:18:44 -Generating unique operation named: listUsingGET_10
2019-05-28 14:18:44 -Generating unique operation named: removeUsingPOST_18
2019-05-28 14:18:44 -Generating unique operation named: removeUsingPOST_19
2019-05-28 14:18:44 -Generating unique operation named: saveUsingPOST_9
2019-05-28 14:18:44 -Generating unique operation named: updateUsingPOST_10
2019-05-28 14:18:44 -Generating unique operation named: listUsingGET_11
2019-05-28 14:18:44 -Generating unique operation named: removeUsingPOST_20
2019-05-28 14:18:44 -Generating unique operation named: welcomeUsingGET_1
2019-05-28 14:18:44 -Generating unique operation named: addUsingGET_10
2019-05-28 14:18:44 -Generating unique operation named: editUsingGET_11
2019-05-28 14:18:44 -Generating unique operation named: listUsingGET_12
2019-05-28 14:18:44 -Generating unique operation named: removeUsingPOST_21
2019-05-28 14:18:44 -Generating unique operation named: saveUsingPOST_10
2019-05-28 14:18:44 -Generating unique operation named: treeUsingGET_1
2019-05-28 14:18:44 -Generating unique operation named: treeUsingGET_2
2019-05-28 14:18:44 -Generating unique operation named: updateUsingPOST_11
2019-05-28 14:18:45 -Generating unique operation named: addUsingGET_11
2019-05-28 14:18:45 -Generating unique operation named: editUsingGET_12
2019-05-28 14:18:45 -Generating unique operation named: listUsingGET_13
2019-05-28 14:18:45 -Generating unique operation named: removeUsingPOST_22
2019-05-28 14:18:45 -Generating unique operation named: removeUsingPOST_23
2019-05-28 14:18:45 -Generating unique operation named: updateUsingPOST_12
2019-05-28 14:18:45 -Generating unique operation named: addUsingGET_12
2019-05-28 14:18:45 -Generating unique operation named: editUsingGET_13
2019-05-28 14:18:45 -Generating unique operation named: listUsingGET_14
2019-05-28 14:18:45 -Generating unique operation named: removeUsingPOST_24
2019-05-28 14:18:45 -Generating unique operation named: removeUsingPOST_25
2019-05-28 14:18:45 -Generating unique operation named: saveUsingPOST_11
2019-05-28 14:18:45 -Generating unique operation named: updateUsingGET_8
2019-05-28 14:18:45 -Generating unique operation named: updateUsingHEAD_8
2019-05-28 14:18:45 -Generating unique operation named: updateUsingPOST_13
2019-05-28 14:18:45 -Generating unique operation named: updateUsingPUT_8
2019-05-28 14:18:45 -Generating unique operation named: updateUsingPATCH_8
2019-05-28 14:18:45 -Generating unique operation named: updateUsingDELETE_8
2019-05-28 14:18:45 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-28 14:18:45 -Generating unique operation named: updateUsingTRACE_8
2019-05-28 14:18:45 -Generating unique operation named: addUsingGET_13
2019-05-28 14:18:45 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-28 14:18:45 -Generating unique operation named: editUsingGET_14
2019-05-28 14:18:45 -Generating unique operation named: listUsingGET_15
2019-05-28 14:18:45 -Generating unique operation named: printEditUsingGET_1
2019-05-28 14:18:45 -Generating unique operation named: removeUsingPOST_26
2019-05-28 14:18:45 -Generating unique operation named: saveUsingPOST_12
2019-05-28 14:18:45 -Generating unique operation named: updateUsingGET_9
2019-05-28 14:18:45 -Generating unique operation named: updateUsingHEAD_9
2019-05-28 14:18:45 -Generating unique operation named: updateUsingPOST_14
2019-05-28 14:18:45 -Generating unique operation named: updateUsingPUT_9
2019-05-28 14:18:45 -Generating unique operation named: updateUsingPATCH_9
2019-05-28 14:18:45 -Generating unique operation named: updateUsingDELETE_9
2019-05-28 14:18:45 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-28 14:18:45 -Generating unique operation named: updateUsingTRACE_9
2019-05-28 14:18:45 -Generating unique operation named: addUsingGET_14
2019-05-28 14:18:45 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-28 14:18:45 -Generating unique operation named: editUsingGET_15
2019-05-28 14:18:45 -Generating unique operation named: listUsingGET_16
2019-05-28 14:18:45 -Generating unique operation named: saveUsingPOST_13
2019-05-28 14:18:45 -Generating unique operation named: saveUsingPOST_14
2019-05-28 14:18:45 -Generating unique operation named: updateUsingPOST_15
2019-05-28 14:18:45 -Generating unique operation named: listUsingGET_17
2019-05-28 14:18:45 -Generating unique operation named: listUsingHEAD_1
2019-05-28 14:18:45 -Generating unique operation named: listUsingPOST_1
2019-05-28 14:18:45 -Generating unique operation named: listUsingPUT_1
2019-05-28 14:18:45 -Generating unique operation named: listUsingPATCH_1
2019-05-28 14:18:45 -Generating unique operation named: listUsingDELETE_1
2019-05-28 14:18:45 -Generating unique operation named: listUsingOPTIONS_1
2019-05-28 14:18:45 -Generating unique operation named: listUsingTRACE_1
2019-05-28 14:18:46 -Generating unique operation named: countDDUsingGET_1
2019-05-28 14:18:46 -Generating unique operation named: exportDDUsingGET_1
2019-05-28 14:18:46 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-28 14:18:46 -Generating unique operation named: addUsingGET_15
2019-05-28 14:18:46 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-28 14:18:46 -Generating unique operation named: editUsingGET_16
2019-05-28 14:18:46 -Generating unique operation named: listUsingGET_18
2019-05-28 14:18:46 -Generating unique operation named: removeUsingPOST_27
2019-05-28 14:18:46 -Generating unique operation named: saveUsingPOST_15
2019-05-28 14:18:46 -Generating unique operation named: treeUsingGET_3
2019-05-28 14:18:46 -Generating unique operation named: treeViewUsingGET_1
2019-05-28 14:18:46 -Generating unique operation named: updateUsingPOST_16
2019-05-28 14:18:46 -Generating unique operation named: addUsingGET_16
2019-05-28 14:18:46 -Generating unique operation named: editUsingGET_17
2019-05-28 14:18:46 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-28 14:18:46 -Generating unique operation named: listUsingGET_19
2019-05-28 14:18:46 -Generating unique operation named: removeUsingPOST_28
2019-05-28 14:18:46 -Generating unique operation named: removeUsingPOST_29
2019-05-28 14:18:46 -Generating unique operation named: saveUsingPOST_16
2019-05-28 14:18:46 -Generating unique operation named: updateUsingGET_10
2019-05-28 14:18:46 -Generating unique operation named: updateUsingHEAD_10
2019-05-28 14:18:46 -Generating unique operation named: updateUsingPOST_17
2019-05-28 14:18:46 -Generating unique operation named: updateUsingPUT_10
2019-05-28 14:18:46 -Generating unique operation named: updateUsingPATCH_10
2019-05-28 14:18:46 -Generating unique operation named: updateUsingDELETE_10
2019-05-28 14:18:46 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-28 14:18:46 -Generating unique operation named: updateUsingTRACE_10
2019-05-28 14:18:46 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-28 14:18:46 -Generating unique operation named: addUsingGET_17
2019-05-28 14:18:46 -Generating unique operation named: editUsingGET_18
2019-05-28 14:18:46 -Generating unique operation named: listUsingGET_20
2019-05-28 14:18:46 -Generating unique operation named: removeUsingPOST_30
2019-05-28 14:18:46 -Generating unique operation named: removeUsingPOST_31
2019-05-28 14:18:46 -Generating unique operation named: saveUsingPOST_17
2019-05-28 14:18:46 -Generating unique operation named: updateUsingGET_11
2019-05-28 14:18:46 -Generating unique operation named: updateUsingHEAD_11
2019-05-28 14:18:46 -Generating unique operation named: updateUsingPOST_18
2019-05-28 14:18:46 -Generating unique operation named: updateUsingPUT_11
2019-05-28 14:18:46 -Generating unique operation named: updateUsingPATCH_11
2019-05-28 14:18:46 -Generating unique operation named: updateUsingDELETE_11
2019-05-28 14:18:46 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-28 14:18:46 -Generating unique operation named: updateUsingTRACE_11
2019-05-28 14:18:46 -Generating unique operation named: addUsingGET_18
2019-05-28 14:18:46 -Generating unique operation named: editUsingGET_19
2019-05-28 14:18:46 -Generating unique operation named: listUsingGET_21
2019-05-28 14:18:46 -Generating unique operation named: removeUsingPOST_32
2019-05-28 14:18:46 -Generating unique operation named: removeUsingPOST_33
2019-05-28 14:18:46 -Generating unique operation named: saveUsingPOST_18
2019-05-28 14:18:46 -Generating unique operation named: updateUsingGET_12
2019-05-28 14:18:46 -Generating unique operation named: updateUsingHEAD_12
2019-05-28 14:18:46 -Generating unique operation named: updateUsingPOST_19
2019-05-28 14:18:46 -Generating unique operation named: updateUsingPUT_12
2019-05-28 14:18:46 -Generating unique operation named: updateUsingPATCH_12
2019-05-28 14:18:46 -Generating unique operation named: updateUsingDELETE_12
2019-05-28 14:18:46 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-28 14:18:46 -Generating unique operation named: updateUsingTRACE_12
2019-05-28 14:18:46 -Starting Quartz Scheduler now
2019-05-28 14:18:46 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-28 14:18:46 -Starting...
2019-05-28 14:18:46 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-28 14:18:46 -Started.
2019-05-28 14:18:46 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-28 14:18:46 -Using a shared selector for servlet write/read
2019-05-28 14:18:46 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-28 14:18:46 -Started BootdoApplication in 54.034 seconds (JVM running for 56.024)
2019-05-28 14:18:47 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-28 14:18:47 -==> Parameters: 
2019-05-28 14:18:47 -<==      Total: 1
2019-05-28 14:18:56 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-28 14:18:56 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-28 14:18:56 -FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2019-05-28 14:18:57 -Enabling session validation scheduler...
2019-05-28 14:18:58 -请求地址 : http://localhost:8081/login;JSESSIONID=acccf422-1205-437e-9bea-2ba5dac1c63f
2019-05-28 14:18:58 -HTTP METHOD : GET
2019-05-28 14:18:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 14:18:58 -参数 : [{}]
2019-05-28 14:18:58 -耗时 : 8
2019-05-28 14:18:58 -返回值 : login
2019-05-28 14:19:01 -请求地址 : http://localhost:8081/getVerify
2019-05-28 14:19:01 -HTTP METHOD : GET
2019-05-28 14:19:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-28 14:19:01 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4db21142, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5fd88735]
2019-05-28 14:19:07 -6743
2019-05-28 14:19:07 -耗时 : 6273
2019-05-28 14:19:07 -返回值 : null
2019-05-28 14:19:08 -请求地址 : http://localhost:8081/login
2019-05-28 14:19:08 -HTTP METHOD : GET
2019-05-28 14:19:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 14:19:08 -参数 : [{}]
2019-05-28 14:19:08 -耗时 : 1
2019-05-28 14:19:08 -返回值 : login
2019-05-28 14:19:11 -请求地址 : http://localhost:8081/login
2019-05-28 14:19:11 -HTTP METHOD : POST
2019-05-28 14:19:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-28 14:19:11 -参数 : [admin, 111111, 6743, org.apache.shiro.web.servlet.ShiroHttpServletRequest@68dcb763]
2019-05-28 14:19:11 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-28 14:19:11 -==> Parameters: admin(String)
2019-05-28 14:19:11 -<==      Total: 1
2019-05-28 14:19:11 -耗时 : 298
2019-05-28 14:19:11 -返回值 : {msg=操作成功, code=0}
2019-05-28 14:19:11 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-28 14:19:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 14:19:11 -==> Parameters: 1(Long), admin(String), 登录(String), 299(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-28 14:19:11.873(Timestamp)
2019-05-28 14:19:12 -<==    Updates: 1
2019-05-28 14:19:12 -请求地址 : http://localhost:8081/index
2019-05-28 14:19:12 -HTTP METHOD : GET
2019-05-28 14:19:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 14:19:12 -参数 : [{}]
2019-05-28 14:19:12 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 14:19:12 -==> Parameters: 1(Long)
2019-05-28 14:19:12 -<==      Total: 50
2019-05-28 14:19:12 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 14:19:12 -==> Parameters: 138(Long)
2019-05-28 14:19:12 -<==      Total: 1
2019-05-28 14:19:12 -耗时 : 707
2019-05-28 14:19:12 -返回值 : index_v1
2019-05-28 14:19:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 14:19:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 707(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 14:19:13.048(Timestamp)
2019-05-28 14:19:13 -<==    Updates: 1
2019-05-28 14:19:13 -请求地址 : http://localhost:8081/main
2019-05-28 14:19:13 -HTTP METHOD : GET
2019-05-28 14:19:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 14:19:13 -参数 : []
2019-05-28 14:19:13 -耗时 : 0
2019-05-28 14:19:13 -返回值 : main
2019-05-28 14:19:15 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 14:19:15 -HTTP METHOD : GET
2019-05-28 14:19:15 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 14:19:15 -参数 : []
2019-05-28 14:19:15 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 14:19:15 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 14:19:15 -请求地址 : http://localhost:8081/main
2019-05-28 14:19:15 -HTTP METHOD : GET
2019-05-28 14:19:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 14:19:15 -参数 : []
2019-05-28 14:19:15 -耗时 : 1
2019-05-28 14:19:15 -返回值 : main
2019-05-28 14:19:15 -<==      Total: 0
2019-05-28 14:19:15 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 14:19:15 -==> Parameters: 1(Long), 0(String)
2019-05-28 14:19:15 -<==      Total: 1
2019-05-28 14:19:15 -耗时 : 184
2019-05-28 14:19:15 -返回值 : com.bootdo.common.utils.PageUtils@4b1d0fdf
2019-05-28 14:19:35 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 4]
2019-05-28 14:20:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 14:20:03 -==> Parameters: 1(Long)
2019-05-28 14:20:03 -<==      Total: 94
2019-05-28 14:20:03 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-28 14:20:03 -HTTP METHOD : GET
2019-05-28 14:20:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-28 14:20:03 -参数 : []
2019-05-28 14:20:03 -耗时 : 1
2019-05-28 14:20:03 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-28 14:20:29 -请求地址 : http://localhost:8081/file/downImport/elecUpload
2019-05-28 14:20:29 -HTTP METHOD : GET
2019-05-28 14:20:29 -CLASS_METHOD : com.bootdo.temple.controller.TempletController.downImport
2019-05-28 14:20:29 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletResponse@446d1231, elecUpload]
2019-05-28 14:20:29 -耗时 : 62
2019-05-28 14:20:29 -返回值 : null
2019-05-28 14:24:17 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 14:24:17 -HTTP METHOD : GET
2019-05-28 14:24:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 14:24:17 -参数 : []
2019-05-28 14:24:17 -耗时 : 0
2019-05-28 14:24:17 -返回值 : system/dept/deptTree
2019-05-28 14:24:17 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 14:24:17 -HTTP METHOD : GET
2019-05-28 14:24:17 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 14:24:17 -参数 : []
2019-05-28 14:24:17 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 14:24:17 -==> Parameters: 
2019-05-28 14:24:17 -<==      Total: 3
2019-05-28 14:24:17 -耗时 : 39
2019-05-28 14:24:17 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 14:24:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 14:24:20 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 14:24:20.416(Timestamp)
2019-05-28 14:24:20 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 14:24:20 -<==    Updates: 1
2019-05-28 14:24:23 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 14:24:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 14:24:23 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 14:24:23.488(Timestamp)
2019-05-28 14:24:23 -<==    Updates: 1
2019-05-28 14:31:28 -Starting BootdoApplication on PC-201905091110 with PID 10232 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-28 14:31:28 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-28 14:31:28 -The following profiles are active: dev
2019-05-28 14:31:28 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51850751: startup date [Tue May 28 14:31:28 CST 2019]; root of context hierarchy
2019-05-28 14:31:37 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-28 14:31:41 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fe62f680] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:31:41 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$f0bc2527] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:31:42 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:31:43 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:31:43 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:31:43 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-28 14:31:43 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-28 14:31:44 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:31:44 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:31:44 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:31:44 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:31:46 -Tomcat initialized with port(s): 8081 (http)
2019-05-28 14:31:46 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-28 14:31:46 -Starting service [Tomcat]
2019-05-28 14:31:46 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-28 14:31:46 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-28 14:31:47 -Initializing Spring embedded WebApplicationContext
2019-05-28 14:31:47 -Root WebApplicationContext: initialization completed in 18302 ms
2019-05-28 14:31:48 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-28 14:31:48 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-28 14:31:48 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-28 14:31:48 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-28 14:31:48 -Filter xssFilter was not registered (disabled)
2019-05-28 14:31:48 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-28 14:31:48 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-28 14:31:48 -Servlet statViewServlet mapped to [/druid/*]
2019-05-28 14:31:48 -Servlet dispatcherServlet mapped to [/]
2019-05-28 14:31:56 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51850751: startup date [Tue May 28 14:31:28 CST 2019]; root of context hierarchy
2019-05-28 14:31:57 -Using default implementation for ThreadExecutor
2019-05-28 14:31:57 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-28 14:31:57 -Quartz Scheduler v.2.2.1 created.
2019-05-28 14:31:57 -RAMJobStore initialized.
2019-05-28 14:31:57 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-28 14:31:57 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-28 14:31:57 -Quartz scheduler version: 2.2.1
2019-05-28 14:31:57 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1e9d721
2019-05-28 14:31:58 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-28 14:31:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-28 14:32:02 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-28 14:32:02 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:32:02 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-28 14:32:02 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:32:02 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-28 14:32:02 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-28 14:32:02 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:32:02 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-28 14:32:02 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:32:02 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-28 14:32:02 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-28 14:32:02 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:32:02 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-28 14:32:02 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 14:32:02 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 14:32:02 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-28 14:32:02 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:32:02 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-28 14:32:02 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-28 14:32:02 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:32:02 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 14:32:02 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-28 14:32:02 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 14:32:02 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-28 14:32:02 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-28 14:32:02 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-28 14:32:02 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-28 14:32:02 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-28 14:32:02 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:02 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-28 14:32:02 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-28 14:32:02 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-28 14:32:02 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-28 14:32:02 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-28 14:32:02 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-28 14:32:02 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-28 14:32:02 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-28 14:32:02 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-28 14:32:02 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:02 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-28 14:32:02 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-28 14:32:02 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-28 14:32:02 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-28 14:32:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 14:32:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-28 14:32:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 14:32:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-28 14:32:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-28 14:32:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-28 14:32:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-28 14:32:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-28 14:32:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-28 14:32:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-28 14:32:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-28 14:32:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-28 14:32:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-28 14:32:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-28 14:32:02 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-28 14:32:02 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-28 14:32:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-28 14:32:02 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-28 14:32:02 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-28 14:32:02 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 14:32:02 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 14:32:02 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-28 14:32:02 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-28 14:32:02 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 14:32:02 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-28 14:32:02 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-28 14:32:02 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-28 14:32:02 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-28 14:32:02 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-28 14:32:02 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:02 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-28 14:32:02 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-28 14:32:02 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-28 14:32:02 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 14:32:02 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 14:32:02 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-28 14:32:02 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-28 14:32:02 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-28 14:32:02 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-28 14:32:02 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:02 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-28 14:32:02 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-28 14:32:02 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 14:32:02 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-28 14:32:02 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-28 14:32:02 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-28 14:32:02 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-28 14:32:02 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 14:32:02 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:02 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 14:32:02 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-28 14:32:02 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-28 14:32:02 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 14:32:02 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-28 14:32:02 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-28 14:32:02 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 14:32:02 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 14:32:02 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 14:32:02 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-28 14:32:02 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-28 14:32:02 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-28 14:32:02 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 14:32:02 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 14:32:02 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-28 14:32:02 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-28 14:32:02 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-28 14:32:02 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-28 14:32:02 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-28 14:32:02 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-28 14:32:02 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-28 14:32:02 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-28 14:32:02 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-28 14:32:02 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-28 14:32:02 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 14:32:02 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-28 14:32:02 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-28 14:32:02 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-28 14:32:02 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-28 14:32:02 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-28 14:32:02 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:02 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-28 14:32:02 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-28 14:32:02 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-28 14:32:02 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:02 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-28 14:32:02 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-28 14:32:02 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-28 14:32:02 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-28 14:32:02 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:02 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-28 14:32:02 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-28 14:32:02 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-28 14:32:02 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-28 14:32:02 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-28 14:32:02 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-28 14:32:02 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-28 14:32:02 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-28 14:32:02 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-28 14:32:02 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-28 14:32:02 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-28 14:32:02 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-28 14:32:02 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-28 14:32:02 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-28 14:32:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-28 14:32:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-28 14:32:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 14:32:02 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-28 14:32:03 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-28 14:32:03 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-28 14:32:03 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-28 14:32:03 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-28 14:32:03 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:03 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-28 14:32:03 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-28 14:32:03 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-28 14:32:03 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-28 14:32:03 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 14:32:03 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-28 14:32:03 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-28 14:32:03 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-28 14:32:03 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-28 14:32:03 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-28 14:32:03 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-28 14:32:03 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-28 14:32:03 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:03 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-28 14:32:03 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-28 14:32:03 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-28 14:32:03 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-28 14:32:03 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:03 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-28 14:32:03 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-28 14:32:03 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-28 14:32:03 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:03 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-28 14:32:03 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-28 14:32:03 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-28 14:32:03 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-28 14:32:03 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 14:32:03 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-28 14:32:03 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:03 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 14:32:03 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 14:32:03 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-28 14:32:03 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 14:32:03 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-28 14:32:03 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-28 14:32:03 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-28 14:32:03 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-28 14:32:03 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-28 14:32:03 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-28 14:32:03 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:03 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-28 14:32:03 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-28 14:32:03 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:03 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:03 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-28 14:32:03 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 14:32:03 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:03 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-28 14:32:03 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-28 14:32:03 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-28 14:32:03 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 14:32:03 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:32:03 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 14:32:03 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-28 14:32:03 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:32:03 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-28 14:32:03 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:32:03 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 14:32:03 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-28 14:32:03 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 14:32:03 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-28 14:32:03 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-28 14:32:03 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-28 14:32:03 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-28 14:32:04 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-28 14:32:04 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-28 14:32:04 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 14:32:05 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@51850751: startup date [Tue May 28 14:31:28 CST 2019]; root of context hierarchy
2019-05-28 14:32:05 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 14:32:05 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 14:32:05 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 14:32:05 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-28 14:32:05 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-28 14:32:08 -Registering beans for JMX exposure on startup
2019-05-28 14:32:08 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-28 14:32:08 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-28 14:32:08 -Starting beans in phase 2147483647
2019-05-28 14:32:08 -Context refreshed
2019-05-28 14:32:08 -Found 1 custom documentation plugin(s)
2019-05-28 14:32:09 -Scanning for api listing references
2019-05-28 14:32:09 -Generating unique operation named: getCountDUsingPOST_1
2019-05-28 14:32:10 -Generating unique operation named: removeUsingPOST_1
2019-05-28 14:32:10 -Generating unique operation named: addUsingGET_1
2019-05-28 14:32:10 -Generating unique operation named: editUsingGET_1
2019-05-28 14:32:10 -Generating unique operation named: listUsingGET_1
2019-05-28 14:32:10 -Generating unique operation named: removeUsingPOST_2
2019-05-28 14:32:10 -Generating unique operation named: removeUsingPOST_3
2019-05-28 14:32:10 -Generating unique operation named: saveUsingPOST_1
2019-05-28 14:32:10 -Generating unique operation named: updateUsingGET_1
2019-05-28 14:32:10 -Generating unique operation named: updateUsingHEAD_1
2019-05-28 14:32:10 -Generating unique operation named: updateUsingPOST_1
2019-05-28 14:32:10 -Generating unique operation named: updateUsingPUT_1
2019-05-28 14:32:10 -Generating unique operation named: updateUsingPATCH_1
2019-05-28 14:32:10 -Generating unique operation named: updateUsingDELETE_1
2019-05-28 14:32:10 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-28 14:32:10 -Generating unique operation named: updateUsingTRACE_1
2019-05-28 14:32:10 -Generating unique operation named: addUsingGET_2
2019-05-28 14:32:10 -Generating unique operation named: editUsingGET_2
2019-05-28 14:32:10 -Generating unique operation named: listUsingGET_2
2019-05-28 14:32:10 -Generating unique operation named: removeUsingPOST_4
2019-05-28 14:32:10 -Generating unique operation named: removeUsingPOST_5
2019-05-28 14:32:10 -Generating unique operation named: saveUsingPOST_2
2019-05-28 14:32:10 -Generating unique operation named: updateUsingPOST_2
2019-05-28 14:32:10 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-28 14:32:10 -Generating unique operation named: addUsingGET_3
2019-05-28 14:32:11 -Generating unique operation named: editUsingGET_3
2019-05-28 14:32:11 -Generating unique operation named: listUsingGET_3
2019-05-28 14:32:11 -Generating unique operation named: removeUsingPOST_6
2019-05-28 14:32:11 -Generating unique operation named: removeUsingPOST_7
2019-05-28 14:32:11 -Generating unique operation named: saveUsingPOST_3
2019-05-28 14:32:11 -Generating unique operation named: updateUsingGET_2
2019-05-28 14:32:11 -Generating unique operation named: updateUsingHEAD_2
2019-05-28 14:32:11 -Generating unique operation named: updateUsingPOST_3
2019-05-28 14:32:11 -Generating unique operation named: updateUsingPUT_2
2019-05-28 14:32:11 -Generating unique operation named: updateUsingPATCH_2
2019-05-28 14:32:11 -Generating unique operation named: updateUsingDELETE_2
2019-05-28 14:32:11 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-28 14:32:11 -Generating unique operation named: updateUsingTRACE_2
2019-05-28 14:32:11 -Generating unique operation named: addUsingGET_4
2019-05-28 14:32:11 -Generating unique operation named: editUsingGET_4
2019-05-28 14:32:11 -Generating unique operation named: listUsingGET_4
2019-05-28 14:32:11 -Generating unique operation named: removeUsingPOST_8
2019-05-28 14:32:11 -Generating unique operation named: removeUsingPOST_9
2019-05-28 14:32:11 -Generating unique operation named: saveUsingPOST_4
2019-05-28 14:32:11 -Generating unique operation named: updateUsingGET_3
2019-05-28 14:32:11 -Generating unique operation named: updateUsingHEAD_3
2019-05-28 14:32:11 -Generating unique operation named: updateUsingPOST_4
2019-05-28 14:32:11 -Generating unique operation named: updateUsingPUT_3
2019-05-28 14:32:11 -Generating unique operation named: updateUsingPATCH_3
2019-05-28 14:32:12 -Generating unique operation named: updateUsingDELETE_3
2019-05-28 14:32:12 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-28 14:32:12 -Generating unique operation named: updateUsingTRACE_3
2019-05-28 14:32:12 -Generating unique operation named: ElecUsingGET_1
2019-05-28 14:32:12 -Generating unique operation named: addUsingGET_5
2019-05-28 14:32:12 -Generating unique operation named: editUsingGET_5
2019-05-28 14:32:12 -Generating unique operation named: listUsingGET_5
2019-05-28 14:32:12 -Generating unique operation named: removeUsingPOST_10
2019-05-28 14:32:12 -Generating unique operation named: removeUsingPOST_11
2019-05-28 14:32:12 -Generating unique operation named: saveUsingPOST_5
2019-05-28 14:32:12 -Generating unique operation named: updateUsingGET_4
2019-05-28 14:32:12 -Generating unique operation named: updateUsingHEAD_4
2019-05-28 14:32:12 -Generating unique operation named: updateUsingPOST_5
2019-05-28 14:32:12 -Generating unique operation named: updateUsingPUT_4
2019-05-28 14:32:12 -Generating unique operation named: updateUsingPATCH_4
2019-05-28 14:32:12 -Generating unique operation named: updateUsingDELETE_4
2019-05-28 14:32:12 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-28 14:32:12 -Generating unique operation named: updateUsingTRACE_4
2019-05-28 14:32:12 -Generating unique operation named: editUsingGET_6
2019-05-28 14:32:12 -Generating unique operation named: listUsingGET_6
2019-05-28 14:32:12 -Generating unique operation named: updateUsingPOST_6
2019-05-28 14:32:12 -Generating unique operation named: addUsingGET_6
2019-05-28 14:32:12 -Generating unique operation named: editUsingGET_7
2019-05-28 14:32:12 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-28 14:32:12 -Generating unique operation named: listUsingGET_7
2019-05-28 14:32:12 -Generating unique operation named: removeUsingPOST_12
2019-05-28 14:32:12 -Generating unique operation named: removeUsingPOST_13
2019-05-28 14:32:12 -Generating unique operation named: saveUsingPOST_6
2019-05-28 14:32:12 -Generating unique operation named: updateUsingGET_5
2019-05-28 14:32:12 -Generating unique operation named: updateUsingHEAD_5
2019-05-28 14:32:13 -Generating unique operation named: updateUsingPOST_7
2019-05-28 14:32:13 -Generating unique operation named: updateUsingPUT_5
2019-05-28 14:32:13 -Generating unique operation named: updateUsingPATCH_5
2019-05-28 14:32:13 -Generating unique operation named: updateUsingDELETE_5
2019-05-28 14:32:13 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-28 14:32:13 -Generating unique operation named: updateUsingTRACE_5
2019-05-28 14:32:13 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-28 14:32:13 -Generating unique operation named: addUsingGET_7
2019-05-28 14:32:13 -Generating unique operation named: editUsingGET_8
2019-05-28 14:32:13 -Generating unique operation named: listUsingGET_8
2019-05-28 14:32:13 -Generating unique operation named: removeUsingPOST_14
2019-05-28 14:32:13 -Generating unique operation named: removeUsingPOST_15
2019-05-28 14:32:13 -Generating unique operation named: saveUsingPOST_7
2019-05-28 14:32:13 -Generating unique operation named: updateUsingGET_6
2019-05-28 14:32:13 -Generating unique operation named: updateUsingHEAD_6
2019-05-28 14:32:13 -Generating unique operation named: updateUsingPOST_8
2019-05-28 14:32:13 -Generating unique operation named: updateUsingPUT_6
2019-05-28 14:32:13 -Generating unique operation named: updateUsingPATCH_6
2019-05-28 14:32:13 -Generating unique operation named: updateUsingDELETE_6
2019-05-28 14:32:13 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-28 14:32:13 -Generating unique operation named: updateUsingTRACE_6
2019-05-28 14:32:13 -Generating unique operation named: addUsingGET_8
2019-05-28 14:32:13 -Generating unique operation named: editUsingGET_9
2019-05-28 14:32:13 -Generating unique operation named: listUsingGET_9
2019-05-28 14:32:13 -Generating unique operation named: removeUsingPOST_16
2019-05-28 14:32:13 -Generating unique operation named: removeUsingPOST_17
2019-05-28 14:32:13 -Generating unique operation named: saveUsingPOST_8
2019-05-28 14:32:13 -Generating unique operation named: updateUsingGET_7
2019-05-28 14:32:13 -Generating unique operation named: updateUsingHEAD_7
2019-05-28 14:32:13 -Generating unique operation named: updateUsingPOST_9
2019-05-28 14:32:13 -Generating unique operation named: updateUsingPUT_7
2019-05-28 14:32:13 -Generating unique operation named: updateUsingPATCH_7
2019-05-28 14:32:13 -Generating unique operation named: updateUsingDELETE_7
2019-05-28 14:32:13 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-28 14:32:13 -Generating unique operation named: updateUsingTRACE_7
2019-05-28 14:32:13 -Generating unique operation named: addUsingGET_9
2019-05-28 14:32:13 -Generating unique operation named: editUsingGET_10
2019-05-28 14:32:13 -Generating unique operation named: infoUsingGET_1
2019-05-28 14:32:13 -Generating unique operation named: infoUsingHEAD_1
2019-05-28 14:32:13 -Generating unique operation named: infoUsingPOST_1
2019-05-28 14:32:13 -Generating unique operation named: infoUsingPUT_1
2019-05-28 14:32:13 -Generating unique operation named: infoUsingPATCH_1
2019-05-28 14:32:13 -Generating unique operation named: infoUsingDELETE_1
2019-05-28 14:32:13 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-28 14:32:13 -Generating unique operation named: infoUsingTRACE_1
2019-05-28 14:32:13 -Generating unique operation named: listUsingGET_10
2019-05-28 14:32:13 -Generating unique operation named: removeUsingPOST_18
2019-05-28 14:32:13 -Generating unique operation named: removeUsingPOST_19
2019-05-28 14:32:13 -Generating unique operation named: saveUsingPOST_9
2019-05-28 14:32:13 -Generating unique operation named: updateUsingPOST_10
2019-05-28 14:32:13 -Generating unique operation named: listUsingGET_11
2019-05-28 14:32:13 -Generating unique operation named: removeUsingPOST_20
2019-05-28 14:32:14 -Generating unique operation named: welcomeUsingGET_1
2019-05-28 14:32:14 -Generating unique operation named: addUsingGET_10
2019-05-28 14:32:14 -Generating unique operation named: editUsingGET_11
2019-05-28 14:32:14 -Generating unique operation named: listUsingGET_12
2019-05-28 14:32:14 -Generating unique operation named: removeUsingPOST_21
2019-05-28 14:32:14 -Generating unique operation named: saveUsingPOST_10
2019-05-28 14:32:14 -Generating unique operation named: treeUsingGET_1
2019-05-28 14:32:14 -Generating unique operation named: treeUsingGET_2
2019-05-28 14:32:14 -Generating unique operation named: updateUsingPOST_11
2019-05-28 14:32:14 -Generating unique operation named: addUsingGET_11
2019-05-28 14:32:14 -Generating unique operation named: editUsingGET_12
2019-05-28 14:32:14 -Generating unique operation named: listUsingGET_13
2019-05-28 14:32:14 -Generating unique operation named: removeUsingPOST_22
2019-05-28 14:32:14 -Generating unique operation named: removeUsingPOST_23
2019-05-28 14:32:14 -Generating unique operation named: updateUsingPOST_12
2019-05-28 14:32:14 -Generating unique operation named: addUsingGET_12
2019-05-28 14:32:14 -Generating unique operation named: editUsingGET_13
2019-05-28 14:32:14 -Generating unique operation named: listUsingGET_14
2019-05-28 14:32:14 -Generating unique operation named: removeUsingPOST_24
2019-05-28 14:32:14 -Generating unique operation named: removeUsingPOST_25
2019-05-28 14:32:14 -Generating unique operation named: saveUsingPOST_11
2019-05-28 14:32:14 -Generating unique operation named: updateUsingGET_8
2019-05-28 14:32:14 -Generating unique operation named: updateUsingHEAD_8
2019-05-28 14:32:14 -Generating unique operation named: updateUsingPOST_13
2019-05-28 14:32:14 -Generating unique operation named: updateUsingPUT_8
2019-05-28 14:32:14 -Generating unique operation named: updateUsingPATCH_8
2019-05-28 14:32:14 -Generating unique operation named: updateUsingDELETE_8
2019-05-28 14:32:14 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-28 14:32:14 -Generating unique operation named: updateUsingTRACE_8
2019-05-28 14:32:14 -Generating unique operation named: addUsingGET_13
2019-05-28 14:32:14 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-28 14:32:14 -Generating unique operation named: editUsingGET_14
2019-05-28 14:32:14 -Generating unique operation named: listUsingGET_15
2019-05-28 14:32:14 -Generating unique operation named: printEditUsingGET_1
2019-05-28 14:32:14 -Generating unique operation named: removeUsingPOST_26
2019-05-28 14:32:14 -Generating unique operation named: saveUsingPOST_12
2019-05-28 14:32:14 -Generating unique operation named: updateUsingGET_9
2019-05-28 14:32:14 -Generating unique operation named: updateUsingHEAD_9
2019-05-28 14:32:14 -Generating unique operation named: updateUsingPOST_14
2019-05-28 14:32:14 -Generating unique operation named: updateUsingPUT_9
2019-05-28 14:32:14 -Generating unique operation named: updateUsingPATCH_9
2019-05-28 14:32:14 -Generating unique operation named: updateUsingDELETE_9
2019-05-28 14:32:14 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-28 14:32:14 -Generating unique operation named: updateUsingTRACE_9
2019-05-28 14:32:14 -Generating unique operation named: addUsingGET_14
2019-05-28 14:32:14 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-28 14:32:14 -Generating unique operation named: editUsingGET_15
2019-05-28 14:32:14 -Generating unique operation named: listUsingGET_16
2019-05-28 14:32:14 -Generating unique operation named: saveUsingPOST_13
2019-05-28 14:32:14 -Generating unique operation named: saveUsingPOST_14
2019-05-28 14:32:14 -Generating unique operation named: updateUsingPOST_15
2019-05-28 14:32:14 -Generating unique operation named: listUsingGET_17
2019-05-28 14:32:14 -Generating unique operation named: listUsingHEAD_1
2019-05-28 14:32:14 -Generating unique operation named: listUsingPOST_1
2019-05-28 14:32:14 -Generating unique operation named: listUsingPUT_1
2019-05-28 14:32:14 -Generating unique operation named: listUsingPATCH_1
2019-05-28 14:32:14 -Generating unique operation named: listUsingDELETE_1
2019-05-28 14:32:14 -Generating unique operation named: listUsingOPTIONS_1
2019-05-28 14:32:14 -Generating unique operation named: listUsingTRACE_1
2019-05-28 14:32:14 -Generating unique operation named: countDDUsingGET_1
2019-05-28 14:32:14 -Generating unique operation named: exportDDUsingGET_1
2019-05-28 14:32:14 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-28 14:32:15 -Generating unique operation named: addUsingGET_15
2019-05-28 14:32:15 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-28 14:32:15 -Generating unique operation named: editUsingGET_16
2019-05-28 14:32:15 -Generating unique operation named: listUsingGET_18
2019-05-28 14:32:15 -Generating unique operation named: removeUsingPOST_27
2019-05-28 14:32:15 -Generating unique operation named: saveUsingPOST_15
2019-05-28 14:32:15 -Generating unique operation named: treeUsingGET_3
2019-05-28 14:32:15 -Generating unique operation named: treeViewUsingGET_1
2019-05-28 14:32:15 -Generating unique operation named: updateUsingPOST_16
2019-05-28 14:32:15 -Generating unique operation named: addUsingGET_16
2019-05-28 14:32:15 -Generating unique operation named: editUsingGET_17
2019-05-28 14:32:15 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-28 14:32:15 -Generating unique operation named: listUsingGET_19
2019-05-28 14:32:15 -Generating unique operation named: removeUsingPOST_28
2019-05-28 14:32:15 -Generating unique operation named: removeUsingPOST_29
2019-05-28 14:32:15 -Generating unique operation named: saveUsingPOST_16
2019-05-28 14:32:15 -Generating unique operation named: updateUsingGET_10
2019-05-28 14:32:15 -Generating unique operation named: updateUsingHEAD_10
2019-05-28 14:32:15 -Generating unique operation named: updateUsingPOST_17
2019-05-28 14:32:15 -Generating unique operation named: updateUsingPUT_10
2019-05-28 14:32:15 -Generating unique operation named: updateUsingPATCH_10
2019-05-28 14:32:15 -Generating unique operation named: updateUsingDELETE_10
2019-05-28 14:32:15 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-28 14:32:15 -Generating unique operation named: updateUsingTRACE_10
2019-05-28 14:32:15 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-28 14:32:15 -Generating unique operation named: addUsingGET_17
2019-05-28 14:32:15 -Generating unique operation named: editUsingGET_18
2019-05-28 14:32:15 -Generating unique operation named: listUsingGET_20
2019-05-28 14:32:15 -Generating unique operation named: removeUsingPOST_30
2019-05-28 14:32:15 -Generating unique operation named: removeUsingPOST_31
2019-05-28 14:32:15 -Generating unique operation named: saveUsingPOST_17
2019-05-28 14:32:15 -Generating unique operation named: updateUsingGET_11
2019-05-28 14:32:15 -Generating unique operation named: updateUsingHEAD_11
2019-05-28 14:32:15 -Generating unique operation named: updateUsingPOST_18
2019-05-28 14:32:15 -Generating unique operation named: updateUsingPUT_11
2019-05-28 14:32:15 -Generating unique operation named: updateUsingPATCH_11
2019-05-28 14:32:15 -Generating unique operation named: updateUsingDELETE_11
2019-05-28 14:32:15 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-28 14:32:15 -Generating unique operation named: updateUsingTRACE_11
2019-05-28 14:32:15 -Generating unique operation named: addUsingGET_18
2019-05-28 14:32:15 -Generating unique operation named: editUsingGET_19
2019-05-28 14:32:15 -Generating unique operation named: listUsingGET_21
2019-05-28 14:32:15 -Generating unique operation named: removeUsingPOST_32
2019-05-28 14:32:15 -Generating unique operation named: removeUsingPOST_33
2019-05-28 14:32:15 -Generating unique operation named: saveUsingPOST_18
2019-05-28 14:32:15 -Generating unique operation named: updateUsingGET_12
2019-05-28 14:32:15 -Generating unique operation named: updateUsingHEAD_12
2019-05-28 14:32:15 -Generating unique operation named: updateUsingPOST_19
2019-05-28 14:32:15 -Generating unique operation named: updateUsingPUT_12
2019-05-28 14:32:15 -Generating unique operation named: updateUsingPATCH_12
2019-05-28 14:32:15 -Generating unique operation named: updateUsingDELETE_12
2019-05-28 14:32:15 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-28 14:32:15 -Generating unique operation named: updateUsingTRACE_12
2019-05-28 14:32:15 -Starting Quartz Scheduler now
2019-05-28 14:32:15 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-28 14:32:15 -Starting...
2019-05-28 14:32:15 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-28 14:32:15 -Started.
2019-05-28 14:32:15 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-28 14:32:15 -Using a shared selector for servlet write/read
2019-05-28 14:32:15 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-28 14:32:15 -Started BootdoApplication in 49.728 seconds (JVM running for 51.394)
2019-05-28 14:32:15 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-28 14:32:16 -==> Parameters: 
2019-05-28 14:32:16 -<==      Total: 1
2019-05-28 14:32:26 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-28 14:32:26 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-28 14:32:26 -FrameworkServlet 'dispatcherServlet': initialization completed in 83 ms
2019-05-28 14:32:26 -Enabling session validation scheduler...
2019-05-28 14:32:26 -请求地址 : http://localhost:8081/login;JSESSIONID=8401479b-6d31-49b9-b389-61ae2c7a2558
2019-05-28 14:32:26 -HTTP METHOD : GET
2019-05-28 14:32:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 14:32:26 -参数 : [{}]
2019-05-28 14:32:26 -耗时 : 6
2019-05-28 14:32:26 -返回值 : login
2019-05-28 14:32:28 -请求地址 : http://localhost:8081/getVerify
2019-05-28 14:32:28 -HTTP METHOD : GET
2019-05-28 14:32:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-28 14:32:28 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@26a52e9d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@31d2e58b]
2019-05-28 14:32:32 -9953
2019-05-28 14:32:32 -耗时 : 4211
2019-05-28 14:32:32 -返回值 : null
2019-05-28 14:32:36 -请求地址 : http://localhost:8081/login
2019-05-28 14:32:36 -HTTP METHOD : POST
2019-05-28 14:32:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-28 14:32:36 -参数 : [admin, 111111, 9953, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1ac331ba]
2019-05-28 14:32:36 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-28 14:32:36 -==> Parameters: admin(String)
2019-05-28 14:32:36 -<==      Total: 1
2019-05-28 14:32:36 -耗时 : 149
2019-05-28 14:32:36 -返回值 : {msg=操作成功, code=0}
2019-05-28 14:32:36 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-28 14:32:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 14:32:36 -==> Parameters: 1(Long), admin(String), 登录(String), 149(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-28 14:32:36.764(Timestamp)
2019-05-28 14:32:36 -请求地址 : http://localhost:8081/index
2019-05-28 14:32:36 -HTTP METHOD : GET
2019-05-28 14:32:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 14:32:36 -参数 : [{}]
2019-05-28 14:32:36 -<==    Updates: 1
2019-05-28 14:32:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 14:32:37 -==> Parameters: 1(Long)
2019-05-28 14:32:37 -<==      Total: 50
2019-05-28 14:32:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 14:32:37 -==> Parameters: 138(Long)
2019-05-28 14:32:37 -<==      Total: 1
2019-05-28 14:32:37 -耗时 : 464
2019-05-28 14:32:37 -返回值 : index_v1
2019-05-28 14:32:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 14:32:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 465(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 14:32:37.447(Timestamp)
2019-05-28 14:32:37 -<==    Updates: 1
2019-05-28 14:32:37 -请求地址 : http://localhost:8081/main
2019-05-28 14:32:37 -HTTP METHOD : GET
2019-05-28 14:32:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 14:32:37 -参数 : []
2019-05-28 14:32:37 -耗时 : 0
2019-05-28 14:32:37 -返回值 : main
2019-05-28 14:32:37 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 14:32:37 -HTTP METHOD : GET
2019-05-28 14:32:37 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 14:32:37 -参数 : []
2019-05-28 14:32:37 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 14:32:37 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 14:32:37 -请求地址 : http://localhost:8081/main
2019-05-28 14:32:37 -HTTP METHOD : GET
2019-05-28 14:32:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 14:32:37 -参数 : []
2019-05-28 14:32:37 -耗时 : 0
2019-05-28 14:32:37 -返回值 : main
2019-05-28 14:32:38 -<==      Total: 0
2019-05-28 14:32:38 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 14:32:38 -==> Parameters: 1(Long), 0(String)
2019-05-28 14:32:38 -<==      Total: 1
2019-05-28 14:32:38 -耗时 : 296
2019-05-28 14:32:38 -返回值 : com.bootdo.common.utils.PageUtils@43453a76
2019-05-28 14:33:04 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 6]
2019-05-28 14:33:06 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 14:33:06 -==> Parameters: 1(Long)
2019-05-28 14:33:06 -<==      Total: 94
2019-05-28 14:33:06 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-28 14:33:06 -HTTP METHOD : GET
2019-05-28 14:33:06 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-28 14:33:06 -参数 : []
2019-05-28 14:33:06 -耗时 : 0
2019-05-28 14:33:06 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-28 14:33:19 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 14:33:19 -HTTP METHOD : GET
2019-05-28 14:33:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 14:33:19 -参数 : []
2019-05-28 14:33:19 -耗时 : 0
2019-05-28 14:33:19 -返回值 : system/dept/deptTree
2019-05-28 14:33:19 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 14:33:19 -HTTP METHOD : GET
2019-05-28 14:33:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 14:33:19 -参数 : []
2019-05-28 14:33:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 14:33:19 -==> Parameters: 
2019-05-28 14:33:19 -<==      Total: 3
2019-05-28 14:33:19 -耗时 : 44
2019-05-28 14:33:19 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 14:33:26 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 14:33:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 14:33:26 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 14:33:26.817(Timestamp)
2019-05-28 14:33:26 -<==    Updates: 1
2019-05-28 14:46:46 -Starting BootdoApplication on PC-201905091110 with PID 20660 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-28 14:46:46 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-28 14:46:46 -The following profiles are active: dev
2019-05-28 14:46:46 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62e6b5c8: startup date [Tue May 28 14:46:46 CST 2019]; root of context hierarchy
2019-05-28 14:46:52 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-28 14:46:56 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$862092d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:46:56 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$7879c17b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:46:57 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:46:58 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:46:58 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:46:58 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-28 14:46:58 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-28 14:46:58 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:46:58 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:46:59 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:46:59 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 14:47:01 -Tomcat initialized with port(s): 8081 (http)
2019-05-28 14:47:01 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-28 14:47:01 -Starting service [Tomcat]
2019-05-28 14:47:01 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-28 14:47:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-28 14:47:01 -Initializing Spring embedded WebApplicationContext
2019-05-28 14:47:01 -Root WebApplicationContext: initialization completed in 14984 ms
2019-05-28 14:47:02 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-28 14:47:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-28 14:47:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-28 14:47:02 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-28 14:47:02 -Filter xssFilter was not registered (disabled)
2019-05-28 14:47:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-28 14:47:02 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-28 14:47:02 -Servlet statViewServlet mapped to [/druid/*]
2019-05-28 14:47:02 -Servlet dispatcherServlet mapped to [/]
2019-05-28 14:47:08 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62e6b5c8: startup date [Tue May 28 14:46:46 CST 2019]; root of context hierarchy
2019-05-28 14:47:09 -Using default implementation for ThreadExecutor
2019-05-28 14:47:10 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-28 14:47:10 -Quartz Scheduler v.2.2.1 created.
2019-05-28 14:47:10 -RAMJobStore initialized.
2019-05-28 14:47:10 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-28 14:47:10 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-28 14:47:10 -Quartz scheduler version: 2.2.1
2019-05-28 14:47:10 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5fa9247b
2019-05-28 14:47:12 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-28 14:47:12 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-28 14:47:17 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:47:17 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-28 14:47:17 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-28 14:47:17 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:47:17 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-28 14:47:17 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-28 14:47:17 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-28 14:47:17 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:47:17 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:47:17 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-28 14:47:17 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-28 14:47:17 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:47:17 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-28 14:47:17 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 14:47:17 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 14:47:17 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-28 14:47:17 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:47:17 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-28 14:47:17 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-28 14:47:17 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 14:47:17 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 14:47:17 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-28 14:47:17 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-28 14:47:17 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 14:47:17 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-28 14:47:17 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-28 14:47:17 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-28 14:47:17 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-28 14:47:17 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-28 14:47:17 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-28 14:47:17 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-28 14:47:17 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-28 14:47:17 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-28 14:47:17 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-28 14:47:17 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-28 14:47:17 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-28 14:47:17 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-28 14:47:17 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 14:47:17 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-28 14:47:17 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 14:47:17 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-28 14:47:17 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-28 14:47:17 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-28 14:47:17 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-28 14:47:17 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-28 14:47:17 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-28 14:47:17 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-28 14:47:17 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-28 14:47:17 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-28 14:47:17 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 14:47:17 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 14:47:17 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-28 14:47:17 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-28 14:47:17 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 14:47:17 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-28 14:47:17 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-28 14:47:17 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-28 14:47:17 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-28 14:47:17 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-28 14:47:17 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 14:47:17 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 14:47:17 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-28 14:47:17 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-28 14:47:17 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-28 14:47:17 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-28 14:47:17 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-28 14:47:17 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-28 14:47:17 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-28 14:47:17 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-28 14:47:17 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 14:47:17 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-28 14:47:17 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 14:47:17 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 14:47:17 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-28 14:47:17 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 14:47:17 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-28 14:47:17 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-28 14:47:17 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-28 14:47:17 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 14:47:17 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 14:47:17 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 14:47:17 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-28 14:47:17 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 14:47:17 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 14:47:17 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-28 14:47:17 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-28 14:47:17 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-28 14:47:17 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-28 14:47:17 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-28 14:47:17 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-28 14:47:17 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 14:47:17 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-28 14:47:17 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-28 14:47:17 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-28 14:47:17 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-28 14:47:17 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-28 14:47:17 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-28 14:47:17 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-28 14:47:17 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-28 14:47:17 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-28 14:47:17 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-28 14:47:17 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-28 14:47:17 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-28 14:47:17 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-28 14:47:17 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-28 14:47:17 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-28 14:47:17 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-28 14:47:17 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-28 14:47:17 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-28 14:47:17 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-28 14:47:17 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-28 14:47:17 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 14:47:17 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-28 14:47:17 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-28 14:47:17 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-28 14:47:17 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-28 14:47:17 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-28 14:47:17 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-28 14:47:17 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-28 14:47:17 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-28 14:47:17 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-28 14:47:17 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-28 14:47:17 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-28 14:47:17 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-28 14:47:17 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-28 14:47:17 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-28 14:47:17 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-28 14:47:17 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-28 14:47:17 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-28 14:47:17 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 14:47:17 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 14:47:17 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 14:47:17 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-28 14:47:17 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-28 14:47:17 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-28 14:47:17 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-28 14:47:17 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-28 14:47:17 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-28 14:47:17 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 14:47:17 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-28 14:47:17 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-28 14:47:17 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-28 14:47:17 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 14:47:17 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 14:47:17 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 14:47:17 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-28 14:47:17 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 14:47:17 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-28 14:47:17 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 14:47:17 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 14:47:17 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-28 14:47:17 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 14:47:17 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-28 14:47:17 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-28 14:47:17 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-28 14:47:18 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-28 14:47:19 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-28 14:47:19 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-28 14:47:20 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 14:47:21 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62e6b5c8: startup date [Tue May 28 14:46:46 CST 2019]; root of context hierarchy
2019-05-28 14:47:21 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 14:47:21 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 14:47:21 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 14:47:21 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-28 14:47:21 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-28 14:47:24 -Registering beans for JMX exposure on startup
2019-05-28 14:47:24 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-28 14:47:24 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-28 14:47:24 -Starting beans in phase 2147483647
2019-05-28 14:47:24 -Context refreshed
2019-05-28 14:47:24 -Found 1 custom documentation plugin(s)
2019-05-28 14:47:24 -Scanning for api listing references
2019-05-28 14:47:25 -Generating unique operation named: getCountDUsingPOST_1
2019-05-28 14:47:25 -Generating unique operation named: removeUsingPOST_1
2019-05-28 14:47:25 -Generating unique operation named: addUsingGET_1
2019-05-28 14:47:25 -Generating unique operation named: editUsingGET_1
2019-05-28 14:47:25 -Generating unique operation named: listUsingGET_1
2019-05-28 14:47:25 -Generating unique operation named: removeUsingPOST_2
2019-05-28 14:47:25 -Generating unique operation named: removeUsingPOST_3
2019-05-28 14:47:26 -Generating unique operation named: saveUsingPOST_1
2019-05-28 14:47:26 -Generating unique operation named: updateUsingGET_1
2019-05-28 14:47:26 -Generating unique operation named: updateUsingHEAD_1
2019-05-28 14:47:26 -Generating unique operation named: updateUsingPOST_1
2019-05-28 14:47:26 -Generating unique operation named: updateUsingPUT_1
2019-05-28 14:47:26 -Generating unique operation named: updateUsingPATCH_1
2019-05-28 14:47:26 -Generating unique operation named: updateUsingDELETE_1
2019-05-28 14:47:26 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-28 14:47:26 -Generating unique operation named: updateUsingTRACE_1
2019-05-28 14:47:26 -Generating unique operation named: addUsingGET_2
2019-05-28 14:47:26 -Generating unique operation named: editUsingGET_2
2019-05-28 14:47:26 -Generating unique operation named: listUsingGET_2
2019-05-28 14:47:26 -Generating unique operation named: removeUsingPOST_4
2019-05-28 14:47:26 -Generating unique operation named: removeUsingPOST_5
2019-05-28 14:47:26 -Generating unique operation named: saveUsingPOST_2
2019-05-28 14:47:26 -Generating unique operation named: updateUsingPOST_2
2019-05-28 14:47:26 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-28 14:47:26 -Generating unique operation named: addUsingGET_3
2019-05-28 14:47:26 -Generating unique operation named: editUsingGET_3
2019-05-28 14:47:26 -Generating unique operation named: listUsingGET_3
2019-05-28 14:47:26 -Generating unique operation named: removeUsingPOST_6
2019-05-28 14:47:26 -Generating unique operation named: removeUsingPOST_7
2019-05-28 14:47:26 -Generating unique operation named: saveUsingPOST_3
2019-05-28 14:47:26 -Generating unique operation named: updateUsingGET_2
2019-05-28 14:47:26 -Generating unique operation named: updateUsingHEAD_2
2019-05-28 14:47:26 -Generating unique operation named: updateUsingPOST_3
2019-05-28 14:47:26 -Generating unique operation named: updateUsingPUT_2
2019-05-28 14:47:26 -Generating unique operation named: updateUsingPATCH_2
2019-05-28 14:47:26 -Generating unique operation named: updateUsingDELETE_2
2019-05-28 14:47:26 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-28 14:47:26 -Generating unique operation named: updateUsingTRACE_2
2019-05-28 14:47:26 -Generating unique operation named: addUsingGET_4
2019-05-28 14:47:26 -Generating unique operation named: editUsingGET_4
2019-05-28 14:47:26 -Generating unique operation named: listUsingGET_4
2019-05-28 14:47:26 -Generating unique operation named: removeUsingPOST_8
2019-05-28 14:47:26 -Generating unique operation named: removeUsingPOST_9
2019-05-28 14:47:26 -Generating unique operation named: saveUsingPOST_4
2019-05-28 14:47:26 -Generating unique operation named: updateUsingGET_3
2019-05-28 14:47:26 -Generating unique operation named: updateUsingHEAD_3
2019-05-28 14:47:26 -Generating unique operation named: updateUsingPOST_4
2019-05-28 14:47:26 -Generating unique operation named: updateUsingPUT_3
2019-05-28 14:47:26 -Generating unique operation named: updateUsingPATCH_3
2019-05-28 14:47:26 -Generating unique operation named: updateUsingDELETE_3
2019-05-28 14:47:26 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-28 14:47:26 -Generating unique operation named: updateUsingTRACE_3
2019-05-28 14:47:26 -Generating unique operation named: ElecUsingGET_1
2019-05-28 14:47:26 -Generating unique operation named: addUsingGET_5
2019-05-28 14:47:26 -Generating unique operation named: editUsingGET_5
2019-05-28 14:47:26 -Generating unique operation named: listUsingGET_5
2019-05-28 14:47:26 -Generating unique operation named: removeUsingPOST_10
2019-05-28 14:47:26 -Generating unique operation named: removeUsingPOST_11
2019-05-28 14:47:26 -Generating unique operation named: saveUsingPOST_5
2019-05-28 14:47:26 -Generating unique operation named: updateUsingGET_4
2019-05-28 14:47:26 -Generating unique operation named: updateUsingHEAD_4
2019-05-28 14:47:26 -Generating unique operation named: updateUsingPOST_5
2019-05-28 14:47:26 -Generating unique operation named: updateUsingPUT_4
2019-05-28 14:47:26 -Generating unique operation named: updateUsingPATCH_4
2019-05-28 14:47:26 -Generating unique operation named: updateUsingDELETE_4
2019-05-28 14:47:26 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-28 14:47:26 -Generating unique operation named: updateUsingTRACE_4
2019-05-28 14:47:27 -Generating unique operation named: editUsingGET_6
2019-05-28 14:47:27 -Generating unique operation named: listUsingGET_6
2019-05-28 14:47:27 -Generating unique operation named: updateUsingPOST_6
2019-05-28 14:47:27 -Generating unique operation named: addUsingGET_6
2019-05-28 14:47:27 -Generating unique operation named: editUsingGET_7
2019-05-28 14:47:27 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-28 14:47:27 -Generating unique operation named: listUsingGET_7
2019-05-28 14:47:27 -Generating unique operation named: removeUsingPOST_12
2019-05-28 14:47:27 -Generating unique operation named: removeUsingPOST_13
2019-05-28 14:47:27 -Generating unique operation named: saveUsingPOST_6
2019-05-28 14:47:27 -Generating unique operation named: updateUsingGET_5
2019-05-28 14:47:27 -Generating unique operation named: updateUsingHEAD_5
2019-05-28 14:47:27 -Generating unique operation named: updateUsingPOST_7
2019-05-28 14:47:27 -Generating unique operation named: updateUsingPUT_5
2019-05-28 14:47:27 -Generating unique operation named: updateUsingPATCH_5
2019-05-28 14:47:27 -Generating unique operation named: updateUsingDELETE_5
2019-05-28 14:47:27 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-28 14:47:27 -Generating unique operation named: updateUsingTRACE_5
2019-05-28 14:47:27 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-28 14:47:27 -Generating unique operation named: addUsingGET_7
2019-05-28 14:47:27 -Generating unique operation named: editUsingGET_8
2019-05-28 14:47:27 -Generating unique operation named: listUsingGET_8
2019-05-28 14:47:27 -Generating unique operation named: removeUsingPOST_14
2019-05-28 14:47:27 -Generating unique operation named: removeUsingPOST_15
2019-05-28 14:47:27 -Generating unique operation named: saveUsingPOST_7
2019-05-28 14:47:27 -Generating unique operation named: updateUsingGET_6
2019-05-28 14:47:27 -Generating unique operation named: updateUsingHEAD_6
2019-05-28 14:47:27 -Generating unique operation named: updateUsingPOST_8
2019-05-28 14:47:27 -Generating unique operation named: updateUsingPUT_6
2019-05-28 14:47:27 -Generating unique operation named: updateUsingPATCH_6
2019-05-28 14:47:27 -Generating unique operation named: updateUsingDELETE_6
2019-05-28 14:47:27 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-28 14:47:27 -Generating unique operation named: updateUsingTRACE_6
2019-05-28 14:47:27 -Generating unique operation named: addUsingGET_8
2019-05-28 14:47:27 -Generating unique operation named: editUsingGET_9
2019-05-28 14:47:27 -Generating unique operation named: listUsingGET_9
2019-05-28 14:47:27 -Generating unique operation named: removeUsingPOST_16
2019-05-28 14:47:27 -Generating unique operation named: removeUsingPOST_17
2019-05-28 14:47:27 -Generating unique operation named: saveUsingPOST_8
2019-05-28 14:47:27 -Generating unique operation named: updateUsingGET_7
2019-05-28 14:47:27 -Generating unique operation named: updateUsingHEAD_7
2019-05-28 14:47:27 -Generating unique operation named: updateUsingPOST_9
2019-05-28 14:47:27 -Generating unique operation named: updateUsingPUT_7
2019-05-28 14:47:27 -Generating unique operation named: updateUsingPATCH_7
2019-05-28 14:47:27 -Generating unique operation named: updateUsingDELETE_7
2019-05-28 14:47:27 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-28 14:47:27 -Generating unique operation named: updateUsingTRACE_7
2019-05-28 14:47:27 -Generating unique operation named: addUsingGET_9
2019-05-28 14:47:27 -Generating unique operation named: editUsingGET_10
2019-05-28 14:47:27 -Generating unique operation named: infoUsingGET_1
2019-05-28 14:47:27 -Generating unique operation named: infoUsingHEAD_1
2019-05-28 14:47:27 -Generating unique operation named: infoUsingPOST_1
2019-05-28 14:47:27 -Generating unique operation named: infoUsingPUT_1
2019-05-28 14:47:27 -Generating unique operation named: infoUsingPATCH_1
2019-05-28 14:47:27 -Generating unique operation named: infoUsingDELETE_1
2019-05-28 14:47:27 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-28 14:47:27 -Generating unique operation named: infoUsingTRACE_1
2019-05-28 14:47:27 -Generating unique operation named: listUsingGET_10
2019-05-28 14:47:27 -Generating unique operation named: removeUsingPOST_18
2019-05-28 14:47:27 -Generating unique operation named: removeUsingPOST_19
2019-05-28 14:47:27 -Generating unique operation named: saveUsingPOST_9
2019-05-28 14:47:27 -Generating unique operation named: updateUsingPOST_10
2019-05-28 14:47:27 -Generating unique operation named: listUsingGET_11
2019-05-28 14:47:27 -Generating unique operation named: removeUsingPOST_20
2019-05-28 14:47:27 -Generating unique operation named: welcomeUsingGET_1
2019-05-28 14:47:27 -Generating unique operation named: addUsingGET_10
2019-05-28 14:47:27 -Generating unique operation named: editUsingGET_11
2019-05-28 14:47:27 -Generating unique operation named: listUsingGET_12
2019-05-28 14:47:28 -Generating unique operation named: removeUsingPOST_21
2019-05-28 14:47:28 -Generating unique operation named: saveUsingPOST_10
2019-05-28 14:47:28 -Generating unique operation named: treeUsingGET_1
2019-05-28 14:47:28 -Generating unique operation named: treeUsingGET_2
2019-05-28 14:47:28 -Generating unique operation named: updateUsingPOST_11
2019-05-28 14:47:28 -Generating unique operation named: addUsingGET_11
2019-05-28 14:47:28 -Generating unique operation named: editUsingGET_12
2019-05-28 14:47:28 -Generating unique operation named: listUsingGET_13
2019-05-28 14:47:28 -Generating unique operation named: removeUsingPOST_22
2019-05-28 14:47:28 -Generating unique operation named: removeUsingPOST_23
2019-05-28 14:47:28 -Generating unique operation named: updateUsingPOST_12
2019-05-28 14:47:28 -Generating unique operation named: addUsingGET_12
2019-05-28 14:47:28 -Generating unique operation named: editUsingGET_13
2019-05-28 14:47:28 -Generating unique operation named: listUsingGET_14
2019-05-28 14:47:28 -Generating unique operation named: removeUsingPOST_24
2019-05-28 14:47:28 -Generating unique operation named: removeUsingPOST_25
2019-05-28 14:47:28 -Generating unique operation named: saveUsingPOST_11
2019-05-28 14:47:28 -Generating unique operation named: updateUsingGET_8
2019-05-28 14:47:28 -Generating unique operation named: updateUsingHEAD_8
2019-05-28 14:47:28 -Generating unique operation named: updateUsingPOST_13
2019-05-28 14:47:28 -Generating unique operation named: updateUsingPUT_8
2019-05-28 14:47:28 -Generating unique operation named: updateUsingPATCH_8
2019-05-28 14:47:28 -Generating unique operation named: updateUsingDELETE_8
2019-05-28 14:47:28 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-28 14:47:28 -Generating unique operation named: updateUsingTRACE_8
2019-05-28 14:47:28 -Generating unique operation named: addUsingGET_13
2019-05-28 14:47:28 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-28 14:47:28 -Generating unique operation named: editUsingGET_14
2019-05-28 14:47:28 -Generating unique operation named: listUsingGET_15
2019-05-28 14:47:28 -Generating unique operation named: printEditUsingGET_1
2019-05-28 14:47:28 -Generating unique operation named: removeUsingPOST_26
2019-05-28 14:47:28 -Generating unique operation named: saveUsingPOST_12
2019-05-28 14:47:28 -Generating unique operation named: updateUsingGET_9
2019-05-28 14:47:28 -Generating unique operation named: updateUsingHEAD_9
2019-05-28 14:47:28 -Generating unique operation named: updateUsingPOST_14
2019-05-28 14:47:28 -Generating unique operation named: updateUsingPUT_9
2019-05-28 14:47:28 -Generating unique operation named: updateUsingPATCH_9
2019-05-28 14:47:28 -Generating unique operation named: updateUsingDELETE_9
2019-05-28 14:47:28 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-28 14:47:28 -Generating unique operation named: updateUsingTRACE_9
2019-05-28 14:47:28 -Generating unique operation named: addUsingGET_14
2019-05-28 14:47:28 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-28 14:47:28 -Generating unique operation named: editUsingGET_15
2019-05-28 14:47:28 -Generating unique operation named: listUsingGET_16
2019-05-28 14:47:28 -Generating unique operation named: saveUsingPOST_13
2019-05-28 14:47:28 -Generating unique operation named: saveUsingPOST_14
2019-05-28 14:47:28 -Generating unique operation named: updateUsingPOST_15
2019-05-28 14:47:28 -Generating unique operation named: listUsingGET_17
2019-05-28 14:47:28 -Generating unique operation named: listUsingHEAD_1
2019-05-28 14:47:28 -Generating unique operation named: listUsingPOST_1
2019-05-28 14:47:28 -Generating unique operation named: listUsingPUT_1
2019-05-28 14:47:28 -Generating unique operation named: listUsingPATCH_1
2019-05-28 14:47:28 -Generating unique operation named: listUsingDELETE_1
2019-05-28 14:47:28 -Generating unique operation named: listUsingOPTIONS_1
2019-05-28 14:47:28 -Generating unique operation named: listUsingTRACE_1
2019-05-28 14:47:28 -Generating unique operation named: countDDUsingGET_1
2019-05-28 14:47:28 -Generating unique operation named: exportDDUsingGET_1
2019-05-28 14:47:28 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-28 14:47:28 -Generating unique operation named: addUsingGET_15
2019-05-28 14:47:28 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-28 14:47:28 -Generating unique operation named: editUsingGET_16
2019-05-28 14:47:28 -Generating unique operation named: listUsingGET_18
2019-05-28 14:47:28 -Generating unique operation named: removeUsingPOST_27
2019-05-28 14:47:28 -Generating unique operation named: saveUsingPOST_15
2019-05-28 14:47:28 -Generating unique operation named: treeUsingGET_3
2019-05-28 14:47:28 -Generating unique operation named: treeViewUsingGET_1
2019-05-28 14:47:29 -Generating unique operation named: updateUsingPOST_16
2019-05-28 14:47:29 -Generating unique operation named: addUsingGET_16
2019-05-28 14:47:29 -Generating unique operation named: editUsingGET_17
2019-05-28 14:47:29 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-28 14:47:29 -Generating unique operation named: listUsingGET_19
2019-05-28 14:47:29 -Generating unique operation named: removeUsingPOST_28
2019-05-28 14:47:29 -Generating unique operation named: removeUsingPOST_29
2019-05-28 14:47:29 -Generating unique operation named: saveUsingPOST_16
2019-05-28 14:47:29 -Generating unique operation named: updateUsingGET_10
2019-05-28 14:47:29 -Generating unique operation named: updateUsingHEAD_10
2019-05-28 14:47:29 -Generating unique operation named: updateUsingPOST_17
2019-05-28 14:47:29 -Generating unique operation named: updateUsingPUT_10
2019-05-28 14:47:29 -Generating unique operation named: updateUsingPATCH_10
2019-05-28 14:47:29 -Generating unique operation named: updateUsingDELETE_10
2019-05-28 14:47:29 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-28 14:47:29 -Generating unique operation named: updateUsingTRACE_10
2019-05-28 14:47:29 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-28 14:47:29 -Generating unique operation named: addUsingGET_17
2019-05-28 14:47:29 -Generating unique operation named: editUsingGET_18
2019-05-28 14:47:29 -Generating unique operation named: listUsingGET_20
2019-05-28 14:47:29 -Generating unique operation named: removeUsingPOST_30
2019-05-28 14:47:29 -Generating unique operation named: removeUsingPOST_31
2019-05-28 14:47:29 -Generating unique operation named: saveUsingPOST_17
2019-05-28 14:47:29 -Generating unique operation named: updateUsingGET_11
2019-05-28 14:47:29 -Generating unique operation named: updateUsingHEAD_11
2019-05-28 14:47:29 -Generating unique operation named: updateUsingPOST_18
2019-05-28 14:47:29 -Generating unique operation named: updateUsingPUT_11
2019-05-28 14:47:29 -Generating unique operation named: updateUsingPATCH_11
2019-05-28 14:47:29 -Generating unique operation named: updateUsingDELETE_11
2019-05-28 14:47:29 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-28 14:47:29 -Generating unique operation named: updateUsingTRACE_11
2019-05-28 14:47:29 -Generating unique operation named: addUsingGET_18
2019-05-28 14:47:29 -Generating unique operation named: editUsingGET_19
2019-05-28 14:47:29 -Generating unique operation named: listUsingGET_21
2019-05-28 14:47:29 -Generating unique operation named: removeUsingPOST_32
2019-05-28 14:47:29 -Generating unique operation named: removeUsingPOST_33
2019-05-28 14:47:29 -Generating unique operation named: saveUsingPOST_18
2019-05-28 14:47:29 -Generating unique operation named: updateUsingGET_12
2019-05-28 14:47:29 -Generating unique operation named: updateUsingHEAD_12
2019-05-28 14:47:29 -Generating unique operation named: updateUsingPOST_19
2019-05-28 14:47:29 -Generating unique operation named: updateUsingPUT_12
2019-05-28 14:47:29 -Generating unique operation named: updateUsingPATCH_12
2019-05-28 14:47:29 -Generating unique operation named: updateUsingDELETE_12
2019-05-28 14:47:29 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-28 14:47:29 -Generating unique operation named: updateUsingTRACE_12
2019-05-28 14:47:29 -Starting Quartz Scheduler now
2019-05-28 14:47:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-28 14:47:29 -Starting...
2019-05-28 14:47:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-28 14:47:29 -Started.
2019-05-28 14:47:29 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-28 14:47:29 -Using a shared selector for servlet write/read
2019-05-28 14:47:29 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-28 14:47:29 -Started BootdoApplication in 45.502 seconds (JVM running for 47.167)
2019-05-28 14:47:29 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-28 14:47:29 -==> Parameters: 
2019-05-28 14:47:30 -<==      Total: 1
2019-05-28 14:47:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-28 14:47:39 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-28 14:47:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 55 ms
2019-05-28 14:47:39 -Enabling session validation scheduler...
2019-05-28 14:47:39 -请求地址 : http://localhost:8081/login;JSESSIONID=457aa15b-64d8-4db1-a869-15af98be7cf3
2019-05-28 14:47:39 -请求地址 : http://localhost:8081/login;JSESSIONID=ee557ac0-8938-40ca-ab22-1d346c4f18fe
2019-05-28 14:47:39 -HTTP METHOD : GET
2019-05-28 14:47:39 -HTTP METHOD : GET
2019-05-28 14:47:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 14:47:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 14:47:39 -参数 : [{}]
2019-05-28 14:47:39 -参数 : [{}]
2019-05-28 14:47:39 -耗时 : 8
2019-05-28 14:47:39 -耗时 : 8
2019-05-28 14:47:39 -返回值 : login
2019-05-28 14:47:39 -返回值 : login
2019-05-28 14:47:40 -请求地址 : http://localhost:8081/login
2019-05-28 14:47:40 -HTTP METHOD : GET
2019-05-28 14:47:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 14:47:40 -参数 : [{}]
2019-05-28 14:47:40 -耗时 : 1
2019-05-28 14:47:40 -返回值 : login
2019-05-28 14:47:41 -请求地址 : http://localhost:8081/getVerify
2019-05-28 14:47:41 -HTTP METHOD : GET
2019-05-28 14:47:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-28 14:47:41 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@11bb05fc, org.apache.shiro.web.servlet.ShiroHttpServletResponse@1f7cf9bb]
2019-05-28 14:47:42 -请求地址 : http://localhost:8081/getVerify
2019-05-28 14:47:42 -HTTP METHOD : GET
2019-05-28 14:47:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-28 14:47:42 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@4c48b790, org.apache.shiro.web.servlet.ShiroHttpServletResponse@614e1122]
2019-05-28 14:47:48 -3550
2019-05-28 14:47:48 -8376
2019-05-28 14:47:48 -耗时 : 6465
2019-05-28 14:47:48 -耗时 : 7402
2019-05-28 14:47:48 -返回值 : null
2019-05-28 14:47:48 -返回值 : null
2019-05-28 14:47:54 -请求地址 : http://localhost:8081/login
2019-05-28 14:47:54 -HTTP METHOD : POST
2019-05-28 14:47:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-28 14:47:54 -参数 : [admin, 111111, 3550, org.apache.shiro.web.servlet.ShiroHttpServletRequest@628d22b5]
2019-05-28 14:47:54 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-28 14:47:54 -==> Parameters: admin(String)
2019-05-28 14:47:54 -<==      Total: 1
2019-05-28 14:47:54 -耗时 : 240
2019-05-28 14:47:54 -返回值 : {msg=操作成功, code=0}
2019-05-28 14:47:54 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-28 14:47:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 14:47:54 -==> Parameters: 1(Long), admin(String), 登录(String), 240(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-28 14:47:54.591(Timestamp)
2019-05-28 14:47:54 -请求地址 : http://localhost:8081/index
2019-05-28 14:47:54 -HTTP METHOD : GET
2019-05-28 14:47:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 14:47:54 -参数 : [{}]
2019-05-28 14:47:54 -<==    Updates: 1
2019-05-28 14:47:54 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 14:47:55 -==> Parameters: 1(Long)
2019-05-28 14:47:55 -<==      Total: 50
2019-05-28 14:47:55 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 14:47:55 -==> Parameters: 138(Long)
2019-05-28 14:47:55 -<==      Total: 1
2019-05-28 14:47:55 -耗时 : 505
2019-05-28 14:47:55 -返回值 : index_v1
2019-05-28 14:47:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 14:47:55 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 505(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 14:47:55.438(Timestamp)
2019-05-28 14:47:55 -请求地址 : http://localhost:8081/main
2019-05-28 14:47:55 -HTTP METHOD : GET
2019-05-28 14:47:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 14:47:55 -参数 : []
2019-05-28 14:47:55 -耗时 : 0
2019-05-28 14:47:55 -返回值 : main
2019-05-28 14:47:55 -<==    Updates: 1
2019-05-28 14:47:55 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 14:47:55 -HTTP METHOD : GET
2019-05-28 14:47:55 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 14:47:55 -参数 : []
2019-05-28 14:47:55 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 14:47:55 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 14:47:55 -请求地址 : http://localhost:8081/main
2019-05-28 14:47:55 -HTTP METHOD : GET
2019-05-28 14:47:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 14:47:55 -参数 : []
2019-05-28 14:47:55 -耗时 : 1
2019-05-28 14:47:55 -返回值 : main
2019-05-28 14:47:56 -<==      Total: 0
2019-05-28 14:47:56 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 14:47:56 -==> Parameters: 1(Long), 0(String)
2019-05-28 14:47:56 -<==      Total: 1
2019-05-28 14:47:56 -耗时 : 239
2019-05-28 14:47:56 -返回值 : com.bootdo.common.utils.PageUtils@3201759d
2019-05-28 14:48:11 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 14:48:11 -==> Parameters: 1(Long)
2019-05-28 14:48:11 -<==      Total: 94
2019-05-28 14:48:11 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-28 14:48:11 -HTTP METHOD : GET
2019-05-28 14:48:11 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-28 14:48:11 -参数 : []
2019-05-28 14:48:11 -耗时 : 1
2019-05-28 14:48:11 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-28 14:48:19 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-05-28 14:48:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 14:48:29 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 14:48:29.674(Timestamp)
2019-05-28 14:48:29 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 14:48:29 -<==    Updates: 1
2019-05-28 14:48:31 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 14:48:31 -HTTP METHOD : GET
2019-05-28 14:48:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 14:48:31 -参数 : []
2019-05-28 14:48:31 -耗时 : 0
2019-05-28 14:48:31 -返回值 : system/dept/deptTree
2019-05-28 14:48:31 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 14:48:31 -HTTP METHOD : GET
2019-05-28 14:48:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 14:48:31 -参数 : []
2019-05-28 14:48:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 14:48:31 -==> Parameters: 
2019-05-28 14:48:31 -<==      Total: 3
2019-05-28 14:48:31 -耗时 : 91
2019-05-28 14:48:31 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 14:48:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 14:48:33 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 14:48:33 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 14:48:33.307(Timestamp)
2019-05-28 14:48:33 -<==    Updates: 1
2019-05-28 15:02:13 -Starting BootdoApplication on PC-201905091110 with PID 30768 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-28 15:02:13 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-28 15:02:13 -The following profiles are active: dev
2019-05-28 15:02:13 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f74e835: startup date [Tue May 28 15:02:13 CST 2019]; root of context hierarchy
2019-05-28 15:02:20 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-28 15:02:24 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b2738d7c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:02:24 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a4ccbc23] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:02:25 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:02:26 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:02:26 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:02:26 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-28 15:02:26 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-28 15:02:26 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:02:26 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:02:26 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:02:26 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:02:28 -Tomcat initialized with port(s): 8081 (http)
2019-05-28 15:02:28 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-28 15:02:28 -Starting service [Tomcat]
2019-05-28 15:02:28 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-28 15:02:28 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-28 15:02:29 -Initializing Spring embedded WebApplicationContext
2019-05-28 15:02:29 -Root WebApplicationContext: initialization completed in 15550 ms
2019-05-28 15:02:30 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-28 15:02:30 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-28 15:02:30 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-28 15:02:30 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-28 15:02:30 -Filter xssFilter was not registered (disabled)
2019-05-28 15:02:30 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-28 15:02:30 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-28 15:02:30 -Servlet statViewServlet mapped to [/druid/*]
2019-05-28 15:02:30 -Servlet dispatcherServlet mapped to [/]
2019-05-28 15:02:37 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f74e835: startup date [Tue May 28 15:02:13 CST 2019]; root of context hierarchy
2019-05-28 15:02:38 -Using default implementation for ThreadExecutor
2019-05-28 15:02:38 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-28 15:02:38 -Quartz Scheduler v.2.2.1 created.
2019-05-28 15:02:38 -RAMJobStore initialized.
2019-05-28 15:02:38 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-28 15:02:38 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-28 15:02:38 -Quartz scheduler version: 2.2.1
2019-05-28 15:02:38 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@683ed81b
2019-05-28 15:02:42 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-28 15:02:43 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-28 15:02:50 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:02:50 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-28 15:02:50 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:50 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:50 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-28 15:02:50 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:02:50 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-28 15:02:50 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-28 15:02:50 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:50 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:02:50 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-28 15:02:51 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-28 15:02:51 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:02:51 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-28 15:02:51 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:02:51 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 15:02:51 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-28 15:02:51 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 15:02:51 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-28 15:02:51 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:02:51 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-28 15:02:51 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:02:51 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-28 15:02:51 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 15:02:51 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-28 15:02:51 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-28 15:02:51 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 15:02:51 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-28 15:02:51 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-28 15:02:51 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-28 15:02:51 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-28 15:02:51 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-28 15:02:51 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-28 15:02:51 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-28 15:02:51 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-28 15:02:51 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-28 15:02:51 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-28 15:02:51 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-28 15:02:51 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-28 15:02:51 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-28 15:02:51 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 15:02:51 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-28 15:02:51 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 15:02:51 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-28 15:02:51 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-28 15:02:51 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-28 15:02:51 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-28 15:02:51 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-28 15:02:51 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-28 15:02:51 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-28 15:02:51 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-28 15:02:51 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-28 15:02:51 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 15:02:51 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 15:02:51 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-28 15:02:51 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-28 15:02:51 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 15:02:51 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-28 15:02:51 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-28 15:02:51 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-28 15:02:51 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-28 15:02:51 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-28 15:02:51 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-28 15:02:51 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 15:02:51 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 15:02:51 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-28 15:02:51 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-28 15:02:51 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-28 15:02:51 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-28 15:02:51 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-28 15:02:51 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-28 15:02:51 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 15:02:51 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-28 15:02:51 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-28 15:02:51 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 15:02:51 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 15:02:51 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-28 15:02:51 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-28 15:02:51 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 15:02:51 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-28 15:02:51 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 15:02:51 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-28 15:02:51 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 15:02:51 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 15:02:51 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-28 15:02:51 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 15:02:51 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 15:02:51 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-28 15:02:51 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-28 15:02:51 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-28 15:02:51 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-28 15:02:51 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-28 15:02:51 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-28 15:02:51 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 15:02:51 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-28 15:02:51 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-28 15:02:51 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-28 15:02:51 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-28 15:02:51 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-28 15:02:51 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-28 15:02:51 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-28 15:02:51 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-28 15:02:51 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-28 15:02:51 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-28 15:02:51 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-28 15:02:51 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-28 15:02:51 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-28 15:02:51 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-28 15:02:51 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-28 15:02:51 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-28 15:02:51 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-28 15:02:51 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-28 15:02:51 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-28 15:02:51 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-28 15:02:51 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 15:02:51 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-28 15:02:51 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-28 15:02:51 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-28 15:02:51 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-28 15:02:51 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-28 15:02:51 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-28 15:02:51 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-28 15:02:51 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-28 15:02:51 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-28 15:02:51 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-28 15:02:51 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-28 15:02:51 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-28 15:02:51 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-28 15:02:51 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-28 15:02:51 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-28 15:02:51 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-28 15:02:51 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-28 15:02:51 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 15:02:51 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 15:02:51 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 15:02:51 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-28 15:02:51 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-28 15:02:51 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-28 15:02:51 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-28 15:02:51 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-28 15:02:51 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 15:02:51 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-28 15:02:51 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-28 15:02:51 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-28 15:02:51 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-28 15:02:51 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 15:02:51 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:02:51 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 15:02:51 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-28 15:02:51 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:02:51 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 15:02:51 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:02:51 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-28 15:02:51 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-28 15:02:51 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 15:02:51 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-28 15:02:51 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-28 15:02:51 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-28 15:02:52 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-28 15:02:52 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-28 15:02:52 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-28 15:02:53 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 15:02:54 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@f74e835: startup date [Tue May 28 15:02:13 CST 2019]; root of context hierarchy
2019-05-28 15:02:54 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 15:02:54 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 15:02:54 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 15:02:54 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-28 15:02:54 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-28 15:02:59 -Registering beans for JMX exposure on startup
2019-05-28 15:02:59 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-28 15:02:59 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-28 15:02:59 -Starting beans in phase 2147483647
2019-05-28 15:02:59 -Context refreshed
2019-05-28 15:02:59 -Found 1 custom documentation plugin(s)
2019-05-28 15:02:59 -Scanning for api listing references
2019-05-28 15:03:00 -Generating unique operation named: getCountDUsingPOST_1
2019-05-28 15:03:00 -Generating unique operation named: removeUsingPOST_1
2019-05-28 15:03:00 -Generating unique operation named: addUsingGET_1
2019-05-28 15:03:00 -Generating unique operation named: editUsingGET_1
2019-05-28 15:03:00 -Generating unique operation named: listUsingGET_1
2019-05-28 15:03:00 -Generating unique operation named: removeUsingPOST_2
2019-05-28 15:03:00 -Generating unique operation named: removeUsingPOST_3
2019-05-28 15:03:00 -Generating unique operation named: saveUsingPOST_1
2019-05-28 15:03:00 -Generating unique operation named: updateUsingGET_1
2019-05-28 15:03:00 -Generating unique operation named: updateUsingHEAD_1
2019-05-28 15:03:00 -Generating unique operation named: updateUsingPOST_1
2019-05-28 15:03:00 -Generating unique operation named: updateUsingPUT_1
2019-05-28 15:03:00 -Generating unique operation named: updateUsingPATCH_1
2019-05-28 15:03:00 -Generating unique operation named: updateUsingDELETE_1
2019-05-28 15:03:00 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-28 15:03:00 -Generating unique operation named: updateUsingTRACE_1
2019-05-28 15:03:00 -Generating unique operation named: addUsingGET_2
2019-05-28 15:03:00 -Generating unique operation named: editUsingGET_2
2019-05-28 15:03:00 -Generating unique operation named: listUsingGET_2
2019-05-28 15:03:00 -Generating unique operation named: removeUsingPOST_4
2019-05-28 15:03:01 -Generating unique operation named: removeUsingPOST_5
2019-05-28 15:03:01 -Generating unique operation named: saveUsingPOST_2
2019-05-28 15:03:01 -Generating unique operation named: updateUsingPOST_2
2019-05-28 15:03:01 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-28 15:03:01 -Generating unique operation named: addUsingGET_3
2019-05-28 15:03:01 -Generating unique operation named: editUsingGET_3
2019-05-28 15:03:01 -Generating unique operation named: listUsingGET_3
2019-05-28 15:03:01 -Generating unique operation named: removeUsingPOST_6
2019-05-28 15:03:01 -Generating unique operation named: removeUsingPOST_7
2019-05-28 15:03:01 -Generating unique operation named: saveUsingPOST_3
2019-05-28 15:03:01 -Generating unique operation named: updateUsingGET_2
2019-05-28 15:03:01 -Generating unique operation named: updateUsingHEAD_2
2019-05-28 15:03:01 -Generating unique operation named: updateUsingPOST_3
2019-05-28 15:03:01 -Generating unique operation named: updateUsingPUT_2
2019-05-28 15:03:01 -Generating unique operation named: updateUsingPATCH_2
2019-05-28 15:03:01 -Generating unique operation named: updateUsingDELETE_2
2019-05-28 15:03:01 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-28 15:03:01 -Generating unique operation named: updateUsingTRACE_2
2019-05-28 15:03:01 -Generating unique operation named: addUsingGET_4
2019-05-28 15:03:01 -Generating unique operation named: editUsingGET_4
2019-05-28 15:03:01 -Generating unique operation named: listUsingGET_4
2019-05-28 15:03:01 -Generating unique operation named: removeUsingPOST_8
2019-05-28 15:03:01 -Generating unique operation named: removeUsingPOST_9
2019-05-28 15:03:01 -Generating unique operation named: saveUsingPOST_4
2019-05-28 15:03:01 -Generating unique operation named: updateUsingGET_3
2019-05-28 15:03:01 -Generating unique operation named: updateUsingHEAD_3
2019-05-28 15:03:01 -Generating unique operation named: updateUsingPOST_4
2019-05-28 15:03:01 -Generating unique operation named: updateUsingPUT_3
2019-05-28 15:03:01 -Generating unique operation named: updateUsingPATCH_3
2019-05-28 15:03:01 -Generating unique operation named: updateUsingDELETE_3
2019-05-28 15:03:01 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-28 15:03:01 -Generating unique operation named: updateUsingTRACE_3
2019-05-28 15:03:01 -Generating unique operation named: ElecUsingGET_1
2019-05-28 15:03:01 -Generating unique operation named: addUsingGET_5
2019-05-28 15:03:01 -Generating unique operation named: editUsingGET_5
2019-05-28 15:03:01 -Generating unique operation named: listUsingGET_5
2019-05-28 15:03:01 -Generating unique operation named: removeUsingPOST_10
2019-05-28 15:03:01 -Generating unique operation named: removeUsingPOST_11
2019-05-28 15:03:01 -Generating unique operation named: saveUsingPOST_5
2019-05-28 15:03:01 -Generating unique operation named: updateUsingGET_4
2019-05-28 15:03:01 -Generating unique operation named: updateUsingHEAD_4
2019-05-28 15:03:01 -Generating unique operation named: updateUsingPOST_5
2019-05-28 15:03:01 -Generating unique operation named: updateUsingPUT_4
2019-05-28 15:03:01 -Generating unique operation named: updateUsingPATCH_4
2019-05-28 15:03:01 -Generating unique operation named: updateUsingDELETE_4
2019-05-28 15:03:01 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-28 15:03:01 -Generating unique operation named: updateUsingTRACE_4
2019-05-28 15:03:02 -Generating unique operation named: editUsingGET_6
2019-05-28 15:03:02 -Generating unique operation named: listUsingGET_6
2019-05-28 15:03:02 -Generating unique operation named: updateUsingPOST_6
2019-05-28 15:03:02 -Generating unique operation named: addUsingGET_6
2019-05-28 15:03:02 -Generating unique operation named: editUsingGET_7
2019-05-28 15:03:02 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-28 15:03:02 -Generating unique operation named: listUsingGET_7
2019-05-28 15:03:02 -Generating unique operation named: removeUsingPOST_12
2019-05-28 15:03:02 -Generating unique operation named: removeUsingPOST_13
2019-05-28 15:03:02 -Generating unique operation named: saveUsingPOST_6
2019-05-28 15:03:02 -Generating unique operation named: updateUsingGET_5
2019-05-28 15:03:02 -Generating unique operation named: updateUsingHEAD_5
2019-05-28 15:03:02 -Generating unique operation named: updateUsingPOST_7
2019-05-28 15:03:02 -Generating unique operation named: updateUsingPUT_5
2019-05-28 15:03:02 -Generating unique operation named: updateUsingPATCH_5
2019-05-28 15:03:02 -Generating unique operation named: updateUsingDELETE_5
2019-05-28 15:03:02 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-28 15:03:03 -Generating unique operation named: updateUsingTRACE_5
2019-05-28 15:03:03 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-28 15:03:03 -Generating unique operation named: addUsingGET_7
2019-05-28 15:03:03 -Generating unique operation named: editUsingGET_8
2019-05-28 15:03:03 -Generating unique operation named: listUsingGET_8
2019-05-28 15:03:03 -Generating unique operation named: removeUsingPOST_14
2019-05-28 15:03:03 -Generating unique operation named: removeUsingPOST_15
2019-05-28 15:03:03 -Generating unique operation named: saveUsingPOST_7
2019-05-28 15:03:03 -Generating unique operation named: updateUsingGET_6
2019-05-28 15:03:03 -Generating unique operation named: updateUsingHEAD_6
2019-05-28 15:03:03 -Generating unique operation named: updateUsingPOST_8
2019-05-28 15:03:03 -Generating unique operation named: updateUsingPUT_6
2019-05-28 15:03:03 -Generating unique operation named: updateUsingPATCH_6
2019-05-28 15:03:03 -Generating unique operation named: updateUsingDELETE_6
2019-05-28 15:03:03 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-28 15:03:03 -Generating unique operation named: updateUsingTRACE_6
2019-05-28 15:03:03 -Generating unique operation named: addUsingGET_8
2019-05-28 15:03:03 -Generating unique operation named: editUsingGET_9
2019-05-28 15:03:03 -Generating unique operation named: listUsingGET_9
2019-05-28 15:03:03 -Generating unique operation named: removeUsingPOST_16
2019-05-28 15:03:03 -Generating unique operation named: removeUsingPOST_17
2019-05-28 15:03:03 -Generating unique operation named: saveUsingPOST_8
2019-05-28 15:03:03 -Generating unique operation named: updateUsingGET_7
2019-05-28 15:03:03 -Generating unique operation named: updateUsingHEAD_7
2019-05-28 15:03:03 -Generating unique operation named: updateUsingPOST_9
2019-05-28 15:03:03 -Generating unique operation named: updateUsingPUT_7
2019-05-28 15:03:03 -Generating unique operation named: updateUsingPATCH_7
2019-05-28 15:03:03 -Generating unique operation named: updateUsingDELETE_7
2019-05-28 15:03:03 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-28 15:03:03 -Generating unique operation named: updateUsingTRACE_7
2019-05-28 15:03:03 -Generating unique operation named: addUsingGET_9
2019-05-28 15:03:03 -Generating unique operation named: editUsingGET_10
2019-05-28 15:03:03 -Generating unique operation named: infoUsingGET_1
2019-05-28 15:03:03 -Generating unique operation named: infoUsingHEAD_1
2019-05-28 15:03:03 -Generating unique operation named: infoUsingPOST_1
2019-05-28 15:03:03 -Generating unique operation named: infoUsingPUT_1
2019-05-28 15:03:03 -Generating unique operation named: infoUsingPATCH_1
2019-05-28 15:03:03 -Generating unique operation named: infoUsingDELETE_1
2019-05-28 15:03:03 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-28 15:03:03 -Generating unique operation named: infoUsingTRACE_1
2019-05-28 15:03:03 -Generating unique operation named: listUsingGET_10
2019-05-28 15:03:03 -Generating unique operation named: removeUsingPOST_18
2019-05-28 15:03:03 -Generating unique operation named: removeUsingPOST_19
2019-05-28 15:03:03 -Generating unique operation named: saveUsingPOST_9
2019-05-28 15:03:03 -Generating unique operation named: updateUsingPOST_10
2019-05-28 15:03:03 -Generating unique operation named: listUsingGET_11
2019-05-28 15:03:03 -Generating unique operation named: removeUsingPOST_20
2019-05-28 15:03:03 -Generating unique operation named: welcomeUsingGET_1
2019-05-28 15:03:03 -Generating unique operation named: addUsingGET_10
2019-05-28 15:03:03 -Generating unique operation named: editUsingGET_11
2019-05-28 15:03:03 -Generating unique operation named: listUsingGET_12
2019-05-28 15:03:03 -Generating unique operation named: removeUsingPOST_21
2019-05-28 15:03:03 -Generating unique operation named: saveUsingPOST_10
2019-05-28 15:03:03 -Generating unique operation named: treeUsingGET_1
2019-05-28 15:03:04 -Generating unique operation named: treeUsingGET_2
2019-05-28 15:03:04 -Generating unique operation named: updateUsingPOST_11
2019-05-28 15:03:04 -Generating unique operation named: addUsingGET_11
2019-05-28 15:03:04 -Generating unique operation named: editUsingGET_12
2019-05-28 15:03:04 -Generating unique operation named: listUsingGET_13
2019-05-28 15:03:04 -Generating unique operation named: removeUsingPOST_22
2019-05-28 15:03:04 -Generating unique operation named: removeUsingPOST_23
2019-05-28 15:03:04 -Generating unique operation named: updateUsingPOST_12
2019-05-28 15:03:04 -Generating unique operation named: addUsingGET_12
2019-05-28 15:03:04 -Generating unique operation named: editUsingGET_13
2019-05-28 15:03:04 -Generating unique operation named: listUsingGET_14
2019-05-28 15:03:04 -Generating unique operation named: removeUsingPOST_24
2019-05-28 15:03:04 -Generating unique operation named: removeUsingPOST_25
2019-05-28 15:03:04 -Generating unique operation named: saveUsingPOST_11
2019-05-28 15:03:04 -Generating unique operation named: updateUsingGET_8
2019-05-28 15:03:04 -Generating unique operation named: updateUsingHEAD_8
2019-05-28 15:03:04 -Generating unique operation named: updateUsingPOST_13
2019-05-28 15:03:04 -Generating unique operation named: updateUsingPUT_8
2019-05-28 15:03:04 -Generating unique operation named: updateUsingPATCH_8
2019-05-28 15:03:04 -Generating unique operation named: updateUsingDELETE_8
2019-05-28 15:03:04 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-28 15:03:04 -Generating unique operation named: updateUsingTRACE_8
2019-05-28 15:03:04 -Generating unique operation named: addUsingGET_13
2019-05-28 15:03:04 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-28 15:03:04 -Generating unique operation named: editUsingGET_14
2019-05-28 15:03:04 -Generating unique operation named: listUsingGET_15
2019-05-28 15:03:04 -Generating unique operation named: printEditUsingGET_1
2019-05-28 15:03:04 -Generating unique operation named: removeUsingPOST_26
2019-05-28 15:03:04 -Generating unique operation named: saveUsingPOST_12
2019-05-28 15:03:04 -Generating unique operation named: updateUsingGET_9
2019-05-28 15:03:04 -Generating unique operation named: updateUsingHEAD_9
2019-05-28 15:03:04 -Generating unique operation named: updateUsingPOST_14
2019-05-28 15:03:04 -Generating unique operation named: updateUsingPUT_9
2019-05-28 15:03:04 -Generating unique operation named: updateUsingPATCH_9
2019-05-28 15:03:04 -Generating unique operation named: updateUsingDELETE_9
2019-05-28 15:03:04 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-28 15:03:04 -Generating unique operation named: updateUsingTRACE_9
2019-05-28 15:03:04 -Generating unique operation named: addUsingGET_14
2019-05-28 15:03:04 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-28 15:03:04 -Generating unique operation named: editUsingGET_15
2019-05-28 15:03:04 -Generating unique operation named: listUsingGET_16
2019-05-28 15:03:04 -Generating unique operation named: saveUsingPOST_13
2019-05-28 15:03:04 -Generating unique operation named: saveUsingPOST_14
2019-05-28 15:03:04 -Generating unique operation named: updateUsingPOST_15
2019-05-28 15:03:04 -Generating unique operation named: listUsingGET_17
2019-05-28 15:03:04 -Generating unique operation named: listUsingHEAD_1
2019-05-28 15:03:04 -Generating unique operation named: listUsingPOST_1
2019-05-28 15:03:04 -Generating unique operation named: listUsingPUT_1
2019-05-28 15:03:04 -Generating unique operation named: listUsingPATCH_1
2019-05-28 15:03:04 -Generating unique operation named: listUsingDELETE_1
2019-05-28 15:03:04 -Generating unique operation named: listUsingOPTIONS_1
2019-05-28 15:03:04 -Generating unique operation named: listUsingTRACE_1
2019-05-28 15:03:04 -Generating unique operation named: countDDUsingGET_1
2019-05-28 15:03:04 -Generating unique operation named: exportDDUsingGET_1
2019-05-28 15:03:04 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-28 15:03:05 -Generating unique operation named: addUsingGET_15
2019-05-28 15:03:05 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-28 15:03:05 -Generating unique operation named: editUsingGET_16
2019-05-28 15:03:05 -Generating unique operation named: listUsingGET_18
2019-05-28 15:03:05 -Generating unique operation named: removeUsingPOST_27
2019-05-28 15:03:05 -Generating unique operation named: saveUsingPOST_15
2019-05-28 15:03:05 -Generating unique operation named: treeUsingGET_3
2019-05-28 15:03:05 -Generating unique operation named: treeViewUsingGET_1
2019-05-28 15:03:05 -Generating unique operation named: updateUsingPOST_16
2019-05-28 15:03:05 -Generating unique operation named: addUsingGET_16
2019-05-28 15:03:05 -Generating unique operation named: editUsingGET_17
2019-05-28 15:03:05 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-28 15:03:05 -Generating unique operation named: listUsingGET_19
2019-05-28 15:03:05 -Generating unique operation named: removeUsingPOST_28
2019-05-28 15:03:05 -Generating unique operation named: removeUsingPOST_29
2019-05-28 15:03:05 -Generating unique operation named: saveUsingPOST_16
2019-05-28 15:03:05 -Generating unique operation named: updateUsingGET_10
2019-05-28 15:03:05 -Generating unique operation named: updateUsingHEAD_10
2019-05-28 15:03:05 -Generating unique operation named: updateUsingPOST_17
2019-05-28 15:03:05 -Generating unique operation named: updateUsingPUT_10
2019-05-28 15:03:05 -Generating unique operation named: updateUsingPATCH_10
2019-05-28 15:03:05 -Generating unique operation named: updateUsingDELETE_10
2019-05-28 15:03:05 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-28 15:03:05 -Generating unique operation named: updateUsingTRACE_10
2019-05-28 15:03:05 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-28 15:03:05 -Generating unique operation named: addUsingGET_17
2019-05-28 15:03:05 -Generating unique operation named: editUsingGET_18
2019-05-28 15:03:05 -Generating unique operation named: listUsingGET_20
2019-05-28 15:03:05 -Generating unique operation named: removeUsingPOST_30
2019-05-28 15:03:05 -Generating unique operation named: removeUsingPOST_31
2019-05-28 15:03:05 -Generating unique operation named: saveUsingPOST_17
2019-05-28 15:03:05 -Generating unique operation named: updateUsingGET_11
2019-05-28 15:03:05 -Generating unique operation named: updateUsingHEAD_11
2019-05-28 15:03:05 -Generating unique operation named: updateUsingPOST_18
2019-05-28 15:03:05 -Generating unique operation named: updateUsingPUT_11
2019-05-28 15:03:05 -Generating unique operation named: updateUsingPATCH_11
2019-05-28 15:03:05 -Generating unique operation named: updateUsingDELETE_11
2019-05-28 15:03:05 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-28 15:03:05 -Generating unique operation named: updateUsingTRACE_11
2019-05-28 15:03:05 -Generating unique operation named: addUsingGET_18
2019-05-28 15:03:05 -Generating unique operation named: editUsingGET_19
2019-05-28 15:03:05 -Generating unique operation named: listUsingGET_21
2019-05-28 15:03:05 -Generating unique operation named: removeUsingPOST_32
2019-05-28 15:03:05 -Generating unique operation named: removeUsingPOST_33
2019-05-28 15:03:05 -Generating unique operation named: saveUsingPOST_18
2019-05-28 15:03:05 -Generating unique operation named: updateUsingGET_12
2019-05-28 15:03:05 -Generating unique operation named: updateUsingHEAD_12
2019-05-28 15:03:05 -Generating unique operation named: updateUsingPOST_19
2019-05-28 15:03:05 -Generating unique operation named: updateUsingPUT_12
2019-05-28 15:03:05 -Generating unique operation named: updateUsingPATCH_12
2019-05-28 15:03:05 -Generating unique operation named: updateUsingDELETE_12
2019-05-28 15:03:05 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-28 15:03:05 -Generating unique operation named: updateUsingTRACE_12
2019-05-28 15:03:05 -Starting Quartz Scheduler now
2019-05-28 15:03:05 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-28 15:03:05 -Starting...
2019-05-28 15:03:05 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-28 15:03:05 -Started.
2019-05-28 15:03:05 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-28 15:03:05 -Using a shared selector for servlet write/read
2019-05-28 15:03:05 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-28 15:03:05 -Started BootdoApplication in 55.829 seconds (JVM running for 58.283)
2019-05-28 15:03:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-28 15:03:06 -==> Parameters: 
2019-05-28 15:03:06 -<==      Total: 1
2019-05-28 15:03:41 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-28 15:03:41 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-28 15:03:41 -FrameworkServlet 'dispatcherServlet': initialization completed in 66 ms
2019-05-28 15:03:41 -Enabling session validation scheduler...
2019-05-28 15:03:41 -请求地址 : http://localhost:8081/login;JSESSIONID=e800aed3-0009-458d-b07b-48c44340752c
2019-05-28 15:03:41 -HTTP METHOD : GET
2019-05-28 15:03:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 15:03:41 -参数 : [{}]
2019-05-28 15:03:41 -耗时 : 6
2019-05-28 15:03:41 -返回值 : login
2019-05-28 15:03:43 -请求地址 : http://localhost:8081/getVerify
2019-05-28 15:03:43 -HTTP METHOD : GET
2019-05-28 15:03:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-28 15:03:43 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f4acf4, org.apache.shiro.web.servlet.ShiroHttpServletResponse@3cb38d2]
2019-05-28 15:03:49 -5372
2019-05-28 15:03:50 -耗时 : 7061
2019-05-28 15:03:50 -返回值 : null
2019-05-28 15:03:50 -请求地址 : http://localhost:8081/login
2019-05-28 15:03:50 -HTTP METHOD : GET
2019-05-28 15:03:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 15:03:50 -参数 : [{}]
2019-05-28 15:03:50 -耗时 : 0
2019-05-28 15:03:50 -返回值 : login
2019-05-28 15:03:52 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-28 15:03:55 -请求地址 : http://localhost:8081/login
2019-05-28 15:03:55 -HTTP METHOD : POST
2019-05-28 15:03:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-28 15:03:55 -参数 : [admin, 111111, 5372, org.apache.shiro.web.servlet.ShiroHttpServletRequest@19da9c0f]
2019-05-28 15:03:55 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-28 15:03:55 -==> Parameters: admin(String)
2019-05-28 15:03:55 -<==      Total: 1
2019-05-28 15:03:55 -耗时 : 270
2019-05-28 15:03:55 -返回值 : {msg=操作成功, code=0}
2019-05-28 15:03:56 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-28 15:03:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 15:03:56 -==> Parameters: 1(Long), admin(String), 登录(String), 270(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-28 15:03:56.111(Timestamp)
2019-05-28 15:03:56 -<==    Updates: 1
2019-05-28 15:03:56 -请求地址 : http://localhost:8081/index
2019-05-28 15:03:56 -HTTP METHOD : GET
2019-05-28 15:03:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 15:03:56 -参数 : [{}]
2019-05-28 15:03:56 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 15:03:56 -==> Parameters: 1(Long)
2019-05-28 15:03:56 -<==      Total: 50
2019-05-28 15:03:56 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 15:03:56 -==> Parameters: 138(Long)
2019-05-28 15:03:56 -<==      Total: 1
2019-05-28 15:03:56 -耗时 : 413
2019-05-28 15:03:56 -返回值 : index_v1
2019-05-28 15:03:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 15:03:57 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 414(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 15:03:57.339(Timestamp)
2019-05-28 15:03:57 -<==    Updates: 1
2019-05-28 15:03:57 -请求地址 : http://localhost:8081/main
2019-05-28 15:03:57 -HTTP METHOD : GET
2019-05-28 15:03:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 15:03:57 -参数 : []
2019-05-28 15:03:57 -耗时 : 0
2019-05-28 15:03:57 -返回值 : main
2019-05-28 15:03:58 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 15:03:58 -HTTP METHOD : GET
2019-05-28 15:03:58 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 15:03:58 -参数 : []
2019-05-28 15:03:58 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 15:03:58 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 15:03:58 -<==      Total: 0
2019-05-28 15:03:58 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 15:03:58 -==> Parameters: 1(Long), 0(String)
2019-05-28 15:03:58 -<==      Total: 1
2019-05-28 15:03:58 -耗时 : 177
2019-05-28 15:03:58 -返回值 : com.bootdo.common.utils.PageUtils@643d9ac4
2019-05-28 15:03:58 -请求地址 : http://localhost:8081/main
2019-05-28 15:03:58 -HTTP METHOD : GET
2019-05-28 15:03:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 15:03:58 -参数 : []
2019-05-28 15:03:58 -耗时 : 0
2019-05-28 15:03:58 -返回值 : main
2019-05-28 15:04:00 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.web.socket.sockjs.SockJsException: Uncaught failure in SockJS request, uri=http://localhost:8081/endpointChat/912/g2r8jra4/xhr_streaming; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to open session; nested exception is org.springframework.web.socket.sockjs.SockJsTransportFailureException: Failed to write SockJsFrame content='o'; nested exception is org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。] with root cause
java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1276)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646)
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1564)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:352)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.Response.flushBuffer(Response.java:541)
	at org.apache.catalina.connector.ResponseFacade.flushBuffer(ResponseFacade.java:312)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at javax.servlet.ServletResponseWrapper.flushBuffer(ServletResponseWrapper.java:176)
	at org.springframework.http.server.ServletServerHttpResponse.flush(ServletServerHttpResponse.java:90)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.writeFrameInternal(AbstractHttpSockJsSession.java:358)
	at org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession.writeFrame(AbstractSockJsSession.java:324)
	at org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession.handleRequestInternal(StreamingSockJsSession.java:64)
	at org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession.handleInitialRequest(AbstractHttpSockJsSession.java:229)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequestInternal(AbstractHttpSendingTransportHandler.java:76)
	at org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler.handleRequest(AbstractHttpSendingTransportHandler.java:66)
	at org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService.handleTransportRequest(TransportHandlingSockJsService.java:312)
	at org.springframework.web.socket.sockjs.support.AbstractSockJsService.handleRequest(AbstractSockJsService.java:432)
	at org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler.handleRequest(SockJsHttpRequestHandler.java:133)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:53)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 15:04:00 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 15:04:16 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 15:04:16 -==> Parameters: 1(Long)
2019-05-28 15:04:16 -<==      Total: 94
2019-05-28 15:04:16 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-28 15:04:16 -HTTP METHOD : GET
2019-05-28 15:04:16 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-28 15:04:16 -参数 : []
2019-05-28 15:04:16 -耗时 : 0
2019-05-28 15:04:16 -返回值 : elec/elecInto/elecInto
2019-05-28 15:04:18 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-28 15:04:18 -HTTP METHOD : GET
2019-05-28 15:04:18 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-28 15:04:18 -参数 : []
2019-05-28 15:04:18 -耗时 : 0
2019-05-28 15:04:18 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-28 15:04:30 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 15:04:30 -HTTP METHOD : GET
2019-05-28 15:04:30 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 15:04:30 -参数 : []
2019-05-28 15:04:30 -耗时 : 0
2019-05-28 15:04:30 -返回值 : system/dept/deptTree
2019-05-28 15:04:31 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 15:04:31 -HTTP METHOD : GET
2019-05-28 15:04:31 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 15:04:31 -参数 : []
2019-05-28 15:04:31 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 15:04:31 -==> Parameters: 
2019-05-28 15:04:31 -<==      Total: 3
2019-05-28 15:04:31 -耗时 : 59
2019-05-28 15:04:31 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 15:04:32 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 15:04:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 15:04:32 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 15:04:32.904(Timestamp)
2019-05-28 15:04:33 -<==    Updates: 1
2019-05-28 15:06:26 -请求地址 : http://localhost:8081/login;JSESSIONID=442df361-881c-4948-bcec-3d1e5275e5e5
2019-05-28 15:06:26 -HTTP METHOD : GET
2019-05-28 15:06:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 15:06:26 -参数 : [{}]
2019-05-28 15:06:26 -耗时 : 0
2019-05-28 15:06:26 -返回值 : login
2019-05-28 15:06:29 -请求地址 : http://localhost:8081/getVerify
2019-05-28 15:06:29 -HTTP METHOD : GET
2019-05-28 15:06:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-28 15:06:29 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@487b472d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@33ddaba1]
2019-05-28 15:06:29 -0749
2019-05-28 15:06:29 -耗时 : 26
2019-05-28 15:06:29 -返回值 : null
2019-05-28 15:06:31 -请求地址 : http://localhost:8081/login
2019-05-28 15:06:31 -HTTP METHOD : GET
2019-05-28 15:06:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 15:06:31 -参数 : [{}]
2019-05-28 15:06:31 -耗时 : 0
2019-05-28 15:06:31 -返回值 : login
2019-05-28 15:06:34 -请求地址 : http://localhost:8081/login
2019-05-28 15:06:34 -HTTP METHOD : POST
2019-05-28 15:06:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-28 15:06:34 -参数 : [admin, 111111, 0749, org.apache.shiro.web.servlet.ShiroHttpServletRequest@7ef38479]
2019-05-28 15:06:34 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-28 15:06:34 -==> Parameters: admin(String)
2019-05-28 15:06:34 -<==      Total: 1
2019-05-28 15:06:34 -耗时 : 9
2019-05-28 15:06:34 -返回值 : {msg=操作成功, code=0}
2019-05-28 15:06:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 15:06:34 -请求地址 : http://localhost:8081/index
2019-05-28 15:06:34 -HTTP METHOD : GET
2019-05-28 15:06:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 15:06:34 -参数 : [{}]
2019-05-28 15:06:34 -==> Parameters: 1(Long), admin(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-28 15:06:34.381(Timestamp)
2019-05-28 15:06:35 -<==    Updates: 1
2019-05-28 15:06:35 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 15:06:35 -==> Parameters: 1(Long)
2019-05-28 15:06:35 -<==      Total: 50
2019-05-28 15:06:35 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 15:06:35 -==> Parameters: 138(Long)
2019-05-28 15:06:35 -<==      Total: 1
2019-05-28 15:06:35 -耗时 : 797
2019-05-28 15:06:35 -返回值 : index_v1
2019-05-28 15:06:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 15:06:35 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 797(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 15:06:35.211(Timestamp)
2019-05-28 15:06:35 -<==    Updates: 1
2019-05-28 15:06:35 -请求地址 : http://localhost:8081/main
2019-05-28 15:06:35 -HTTP METHOD : GET
2019-05-28 15:06:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 15:06:35 -参数 : []
2019-05-28 15:06:35 -耗时 : 1
2019-05-28 15:06:35 -返回值 : main
2019-05-28 15:06:35 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 15:06:35 -HTTP METHOD : GET
2019-05-28 15:06:35 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 15:06:35 -参数 : []
2019-05-28 15:06:35 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 15:06:35 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 15:06:35 -<==      Total: 0
2019-05-28 15:06:35 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 15:06:35 -==> Parameters: 1(Long), 0(String)
2019-05-28 15:06:35 -<==      Total: 1
2019-05-28 15:06:35 -耗时 : 6
2019-05-28 15:06:35 -返回值 : com.bootdo.common.utils.PageUtils@134312a8
2019-05-28 15:06:35 -请求地址 : http://localhost:8081/main
2019-05-28 15:06:35 -HTTP METHOD : GET
2019-05-28 15:06:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 15:06:35 -参数 : []
2019-05-28 15:06:35 -耗时 : 0
2019-05-28 15:06:35 -返回值 : main
2019-05-28 15:06:40 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 15:06:40 -==> Parameters: 1(Long)
2019-05-28 15:06:40 -<==      Total: 94
2019-05-28 15:06:40 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-28 15:06:40 -HTTP METHOD : GET
2019-05-28 15:06:40 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-28 15:06:40 -参数 : []
2019-05-28 15:06:40 -耗时 : 0
2019-05-28 15:06:40 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-28 15:06:51 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 15:06:51 -HTTP METHOD : GET
2019-05-28 15:06:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 15:06:51 -参数 : []
2019-05-28 15:06:51 -耗时 : 1
2019-05-28 15:06:51 -返回值 : system/dept/deptTree
2019-05-28 15:06:51 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 15:06:51 -HTTP METHOD : GET
2019-05-28 15:06:51 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 15:06:51 -参数 : []
2019-05-28 15:06:51 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 15:06:51 -==> Parameters: 
2019-05-28 15:06:51 -<==      Total: 3
2019-05-28 15:06:51 -耗时 : 4
2019-05-28 15:06:51 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 15:06:53 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 15:06:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 15:06:53 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 15:06:53.731(Timestamp)
2019-05-28 15:06:53 -<==    Updates: 1
2019-05-28 15:09:07 -Starting BootdoApplication on PC-201905091110 with PID 13880 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-28 15:09:07 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-28 15:09:07 -The following profiles are active: dev
2019-05-28 15:09:07 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@655f7ea: startup date [Tue May 28 15:09:07 CST 2019]; root of context hierarchy
2019-05-28 15:09:14 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-28 15:09:17 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a42918cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:09:17 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$96824774] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:09:19 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:09:20 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:09:20 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:09:20 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-28 15:09:20 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-28 15:09:20 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:09:20 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:09:20 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:09:21 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:09:22 -Tomcat initialized with port(s): 8081 (http)
2019-05-28 15:09:22 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-28 15:09:22 -Starting service [Tomcat]
2019-05-28 15:09:22 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-28 15:09:22 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-28 15:09:23 -Initializing Spring embedded WebApplicationContext
2019-05-28 15:09:23 -Root WebApplicationContext: initialization completed in 15900 ms
2019-05-28 15:09:24 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-28 15:09:24 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-28 15:09:24 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-28 15:09:24 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-28 15:09:24 -Filter xssFilter was not registered (disabled)
2019-05-28 15:09:24 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-28 15:09:24 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-28 15:09:24 -Servlet statViewServlet mapped to [/druid/*]
2019-05-28 15:09:24 -Servlet dispatcherServlet mapped to [/]
2019-05-28 15:09:30 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@655f7ea: startup date [Tue May 28 15:09:07 CST 2019]; root of context hierarchy
2019-05-28 15:09:30 -Using default implementation for ThreadExecutor
2019-05-28 15:09:30 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-28 15:09:30 -Quartz Scheduler v.2.2.1 created.
2019-05-28 15:09:30 -RAMJobStore initialized.
2019-05-28 15:09:30 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-28 15:09:30 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-28 15:09:30 -Quartz scheduler version: 2.2.1
2019-05-28 15:09:30 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7d47b021
2019-05-28 15:09:31 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-28 15:09:32 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-28 15:09:36 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:09:36 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-28 15:09:36 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:09:36 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-28 15:09:36 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-28 15:09:36 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-28 15:09:36 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-28 15:09:36 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:09:36 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:09:36 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-28 15:09:36 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:09:36 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-28 15:09:36 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 15:09:36 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-28 15:09:36 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-28 15:09:36 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 15:09:36 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:09:36 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-28 15:09:36 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:09:36 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-28 15:09:36 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-28 15:09:36 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 15:09:36 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 15:09:36 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-28 15:09:36 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-28 15:09:36 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-28 15:09:36 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-28 15:09:36 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-28 15:09:36 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-28 15:09:36 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-28 15:09:36 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-28 15:09:36 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-28 15:09:36 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-28 15:09:36 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-28 15:09:36 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-28 15:09:36 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-28 15:09:36 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-28 15:09:36 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 15:09:36 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-28 15:09:36 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 15:09:36 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-28 15:09:36 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-28 15:09:36 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-28 15:09:36 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-28 15:09:36 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-28 15:09:36 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-28 15:09:36 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-28 15:09:36 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-28 15:09:36 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-28 15:09:36 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 15:09:36 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 15:09:36 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-28 15:09:36 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-28 15:09:36 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 15:09:36 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-28 15:09:36 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-28 15:09:36 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-28 15:09:36 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-28 15:09:36 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-28 15:09:36 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-28 15:09:36 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 15:09:36 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 15:09:36 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-28 15:09:36 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-28 15:09:36 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-28 15:09:36 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-28 15:09:36 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-28 15:09:36 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-28 15:09:36 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 15:09:36 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-28 15:09:36 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-28 15:09:36 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 15:09:36 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 15:09:36 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-28 15:09:36 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-28 15:09:36 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-28 15:09:36 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 15:09:36 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 15:09:36 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 15:09:36 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-28 15:09:36 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 15:09:36 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-28 15:09:36 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 15:09:36 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 15:09:36 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-28 15:09:36 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-28 15:09:36 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-28 15:09:36 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-28 15:09:36 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-28 15:09:36 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-28 15:09:36 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 15:09:36 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-28 15:09:36 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-28 15:09:36 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-28 15:09:36 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-28 15:09:36 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-28 15:09:36 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-28 15:09:36 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-28 15:09:36 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-28 15:09:36 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-28 15:09:36 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-28 15:09:36 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-28 15:09:36 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-28 15:09:36 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-28 15:09:36 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-28 15:09:36 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-28 15:09:36 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-28 15:09:36 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-28 15:09:36 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-28 15:09:36 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-28 15:09:36 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-28 15:09:36 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 15:09:36 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-28 15:09:36 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-28 15:09:36 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-28 15:09:36 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-28 15:09:36 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-28 15:09:36 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-28 15:09:36 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-28 15:09:36 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-28 15:09:36 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-28 15:09:36 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-28 15:09:36 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-28 15:09:36 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-28 15:09:36 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-28 15:09:36 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-28 15:09:36 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-28 15:09:36 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-28 15:09:36 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-28 15:09:36 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 15:09:36 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 15:09:36 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 15:09:36 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-28 15:09:36 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-28 15:09:36 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-28 15:09:36 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-28 15:09:36 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-28 15:09:36 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 15:09:36 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-28 15:09:36 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-28 15:09:36 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-28 15:09:36 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-28 15:09:36 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 15:09:36 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:09:36 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 15:09:36 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-28 15:09:36 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:09:36 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:09:36 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-28 15:09:36 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-28 15:09:36 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 15:09:36 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 15:09:36 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-28 15:09:36 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-28 15:09:36 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-28 15:09:37 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-28 15:09:37 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-28 15:09:37 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-28 15:09:38 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 15:09:38 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@655f7ea: startup date [Tue May 28 15:09:07 CST 2019]; root of context hierarchy
2019-05-28 15:09:39 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 15:09:39 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 15:09:39 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 15:09:39 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-28 15:09:39 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-28 15:09:42 -Registering beans for JMX exposure on startup
2019-05-28 15:09:42 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-28 15:09:42 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-28 15:09:42 -Starting beans in phase 2147483647
2019-05-28 15:09:42 -Context refreshed
2019-05-28 15:09:42 -Found 1 custom documentation plugin(s)
2019-05-28 15:09:42 -Scanning for api listing references
2019-05-28 15:09:43 -Generating unique operation named: getCountDUsingPOST_1
2019-05-28 15:09:43 -Generating unique operation named: removeUsingPOST_1
2019-05-28 15:09:43 -Generating unique operation named: addUsingGET_1
2019-05-28 15:09:43 -Generating unique operation named: editUsingGET_1
2019-05-28 15:09:43 -Generating unique operation named: listUsingGET_1
2019-05-28 15:09:43 -Generating unique operation named: removeUsingPOST_2
2019-05-28 15:09:43 -Generating unique operation named: removeUsingPOST_3
2019-05-28 15:09:43 -Generating unique operation named: saveUsingPOST_1
2019-05-28 15:09:43 -Generating unique operation named: updateUsingGET_1
2019-05-28 15:09:44 -Generating unique operation named: updateUsingHEAD_1
2019-05-28 15:09:44 -Generating unique operation named: updateUsingPOST_1
2019-05-28 15:09:44 -Generating unique operation named: updateUsingPUT_1
2019-05-28 15:09:44 -Generating unique operation named: updateUsingPATCH_1
2019-05-28 15:09:44 -Generating unique operation named: updateUsingDELETE_1
2019-05-28 15:09:44 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-28 15:09:44 -Generating unique operation named: updateUsingTRACE_1
2019-05-28 15:09:44 -Generating unique operation named: addUsingGET_2
2019-05-28 15:09:44 -Generating unique operation named: editUsingGET_2
2019-05-28 15:09:44 -Generating unique operation named: listUsingGET_2
2019-05-28 15:09:44 -Generating unique operation named: removeUsingPOST_4
2019-05-28 15:09:44 -Generating unique operation named: removeUsingPOST_5
2019-05-28 15:09:44 -Generating unique operation named: saveUsingPOST_2
2019-05-28 15:09:44 -Generating unique operation named: updateUsingPOST_2
2019-05-28 15:09:44 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-28 15:09:44 -Generating unique operation named: addUsingGET_3
2019-05-28 15:09:44 -Generating unique operation named: editUsingGET_3
2019-05-28 15:09:44 -Generating unique operation named: listUsingGET_3
2019-05-28 15:09:44 -Generating unique operation named: removeUsingPOST_6
2019-05-28 15:09:44 -Generating unique operation named: removeUsingPOST_7
2019-05-28 15:09:44 -Generating unique operation named: saveUsingPOST_3
2019-05-28 15:09:44 -Generating unique operation named: updateUsingGET_2
2019-05-28 15:09:44 -Generating unique operation named: updateUsingHEAD_2
2019-05-28 15:09:44 -Generating unique operation named: updateUsingPOST_3
2019-05-28 15:09:44 -Generating unique operation named: updateUsingPUT_2
2019-05-28 15:09:44 -Generating unique operation named: updateUsingPATCH_2
2019-05-28 15:09:44 -Generating unique operation named: updateUsingDELETE_2
2019-05-28 15:09:44 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-28 15:09:44 -Generating unique operation named: updateUsingTRACE_2
2019-05-28 15:09:44 -Generating unique operation named: addUsingGET_4
2019-05-28 15:09:44 -Generating unique operation named: editUsingGET_4
2019-05-28 15:09:44 -Generating unique operation named: listUsingGET_4
2019-05-28 15:09:44 -Generating unique operation named: removeUsingPOST_8
2019-05-28 15:09:44 -Generating unique operation named: removeUsingPOST_9
2019-05-28 15:09:44 -Generating unique operation named: saveUsingPOST_4
2019-05-28 15:09:44 -Generating unique operation named: updateUsingGET_3
2019-05-28 15:09:44 -Generating unique operation named: updateUsingHEAD_3
2019-05-28 15:09:44 -Generating unique operation named: updateUsingPOST_4
2019-05-28 15:09:44 -Generating unique operation named: updateUsingPUT_3
2019-05-28 15:09:44 -Generating unique operation named: updateUsingPATCH_3
2019-05-28 15:09:44 -Generating unique operation named: updateUsingDELETE_3
2019-05-28 15:09:44 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-28 15:09:44 -Generating unique operation named: updateUsingTRACE_3
2019-05-28 15:09:44 -Generating unique operation named: ElecUsingGET_1
2019-05-28 15:09:44 -Generating unique operation named: addUsingGET_5
2019-05-28 15:09:44 -Generating unique operation named: editUsingGET_5
2019-05-28 15:09:44 -Generating unique operation named: listUsingGET_5
2019-05-28 15:09:44 -Generating unique operation named: removeUsingPOST_10
2019-05-28 15:09:44 -Generating unique operation named: removeUsingPOST_11
2019-05-28 15:09:44 -Generating unique operation named: saveUsingPOST_5
2019-05-28 15:09:44 -Generating unique operation named: updateUsingGET_4
2019-05-28 15:09:44 -Generating unique operation named: updateUsingHEAD_4
2019-05-28 15:09:44 -Generating unique operation named: updateUsingPOST_5
2019-05-28 15:09:44 -Generating unique operation named: updateUsingPUT_4
2019-05-28 15:09:44 -Generating unique operation named: updateUsingPATCH_4
2019-05-28 15:09:44 -Generating unique operation named: updateUsingDELETE_4
2019-05-28 15:09:44 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-28 15:09:44 -Generating unique operation named: updateUsingTRACE_4
2019-05-28 15:09:44 -Generating unique operation named: editUsingGET_6
2019-05-28 15:09:44 -Generating unique operation named: listUsingGET_6
2019-05-28 15:09:44 -Generating unique operation named: updateUsingPOST_6
2019-05-28 15:09:44 -Generating unique operation named: addUsingGET_6
2019-05-28 15:09:44 -Generating unique operation named: editUsingGET_7
2019-05-28 15:09:44 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-28 15:09:44 -Generating unique operation named: listUsingGET_7
2019-05-28 15:09:44 -Generating unique operation named: removeUsingPOST_12
2019-05-28 15:09:44 -Generating unique operation named: removeUsingPOST_13
2019-05-28 15:09:44 -Generating unique operation named: saveUsingPOST_6
2019-05-28 15:09:44 -Generating unique operation named: updateUsingGET_5
2019-05-28 15:09:44 -Generating unique operation named: updateUsingHEAD_5
2019-05-28 15:09:44 -Generating unique operation named: updateUsingPOST_7
2019-05-28 15:09:44 -Generating unique operation named: updateUsingPUT_5
2019-05-28 15:09:44 -Generating unique operation named: updateUsingPATCH_5
2019-05-28 15:09:44 -Generating unique operation named: updateUsingDELETE_5
2019-05-28 15:09:45 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-28 15:09:45 -Generating unique operation named: updateUsingTRACE_5
2019-05-28 15:09:45 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-28 15:09:45 -Generating unique operation named: addUsingGET_7
2019-05-28 15:09:45 -Generating unique operation named: editUsingGET_8
2019-05-28 15:09:45 -Generating unique operation named: listUsingGET_8
2019-05-28 15:09:45 -Generating unique operation named: removeUsingPOST_14
2019-05-28 15:09:45 -Generating unique operation named: removeUsingPOST_15
2019-05-28 15:09:45 -Generating unique operation named: saveUsingPOST_7
2019-05-28 15:09:45 -Generating unique operation named: updateUsingGET_6
2019-05-28 15:09:45 -Generating unique operation named: updateUsingHEAD_6
2019-05-28 15:09:45 -Generating unique operation named: updateUsingPOST_8
2019-05-28 15:09:45 -Generating unique operation named: updateUsingPUT_6
2019-05-28 15:09:45 -Generating unique operation named: updateUsingPATCH_6
2019-05-28 15:09:45 -Generating unique operation named: updateUsingDELETE_6
2019-05-28 15:09:45 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-28 15:09:45 -Generating unique operation named: updateUsingTRACE_6
2019-05-28 15:09:45 -Generating unique operation named: addUsingGET_8
2019-05-28 15:09:45 -Generating unique operation named: editUsingGET_9
2019-05-28 15:09:45 -Generating unique operation named: listUsingGET_9
2019-05-28 15:09:45 -Generating unique operation named: removeUsingPOST_16
2019-05-28 15:09:45 -Generating unique operation named: removeUsingPOST_17
2019-05-28 15:09:45 -Generating unique operation named: saveUsingPOST_8
2019-05-28 15:09:45 -Generating unique operation named: updateUsingGET_7
2019-05-28 15:09:45 -Generating unique operation named: updateUsingHEAD_7
2019-05-28 15:09:45 -Generating unique operation named: updateUsingPOST_9
2019-05-28 15:09:45 -Generating unique operation named: updateUsingPUT_7
2019-05-28 15:09:45 -Generating unique operation named: updateUsingPATCH_7
2019-05-28 15:09:45 -Generating unique operation named: updateUsingDELETE_7
2019-05-28 15:09:45 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-28 15:09:45 -Generating unique operation named: updateUsingTRACE_7
2019-05-28 15:09:45 -Generating unique operation named: addUsingGET_9
2019-05-28 15:09:45 -Generating unique operation named: editUsingGET_10
2019-05-28 15:09:45 -Generating unique operation named: infoUsingGET_1
2019-05-28 15:09:45 -Generating unique operation named: infoUsingHEAD_1
2019-05-28 15:09:45 -Generating unique operation named: infoUsingPOST_1
2019-05-28 15:09:45 -Generating unique operation named: infoUsingPUT_1
2019-05-28 15:09:45 -Generating unique operation named: infoUsingPATCH_1
2019-05-28 15:09:45 -Generating unique operation named: infoUsingDELETE_1
2019-05-28 15:09:45 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-28 15:09:45 -Generating unique operation named: infoUsingTRACE_1
2019-05-28 15:09:45 -Generating unique operation named: listUsingGET_10
2019-05-28 15:09:45 -Generating unique operation named: removeUsingPOST_18
2019-05-28 15:09:45 -Generating unique operation named: removeUsingPOST_19
2019-05-28 15:09:45 -Generating unique operation named: saveUsingPOST_9
2019-05-28 15:09:45 -Generating unique operation named: updateUsingPOST_10
2019-05-28 15:09:45 -Generating unique operation named: listUsingGET_11
2019-05-28 15:09:45 -Generating unique operation named: removeUsingPOST_20
2019-05-28 15:09:45 -Generating unique operation named: welcomeUsingGET_1
2019-05-28 15:09:45 -Generating unique operation named: addUsingGET_10
2019-05-28 15:09:45 -Generating unique operation named: editUsingGET_11
2019-05-28 15:09:45 -Generating unique operation named: listUsingGET_12
2019-05-28 15:09:45 -Generating unique operation named: removeUsingPOST_21
2019-05-28 15:09:45 -Generating unique operation named: saveUsingPOST_10
2019-05-28 15:09:45 -Generating unique operation named: treeUsingGET_1
2019-05-28 15:09:45 -Generating unique operation named: treeUsingGET_2
2019-05-28 15:09:45 -Generating unique operation named: updateUsingPOST_11
2019-05-28 15:09:45 -Generating unique operation named: addUsingGET_11
2019-05-28 15:09:45 -Generating unique operation named: editUsingGET_12
2019-05-28 15:09:45 -Generating unique operation named: listUsingGET_13
2019-05-28 15:09:45 -Generating unique operation named: removeUsingPOST_22
2019-05-28 15:09:45 -Generating unique operation named: removeUsingPOST_23
2019-05-28 15:09:45 -Generating unique operation named: updateUsingPOST_12
2019-05-28 15:09:45 -Generating unique operation named: addUsingGET_12
2019-05-28 15:09:45 -Generating unique operation named: editUsingGET_13
2019-05-28 15:09:46 -Generating unique operation named: listUsingGET_14
2019-05-28 15:09:46 -Generating unique operation named: removeUsingPOST_24
2019-05-28 15:09:46 -Generating unique operation named: removeUsingPOST_25
2019-05-28 15:09:46 -Generating unique operation named: saveUsingPOST_11
2019-05-28 15:09:46 -Generating unique operation named: updateUsingGET_8
2019-05-28 15:09:46 -Generating unique operation named: updateUsingHEAD_8
2019-05-28 15:09:46 -Generating unique operation named: updateUsingPOST_13
2019-05-28 15:09:46 -Generating unique operation named: updateUsingPUT_8
2019-05-28 15:09:46 -Generating unique operation named: updateUsingPATCH_8
2019-05-28 15:09:46 -Generating unique operation named: updateUsingDELETE_8
2019-05-28 15:09:46 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-28 15:09:46 -Generating unique operation named: updateUsingTRACE_8
2019-05-28 15:09:46 -Generating unique operation named: addUsingGET_13
2019-05-28 15:09:46 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-28 15:09:46 -Generating unique operation named: editUsingGET_14
2019-05-28 15:09:46 -Generating unique operation named: listUsingGET_15
2019-05-28 15:09:46 -Generating unique operation named: printEditUsingGET_1
2019-05-28 15:09:46 -Generating unique operation named: removeUsingPOST_26
2019-05-28 15:09:46 -Generating unique operation named: saveUsingPOST_12
2019-05-28 15:09:46 -Generating unique operation named: updateUsingGET_9
2019-05-28 15:09:46 -Generating unique operation named: updateUsingHEAD_9
2019-05-28 15:09:46 -Generating unique operation named: updateUsingPOST_14
2019-05-28 15:09:46 -Generating unique operation named: updateUsingPUT_9
2019-05-28 15:09:46 -Generating unique operation named: updateUsingPATCH_9
2019-05-28 15:09:46 -Generating unique operation named: updateUsingDELETE_9
2019-05-28 15:09:46 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-28 15:09:46 -Generating unique operation named: updateUsingTRACE_9
2019-05-28 15:09:46 -Generating unique operation named: addUsingGET_14
2019-05-28 15:09:46 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-28 15:09:46 -Generating unique operation named: editUsingGET_15
2019-05-28 15:09:46 -Generating unique operation named: listUsingGET_16
2019-05-28 15:09:46 -Generating unique operation named: saveUsingPOST_13
2019-05-28 15:09:46 -Generating unique operation named: saveUsingPOST_14
2019-05-28 15:09:46 -Generating unique operation named: updateUsingPOST_15
2019-05-28 15:09:46 -Generating unique operation named: listUsingGET_17
2019-05-28 15:09:46 -Generating unique operation named: listUsingHEAD_1
2019-05-28 15:09:46 -Generating unique operation named: listUsingPOST_1
2019-05-28 15:09:46 -Generating unique operation named: listUsingPUT_1
2019-05-28 15:09:46 -Generating unique operation named: listUsingPATCH_1
2019-05-28 15:09:46 -Generating unique operation named: listUsingDELETE_1
2019-05-28 15:09:46 -Generating unique operation named: listUsingOPTIONS_1
2019-05-28 15:09:46 -Generating unique operation named: listUsingTRACE_1
2019-05-28 15:09:46 -Generating unique operation named: countDDUsingGET_1
2019-05-28 15:09:46 -Generating unique operation named: exportDDUsingGET_1
2019-05-28 15:09:46 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-28 15:09:46 -Generating unique operation named: addUsingGET_15
2019-05-28 15:09:46 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-28 15:09:46 -Generating unique operation named: editUsingGET_16
2019-05-28 15:09:46 -Generating unique operation named: listUsingGET_18
2019-05-28 15:09:46 -Generating unique operation named: removeUsingPOST_27
2019-05-28 15:09:46 -Generating unique operation named: saveUsingPOST_15
2019-05-28 15:09:46 -Generating unique operation named: treeUsingGET_3
2019-05-28 15:09:46 -Generating unique operation named: treeViewUsingGET_1
2019-05-28 15:09:46 -Generating unique operation named: updateUsingPOST_16
2019-05-28 15:09:46 -Generating unique operation named: addUsingGET_16
2019-05-28 15:09:46 -Generating unique operation named: editUsingGET_17
2019-05-28 15:09:46 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-28 15:09:46 -Generating unique operation named: listUsingGET_19
2019-05-28 15:09:46 -Generating unique operation named: removeUsingPOST_28
2019-05-28 15:09:46 -Generating unique operation named: removeUsingPOST_29
2019-05-28 15:09:46 -Generating unique operation named: saveUsingPOST_16
2019-05-28 15:09:47 -Generating unique operation named: updateUsingGET_10
2019-05-28 15:09:47 -Generating unique operation named: updateUsingHEAD_10
2019-05-28 15:09:47 -Generating unique operation named: updateUsingPOST_17
2019-05-28 15:09:47 -Generating unique operation named: updateUsingPUT_10
2019-05-28 15:09:47 -Generating unique operation named: updateUsingPATCH_10
2019-05-28 15:09:47 -Generating unique operation named: updateUsingDELETE_10
2019-05-28 15:09:47 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-28 15:09:47 -Generating unique operation named: updateUsingTRACE_10
2019-05-28 15:09:47 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-28 15:09:47 -Generating unique operation named: addUsingGET_17
2019-05-28 15:09:47 -Generating unique operation named: editUsingGET_18
2019-05-28 15:09:47 -Generating unique operation named: listUsingGET_20
2019-05-28 15:09:47 -Generating unique operation named: removeUsingPOST_30
2019-05-28 15:09:47 -Generating unique operation named: removeUsingPOST_31
2019-05-28 15:09:47 -Generating unique operation named: saveUsingPOST_17
2019-05-28 15:09:47 -Generating unique operation named: updateUsingGET_11
2019-05-28 15:09:47 -Generating unique operation named: updateUsingHEAD_11
2019-05-28 15:09:47 -Generating unique operation named: updateUsingPOST_18
2019-05-28 15:09:47 -Generating unique operation named: updateUsingPUT_11
2019-05-28 15:09:47 -Generating unique operation named: updateUsingPATCH_11
2019-05-28 15:09:47 -Generating unique operation named: updateUsingDELETE_11
2019-05-28 15:09:47 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-28 15:09:47 -Generating unique operation named: updateUsingTRACE_11
2019-05-28 15:09:47 -Generating unique operation named: addUsingGET_18
2019-05-28 15:09:47 -Generating unique operation named: editUsingGET_19
2019-05-28 15:09:47 -Generating unique operation named: listUsingGET_21
2019-05-28 15:09:47 -Generating unique operation named: removeUsingPOST_32
2019-05-28 15:09:47 -Generating unique operation named: removeUsingPOST_33
2019-05-28 15:09:47 -Generating unique operation named: saveUsingPOST_18
2019-05-28 15:09:47 -Generating unique operation named: updateUsingGET_12
2019-05-28 15:09:47 -Generating unique operation named: updateUsingHEAD_12
2019-05-28 15:09:47 -Generating unique operation named: updateUsingPOST_19
2019-05-28 15:09:47 -Generating unique operation named: updateUsingPUT_12
2019-05-28 15:09:47 -Generating unique operation named: updateUsingPATCH_12
2019-05-28 15:09:47 -Generating unique operation named: updateUsingDELETE_12
2019-05-28 15:09:47 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-28 15:09:47 -Generating unique operation named: updateUsingTRACE_12
2019-05-28 15:09:47 -Starting Quartz Scheduler now
2019-05-28 15:09:47 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-28 15:09:47 -Starting...
2019-05-28 15:09:47 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-28 15:09:47 -Started.
2019-05-28 15:09:47 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-28 15:09:47 -Failed to start connector [Connector[HTTP/1.1-8081]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8081]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167)
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.addPreviouslyRemovedConnectors(TomcatWebServer.java:256)
	at org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start(TomcatWebServer.java:198)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.startWebServer(ServletWebServerApplicationContext.java:300)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.finishRefresh(ServletWebServerApplicationContext.java:162)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1255)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1243)
	at com.bootdo.BootdoApplication.main(BootdoApplication.java:23)
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1020)
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)
	... 13 common frames omitted
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method)
	at sun.nio.ch.Net.bind(Net.java:433)
	at sun.nio.ch.Net.bind(Net.java:425)
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:223)
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74)
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210)
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150)
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591)
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018)
	... 14 common frames omitted
2019-05-28 15:09:47 -Pausing ProtocolHandler ["http-nio-8081"]
2019-05-28 15:09:47 -Stopping service [Tomcat]
2019-05-28 15:09:47 -The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019-05-28 15:09:47 -Stopping ProtocolHandler ["http-nio-8081"]
2019-05-28 15:09:47 -Destroying ProtocolHandler ["http-nio-8081"]
2019-05-28 15:09:47 -

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-05-28 15:09:47 -

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8081 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8081, or configure this application to listen on another port.

2019-05-28 15:09:47 -Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@655f7ea: startup date [Tue May 28 15:09:07 CST 2019]; root of context hierarchy
2019-05-28 15:09:47 -Stopping beans in phase 2147483647
2019-05-28 15:09:47 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-05-28 15:09:47 -Stopping...
2019-05-28 15:09:47 -BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-28 15:09:47 -Stopped.
2019-05-28 15:09:47 -Unregistering JMX-exposed beans on shutdown
2019-05-28 15:09:47 -Unregistering JMX-exposed beans
2019-05-28 15:09:47 -Shutting down ExecutorService 'brokerChannelExecutor'
2019-05-28 15:09:47 -Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-05-28 15:09:47 -Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-05-28 15:09:47 -Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-05-28 15:09:47 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutting down.
2019-05-28 15:09:47 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED paused.
2019-05-28 15:09:47 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED shutdown complete.
2019-05-28 15:09:47 -Shutting down Quartz Scheduler
2019-05-28 15:13:52 -Starting BootdoApplication on PC-201905091110 with PID 39824 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-28 15:13:52 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-28 15:13:52 -The following profiles are active: dev
2019-05-28 15:13:52 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@665df3c6: startup date [Tue May 28 15:13:52 CST 2019]; root of context hierarchy
2019-05-28 15:13:56 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-28 15:13:59 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bba5e5db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:13:59 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$adff1482] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:13:59 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:14:00 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:14:00 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:14:00 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-28 15:14:00 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-28 15:14:00 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:14:00 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:14:00 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:14:00 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 15:14:01 -Tomcat initialized with port(s): 8081 (http)
2019-05-28 15:14:01 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-28 15:14:01 -Starting service [Tomcat]
2019-05-28 15:14:01 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-28 15:14:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-28 15:14:02 -Initializing Spring embedded WebApplicationContext
2019-05-28 15:14:02 -Root WebApplicationContext: initialization completed in 9422 ms
2019-05-28 15:14:02 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-28 15:14:02 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-28 15:14:02 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-28 15:14:02 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-28 15:14:02 -Filter xssFilter was not registered (disabled)
2019-05-28 15:14:02 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-28 15:14:02 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-28 15:14:02 -Servlet statViewServlet mapped to [/druid/*]
2019-05-28 15:14:02 -Servlet dispatcherServlet mapped to [/]
2019-05-28 15:14:07 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@665df3c6: startup date [Tue May 28 15:13:52 CST 2019]; root of context hierarchy
2019-05-28 15:14:08 -Using default implementation for ThreadExecutor
2019-05-28 15:14:08 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-28 15:14:08 -Quartz Scheduler v.2.2.1 created.
2019-05-28 15:14:08 -RAMJobStore initialized.
2019-05-28 15:14:08 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-28 15:14:08 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-28 15:14:08 -Quartz scheduler version: 2.2.1
2019-05-28 15:14:08 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@7097d921
2019-05-28 15:14:08 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-28 15:14:08 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-28 15:14:11 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:11 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-28 15:14:11 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:14:11 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:14:11 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:11 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-28 15:14:11 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-28 15:14:11 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:11 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-28 15:14:11 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-28 15:14:11 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:14:11 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:11 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:14:11 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:11 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-28 15:14:11 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:14:11 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:11 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-28 15:14:11 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 15:14:11 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-28 15:14:11 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:11 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 15:14:11 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-28 15:14:11 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:11 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:11 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-28 15:14:11 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:14:11 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 15:14:11 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-28 15:14:11 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:11 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 15:14:11 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-28 15:14:11 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:11 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:11 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-28 15:14:11 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 15:14:11 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-28 15:14:11 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-28 15:14:11 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-28 15:14:11 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-28 15:14:11 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:11 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-28 15:14:11 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-28 15:14:11 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-28 15:14:11 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:11 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-28 15:14:11 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-28 15:14:11 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-28 15:14:11 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-28 15:14:11 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-28 15:14:11 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-28 15:14:11 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:11 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-28 15:14:11 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-28 15:14:11 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-28 15:14:11 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:11 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-28 15:14:11 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:11 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-28 15:14:11 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 15:14:11 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-28 15:14:11 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 15:14:11 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-28 15:14:11 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-28 15:14:12 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-28 15:14:12 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:12 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-28 15:14:12 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-28 15:14:12 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-28 15:14:12 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-28 15:14:12 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:12 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-28 15:14:12 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-28 15:14:12 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:12 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:12 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-28 15:14:12 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 15:14:12 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 15:14:12 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-28 15:14:12 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-28 15:14:12 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:12 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:12 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-28 15:14:12 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 15:14:12 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-28 15:14:12 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-28 15:14:12 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:12 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-28 15:14:12 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-28 15:14:12 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-28 15:14:12 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 15:14:12 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 15:14:12 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:12 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-28 15:14:12 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-28 15:14:12 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-28 15:14:12 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-28 15:14:12 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:12 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-28 15:14:12 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:12 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-28 15:14:12 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:12 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-28 15:14:12 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 15:14:12 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-28 15:14:12 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 15:14:12 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:12 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 15:14:12 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-28 15:14:12 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 15:14:12 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-28 15:14:12 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-28 15:14:12 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:12 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 15:14:12 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-28 15:14:12 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 15:14:12 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 15:14:12 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-28 15:14:12 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 15:14:12 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 15:14:12 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:12 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-28 15:14:12 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-28 15:14:12 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-28 15:14:12 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-28 15:14:12 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-28 15:14:12 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-28 15:14:12 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-28 15:14:12 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 15:14:12 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-28 15:14:12 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-28 15:14:12 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:12 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-28 15:14:12 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-28 15:14:12 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-28 15:14:12 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-28 15:14:12 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:12 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-28 15:14:12 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-28 15:14:12 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:12 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-28 15:14:12 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-28 15:14:12 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:12 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-28 15:14:12 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-28 15:14:12 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-28 15:14:12 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-28 15:14:12 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-28 15:14:12 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-28 15:14:12 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-28 15:14:12 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-28 15:14:12 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-28 15:14:12 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 15:14:12 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:12 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-28 15:14:12 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:12 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-28 15:14:12 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-28 15:14:12 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-28 15:14:12 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-28 15:14:12 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-28 15:14:12 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-28 15:14:12 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-28 15:14:12 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-28 15:14:12 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-28 15:14:12 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-28 15:14:12 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-28 15:14:12 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:12 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-28 15:14:12 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:12 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-28 15:14:12 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-28 15:14:12 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-28 15:14:12 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-28 15:14:12 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 15:14:12 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 15:14:12 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 15:14:12 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-28 15:14:12 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-28 15:14:12 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-28 15:14:12 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:12 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-28 15:14:12 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:12 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-28 15:14:12 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:12 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-28 15:14:12 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 15:14:12 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-28 15:14:12 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-28 15:14:12 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-28 15:14:12 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 15:14:12 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 15:14:12 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 15:14:12 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-28 15:14:12 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 15:14:12 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 15:14:12 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-28 15:14:12 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-28 15:14:12 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 15:14:12 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 15:14:12 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-28 15:14:12 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-28 15:14:12 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-28 15:14:13 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-28 15:14:13 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-28 15:14:13 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-28 15:14:14 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 15:14:14 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@665df3c6: startup date [Tue May 28 15:13:52 CST 2019]; root of context hierarchy
2019-05-28 15:14:14 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 15:14:14 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 15:14:14 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 15:14:14 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-28 15:14:15 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-28 15:14:17 -Registering beans for JMX exposure on startup
2019-05-28 15:14:17 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-28 15:14:17 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-28 15:14:17 -Starting beans in phase 2147483647
2019-05-28 15:14:17 -Context refreshed
2019-05-28 15:14:17 -Found 1 custom documentation plugin(s)
2019-05-28 15:14:17 -Scanning for api listing references
2019-05-28 15:14:18 -Generating unique operation named: getCountDUsingPOST_1
2019-05-28 15:14:18 -Generating unique operation named: removeUsingPOST_1
2019-05-28 15:14:18 -Generating unique operation named: addUsingGET_1
2019-05-28 15:14:18 -Generating unique operation named: editUsingGET_1
2019-05-28 15:14:18 -Generating unique operation named: listUsingGET_1
2019-05-28 15:14:18 -Generating unique operation named: removeUsingPOST_2
2019-05-28 15:14:18 -Generating unique operation named: removeUsingPOST_3
2019-05-28 15:14:18 -Generating unique operation named: saveUsingPOST_1
2019-05-28 15:14:18 -Generating unique operation named: updateUsingGET_1
2019-05-28 15:14:18 -Generating unique operation named: updateUsingHEAD_1
2019-05-28 15:14:18 -Generating unique operation named: updateUsingPOST_1
2019-05-28 15:14:18 -Generating unique operation named: updateUsingPUT_1
2019-05-28 15:14:18 -Generating unique operation named: updateUsingPATCH_1
2019-05-28 15:14:18 -Generating unique operation named: updateUsingDELETE_1
2019-05-28 15:14:18 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-28 15:14:18 -Generating unique operation named: updateUsingTRACE_1
2019-05-28 15:14:18 -Generating unique operation named: addUsingGET_2
2019-05-28 15:14:18 -Generating unique operation named: editUsingGET_2
2019-05-28 15:14:18 -Generating unique operation named: listUsingGET_2
2019-05-28 15:14:18 -Generating unique operation named: removeUsingPOST_4
2019-05-28 15:14:18 -Generating unique operation named: removeUsingPOST_5
2019-05-28 15:14:18 -Generating unique operation named: saveUsingPOST_2
2019-05-28 15:14:18 -Generating unique operation named: updateUsingPOST_2
2019-05-28 15:14:18 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-28 15:14:18 -Generating unique operation named: addUsingGET_3
2019-05-28 15:14:18 -Generating unique operation named: editUsingGET_3
2019-05-28 15:14:18 -Generating unique operation named: listUsingGET_3
2019-05-28 15:14:18 -Generating unique operation named: removeUsingPOST_6
2019-05-28 15:14:18 -Generating unique operation named: removeUsingPOST_7
2019-05-28 15:14:18 -Generating unique operation named: saveUsingPOST_3
2019-05-28 15:14:18 -Generating unique operation named: updateUsingGET_2
2019-05-28 15:14:18 -Generating unique operation named: updateUsingHEAD_2
2019-05-28 15:14:18 -Generating unique operation named: updateUsingPOST_3
2019-05-28 15:14:18 -Generating unique operation named: updateUsingPUT_2
2019-05-28 15:14:18 -Generating unique operation named: updateUsingPATCH_2
2019-05-28 15:14:18 -Generating unique operation named: updateUsingDELETE_2
2019-05-28 15:14:19 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-28 15:14:19 -Generating unique operation named: updateUsingTRACE_2
2019-05-28 15:14:19 -Generating unique operation named: addUsingGET_4
2019-05-28 15:14:19 -Generating unique operation named: editUsingGET_4
2019-05-28 15:14:19 -Generating unique operation named: listUsingGET_4
2019-05-28 15:14:19 -Generating unique operation named: removeUsingPOST_8
2019-05-28 15:14:19 -Generating unique operation named: removeUsingPOST_9
2019-05-28 15:14:19 -Generating unique operation named: saveUsingPOST_4
2019-05-28 15:14:19 -Generating unique operation named: updateUsingGET_3
2019-05-28 15:14:19 -Generating unique operation named: updateUsingHEAD_3
2019-05-28 15:14:19 -Generating unique operation named: updateUsingPOST_4
2019-05-28 15:14:19 -Generating unique operation named: updateUsingPUT_3
2019-05-28 15:14:19 -Generating unique operation named: updateUsingPATCH_3
2019-05-28 15:14:19 -Generating unique operation named: updateUsingDELETE_3
2019-05-28 15:14:19 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-28 15:14:19 -Generating unique operation named: updateUsingTRACE_3
2019-05-28 15:14:19 -Generating unique operation named: ElecUsingGET_1
2019-05-28 15:14:19 -Generating unique operation named: addUsingGET_5
2019-05-28 15:14:19 -Generating unique operation named: editUsingGET_5
2019-05-28 15:14:19 -Generating unique operation named: listUsingGET_5
2019-05-28 15:14:19 -Generating unique operation named: removeUsingPOST_10
2019-05-28 15:14:19 -Generating unique operation named: removeUsingPOST_11
2019-05-28 15:14:19 -Generating unique operation named: saveUsingPOST_5
2019-05-28 15:14:19 -Generating unique operation named: updateUsingGET_4
2019-05-28 15:14:19 -Generating unique operation named: updateUsingHEAD_4
2019-05-28 15:14:19 -Generating unique operation named: updateUsingPOST_5
2019-05-28 15:14:19 -Generating unique operation named: updateUsingPUT_4
2019-05-28 15:14:19 -Generating unique operation named: updateUsingPATCH_4
2019-05-28 15:14:19 -Generating unique operation named: updateUsingDELETE_4
2019-05-28 15:14:19 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-28 15:14:19 -Generating unique operation named: updateUsingTRACE_4
2019-05-28 15:14:19 -Generating unique operation named: editUsingGET_6
2019-05-28 15:14:19 -Generating unique operation named: listUsingGET_6
2019-05-28 15:14:19 -Generating unique operation named: updateUsingPOST_6
2019-05-28 15:14:19 -Generating unique operation named: addUsingGET_6
2019-05-28 15:14:19 -Generating unique operation named: editUsingGET_7
2019-05-28 15:14:19 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-28 15:14:19 -Generating unique operation named: listUsingGET_7
2019-05-28 15:14:19 -Generating unique operation named: removeUsingPOST_12
2019-05-28 15:14:19 -Generating unique operation named: removeUsingPOST_13
2019-05-28 15:14:19 -Generating unique operation named: saveUsingPOST_6
2019-05-28 15:14:19 -Generating unique operation named: updateUsingGET_5
2019-05-28 15:14:19 -Generating unique operation named: updateUsingHEAD_5
2019-05-28 15:14:19 -Generating unique operation named: updateUsingPOST_7
2019-05-28 15:14:19 -Generating unique operation named: updateUsingPUT_5
2019-05-28 15:14:19 -Generating unique operation named: updateUsingPATCH_5
2019-05-28 15:14:19 -Generating unique operation named: updateUsingDELETE_5
2019-05-28 15:14:19 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-28 15:14:19 -Generating unique operation named: updateUsingTRACE_5
2019-05-28 15:14:19 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-28 15:14:19 -Generating unique operation named: addUsingGET_7
2019-05-28 15:14:19 -Generating unique operation named: editUsingGET_8
2019-05-28 15:14:19 -Generating unique operation named: listUsingGET_8
2019-05-28 15:14:19 -Generating unique operation named: removeUsingPOST_14
2019-05-28 15:14:19 -Generating unique operation named: removeUsingPOST_15
2019-05-28 15:14:19 -Generating unique operation named: saveUsingPOST_7
2019-05-28 15:14:19 -Generating unique operation named: updateUsingGET_6
2019-05-28 15:14:19 -Generating unique operation named: updateUsingHEAD_6
2019-05-28 15:14:19 -Generating unique operation named: updateUsingPOST_8
2019-05-28 15:14:19 -Generating unique operation named: updateUsingPUT_6
2019-05-28 15:14:19 -Generating unique operation named: updateUsingPATCH_6
2019-05-28 15:14:19 -Generating unique operation named: updateUsingDELETE_6
2019-05-28 15:14:19 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-28 15:14:19 -Generating unique operation named: updateUsingTRACE_6
2019-05-28 15:14:19 -Generating unique operation named: addUsingGET_8
2019-05-28 15:14:19 -Generating unique operation named: editUsingGET_9
2019-05-28 15:14:19 -Generating unique operation named: listUsingGET_9
2019-05-28 15:14:19 -Generating unique operation named: removeUsingPOST_16
2019-05-28 15:14:19 -Generating unique operation named: removeUsingPOST_17
2019-05-28 15:14:19 -Generating unique operation named: saveUsingPOST_8
2019-05-28 15:14:19 -Generating unique operation named: updateUsingGET_7
2019-05-28 15:14:19 -Generating unique operation named: updateUsingHEAD_7
2019-05-28 15:14:19 -Generating unique operation named: updateUsingPOST_9
2019-05-28 15:14:19 -Generating unique operation named: updateUsingPUT_7
2019-05-28 15:14:19 -Generating unique operation named: updateUsingPATCH_7
2019-05-28 15:14:19 -Generating unique operation named: updateUsingDELETE_7
2019-05-28 15:14:19 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-28 15:14:19 -Generating unique operation named: updateUsingTRACE_7
2019-05-28 15:14:19 -Generating unique operation named: addUsingGET_9
2019-05-28 15:14:19 -Generating unique operation named: editUsingGET_10
2019-05-28 15:14:19 -Generating unique operation named: infoUsingGET_1
2019-05-28 15:14:19 -Generating unique operation named: infoUsingHEAD_1
2019-05-28 15:14:19 -Generating unique operation named: infoUsingPOST_1
2019-05-28 15:14:19 -Generating unique operation named: infoUsingPUT_1
2019-05-28 15:14:19 -Generating unique operation named: infoUsingPATCH_1
2019-05-28 15:14:19 -Generating unique operation named: infoUsingDELETE_1
2019-05-28 15:14:19 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-28 15:14:19 -Generating unique operation named: infoUsingTRACE_1
2019-05-28 15:14:19 -Generating unique operation named: listUsingGET_10
2019-05-28 15:14:19 -Generating unique operation named: removeUsingPOST_18
2019-05-28 15:14:19 -Generating unique operation named: removeUsingPOST_19
2019-05-28 15:14:19 -Generating unique operation named: saveUsingPOST_9
2019-05-28 15:14:19 -Generating unique operation named: updateUsingPOST_10
2019-05-28 15:14:19 -Generating unique operation named: listUsingGET_11
2019-05-28 15:14:20 -Generating unique operation named: removeUsingPOST_20
2019-05-28 15:14:20 -Generating unique operation named: welcomeUsingGET_1
2019-05-28 15:14:20 -Generating unique operation named: addUsingGET_10
2019-05-28 15:14:20 -Generating unique operation named: editUsingGET_11
2019-05-28 15:14:20 -Generating unique operation named: listUsingGET_12
2019-05-28 15:14:20 -Generating unique operation named: removeUsingPOST_21
2019-05-28 15:14:20 -Generating unique operation named: saveUsingPOST_10
2019-05-28 15:14:20 -Generating unique operation named: treeUsingGET_1
2019-05-28 15:14:20 -Generating unique operation named: treeUsingGET_2
2019-05-28 15:14:20 -Generating unique operation named: updateUsingPOST_11
2019-05-28 15:14:20 -Generating unique operation named: addUsingGET_11
2019-05-28 15:14:20 -Generating unique operation named: editUsingGET_12
2019-05-28 15:14:20 -Generating unique operation named: listUsingGET_13
2019-05-28 15:14:20 -Generating unique operation named: removeUsingPOST_22
2019-05-28 15:14:20 -Generating unique operation named: removeUsingPOST_23
2019-05-28 15:14:20 -Generating unique operation named: updateUsingPOST_12
2019-05-28 15:14:20 -Generating unique operation named: addUsingGET_12
2019-05-28 15:14:20 -Generating unique operation named: editUsingGET_13
2019-05-28 15:14:20 -Generating unique operation named: listUsingGET_14
2019-05-28 15:14:20 -Generating unique operation named: removeUsingPOST_24
2019-05-28 15:14:20 -Generating unique operation named: removeUsingPOST_25
2019-05-28 15:14:20 -Generating unique operation named: saveUsingPOST_11
2019-05-28 15:14:20 -Generating unique operation named: updateUsingGET_8
2019-05-28 15:14:20 -Generating unique operation named: updateUsingHEAD_8
2019-05-28 15:14:20 -Generating unique operation named: updateUsingPOST_13
2019-05-28 15:14:20 -Generating unique operation named: updateUsingPUT_8
2019-05-28 15:14:20 -Generating unique operation named: updateUsingPATCH_8
2019-05-28 15:14:20 -Generating unique operation named: updateUsingDELETE_8
2019-05-28 15:14:20 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-28 15:14:20 -Generating unique operation named: updateUsingTRACE_8
2019-05-28 15:14:20 -Generating unique operation named: addUsingGET_13
2019-05-28 15:14:20 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-28 15:14:20 -Generating unique operation named: editUsingGET_14
2019-05-28 15:14:20 -Generating unique operation named: listUsingGET_15
2019-05-28 15:14:20 -Generating unique operation named: printEditUsingGET_1
2019-05-28 15:14:20 -Generating unique operation named: removeUsingPOST_26
2019-05-28 15:14:20 -Generating unique operation named: saveUsingPOST_12
2019-05-28 15:14:20 -Generating unique operation named: updateUsingGET_9
2019-05-28 15:14:20 -Generating unique operation named: updateUsingHEAD_9
2019-05-28 15:14:20 -Generating unique operation named: updateUsingPOST_14
2019-05-28 15:14:20 -Generating unique operation named: updateUsingPUT_9
2019-05-28 15:14:20 -Generating unique operation named: updateUsingPATCH_9
2019-05-28 15:14:20 -Generating unique operation named: updateUsingDELETE_9
2019-05-28 15:14:20 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-28 15:14:20 -Generating unique operation named: updateUsingTRACE_9
2019-05-28 15:14:20 -Generating unique operation named: addUsingGET_14
2019-05-28 15:14:20 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-28 15:14:20 -Generating unique operation named: editUsingGET_15
2019-05-28 15:14:20 -Generating unique operation named: listUsingGET_16
2019-05-28 15:14:20 -Generating unique operation named: saveUsingPOST_13
2019-05-28 15:14:20 -Generating unique operation named: saveUsingPOST_14
2019-05-28 15:14:20 -Generating unique operation named: updateUsingPOST_15
2019-05-28 15:14:20 -Generating unique operation named: listUsingGET_17
2019-05-28 15:14:20 -Generating unique operation named: listUsingHEAD_1
2019-05-28 15:14:20 -Generating unique operation named: listUsingPOST_1
2019-05-28 15:14:20 -Generating unique operation named: listUsingPUT_1
2019-05-28 15:14:20 -Generating unique operation named: listUsingPATCH_1
2019-05-28 15:14:20 -Generating unique operation named: listUsingDELETE_1
2019-05-28 15:14:20 -Generating unique operation named: listUsingOPTIONS_1
2019-05-28 15:14:20 -Generating unique operation named: listUsingTRACE_1
2019-05-28 15:14:20 -Generating unique operation named: countDDUsingGET_1
2019-05-28 15:14:20 -Generating unique operation named: exportDDUsingGET_1
2019-05-28 15:14:20 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-28 15:14:20 -Generating unique operation named: addUsingGET_15
2019-05-28 15:14:20 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-28 15:14:20 -Generating unique operation named: editUsingGET_16
2019-05-28 15:14:20 -Generating unique operation named: listUsingGET_18
2019-05-28 15:14:20 -Generating unique operation named: removeUsingPOST_27
2019-05-28 15:14:20 -Generating unique operation named: saveUsingPOST_15
2019-05-28 15:14:20 -Generating unique operation named: treeUsingGET_3
2019-05-28 15:14:20 -Generating unique operation named: treeViewUsingGET_1
2019-05-28 15:14:20 -Generating unique operation named: updateUsingPOST_16
2019-05-28 15:14:21 -Generating unique operation named: addUsingGET_16
2019-05-28 15:14:21 -Generating unique operation named: editUsingGET_17
2019-05-28 15:14:21 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-28 15:14:21 -Generating unique operation named: listUsingGET_19
2019-05-28 15:14:21 -Generating unique operation named: removeUsingPOST_28
2019-05-28 15:14:21 -Generating unique operation named: removeUsingPOST_29
2019-05-28 15:14:21 -Generating unique operation named: saveUsingPOST_16
2019-05-28 15:14:21 -Generating unique operation named: updateUsingGET_10
2019-05-28 15:14:21 -Generating unique operation named: updateUsingHEAD_10
2019-05-28 15:14:21 -Generating unique operation named: updateUsingPOST_17
2019-05-28 15:14:21 -Generating unique operation named: updateUsingPUT_10
2019-05-28 15:14:21 -Generating unique operation named: updateUsingPATCH_10
2019-05-28 15:14:21 -Generating unique operation named: updateUsingDELETE_10
2019-05-28 15:14:21 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-28 15:14:21 -Generating unique operation named: updateUsingTRACE_10
2019-05-28 15:14:21 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-28 15:14:21 -Generating unique operation named: addUsingGET_17
2019-05-28 15:14:21 -Generating unique operation named: editUsingGET_18
2019-05-28 15:14:21 -Generating unique operation named: listUsingGET_20
2019-05-28 15:14:21 -Generating unique operation named: removeUsingPOST_30
2019-05-28 15:14:21 -Generating unique operation named: removeUsingPOST_31
2019-05-28 15:14:21 -Generating unique operation named: saveUsingPOST_17
2019-05-28 15:14:21 -Generating unique operation named: updateUsingGET_11
2019-05-28 15:14:21 -Generating unique operation named: updateUsingHEAD_11
2019-05-28 15:14:21 -Generating unique operation named: updateUsingPOST_18
2019-05-28 15:14:21 -Generating unique operation named: updateUsingPUT_11
2019-05-28 15:14:21 -Generating unique operation named: updateUsingPATCH_11
2019-05-28 15:14:21 -Generating unique operation named: updateUsingDELETE_11
2019-05-28 15:14:21 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-28 15:14:21 -Generating unique operation named: updateUsingTRACE_11
2019-05-28 15:14:21 -Generating unique operation named: addUsingGET_18
2019-05-28 15:14:21 -Generating unique operation named: editUsingGET_19
2019-05-28 15:14:21 -Generating unique operation named: listUsingGET_21
2019-05-28 15:14:21 -Generating unique operation named: removeUsingPOST_32
2019-05-28 15:14:21 -Generating unique operation named: removeUsingPOST_33
2019-05-28 15:14:21 -Generating unique operation named: saveUsingPOST_18
2019-05-28 15:14:21 -Generating unique operation named: updateUsingGET_12
2019-05-28 15:14:21 -Generating unique operation named: updateUsingHEAD_12
2019-05-28 15:14:21 -Generating unique operation named: updateUsingPOST_19
2019-05-28 15:14:21 -Generating unique operation named: updateUsingPUT_12
2019-05-28 15:14:21 -Generating unique operation named: updateUsingPATCH_12
2019-05-28 15:14:21 -Generating unique operation named: updateUsingDELETE_12
2019-05-28 15:14:21 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-28 15:14:21 -Generating unique operation named: updateUsingTRACE_12
2019-05-28 15:14:21 -Starting Quartz Scheduler now
2019-05-28 15:14:21 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-28 15:14:21 -Starting...
2019-05-28 15:14:21 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-28 15:14:21 -Started.
2019-05-28 15:14:21 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-28 15:14:25 -Using a shared selector for servlet write/read
2019-05-28 15:14:25 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-28 15:14:25 -Started BootdoApplication in 34.615 seconds (JVM running for 36.2)
2019-05-28 15:14:25 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-28 15:14:25 -==> Parameters: 
2019-05-28 15:14:25 -<==      Total: 1
2019-05-28 15:14:34 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-28 15:14:34 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-28 15:14:34 -FrameworkServlet 'dispatcherServlet': initialization completed in 81 ms
2019-05-28 15:14:34 -Enabling session validation scheduler...
2019-05-28 15:14:35 -请求地址 : http://localhost:8081/login;JSESSIONID=d943c636-9561-47b1-99af-756c91281693
2019-05-28 15:14:35 -HTTP METHOD : GET
2019-05-28 15:14:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 15:14:35 -参数 : [{}]
2019-05-28 15:14:35 -耗时 : 7
2019-05-28 15:14:35 -返回值 : login
2019-05-28 15:14:36 -请求地址 : http://localhost:8081/getVerify
2019-05-28 15:14:36 -HTTP METHOD : GET
2019-05-28 15:14:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-28 15:14:36 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f8acfd1, org.apache.shiro.web.servlet.ShiroHttpServletResponse@77bd681]
2019-05-28 15:14:41 -1616
2019-05-28 15:14:42 -耗时 : 5317
2019-05-28 15:14:42 -返回值 : null
2019-05-28 15:14:46 -请求地址 : http://localhost:8081/login
2019-05-28 15:14:46 -HTTP METHOD : POST
2019-05-28 15:14:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-28 15:14:46 -参数 : [admin, 111111, 1616, org.apache.shiro.web.servlet.ShiroHttpServletRequest@90075d]
2019-05-28 15:14:46 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-28 15:14:46 -==> Parameters: admin(String)
2019-05-28 15:14:46 -<==      Total: 1
2019-05-28 15:14:46 -耗时 : 327
2019-05-28 15:14:46 -返回值 : {msg=操作成功, code=0}
2019-05-28 15:14:46 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-28 15:14:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 15:14:46 -==> Parameters: 1(Long), admin(String), 登录(String), 327(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-28 15:14:46.684(Timestamp)
2019-05-28 15:14:46 -请求地址 : http://localhost:8081/index
2019-05-28 15:14:46 -HTTP METHOD : GET
2019-05-28 15:14:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 15:14:46 -参数 : [{}]
2019-05-28 15:14:47 -<==    Updates: 1
2019-05-28 15:14:47 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 15:14:47 -==> Parameters: 1(Long)
2019-05-28 15:14:47 -<==      Total: 50
2019-05-28 15:14:47 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 15:14:47 -==> Parameters: 138(Long)
2019-05-28 15:14:47 -<==      Total: 1
2019-05-28 15:14:47 -耗时 : 701
2019-05-28 15:14:47 -返回值 : index_v1
2019-05-28 15:14:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 15:14:47 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 701(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 15:14:47.803(Timestamp)
2019-05-28 15:14:47 -<==    Updates: 1
2019-05-28 15:14:48 -请求地址 : http://localhost:8081/main
2019-05-28 15:14:48 -HTTP METHOD : GET
2019-05-28 15:14:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 15:14:48 -参数 : []
2019-05-28 15:14:48 -耗时 : 0
2019-05-28 15:14:48 -返回值 : main
2019-05-28 15:14:48 -请求地址 : http://localhost:8081/main
2019-05-28 15:14:48 -HTTP METHOD : GET
2019-05-28 15:14:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 15:14:48 -参数 : []
2019-05-28 15:14:48 -耗时 : 0
2019-05-28 15:14:48 -返回值 : main
2019-05-28 15:14:48 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 15:14:48 -HTTP METHOD : GET
2019-05-28 15:14:48 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 15:14:48 -参数 : []
2019-05-28 15:14:48 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 15:14:48 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 15:14:49 -<==      Total: 0
2019-05-28 15:14:49 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 15:14:49 -==> Parameters: 1(Long), 0(String)
2019-05-28 15:14:49 -<==      Total: 1
2019-05-28 15:14:49 -耗时 : 532
2019-05-28 15:14:49 -返回值 : com.bootdo.common.utils.PageUtils@2c17932b
2019-05-28 15:15:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 15:15:03 -==> Parameters: 1(Long)
2019-05-28 15:15:03 -<==      Total: 94
2019-05-28 15:15:03 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-28 15:15:03 -HTTP METHOD : GET
2019-05-28 15:15:03 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-28 15:15:03 -参数 : []
2019-05-28 15:15:03 -耗时 : 1
2019-05-28 15:15:03 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-28 15:15:13 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 6]
2019-05-28 15:15:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 15:15:16 -HTTP METHOD : GET
2019-05-28 15:15:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 15:15:16 -参数 : []
2019-05-28 15:15:16 -耗时 : 0
2019-05-28 15:15:16 -返回值 : system/dept/deptTree
2019-05-28 15:15:16 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 15:15:16 -HTTP METHOD : GET
2019-05-28 15:15:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 15:15:16 -参数 : []
2019-05-28 15:15:16 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 15:15:16 -==> Parameters: 
2019-05-28 15:15:16 -<==      Total: 3
2019-05-28 15:15:16 -耗时 : 91
2019-05-28 15:15:16 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 15:15:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 15:15:20 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 15:15:20.168(Timestamp)
2019-05-28 15:15:20 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 15:15:20 -<==    Updates: 1
2019-05-28 15:45:13 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 439]
2019-05-28 16:14:34 -Validating all active sessions...
2019-05-28 16:14:35 -Finished session validation.  [1] sessions were stopped.
2019-05-28 16:15:13 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 872]
2019-05-28 16:39:21 -Starting BootdoApplication on PC-201905091110 with PID 20876 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-28 16:39:21 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-28 16:39:21 -The following profiles are active: dev
2019-05-28 16:39:22 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1bb564e2: startup date [Tue May 28 16:39:22 CST 2019]; root of context hierarchy
2019-05-28 16:39:29 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-28 16:39:31 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c9b23bb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:39:31 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$bc0b6a5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:39:33 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:39:34 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:39:34 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:39:34 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-28 16:39:34 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-28 16:39:34 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:39:34 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:39:34 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:39:34 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:39:35 -Tomcat initialized with port(s): 8081 (http)
2019-05-28 16:39:35 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-28 16:39:35 -Starting service [Tomcat]
2019-05-28 16:39:35 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-28 16:39:35 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-28 16:39:36 -Initializing Spring embedded WebApplicationContext
2019-05-28 16:39:36 -Root WebApplicationContext: initialization completed in 14074 ms
2019-05-28 16:39:37 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-28 16:39:37 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-28 16:39:37 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-28 16:39:37 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-28 16:39:37 -Filter xssFilter was not registered (disabled)
2019-05-28 16:39:37 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-28 16:39:37 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-28 16:39:37 -Servlet statViewServlet mapped to [/druid/*]
2019-05-28 16:39:37 -Servlet dispatcherServlet mapped to [/]
2019-05-28 16:39:41 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1bb564e2: startup date [Tue May 28 16:39:22 CST 2019]; root of context hierarchy
2019-05-28 16:39:41 -Using default implementation for ThreadExecutor
2019-05-28 16:39:42 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-28 16:39:42 -Quartz Scheduler v.2.2.1 created.
2019-05-28 16:39:42 -RAMJobStore initialized.
2019-05-28 16:39:42 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-28 16:39:42 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-28 16:39:42 -Quartz scheduler version: 2.2.1
2019-05-28 16:39:42 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3cfab340
2019-05-28 16:39:43 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-28 16:39:43 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-28 16:39:46 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 16:39:46 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-28 16:39:46 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-28 16:39:46 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 16:39:46 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-28 16:39:46 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-28 16:39:46 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 16:39:46 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-28 16:39:46 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-28 16:39:46 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 16:39:46 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 16:39:46 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-28 16:39:46 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 16:39:46 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-28 16:39:46 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 16:39:46 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-28 16:39:46 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 16:39:46 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-28 16:39:46 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 16:39:46 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-28 16:39:46 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 16:39:46 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-28 16:39:46 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-28 16:39:46 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 16:39:46 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-28 16:39:46 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-28 16:39:46 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-28 16:39:46 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-28 16:39:46 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-28 16:39:46 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-28 16:39:46 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-28 16:39:46 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-28 16:39:46 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-28 16:39:46 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-28 16:39:46 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-28 16:39:46 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-28 16:39:46 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-28 16:39:46 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 16:39:46 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-28 16:39:46 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 16:39:46 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-28 16:39:46 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-28 16:39:46 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-28 16:39:46 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-28 16:39:46 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-28 16:39:46 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-28 16:39:46 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-28 16:39:46 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-28 16:39:46 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-28 16:39:46 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 16:39:46 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 16:39:46 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-28 16:39:46 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-28 16:39:46 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 16:39:46 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-28 16:39:46 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-28 16:39:46 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-28 16:39:46 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-28 16:39:46 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-28 16:39:46 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-28 16:39:46 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 16:39:46 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 16:39:46 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-28 16:39:46 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-28 16:39:46 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-28 16:39:46 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-28 16:39:46 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-28 16:39:46 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-28 16:39:46 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 16:39:46 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-28 16:39:46 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-28 16:39:46 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 16:39:46 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 16:39:46 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-28 16:39:46 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-28 16:39:46 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 16:39:46 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-28 16:39:46 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 16:39:46 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 16:39:46 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-28 16:39:46 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 16:39:46 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-28 16:39:46 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 16:39:46 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 16:39:46 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-28 16:39:46 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-28 16:39:46 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 16:39:46 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 16:39:46 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-28 16:39:46 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 16:39:46 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-28 16:39:46 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 16:39:46 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 16:39:46 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-28 16:39:46 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 16:39:46 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-28 16:39:46 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 16:39:46 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 16:39:46 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-28 16:39:46 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 16:39:46 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-28 16:39:46 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-28 16:39:46 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-28 16:39:46 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-28 16:39:46 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-28 16:39:46 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-28 16:39:46 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-28 16:39:46 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-28 16:39:46 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-28 16:39:46 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-28 16:39:46 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-28 16:39:46 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-28 16:39:46 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-28 16:39:46 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-28 16:39:46 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-28 16:39:46 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-28 16:39:46 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-28 16:39:46 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-28 16:39:46 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 16:39:46 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-28 16:39:46 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-28 16:39:46 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-28 16:39:46 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-28 16:39:46 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-28 16:39:46 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-28 16:39:46 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-28 16:39:46 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-28 16:39:46 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-28 16:39:46 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-28 16:39:46 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-28 16:39:46 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-28 16:39:46 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-28 16:39:46 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-28 16:39:46 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-28 16:39:46 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-28 16:39:46 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-28 16:39:46 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-28 16:39:46 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 16:39:46 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 16:39:46 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 16:39:46 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-28 16:39:46 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-28 16:39:46 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-28 16:39:46 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-28 16:39:46 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-28 16:39:46 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 16:39:46 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-28 16:39:46 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-28 16:39:46 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-28 16:39:46 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-28 16:39:46 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 16:39:46 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:39:46 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 16:39:46 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-28 16:39:46 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:39:46 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 16:39:46 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:39:46 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-28 16:39:46 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-28 16:39:46 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 16:39:46 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-28 16:39:46 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-28 16:39:46 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-28 16:39:47 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-28 16:39:47 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-28 16:39:47 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-28 16:39:48 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 16:39:48 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1bb564e2: startup date [Tue May 28 16:39:22 CST 2019]; root of context hierarchy
2019-05-28 16:39:48 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 16:39:48 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 16:39:48 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 16:39:48 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-28 16:39:49 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-28 16:39:51 -Registering beans for JMX exposure on startup
2019-05-28 16:39:51 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-28 16:39:51 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-28 16:39:51 -Starting beans in phase 2147483647
2019-05-28 16:39:51 -Context refreshed
2019-05-28 16:39:51 -Found 1 custom documentation plugin(s)
2019-05-28 16:39:51 -Scanning for api listing references
2019-05-28 16:39:52 -Generating unique operation named: getCountDUsingPOST_1
2019-05-28 16:39:52 -Generating unique operation named: removeUsingPOST_1
2019-05-28 16:39:52 -Generating unique operation named: addUsingGET_1
2019-05-28 16:39:52 -Generating unique operation named: editUsingGET_1
2019-05-28 16:39:52 -Generating unique operation named: listUsingGET_1
2019-05-28 16:39:52 -Generating unique operation named: removeUsingPOST_2
2019-05-28 16:39:52 -Generating unique operation named: removeUsingPOST_3
2019-05-28 16:39:52 -Generating unique operation named: saveUsingPOST_1
2019-05-28 16:39:52 -Generating unique operation named: updateUsingGET_1
2019-05-28 16:39:52 -Generating unique operation named: updateUsingHEAD_1
2019-05-28 16:39:52 -Generating unique operation named: updateUsingPOST_1
2019-05-28 16:39:52 -Generating unique operation named: updateUsingPUT_1
2019-05-28 16:39:52 -Generating unique operation named: updateUsingPATCH_1
2019-05-28 16:39:52 -Generating unique operation named: updateUsingDELETE_1
2019-05-28 16:39:52 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-28 16:39:52 -Generating unique operation named: updateUsingTRACE_1
2019-05-28 16:39:52 -Generating unique operation named: addUsingGET_2
2019-05-28 16:39:52 -Generating unique operation named: editUsingGET_2
2019-05-28 16:39:52 -Generating unique operation named: listUsingGET_2
2019-05-28 16:39:52 -Generating unique operation named: removeUsingPOST_4
2019-05-28 16:39:52 -Generating unique operation named: removeUsingPOST_5
2019-05-28 16:39:52 -Generating unique operation named: saveUsingPOST_2
2019-05-28 16:39:52 -Generating unique operation named: updateUsingPOST_2
2019-05-28 16:39:52 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-28 16:39:52 -Generating unique operation named: addUsingGET_3
2019-05-28 16:39:52 -Generating unique operation named: editUsingGET_3
2019-05-28 16:39:52 -Generating unique operation named: listUsingGET_3
2019-05-28 16:39:52 -Generating unique operation named: removeUsingPOST_6
2019-05-28 16:39:52 -Generating unique operation named: removeUsingPOST_7
2019-05-28 16:39:52 -Generating unique operation named: saveUsingPOST_3
2019-05-28 16:39:52 -Generating unique operation named: updateUsingGET_2
2019-05-28 16:39:52 -Generating unique operation named: updateUsingHEAD_2
2019-05-28 16:39:52 -Generating unique operation named: updateUsingPOST_3
2019-05-28 16:39:52 -Generating unique operation named: updateUsingPUT_2
2019-05-28 16:39:52 -Generating unique operation named: updateUsingPATCH_2
2019-05-28 16:39:52 -Generating unique operation named: updateUsingDELETE_2
2019-05-28 16:39:52 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-28 16:39:52 -Generating unique operation named: updateUsingTRACE_2
2019-05-28 16:39:52 -Generating unique operation named: addUsingGET_4
2019-05-28 16:39:52 -Generating unique operation named: editUsingGET_4
2019-05-28 16:39:52 -Generating unique operation named: listUsingGET_4
2019-05-28 16:39:52 -Generating unique operation named: removeUsingPOST_8
2019-05-28 16:39:52 -Generating unique operation named: removeUsingPOST_9
2019-05-28 16:39:52 -Generating unique operation named: saveUsingPOST_4
2019-05-28 16:39:52 -Generating unique operation named: updateUsingGET_3
2019-05-28 16:39:52 -Generating unique operation named: updateUsingHEAD_3
2019-05-28 16:39:52 -Generating unique operation named: updateUsingPOST_4
2019-05-28 16:39:52 -Generating unique operation named: updateUsingPUT_3
2019-05-28 16:39:52 -Generating unique operation named: updateUsingPATCH_3
2019-05-28 16:39:52 -Generating unique operation named: updateUsingDELETE_3
2019-05-28 16:39:53 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-28 16:39:53 -Generating unique operation named: updateUsingTRACE_3
2019-05-28 16:39:53 -Generating unique operation named: ElecUsingGET_1
2019-05-28 16:39:53 -Generating unique operation named: addUsingGET_5
2019-05-28 16:39:53 -Generating unique operation named: editUsingGET_5
2019-05-28 16:39:53 -Generating unique operation named: listUsingGET_5
2019-05-28 16:39:53 -Generating unique operation named: removeUsingPOST_10
2019-05-28 16:39:53 -Generating unique operation named: removeUsingPOST_11
2019-05-28 16:39:53 -Generating unique operation named: saveUsingPOST_5
2019-05-28 16:39:53 -Generating unique operation named: updateUsingGET_4
2019-05-28 16:39:53 -Generating unique operation named: updateUsingHEAD_4
2019-05-28 16:39:53 -Generating unique operation named: updateUsingPOST_5
2019-05-28 16:39:53 -Generating unique operation named: updateUsingPUT_4
2019-05-28 16:39:53 -Generating unique operation named: updateUsingPATCH_4
2019-05-28 16:39:53 -Generating unique operation named: updateUsingDELETE_4
2019-05-28 16:39:53 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-28 16:39:53 -Generating unique operation named: updateUsingTRACE_4
2019-05-28 16:39:53 -Generating unique operation named: editUsingGET_6
2019-05-28 16:39:53 -Generating unique operation named: listUsingGET_6
2019-05-28 16:39:53 -Generating unique operation named: updateUsingPOST_6
2019-05-28 16:39:53 -Generating unique operation named: addUsingGET_6
2019-05-28 16:39:53 -Generating unique operation named: editUsingGET_7
2019-05-28 16:39:53 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-28 16:39:53 -Generating unique operation named: listUsingGET_7
2019-05-28 16:39:53 -Generating unique operation named: removeUsingPOST_12
2019-05-28 16:39:53 -Generating unique operation named: removeUsingPOST_13
2019-05-28 16:39:53 -Generating unique operation named: saveUsingPOST_6
2019-05-28 16:39:53 -Generating unique operation named: updateUsingGET_5
2019-05-28 16:39:53 -Generating unique operation named: updateUsingHEAD_5
2019-05-28 16:39:53 -Generating unique operation named: updateUsingPOST_7
2019-05-28 16:39:53 -Generating unique operation named: updateUsingPUT_5
2019-05-28 16:39:53 -Generating unique operation named: updateUsingPATCH_5
2019-05-28 16:39:53 -Generating unique operation named: updateUsingDELETE_5
2019-05-28 16:39:53 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-28 16:39:53 -Generating unique operation named: updateUsingTRACE_5
2019-05-28 16:39:53 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-28 16:39:53 -Generating unique operation named: addUsingGET_7
2019-05-28 16:39:53 -Generating unique operation named: editUsingGET_8
2019-05-28 16:39:53 -Generating unique operation named: listUsingGET_8
2019-05-28 16:39:53 -Generating unique operation named: removeUsingPOST_14
2019-05-28 16:39:53 -Generating unique operation named: removeUsingPOST_15
2019-05-28 16:39:53 -Generating unique operation named: saveUsingPOST_7
2019-05-28 16:39:53 -Generating unique operation named: updateUsingGET_6
2019-05-28 16:39:53 -Generating unique operation named: updateUsingHEAD_6
2019-05-28 16:39:53 -Generating unique operation named: updateUsingPOST_8
2019-05-28 16:39:53 -Generating unique operation named: updateUsingPUT_6
2019-05-28 16:39:53 -Generating unique operation named: updateUsingPATCH_6
2019-05-28 16:39:53 -Generating unique operation named: updateUsingDELETE_6
2019-05-28 16:39:53 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-28 16:39:53 -Generating unique operation named: updateUsingTRACE_6
2019-05-28 16:39:53 -Generating unique operation named: addUsingGET_8
2019-05-28 16:39:53 -Generating unique operation named: editUsingGET_9
2019-05-28 16:39:53 -Generating unique operation named: listUsingGET_9
2019-05-28 16:39:53 -Generating unique operation named: removeUsingPOST_16
2019-05-28 16:39:53 -Generating unique operation named: removeUsingPOST_17
2019-05-28 16:39:53 -Generating unique operation named: saveUsingPOST_8
2019-05-28 16:39:53 -Generating unique operation named: updateUsingGET_7
2019-05-28 16:39:53 -Generating unique operation named: updateUsingHEAD_7
2019-05-28 16:39:53 -Generating unique operation named: updateUsingPOST_9
2019-05-28 16:39:53 -Generating unique operation named: updateUsingPUT_7
2019-05-28 16:39:53 -Generating unique operation named: updateUsingPATCH_7
2019-05-28 16:39:53 -Generating unique operation named: updateUsingDELETE_7
2019-05-28 16:39:53 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-28 16:39:53 -Generating unique operation named: updateUsingTRACE_7
2019-05-28 16:39:53 -Generating unique operation named: addUsingGET_9
2019-05-28 16:39:53 -Generating unique operation named: editUsingGET_10
2019-05-28 16:39:53 -Generating unique operation named: infoUsingGET_1
2019-05-28 16:39:53 -Generating unique operation named: infoUsingHEAD_1
2019-05-28 16:39:53 -Generating unique operation named: infoUsingPOST_1
2019-05-28 16:39:53 -Generating unique operation named: infoUsingPUT_1
2019-05-28 16:39:53 -Generating unique operation named: infoUsingPATCH_1
2019-05-28 16:39:53 -Generating unique operation named: infoUsingDELETE_1
2019-05-28 16:39:53 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-28 16:39:53 -Generating unique operation named: infoUsingTRACE_1
2019-05-28 16:39:53 -Generating unique operation named: listUsingGET_10
2019-05-28 16:39:53 -Generating unique operation named: removeUsingPOST_18
2019-05-28 16:39:53 -Generating unique operation named: removeUsingPOST_19
2019-05-28 16:39:53 -Generating unique operation named: saveUsingPOST_9
2019-05-28 16:39:53 -Generating unique operation named: updateUsingPOST_10
2019-05-28 16:39:53 -Generating unique operation named: listUsingGET_11
2019-05-28 16:39:53 -Generating unique operation named: removeUsingPOST_20
2019-05-28 16:39:53 -Generating unique operation named: welcomeUsingGET_1
2019-05-28 16:39:53 -Generating unique operation named: addUsingGET_10
2019-05-28 16:39:53 -Generating unique operation named: editUsingGET_11
2019-05-28 16:39:53 -Generating unique operation named: listUsingGET_12
2019-05-28 16:39:54 -Generating unique operation named: removeUsingPOST_21
2019-05-28 16:39:54 -Generating unique operation named: saveUsingPOST_10
2019-05-28 16:39:54 -Generating unique operation named: treeUsingGET_1
2019-05-28 16:39:54 -Generating unique operation named: treeUsingGET_2
2019-05-28 16:39:54 -Generating unique operation named: updateUsingPOST_11
2019-05-28 16:39:54 -Generating unique operation named: addUsingGET_11
2019-05-28 16:39:54 -Generating unique operation named: editUsingGET_12
2019-05-28 16:39:54 -Generating unique operation named: listUsingGET_13
2019-05-28 16:39:54 -Generating unique operation named: removeUsingPOST_22
2019-05-28 16:39:54 -Generating unique operation named: removeUsingPOST_23
2019-05-28 16:39:54 -Generating unique operation named: updateUsingPOST_12
2019-05-28 16:39:54 -Generating unique operation named: addUsingGET_12
2019-05-28 16:39:54 -Generating unique operation named: editUsingGET_13
2019-05-28 16:39:54 -Generating unique operation named: listUsingGET_14
2019-05-28 16:39:54 -Generating unique operation named: removeUsingPOST_24
2019-05-28 16:39:54 -Generating unique operation named: removeUsingPOST_25
2019-05-28 16:39:54 -Generating unique operation named: saveUsingPOST_11
2019-05-28 16:39:54 -Generating unique operation named: updateUsingGET_8
2019-05-28 16:39:54 -Generating unique operation named: updateUsingHEAD_8
2019-05-28 16:39:54 -Generating unique operation named: updateUsingPOST_13
2019-05-28 16:39:54 -Generating unique operation named: updateUsingPUT_8
2019-05-28 16:39:54 -Generating unique operation named: updateUsingPATCH_8
2019-05-28 16:39:54 -Generating unique operation named: updateUsingDELETE_8
2019-05-28 16:39:54 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-28 16:39:54 -Generating unique operation named: updateUsingTRACE_8
2019-05-28 16:39:54 -Generating unique operation named: addUsingGET_13
2019-05-28 16:39:54 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-28 16:39:54 -Generating unique operation named: editUsingGET_14
2019-05-28 16:39:54 -Generating unique operation named: listUsingGET_15
2019-05-28 16:39:54 -Generating unique operation named: printEditUsingGET_1
2019-05-28 16:39:54 -Generating unique operation named: removeUsingPOST_26
2019-05-28 16:39:54 -Generating unique operation named: saveUsingPOST_12
2019-05-28 16:39:54 -Generating unique operation named: updateUsingGET_9
2019-05-28 16:39:54 -Generating unique operation named: updateUsingHEAD_9
2019-05-28 16:39:54 -Generating unique operation named: updateUsingPOST_14
2019-05-28 16:39:54 -Generating unique operation named: updateUsingPUT_9
2019-05-28 16:39:54 -Generating unique operation named: updateUsingPATCH_9
2019-05-28 16:39:54 -Generating unique operation named: updateUsingDELETE_9
2019-05-28 16:39:54 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-28 16:39:54 -Generating unique operation named: updateUsingTRACE_9
2019-05-28 16:39:54 -Generating unique operation named: addUsingGET_14
2019-05-28 16:39:54 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-28 16:39:54 -Generating unique operation named: editUsingGET_15
2019-05-28 16:39:54 -Generating unique operation named: listUsingGET_16
2019-05-28 16:39:54 -Generating unique operation named: saveUsingPOST_13
2019-05-28 16:39:54 -Generating unique operation named: saveUsingPOST_14
2019-05-28 16:39:54 -Generating unique operation named: updateUsingPOST_15
2019-05-28 16:39:54 -Generating unique operation named: listUsingGET_17
2019-05-28 16:39:54 -Generating unique operation named: listUsingHEAD_1
2019-05-28 16:39:54 -Generating unique operation named: listUsingPOST_1
2019-05-28 16:39:54 -Generating unique operation named: listUsingPUT_1
2019-05-28 16:39:54 -Generating unique operation named: listUsingPATCH_1
2019-05-28 16:39:55 -Generating unique operation named: listUsingDELETE_1
2019-05-28 16:39:55 -Generating unique operation named: listUsingOPTIONS_1
2019-05-28 16:39:55 -Generating unique operation named: listUsingTRACE_1
2019-05-28 16:39:55 -Generating unique operation named: countDDUsingGET_1
2019-05-28 16:39:55 -Generating unique operation named: exportDDUsingGET_1
2019-05-28 16:39:55 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-28 16:39:55 -Generating unique operation named: addUsingGET_15
2019-05-28 16:39:55 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-28 16:39:55 -Generating unique operation named: editUsingGET_16
2019-05-28 16:39:55 -Generating unique operation named: listUsingGET_18
2019-05-28 16:39:55 -Generating unique operation named: removeUsingPOST_27
2019-05-28 16:39:55 -Generating unique operation named: saveUsingPOST_15
2019-05-28 16:39:55 -Generating unique operation named: treeUsingGET_3
2019-05-28 16:39:55 -Generating unique operation named: treeViewUsingGET_1
2019-05-28 16:39:55 -Generating unique operation named: updateUsingPOST_16
2019-05-28 16:39:55 -Generating unique operation named: addUsingGET_16
2019-05-28 16:39:55 -Generating unique operation named: editUsingGET_17
2019-05-28 16:39:55 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-28 16:39:55 -Generating unique operation named: listUsingGET_19
2019-05-28 16:39:55 -Generating unique operation named: removeUsingPOST_28
2019-05-28 16:39:55 -Generating unique operation named: removeUsingPOST_29
2019-05-28 16:39:55 -Generating unique operation named: saveUsingPOST_16
2019-05-28 16:39:55 -Generating unique operation named: updateUsingGET_10
2019-05-28 16:39:55 -Generating unique operation named: updateUsingHEAD_10
2019-05-28 16:39:55 -Generating unique operation named: updateUsingPOST_17
2019-05-28 16:39:55 -Generating unique operation named: updateUsingPUT_10
2019-05-28 16:39:55 -Generating unique operation named: updateUsingPATCH_10
2019-05-28 16:39:55 -Generating unique operation named: updateUsingDELETE_10
2019-05-28 16:39:55 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-28 16:39:55 -Generating unique operation named: updateUsingTRACE_10
2019-05-28 16:39:55 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-28 16:39:55 -Generating unique operation named: addUsingGET_17
2019-05-28 16:39:55 -Generating unique operation named: editUsingGET_18
2019-05-28 16:39:55 -Generating unique operation named: listUsingGET_20
2019-05-28 16:39:55 -Generating unique operation named: removeUsingPOST_30
2019-05-28 16:39:55 -Generating unique operation named: removeUsingPOST_31
2019-05-28 16:39:55 -Generating unique operation named: saveUsingPOST_17
2019-05-28 16:39:55 -Generating unique operation named: updateUsingGET_11
2019-05-28 16:39:55 -Generating unique operation named: updateUsingHEAD_11
2019-05-28 16:39:55 -Generating unique operation named: updateUsingPOST_18
2019-05-28 16:39:55 -Generating unique operation named: updateUsingPUT_11
2019-05-28 16:39:55 -Generating unique operation named: updateUsingPATCH_11
2019-05-28 16:39:55 -Generating unique operation named: updateUsingDELETE_11
2019-05-28 16:39:55 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-28 16:39:55 -Generating unique operation named: updateUsingTRACE_11
2019-05-28 16:39:55 -Generating unique operation named: addUsingGET_18
2019-05-28 16:39:55 -Generating unique operation named: editUsingGET_19
2019-05-28 16:39:55 -Generating unique operation named: listUsingGET_21
2019-05-28 16:39:55 -Generating unique operation named: removeUsingPOST_32
2019-05-28 16:39:55 -Generating unique operation named: removeUsingPOST_33
2019-05-28 16:39:55 -Generating unique operation named: saveUsingPOST_18
2019-05-28 16:39:55 -Generating unique operation named: updateUsingGET_12
2019-05-28 16:39:55 -Generating unique operation named: updateUsingHEAD_12
2019-05-28 16:39:55 -Generating unique operation named: updateUsingPOST_19
2019-05-28 16:39:55 -Generating unique operation named: updateUsingPUT_12
2019-05-28 16:39:55 -Generating unique operation named: updateUsingPATCH_12
2019-05-28 16:39:55 -Generating unique operation named: updateUsingDELETE_12
2019-05-28 16:39:55 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-28 16:39:55 -Generating unique operation named: updateUsingTRACE_12
2019-05-28 16:39:55 -Starting Quartz Scheduler now
2019-05-28 16:39:55 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-28 16:39:55 -Starting...
2019-05-28 16:39:55 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-28 16:39:55 -Started.
2019-05-28 16:39:55 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-28 16:39:55 -Using a shared selector for servlet write/read
2019-05-28 16:39:55 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-28 16:39:55 -Started BootdoApplication in 35.831 seconds (JVM running for 37.36)
2019-05-28 16:39:56 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-28 16:39:56 -==> Parameters: 
2019-05-28 16:39:56 -<==      Total: 1
2019-05-28 16:40:47 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-28 16:44:24 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-28 16:44:24 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-28 16:44:24 -FrameworkServlet 'dispatcherServlet': initialization completed in 58 ms
2019-05-28 16:44:24 -Enabling session validation scheduler...
2019-05-28 16:44:24 -请求地址 : http://localhost:8081/login;JSESSIONID=007fa555-288b-4920-8edb-bd2da5b2a316
2019-05-28 16:44:24 -HTTP METHOD : GET
2019-05-28 16:44:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 16:44:24 -参数 : [{}]
2019-05-28 16:44:24 -耗时 : 5
2019-05-28 16:44:24 -返回值 : login
2019-05-28 16:44:27 -请求地址 : http://localhost:8081/getVerify
2019-05-28 16:44:27 -HTTP METHOD : GET
2019-05-28 16:44:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-28 16:44:27 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7e24550d, org.apache.shiro.web.servlet.ShiroHttpServletResponse@7a1bde11]
2019-05-28 16:44:34 -2913
2019-05-28 16:44:35 -耗时 : 7803
2019-05-28 16:44:35 -返回值 : null
2019-05-28 16:44:35 -请求地址 : http://localhost:8081/login
2019-05-28 16:44:35 -HTTP METHOD : GET
2019-05-28 16:44:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 16:44:35 -参数 : [{}]
2019-05-28 16:44:35 -耗时 : 0
2019-05-28 16:44:35 -返回值 : login
2019-05-28 16:44:40 -请求地址 : http://localhost:8081/login
2019-05-28 16:44:40 -HTTP METHOD : POST
2019-05-28 16:44:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-28 16:44:40 -参数 : [admin, 111111, 2913, org.apache.shiro.web.servlet.ShiroHttpServletRequest@64a2cfc6]
2019-05-28 16:44:40 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-28 16:44:40 -==> Parameters: admin(String)
2019-05-28 16:44:40 -<==      Total: 1
2019-05-28 16:44:40 -耗时 : 354
2019-05-28 16:44:40 -返回值 : {msg=操作成功, code=0}
2019-05-28 16:44:41 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-28 16:44:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 16:44:41 -==> Parameters: 1(Long), admin(String), 登录(String), 355(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-28 16:44:41.179(Timestamp)
2019-05-28 16:44:41 -请求地址 : http://localhost:8081/index
2019-05-28 16:44:41 -HTTP METHOD : GET
2019-05-28 16:44:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 16:44:41 -参数 : [{}]
2019-05-28 16:44:41 -<==    Updates: 1
2019-05-28 16:44:41 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 16:44:41 -==> Parameters: 1(Long)
2019-05-28 16:44:42 -<==      Total: 50
2019-05-28 16:44:42 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 16:44:42 -==> Parameters: 138(Long)
2019-05-28 16:44:42 -<==      Total: 1
2019-05-28 16:44:42 -耗时 : 767
2019-05-28 16:44:42 -返回值 : index_v1
2019-05-28 16:44:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 16:44:42 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 768(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 16:44:42.287(Timestamp)
2019-05-28 16:44:42 -请求地址 : http://localhost:8081/main
2019-05-28 16:44:42 -HTTP METHOD : GET
2019-05-28 16:44:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 16:44:42 -参数 : []
2019-05-28 16:44:42 -耗时 : 0
2019-05-28 16:44:42 -返回值 : main
2019-05-28 16:44:43 -<==    Updates: 1
2019-05-28 16:44:43 -请求地址 : http://localhost:8081/main
2019-05-28 16:44:43 -HTTP METHOD : GET
2019-05-28 16:44:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 16:44:43 -参数 : []
2019-05-28 16:44:43 -耗时 : 0
2019-05-28 16:44:43 -返回值 : main
2019-05-28 16:44:43 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 16:44:43 -HTTP METHOD : GET
2019-05-28 16:44:43 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 16:44:43 -参数 : []
2019-05-28 16:44:43 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 16:44:43 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 16:44:43 -<==      Total: 0
2019-05-28 16:44:43 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 16:44:43 -==> Parameters: 1(Long), 0(String)
2019-05-28 16:44:43 -<==      Total: 1
2019-05-28 16:44:43 -耗时 : 64
2019-05-28 16:44:43 -返回值 : com.bootdo.common.utils.PageUtils@2de6a399
2019-05-28 16:44:55 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 16:44:55 -==> Parameters: 1(Long)
2019-05-28 16:44:55 -<==      Total: 94
2019-05-28 16:44:55 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-28 16:44:55 -HTTP METHOD : GET
2019-05-28 16:44:55 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-28 16:44:55 -参数 : []
2019-05-28 16:44:55 -耗时 : 1
2019-05-28 16:44:55 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-28 16:45:09 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 16:45:09 -HTTP METHOD : GET
2019-05-28 16:45:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 16:45:09 -参数 : []
2019-05-28 16:45:09 -耗时 : 0
2019-05-28 16:45:09 -返回值 : system/dept/deptTree
2019-05-28 16:45:09 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 16:45:09 -HTTP METHOD : GET
2019-05-28 16:45:09 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 16:45:09 -参数 : []
2019-05-28 16:45:09 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 16:45:09 -==> Parameters: 
2019-05-28 16:45:09 -<==      Total: 3
2019-05-28 16:45:09 -耗时 : 67
2019-05-28 16:45:09 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 16:45:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 16:45:11 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 16:45:11.633(Timestamp)
2019-05-28 16:45:11 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 16:45:11 -<==    Updates: 1
2019-05-28 16:45:52 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 16:45:52 -HTTP METHOD : GET
2019-05-28 16:45:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 16:45:52 -参数 : []
2019-05-28 16:45:52 -耗时 : 0
2019-05-28 16:45:52 -返回值 : system/dept/deptTree
2019-05-28 16:45:52 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 16:45:52 -HTTP METHOD : GET
2019-05-28 16:45:52 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 16:45:52 -参数 : []
2019-05-28 16:45:52 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 16:45:52 -==> Parameters: 
2019-05-28 16:45:52 -<==      Total: 3
2019-05-28 16:45:52 -耗时 : 5
2019-05-28 16:45:52 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 16:45:59 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 16:45:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 16:45:59 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 16:45:59.408(Timestamp)
2019-05-28 16:45:59 -<==    Updates: 1
2019-05-28 16:49:03 -请求地址 : http://localhost:8081/index
2019-05-28 16:49:03 -HTTP METHOD : GET
2019-05-28 16:49:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 16:49:03 -参数 : [{}]
2019-05-28 16:49:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 16:49:03 -==> Parameters: 1(Long)
2019-05-28 16:49:03 -<==      Total: 50
2019-05-28 16:49:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 16:49:03 -==> Parameters: 138(Long)
2019-05-28 16:49:03 -<==      Total: 1
2019-05-28 16:49:03 -耗时 : 162
2019-05-28 16:49:03 -返回值 : index_v1
2019-05-28 16:49:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 16:49:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 162(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 16:49:03.524(Timestamp)
2019-05-28 16:49:03 -请求地址 : http://localhost:8081/main
2019-05-28 16:49:03 -HTTP METHOD : GET
2019-05-28 16:49:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 16:49:03 -参数 : []
2019-05-28 16:49:03 -耗时 : 0
2019-05-28 16:49:03 -返回值 : main
2019-05-28 16:49:03 -<==    Updates: 1
2019-05-28 16:49:04 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 16:49:04 -HTTP METHOD : GET
2019-05-28 16:49:04 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 16:49:04 -参数 : []
2019-05-28 16:49:04 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 16:49:04 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 16:49:04 -<==      Total: 0
2019-05-28 16:49:04 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 16:49:04 -==> Parameters: 1(Long), 0(String)
2019-05-28 16:49:04 -<==      Total: 1
2019-05-28 16:49:04 -耗时 : 8
2019-05-28 16:49:04 -返回值 : com.bootdo.common.utils.PageUtils@8de8d8b
2019-05-28 16:49:04 -请求地址 : http://localhost:8081/main
2019-05-28 16:49:04 -HTTP METHOD : GET
2019-05-28 16:49:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 16:49:04 -参数 : []
2019-05-28 16:49:04 -耗时 : 0
2019-05-28 16:49:04 -返回值 : main
2019-05-28 16:49:10 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-28 16:49:10 -HTTP METHOD : GET
2019-05-28 16:49:10 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-28 16:49:10 -参数 : []
2019-05-28 16:49:10 -耗时 : 0
2019-05-28 16:49:10 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-28 16:49:19 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 16:49:19 -HTTP METHOD : GET
2019-05-28 16:49:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 16:49:19 -参数 : []
2019-05-28 16:49:19 -耗时 : 0
2019-05-28 16:49:19 -返回值 : system/dept/deptTree
2019-05-28 16:49:19 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 16:49:19 -HTTP METHOD : GET
2019-05-28 16:49:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 16:49:19 -参数 : []
2019-05-28 16:49:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 16:49:19 -==> Parameters: 
2019-05-28 16:49:19 -<==      Total: 3
2019-05-28 16:49:19 -耗时 : 5
2019-05-28 16:49:19 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 16:49:21 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 16:49:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 16:49:21 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 16:49:21.695(Timestamp)
2019-05-28 16:49:21 -<==    Updates: 1
2019-05-28 16:49:23 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 16:49:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 16:49:23 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 16:49:23.971(Timestamp)
2019-05-28 16:49:24 -<==    Updates: 1
2019-05-28 16:49:47 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 16:50:44 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:158)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 16:50:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 16:50:44 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importUserExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 16:50:44.458(Timestamp)
2019-05-28 16:50:44 -<==    Updates: 1
2019-05-28 16:55:09 -Starting BootdoApplication on PC-201905091110 with PID 18540 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-28 16:55:09 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-28 16:55:09 -The following profiles are active: dev
2019-05-28 16:55:09 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 28 16:55:09 CST 2019]; root of context hierarchy
2019-05-28 16:55:12 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-28 16:55:14 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$570235d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:55:14 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$495b647e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:55:15 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:55:16 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:55:16 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:55:16 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-28 16:55:16 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-28 16:55:16 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:55:16 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:55:16 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:55:16 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 16:55:17 -Tomcat initialized with port(s): 8081 (http)
2019-05-28 16:55:17 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-28 16:55:17 -Starting service [Tomcat]
2019-05-28 16:55:17 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-28 16:55:17 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-28 16:55:18 -Initializing Spring embedded WebApplicationContext
2019-05-28 16:55:18 -Root WebApplicationContext: initialization completed in 8397 ms
2019-05-28 16:55:18 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-28 16:55:18 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-28 16:55:18 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-28 16:55:18 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-28 16:55:18 -Filter xssFilter was not registered (disabled)
2019-05-28 16:55:18 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-28 16:55:18 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-28 16:55:18 -Servlet statViewServlet mapped to [/druid/*]
2019-05-28 16:55:18 -Servlet dispatcherServlet mapped to [/]
2019-05-28 16:55:22 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 28 16:55:09 CST 2019]; root of context hierarchy
2019-05-28 16:55:22 -Using default implementation for ThreadExecutor
2019-05-28 16:55:22 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-28 16:55:22 -Quartz Scheduler v.2.2.1 created.
2019-05-28 16:55:22 -RAMJobStore initialized.
2019-05-28 16:55:22 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-28 16:55:22 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-28 16:55:22 -Quartz scheduler version: 2.2.1
2019-05-28 16:55:22 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@62735b13
2019-05-28 16:55:23 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-28 16:55:23 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-28 16:55:26 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-28 16:55:26 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 16:55:26 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-28 16:55:26 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 16:55:26 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-28 16:55:26 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-28 16:55:26 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-28 16:55:26 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 16:55:26 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 16:55:26 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-28 16:55:26 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 16:55:26 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-28 16:55:26 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 16:55:26 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-28 16:55:26 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 16:55:26 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-28 16:55:26 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 16:55:26 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-28 16:55:26 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 16:55:26 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-28 16:55:26 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 16:55:26 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-28 16:55:26 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-28 16:55:26 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 16:55:26 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-28 16:55:26 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-28 16:55:26 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-28 16:55:26 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-28 16:55:26 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:26 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-28 16:55:26 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-28 16:55:26 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:26 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-28 16:55:26 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-28 16:55:26 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-28 16:55:26 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-28 16:55:26 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-28 16:55:26 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-28 16:55:26 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-28 16:55:26 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:26 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-28 16:55:26 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-28 16:55:26 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:26 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-28 16:55:26 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-28 16:55:26 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:26 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-28 16:55:26 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 16:55:26 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-28 16:55:26 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-28 16:55:26 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 16:55:26 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-28 16:55:26 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-28 16:55:26 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-28 16:55:26 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-28 16:55:26 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:26 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-28 16:55:26 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-28 16:55:26 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:26 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-28 16:55:26 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-28 16:55:26 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-28 16:55:26 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-28 16:55:26 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:26 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-28 16:55:26 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-28 16:55:26 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-28 16:55:26 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-28 16:55:26 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-28 16:55:26 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-28 16:55:26 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 16:55:26 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 16:55:26 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-28 16:55:26 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:26 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-28 16:55:26 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-28 16:55:26 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 16:55:26 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-28 16:55:26 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-28 16:55:26 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-28 16:55:26 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-28 16:55:26 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:26 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-28 16:55:26 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:26 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-28 16:55:26 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 16:55:26 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 16:55:26 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-28 16:55:26 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-28 16:55:26 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-28 16:55:26 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-28 16:55:26 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-28 16:55:26 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:26 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-28 16:55:26 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-28 16:55:26 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-28 16:55:26 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-28 16:55:26 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:26 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 16:55:27 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-28 16:55:27 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-28 16:55:27 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-28 16:55:27 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 16:55:27 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:27 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 16:55:27 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-28 16:55:27 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-28 16:55:27 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-28 16:55:27 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:27 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 16:55:27 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-28 16:55:27 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 16:55:27 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 16:55:27 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 16:55:27 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-28 16:55:27 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-28 16:55:27 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-28 16:55:27 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 16:55:27 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 16:55:27 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-28 16:55:27 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-28 16:55:27 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-28 16:55:27 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-28 16:55:27 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-28 16:55:27 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-28 16:55:27 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-28 16:55:27 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-28 16:55:27 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-28 16:55:27 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-28 16:55:27 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-28 16:55:27 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 16:55:27 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-28 16:55:27 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-28 16:55:27 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-28 16:55:27 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-28 16:55:27 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:27 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-28 16:55:27 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-28 16:55:27 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:27 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-28 16:55:27 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-28 16:55:27 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-28 16:55:27 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-28 16:55:27 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-28 16:55:27 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:27 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-28 16:55:27 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-28 16:55:27 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-28 16:55:27 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-28 16:55:27 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:27 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-28 16:55:27 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-28 16:55:27 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-28 16:55:27 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-28 16:55:27 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-28 16:55:27 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-28 16:55:27 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-28 16:55:27 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-28 16:55:27 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-28 16:55:27 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-28 16:55:27 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-28 16:55:27 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 16:55:27 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:27 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-28 16:55:27 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-28 16:55:27 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-28 16:55:27 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:27 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-28 16:55:27 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-28 16:55:27 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-28 16:55:27 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 16:55:27 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-28 16:55:27 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-28 16:55:27 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-28 16:55:27 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-28 16:55:27 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-28 16:55:27 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-28 16:55:27 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-28 16:55:27 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-28 16:55:27 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-28 16:55:27 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-28 16:55:27 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-28 16:55:27 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:27 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-28 16:55:27 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-28 16:55:27 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:27 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-28 16:55:27 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-28 16:55:27 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-28 16:55:27 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-28 16:55:27 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-28 16:55:27 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 16:55:27 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 16:55:27 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 16:55:27 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 16:55:27 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-28 16:55:27 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-28 16:55:27 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-28 16:55:27 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-28 16:55:27 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-28 16:55:27 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:27 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-28 16:55:27 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-28 16:55:27 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:27 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-28 16:55:27 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:27 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 16:55:27 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-28 16:55:27 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-28 16:55:27 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-28 16:55:27 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 16:55:27 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 16:55:27 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 16:55:27 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 16:55:27 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-28 16:55:27 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-28 16:55:27 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 16:55:27 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-28 16:55:27 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 16:55:27 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 16:55:27 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-28 16:55:27 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-28 16:55:27 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-28 16:55:27 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-28 16:55:27 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-28 16:55:27 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-28 16:55:28 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 16:55:28 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4d5650ae: startup date [Tue May 28 16:55:09 CST 2019]; root of context hierarchy
2019-05-28 16:55:28 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 16:55:28 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 16:55:28 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 16:55:28 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-28 16:55:28 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-28 16:55:30 -Registering beans for JMX exposure on startup
2019-05-28 16:55:30 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-28 16:55:30 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-28 16:55:30 -Starting beans in phase 2147483647
2019-05-28 16:55:30 -Context refreshed
2019-05-28 16:55:30 -Found 1 custom documentation plugin(s)
2019-05-28 16:55:30 -Scanning for api listing references
2019-05-28 16:55:31 -Generating unique operation named: getCountDUsingPOST_1
2019-05-28 16:55:31 -Generating unique operation named: removeUsingPOST_1
2019-05-28 16:55:31 -Generating unique operation named: addUsingGET_1
2019-05-28 16:55:31 -Generating unique operation named: editUsingGET_1
2019-05-28 16:55:31 -Generating unique operation named: listUsingGET_1
2019-05-28 16:55:31 -Generating unique operation named: removeUsingPOST_2
2019-05-28 16:55:31 -Generating unique operation named: removeUsingPOST_3
2019-05-28 16:55:31 -Generating unique operation named: saveUsingPOST_1
2019-05-28 16:55:31 -Generating unique operation named: updateUsingGET_1
2019-05-28 16:55:31 -Generating unique operation named: updateUsingHEAD_1
2019-05-28 16:55:31 -Generating unique operation named: updateUsingPOST_1
2019-05-28 16:55:31 -Generating unique operation named: updateUsingPUT_1
2019-05-28 16:55:31 -Generating unique operation named: updateUsingPATCH_1
2019-05-28 16:55:31 -Generating unique operation named: updateUsingDELETE_1
2019-05-28 16:55:31 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-28 16:55:31 -Generating unique operation named: updateUsingTRACE_1
2019-05-28 16:55:31 -Generating unique operation named: addUsingGET_2
2019-05-28 16:55:31 -Generating unique operation named: editUsingGET_2
2019-05-28 16:55:31 -Generating unique operation named: listUsingGET_2
2019-05-28 16:55:31 -Generating unique operation named: removeUsingPOST_4
2019-05-28 16:55:31 -Generating unique operation named: removeUsingPOST_5
2019-05-28 16:55:31 -Generating unique operation named: saveUsingPOST_2
2019-05-28 16:55:31 -Generating unique operation named: updateUsingPOST_2
2019-05-28 16:55:31 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-28 16:55:31 -Generating unique operation named: addUsingGET_3
2019-05-28 16:55:31 -Generating unique operation named: editUsingGET_3
2019-05-28 16:55:31 -Generating unique operation named: listUsingGET_3
2019-05-28 16:55:31 -Generating unique operation named: removeUsingPOST_6
2019-05-28 16:55:31 -Generating unique operation named: removeUsingPOST_7
2019-05-28 16:55:31 -Generating unique operation named: saveUsingPOST_3
2019-05-28 16:55:31 -Generating unique operation named: updateUsingGET_2
2019-05-28 16:55:31 -Generating unique operation named: updateUsingHEAD_2
2019-05-28 16:55:31 -Generating unique operation named: updateUsingPOST_3
2019-05-28 16:55:31 -Generating unique operation named: updateUsingPUT_2
2019-05-28 16:55:31 -Generating unique operation named: updateUsingPATCH_2
2019-05-28 16:55:31 -Generating unique operation named: updateUsingDELETE_2
2019-05-28 16:55:31 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-28 16:55:31 -Generating unique operation named: updateUsingTRACE_2
2019-05-28 16:55:31 -Generating unique operation named: addUsingGET_4
2019-05-28 16:55:31 -Generating unique operation named: editUsingGET_4
2019-05-28 16:55:31 -Generating unique operation named: listUsingGET_4
2019-05-28 16:55:31 -Generating unique operation named: removeUsingPOST_8
2019-05-28 16:55:31 -Generating unique operation named: removeUsingPOST_9
2019-05-28 16:55:31 -Generating unique operation named: saveUsingPOST_4
2019-05-28 16:55:31 -Generating unique operation named: updateUsingGET_3
2019-05-28 16:55:31 -Generating unique operation named: updateUsingHEAD_3
2019-05-28 16:55:31 -Generating unique operation named: updateUsingPOST_4
2019-05-28 16:55:31 -Generating unique operation named: updateUsingPUT_3
2019-05-28 16:55:31 -Generating unique operation named: updateUsingPATCH_3
2019-05-28 16:55:31 -Generating unique operation named: updateUsingDELETE_3
2019-05-28 16:55:31 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-28 16:55:31 -Generating unique operation named: updateUsingTRACE_3
2019-05-28 16:55:31 -Generating unique operation named: ElecUsingGET_1
2019-05-28 16:55:31 -Generating unique operation named: addUsingGET_5
2019-05-28 16:55:31 -Generating unique operation named: editUsingGET_5
2019-05-28 16:55:31 -Generating unique operation named: listUsingGET_5
2019-05-28 16:55:31 -Generating unique operation named: removeUsingPOST_10
2019-05-28 16:55:31 -Generating unique operation named: removeUsingPOST_11
2019-05-28 16:55:31 -Generating unique operation named: saveUsingPOST_5
2019-05-28 16:55:32 -Generating unique operation named: updateUsingGET_4
2019-05-28 16:55:32 -Generating unique operation named: updateUsingHEAD_4
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPOST_5
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPUT_4
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPATCH_4
2019-05-28 16:55:32 -Generating unique operation named: updateUsingDELETE_4
2019-05-28 16:55:32 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-28 16:55:32 -Generating unique operation named: updateUsingTRACE_4
2019-05-28 16:55:32 -Generating unique operation named: editUsingGET_6
2019-05-28 16:55:32 -Generating unique operation named: listUsingGET_6
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPOST_6
2019-05-28 16:55:32 -Generating unique operation named: addUsingGET_6
2019-05-28 16:55:32 -Generating unique operation named: editUsingGET_7
2019-05-28 16:55:32 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-28 16:55:32 -Generating unique operation named: listUsingGET_7
2019-05-28 16:55:32 -Generating unique operation named: removeUsingPOST_12
2019-05-28 16:55:32 -Generating unique operation named: removeUsingPOST_13
2019-05-28 16:55:32 -Generating unique operation named: saveUsingPOST_6
2019-05-28 16:55:32 -Generating unique operation named: updateUsingGET_5
2019-05-28 16:55:32 -Generating unique operation named: updateUsingHEAD_5
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPOST_7
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPUT_5
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPATCH_5
2019-05-28 16:55:32 -Generating unique operation named: updateUsingDELETE_5
2019-05-28 16:55:32 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-28 16:55:32 -Generating unique operation named: updateUsingTRACE_5
2019-05-28 16:55:32 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-28 16:55:32 -Generating unique operation named: addUsingGET_7
2019-05-28 16:55:32 -Generating unique operation named: editUsingGET_8
2019-05-28 16:55:32 -Generating unique operation named: listUsingGET_8
2019-05-28 16:55:32 -Generating unique operation named: removeUsingPOST_14
2019-05-28 16:55:32 -Generating unique operation named: removeUsingPOST_15
2019-05-28 16:55:32 -Generating unique operation named: saveUsingPOST_7
2019-05-28 16:55:32 -Generating unique operation named: updateUsingGET_6
2019-05-28 16:55:32 -Generating unique operation named: updateUsingHEAD_6
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPOST_8
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPUT_6
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPATCH_6
2019-05-28 16:55:32 -Generating unique operation named: updateUsingDELETE_6
2019-05-28 16:55:32 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-28 16:55:32 -Generating unique operation named: updateUsingTRACE_6
2019-05-28 16:55:32 -Generating unique operation named: addUsingGET_8
2019-05-28 16:55:32 -Generating unique operation named: editUsingGET_9
2019-05-28 16:55:32 -Generating unique operation named: listUsingGET_9
2019-05-28 16:55:32 -Generating unique operation named: removeUsingPOST_16
2019-05-28 16:55:32 -Generating unique operation named: removeUsingPOST_17
2019-05-28 16:55:32 -Generating unique operation named: saveUsingPOST_8
2019-05-28 16:55:32 -Generating unique operation named: updateUsingGET_7
2019-05-28 16:55:32 -Generating unique operation named: updateUsingHEAD_7
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPOST_9
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPUT_7
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPATCH_7
2019-05-28 16:55:32 -Generating unique operation named: updateUsingDELETE_7
2019-05-28 16:55:32 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-28 16:55:32 -Generating unique operation named: updateUsingTRACE_7
2019-05-28 16:55:32 -Generating unique operation named: addUsingGET_9
2019-05-28 16:55:32 -Generating unique operation named: editUsingGET_10
2019-05-28 16:55:32 -Generating unique operation named: infoUsingGET_1
2019-05-28 16:55:32 -Generating unique operation named: infoUsingHEAD_1
2019-05-28 16:55:32 -Generating unique operation named: infoUsingPOST_1
2019-05-28 16:55:32 -Generating unique operation named: infoUsingPUT_1
2019-05-28 16:55:32 -Generating unique operation named: infoUsingPATCH_1
2019-05-28 16:55:32 -Generating unique operation named: infoUsingDELETE_1
2019-05-28 16:55:32 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-28 16:55:32 -Generating unique operation named: infoUsingTRACE_1
2019-05-28 16:55:32 -Generating unique operation named: listUsingGET_10
2019-05-28 16:55:32 -Generating unique operation named: removeUsingPOST_18
2019-05-28 16:55:32 -Generating unique operation named: removeUsingPOST_19
2019-05-28 16:55:32 -Generating unique operation named: saveUsingPOST_9
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPOST_10
2019-05-28 16:55:32 -Generating unique operation named: listUsingGET_11
2019-05-28 16:55:32 -Generating unique operation named: removeUsingPOST_20
2019-05-28 16:55:32 -Generating unique operation named: welcomeUsingGET_1
2019-05-28 16:55:32 -Generating unique operation named: addUsingGET_10
2019-05-28 16:55:32 -Generating unique operation named: editUsingGET_11
2019-05-28 16:55:32 -Generating unique operation named: listUsingGET_12
2019-05-28 16:55:32 -Generating unique operation named: removeUsingPOST_21
2019-05-28 16:55:32 -Generating unique operation named: saveUsingPOST_10
2019-05-28 16:55:32 -Generating unique operation named: treeUsingGET_1
2019-05-28 16:55:32 -Generating unique operation named: treeUsingGET_2
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPOST_11
2019-05-28 16:55:32 -Generating unique operation named: addUsingGET_11
2019-05-28 16:55:32 -Generating unique operation named: editUsingGET_12
2019-05-28 16:55:32 -Generating unique operation named: listUsingGET_13
2019-05-28 16:55:32 -Generating unique operation named: removeUsingPOST_22
2019-05-28 16:55:32 -Generating unique operation named: removeUsingPOST_23
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPOST_12
2019-05-28 16:55:32 -Generating unique operation named: addUsingGET_12
2019-05-28 16:55:32 -Generating unique operation named: editUsingGET_13
2019-05-28 16:55:32 -Generating unique operation named: listUsingGET_14
2019-05-28 16:55:32 -Generating unique operation named: removeUsingPOST_24
2019-05-28 16:55:32 -Generating unique operation named: removeUsingPOST_25
2019-05-28 16:55:32 -Generating unique operation named: saveUsingPOST_11
2019-05-28 16:55:32 -Generating unique operation named: updateUsingGET_8
2019-05-28 16:55:32 -Generating unique operation named: updateUsingHEAD_8
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPOST_13
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPUT_8
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPATCH_8
2019-05-28 16:55:32 -Generating unique operation named: updateUsingDELETE_8
2019-05-28 16:55:32 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-28 16:55:32 -Generating unique operation named: updateUsingTRACE_8
2019-05-28 16:55:32 -Generating unique operation named: addUsingGET_13
2019-05-28 16:55:32 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-28 16:55:32 -Generating unique operation named: editUsingGET_14
2019-05-28 16:55:32 -Generating unique operation named: listUsingGET_15
2019-05-28 16:55:32 -Generating unique operation named: printEditUsingGET_1
2019-05-28 16:55:32 -Generating unique operation named: removeUsingPOST_26
2019-05-28 16:55:32 -Generating unique operation named: saveUsingPOST_12
2019-05-28 16:55:32 -Generating unique operation named: updateUsingGET_9
2019-05-28 16:55:32 -Generating unique operation named: updateUsingHEAD_9
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPOST_14
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPUT_9
2019-05-28 16:55:32 -Generating unique operation named: updateUsingPATCH_9
2019-05-28 16:55:33 -Generating unique operation named: updateUsingDELETE_9
2019-05-28 16:55:33 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-28 16:55:33 -Generating unique operation named: updateUsingTRACE_9
2019-05-28 16:55:33 -Generating unique operation named: addUsingGET_14
2019-05-28 16:55:33 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-28 16:55:33 -Generating unique operation named: editUsingGET_15
2019-05-28 16:55:33 -Generating unique operation named: listUsingGET_16
2019-05-28 16:55:33 -Generating unique operation named: saveUsingPOST_13
2019-05-28 16:55:33 -Generating unique operation named: saveUsingPOST_14
2019-05-28 16:55:33 -Generating unique operation named: updateUsingPOST_15
2019-05-28 16:55:33 -Generating unique operation named: listUsingGET_17
2019-05-28 16:55:33 -Generating unique operation named: listUsingHEAD_1
2019-05-28 16:55:33 -Generating unique operation named: listUsingPOST_1
2019-05-28 16:55:33 -Generating unique operation named: listUsingPUT_1
2019-05-28 16:55:33 -Generating unique operation named: listUsingPATCH_1
2019-05-28 16:55:33 -Generating unique operation named: listUsingDELETE_1
2019-05-28 16:55:33 -Generating unique operation named: listUsingOPTIONS_1
2019-05-28 16:55:33 -Generating unique operation named: listUsingTRACE_1
2019-05-28 16:55:33 -Generating unique operation named: countDDUsingGET_1
2019-05-28 16:55:33 -Generating unique operation named: exportDDUsingGET_1
2019-05-28 16:55:33 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-28 16:55:33 -Generating unique operation named: addUsingGET_15
2019-05-28 16:55:33 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-28 16:55:33 -Generating unique operation named: editUsingGET_16
2019-05-28 16:55:33 -Generating unique operation named: listUsingGET_18
2019-05-28 16:55:33 -Generating unique operation named: removeUsingPOST_27
2019-05-28 16:55:33 -Generating unique operation named: saveUsingPOST_15
2019-05-28 16:55:33 -Generating unique operation named: treeUsingGET_3
2019-05-28 16:55:33 -Generating unique operation named: treeViewUsingGET_1
2019-05-28 16:55:33 -Generating unique operation named: updateUsingPOST_16
2019-05-28 16:55:33 -Generating unique operation named: addUsingGET_16
2019-05-28 16:55:33 -Generating unique operation named: editUsingGET_17
2019-05-28 16:55:33 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-28 16:55:33 -Generating unique operation named: listUsingGET_19
2019-05-28 16:55:33 -Generating unique operation named: removeUsingPOST_28
2019-05-28 16:55:33 -Generating unique operation named: removeUsingPOST_29
2019-05-28 16:55:33 -Generating unique operation named: saveUsingPOST_16
2019-05-28 16:55:33 -Generating unique operation named: updateUsingGET_10
2019-05-28 16:55:33 -Generating unique operation named: updateUsingHEAD_10
2019-05-28 16:55:33 -Generating unique operation named: updateUsingPOST_17
2019-05-28 16:55:33 -Generating unique operation named: updateUsingPUT_10
2019-05-28 16:55:33 -Generating unique operation named: updateUsingPATCH_10
2019-05-28 16:55:33 -Generating unique operation named: updateUsingDELETE_10
2019-05-28 16:55:33 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-28 16:55:33 -Generating unique operation named: updateUsingTRACE_10
2019-05-28 16:55:33 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-28 16:55:33 -Generating unique operation named: addUsingGET_17
2019-05-28 16:55:33 -Generating unique operation named: editUsingGET_18
2019-05-28 16:55:33 -Generating unique operation named: listUsingGET_20
2019-05-28 16:55:33 -Generating unique operation named: removeUsingPOST_30
2019-05-28 16:55:33 -Generating unique operation named: removeUsingPOST_31
2019-05-28 16:55:33 -Generating unique operation named: saveUsingPOST_17
2019-05-28 16:55:33 -Generating unique operation named: updateUsingGET_11
2019-05-28 16:55:33 -Generating unique operation named: updateUsingHEAD_11
2019-05-28 16:55:33 -Generating unique operation named: updateUsingPOST_18
2019-05-28 16:55:33 -Generating unique operation named: updateUsingPUT_11
2019-05-28 16:55:33 -Generating unique operation named: updateUsingPATCH_11
2019-05-28 16:55:33 -Generating unique operation named: updateUsingDELETE_11
2019-05-28 16:55:33 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-28 16:55:33 -Generating unique operation named: updateUsingTRACE_11
2019-05-28 16:55:33 -Generating unique operation named: addUsingGET_18
2019-05-28 16:55:33 -Generating unique operation named: editUsingGET_19
2019-05-28 16:55:33 -Generating unique operation named: listUsingGET_21
2019-05-28 16:55:33 -Generating unique operation named: removeUsingPOST_32
2019-05-28 16:55:33 -Generating unique operation named: removeUsingPOST_33
2019-05-28 16:55:33 -Generating unique operation named: saveUsingPOST_18
2019-05-28 16:55:33 -Generating unique operation named: updateUsingGET_12
2019-05-28 16:55:33 -Generating unique operation named: updateUsingHEAD_12
2019-05-28 16:55:33 -Generating unique operation named: updateUsingPOST_19
2019-05-28 16:55:33 -Generating unique operation named: updateUsingPUT_12
2019-05-28 16:55:33 -Generating unique operation named: updateUsingPATCH_12
2019-05-28 16:55:33 -Generating unique operation named: updateUsingDELETE_12
2019-05-28 16:55:33 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-28 16:55:33 -Generating unique operation named: updateUsingTRACE_12
2019-05-28 16:55:33 -Starting Quartz Scheduler now
2019-05-28 16:55:33 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-28 16:55:33 -Starting...
2019-05-28 16:55:33 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-28 16:55:33 -Started.
2019-05-28 16:55:33 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-28 16:55:33 -Using a shared selector for servlet write/read
2019-05-28 16:55:33 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-28 16:55:33 -Started BootdoApplication in 25.464 seconds (JVM running for 26.174)
2019-05-28 16:55:34 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-28 16:55:34 -==> Parameters: 
2019-05-28 16:55:34 -<==      Total: 1
2019-05-28 16:55:52 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-28 16:55:52 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-28 16:55:52 -FrameworkServlet 'dispatcherServlet': initialization completed in 65 ms
2019-05-28 16:55:52 -Enabling session validation scheduler...
2019-05-28 16:55:52 -请求地址 : http://localhost:8081/login;JSESSIONID=b2c4abe1-e234-4961-9dd7-9b2655110920
2019-05-28 16:55:52 -HTTP METHOD : GET
2019-05-28 16:55:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 16:55:52 -参数 : [{}]
2019-05-28 16:55:52 -耗时 : 3
2019-05-28 16:55:52 -返回值 : login
2019-05-28 16:55:54 -请求地址 : http://localhost:8081/getVerify
2019-05-28 16:55:54 -HTTP METHOD : GET
2019-05-28 16:55:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-28 16:55:54 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7d09ece5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@11ecca70]
2019-05-28 16:55:57 -4586
2019-05-28 16:55:57 -耗时 : 3524
2019-05-28 16:55:57 -返回值 : null
2019-05-28 16:56:12 -请求地址 : http://localhost:8081/login
2019-05-28 16:56:12 -HTTP METHOD : POST
2019-05-28 16:56:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-28 16:56:12 -参数 : [admin, 111111, 4586, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3566b901]
2019-05-28 16:56:12 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-28 16:56:12 -==> Parameters: admin(String)
2019-05-28 16:56:12 -<==      Total: 1
2019-05-28 16:56:12 -耗时 : 471
2019-05-28 16:56:12 -返回值 : {msg=操作成功, code=0}
2019-05-28 16:56:12 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-28 16:56:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 16:56:12 -==> Parameters: 1(Long), admin(String), 登录(String), 471(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-28 16:56:12.707(Timestamp)
2019-05-28 16:56:12 -请求地址 : http://localhost:8081/index
2019-05-28 16:56:12 -HTTP METHOD : GET
2019-05-28 16:56:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 16:56:12 -参数 : [{}]
2019-05-28 16:56:12 -<==    Updates: 1
2019-05-28 16:56:13 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 16:56:13 -==> Parameters: 1(Long)
2019-05-28 16:56:13 -<==      Total: 50
2019-05-28 16:56:13 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 16:56:13 -==> Parameters: 138(Long)
2019-05-28 16:56:13 -<==      Total: 1
2019-05-28 16:56:13 -耗时 : 572
2019-05-28 16:56:13 -返回值 : index_v1
2019-05-28 16:56:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 16:56:13 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 572(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 16:56:13.399(Timestamp)
2019-05-28 16:56:13 -<==    Updates: 1
2019-05-28 16:56:13 -请求地址 : http://localhost:8081/main
2019-05-28 16:56:13 -HTTP METHOD : GET
2019-05-28 16:56:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 16:56:13 -参数 : []
2019-05-28 16:56:13 -耗时 : 0
2019-05-28 16:56:13 -返回值 : main
2019-05-28 16:56:13 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 16:56:13 -HTTP METHOD : GET
2019-05-28 16:56:13 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 16:56:13 -参数 : []
2019-05-28 16:56:13 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 16:56:13 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 16:56:13 -<==      Total: 0
2019-05-28 16:56:13 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 16:56:13 -==> Parameters: 1(Long), 0(String)
2019-05-28 16:56:13 -<==      Total: 1
2019-05-28 16:56:13 -耗时 : 129
2019-05-28 16:56:13 -返回值 : com.bootdo.common.utils.PageUtils@1afcb641
2019-05-28 16:56:14 -请求地址 : http://localhost:8081/main
2019-05-28 16:56:14 -HTTP METHOD : GET
2019-05-28 16:56:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 16:56:14 -参数 : []
2019-05-28 16:56:14 -耗时 : 0
2019-05-28 16:56:14 -返回值 : main
2019-05-28 16:56:27 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-05-28 16:56:47 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 16:56:47 -==> Parameters: 1(Long)
2019-05-28 16:56:47 -<==      Total: 94
2019-05-28 16:56:47 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-05-28 16:56:47 -HTTP METHOD : GET
2019-05-28 16:56:47 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-05-28 16:56:47 -参数 : []
2019-05-28 16:56:47 -耗时 : 1
2019-05-28 16:56:47 -返回值 : heat/heatUpLoad/heatUpLoad
2019-05-28 16:57:40 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 16:57:40 -HTTP METHOD : GET
2019-05-28 16:57:40 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 16:57:40 -参数 : []
2019-05-28 16:57:40 -耗时 : 1
2019-05-28 16:57:40 -返回值 : system/dept/deptTree
2019-05-28 16:57:41 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 16:57:41 -HTTP METHOD : GET
2019-05-28 16:57:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 16:57:41 -参数 : []
2019-05-28 16:57:41 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 16:57:41 -==> Parameters: 
2019-05-28 16:57:41 -<==      Total: 3
2019-05-28 16:57:41 -耗时 : 64
2019-05-28 16:57:41 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 16:57:48 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 16:57:48 -HTTP METHOD : POST
2019-05-28 16:57:48 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 16:57:48 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5168238e, 2019-01, 2]
2019-05-28 16:57:51 -==>  Preparing: SELECT count(*) FROM HEAT he WHERE he.user_id = ? 
2019-05-28 16:57:51 -==> Parameters: 1-0001(String)
2019-05-28 16:57:51 -<==      Total: 1
2019-05-28 16:57:51 -耗时 : 2791
2019-05-28 16:57:51 -返回值 : 第3行，用户编号已存在，请认真编写
2019-05-28 17:01:21 -Starting BootdoApplication on PC-201905091110 with PID 16336 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-28 17:01:21 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-28 17:01:21 -The following profiles are active: dev
2019-05-28 17:01:21 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@165b2f7f: startup date [Tue May 28 17:01:21 CST 2019]; root of context hierarchy
2019-05-28 17:01:25 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-28 17:01:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e3a3cef0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:01:27 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$d5fcfd97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:01:28 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:01:29 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:01:29 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:01:29 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-28 17:01:29 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-28 17:01:29 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:01:29 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:01:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:01:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:01:30 -Tomcat initialized with port(s): 8081 (http)
2019-05-28 17:01:30 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-28 17:01:30 -Starting service [Tomcat]
2019-05-28 17:01:30 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-28 17:01:30 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-28 17:01:30 -Initializing Spring embedded WebApplicationContext
2019-05-28 17:01:30 -Root WebApplicationContext: initialization completed in 9039 ms
2019-05-28 17:01:31 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-28 17:01:31 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-28 17:01:31 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-28 17:01:31 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-28 17:01:31 -Filter xssFilter was not registered (disabled)
2019-05-28 17:01:31 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-28 17:01:31 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-28 17:01:31 -Servlet statViewServlet mapped to [/druid/*]
2019-05-28 17:01:31 -Servlet dispatcherServlet mapped to [/]
2019-05-28 17:01:35 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@165b2f7f: startup date [Tue May 28 17:01:21 CST 2019]; root of context hierarchy
2019-05-28 17:01:36 -Using default implementation for ThreadExecutor
2019-05-28 17:01:36 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-28 17:01:36 -Quartz Scheduler v.2.2.1 created.
2019-05-28 17:01:36 -RAMJobStore initialized.
2019-05-28 17:01:36 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-28 17:01:36 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-28 17:01:36 -Quartz scheduler version: 2.2.1
2019-05-28 17:01:36 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4eb48298
2019-05-28 17:01:37 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-28 17:01:37 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-28 17:01:40 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-28 17:01:40 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 17:01:40 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-28 17:01:40 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 17:01:40 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-28 17:01:40 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-28 17:01:40 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-28 17:01:40 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 17:01:40 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-28 17:01:40 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 17:01:40 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 17:01:40 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-28 17:01:40 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 17:01:40 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-28 17:01:40 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-28 17:01:40 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 17:01:40 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 17:01:40 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-28 17:01:40 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-28 17:01:40 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 17:01:40 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 17:01:40 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-28 17:01:40 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-28 17:01:40 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 17:01:40 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-28 17:01:40 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-28 17:01:40 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-28 17:01:40 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:40 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-28 17:01:40 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-28 17:01:40 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-28 17:01:40 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-28 17:01:40 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-28 17:01:40 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-28 17:01:40 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-28 17:01:40 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-28 17:01:40 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-28 17:01:40 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:40 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-28 17:01:40 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-28 17:01:40 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:40 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-28 17:01:40 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 17:01:40 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 17:01:40 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-28 17:01:40 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-28 17:01:40 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-28 17:01:40 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-28 17:01:40 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:40 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-28 17:01:40 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-28 17:01:40 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-28 17:01:40 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-28 17:01:40 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:40 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-28 17:01:40 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-28 17:01:40 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-28 17:01:40 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-28 17:01:40 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-28 17:01:40 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 17:01:40 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 17:01:40 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-28 17:01:40 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-28 17:01:40 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 17:01:40 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-28 17:01:40 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-28 17:01:40 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-28 17:01:40 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-28 17:01:40 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:40 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-28 17:01:40 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-28 17:01:40 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-28 17:01:40 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 17:01:40 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 17:01:40 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-28 17:01:40 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-28 17:01:40 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-28 17:01:40 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-28 17:01:40 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:40 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-28 17:01:40 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-28 17:01:40 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 17:01:40 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-28 17:01:40 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-28 17:01:40 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-28 17:01:40 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 17:01:40 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:40 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 17:01:40 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-28 17:01:40 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 17:01:40 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-28 17:01:40 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-28 17:01:40 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-28 17:01:40 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 17:01:40 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 17:01:40 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 17:01:40 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-28 17:01:40 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-28 17:01:40 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 17:01:40 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 17:01:40 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-28 17:01:40 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-28 17:01:40 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-28 17:01:40 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-28 17:01:40 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 17:01:40 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:40 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 17:01:40 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 17:01:40 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-28 17:01:40 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-28 17:01:40 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-28 17:01:40 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 17:01:40 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:40 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 17:01:40 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 17:01:40 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-28 17:01:40 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-28 17:01:40 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-28 17:01:40 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 17:01:40 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:40 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 17:01:40 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-28 17:01:40 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 17:01:40 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-28 17:01:40 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-28 17:01:40 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-28 17:01:40 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:40 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-28 17:01:40 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-28 17:01:40 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-28 17:01:40 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:40 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-28 17:01:40 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-28 17:01:40 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-28 17:01:40 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:40 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-28 17:01:40 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-28 17:01:40 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-28 17:01:40 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-28 17:01:40 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-28 17:01:40 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-28 17:01:40 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-28 17:01:40 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-28 17:01:40 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-28 17:01:40 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-28 17:01:40 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-28 17:01:40 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-28 17:01:40 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-28 17:01:40 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-28 17:01:40 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:40 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 17:01:40 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-28 17:01:40 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:40 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-28 17:01:40 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-28 17:01:40 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-28 17:01:40 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-28 17:01:40 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-28 17:01:40 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-28 17:01:40 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-28 17:01:40 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-28 17:01:40 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:40 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-28 17:01:40 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-28 17:01:41 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-28 17:01:41 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-28 17:01:41 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-28 17:01:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-28 17:01:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-28 17:01:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-28 17:01:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-28 17:01:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-28 17:01:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-28 17:01:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 17:01:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-28 17:01:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-28 17:01:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-28 17:01:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 17:01:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-28 17:01:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 17:01:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 17:01:41 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-28 17:01:41 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-28 17:01:41 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-28 17:01:41 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-28 17:01:41 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-28 17:01:41 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:41 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-28 17:01:41 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:41 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-28 17:01:41 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:41 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 17:01:41 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-28 17:01:41 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:41 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-28 17:01:41 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-28 17:01:41 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-28 17:01:41 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 17:01:41 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:01:41 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 17:01:41 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:01:41 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-28 17:01:41 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-28 17:01:41 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-28 17:01:41 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 17:01:41 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:01:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 17:01:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-28 17:01:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-28 17:01:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-28 17:01:41 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-28 17:01:41 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-28 17:01:42 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-28 17:01:42 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 17:01:43 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@165b2f7f: startup date [Tue May 28 17:01:21 CST 2019]; root of context hierarchy
2019-05-28 17:01:43 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 17:01:43 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 17:01:43 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 17:01:43 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-28 17:01:43 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-28 17:01:45 -Registering beans for JMX exposure on startup
2019-05-28 17:01:45 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-28 17:01:45 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-28 17:01:45 -Starting beans in phase 2147483647
2019-05-28 17:01:45 -Context refreshed
2019-05-28 17:01:45 -Found 1 custom documentation plugin(s)
2019-05-28 17:01:46 -Scanning for api listing references
2019-05-28 17:01:46 -Generating unique operation named: getCountDUsingPOST_1
2019-05-28 17:01:46 -Generating unique operation named: removeUsingPOST_1
2019-05-28 17:01:46 -Generating unique operation named: addUsingGET_1
2019-05-28 17:01:46 -Generating unique operation named: editUsingGET_1
2019-05-28 17:01:46 -Generating unique operation named: listUsingGET_1
2019-05-28 17:01:46 -Generating unique operation named: removeUsingPOST_2
2019-05-28 17:01:46 -Generating unique operation named: removeUsingPOST_3
2019-05-28 17:01:46 -Generating unique operation named: saveUsingPOST_1
2019-05-28 17:01:46 -Generating unique operation named: updateUsingGET_1
2019-05-28 17:01:46 -Generating unique operation named: updateUsingHEAD_1
2019-05-28 17:01:46 -Generating unique operation named: updateUsingPOST_1
2019-05-28 17:01:46 -Generating unique operation named: updateUsingPUT_1
2019-05-28 17:01:46 -Generating unique operation named: updateUsingPATCH_1
2019-05-28 17:01:47 -Generating unique operation named: updateUsingDELETE_1
2019-05-28 17:01:47 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-28 17:01:47 -Generating unique operation named: updateUsingTRACE_1
2019-05-28 17:01:47 -Generating unique operation named: addUsingGET_2
2019-05-28 17:01:47 -Generating unique operation named: editUsingGET_2
2019-05-28 17:01:47 -Generating unique operation named: listUsingGET_2
2019-05-28 17:01:47 -Generating unique operation named: removeUsingPOST_4
2019-05-28 17:01:47 -Generating unique operation named: removeUsingPOST_5
2019-05-28 17:01:47 -Generating unique operation named: saveUsingPOST_2
2019-05-28 17:01:47 -Generating unique operation named: updateUsingPOST_2
2019-05-28 17:01:47 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-28 17:01:47 -Generating unique operation named: addUsingGET_3
2019-05-28 17:01:47 -Generating unique operation named: editUsingGET_3
2019-05-28 17:01:47 -Generating unique operation named: listUsingGET_3
2019-05-28 17:01:47 -Generating unique operation named: removeUsingPOST_6
2019-05-28 17:01:47 -Generating unique operation named: removeUsingPOST_7
2019-05-28 17:01:47 -Generating unique operation named: saveUsingPOST_3
2019-05-28 17:01:47 -Generating unique operation named: updateUsingGET_2
2019-05-28 17:01:47 -Generating unique operation named: updateUsingHEAD_2
2019-05-28 17:01:47 -Generating unique operation named: updateUsingPOST_3
2019-05-28 17:01:47 -Generating unique operation named: updateUsingPUT_2
2019-05-28 17:01:47 -Generating unique operation named: updateUsingPATCH_2
2019-05-28 17:01:47 -Generating unique operation named: updateUsingDELETE_2
2019-05-28 17:01:47 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-28 17:01:47 -Generating unique operation named: updateUsingTRACE_2
2019-05-28 17:01:47 -Generating unique operation named: addUsingGET_4
2019-05-28 17:01:47 -Generating unique operation named: editUsingGET_4
2019-05-28 17:01:47 -Generating unique operation named: listUsingGET_4
2019-05-28 17:01:47 -Generating unique operation named: removeUsingPOST_8
2019-05-28 17:01:47 -Generating unique operation named: removeUsingPOST_9
2019-05-28 17:01:47 -Generating unique operation named: saveUsingPOST_4
2019-05-28 17:01:47 -Generating unique operation named: updateUsingGET_3
2019-05-28 17:01:47 -Generating unique operation named: updateUsingHEAD_3
2019-05-28 17:01:47 -Generating unique operation named: updateUsingPOST_4
2019-05-28 17:01:47 -Generating unique operation named: updateUsingPUT_3
2019-05-28 17:01:47 -Generating unique operation named: updateUsingPATCH_3
2019-05-28 17:01:47 -Generating unique operation named: updateUsingDELETE_3
2019-05-28 17:01:47 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-28 17:01:47 -Generating unique operation named: updateUsingTRACE_3
2019-05-28 17:01:47 -Generating unique operation named: ElecUsingGET_1
2019-05-28 17:01:47 -Generating unique operation named: addUsingGET_5
2019-05-28 17:01:47 -Generating unique operation named: editUsingGET_5
2019-05-28 17:01:47 -Generating unique operation named: listUsingGET_5
2019-05-28 17:01:47 -Generating unique operation named: removeUsingPOST_10
2019-05-28 17:01:47 -Generating unique operation named: removeUsingPOST_11
2019-05-28 17:01:47 -Generating unique operation named: saveUsingPOST_5
2019-05-28 17:01:47 -Generating unique operation named: updateUsingGET_4
2019-05-28 17:01:47 -Generating unique operation named: updateUsingHEAD_4
2019-05-28 17:01:47 -Generating unique operation named: updateUsingPOST_5
2019-05-28 17:01:47 -Generating unique operation named: updateUsingPUT_4
2019-05-28 17:01:47 -Generating unique operation named: updateUsingPATCH_4
2019-05-28 17:01:47 -Generating unique operation named: updateUsingDELETE_4
2019-05-28 17:01:47 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-28 17:01:47 -Generating unique operation named: updateUsingTRACE_4
2019-05-28 17:01:47 -Generating unique operation named: editUsingGET_6
2019-05-28 17:01:47 -Generating unique operation named: listUsingGET_6
2019-05-28 17:01:47 -Generating unique operation named: updateUsingPOST_6
2019-05-28 17:01:47 -Generating unique operation named: addUsingGET_6
2019-05-28 17:01:47 -Generating unique operation named: editUsingGET_7
2019-05-28 17:01:47 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-28 17:01:47 -Generating unique operation named: listUsingGET_7
2019-05-28 17:01:47 -Generating unique operation named: removeUsingPOST_12
2019-05-28 17:01:47 -Generating unique operation named: removeUsingPOST_13
2019-05-28 17:01:47 -Generating unique operation named: saveUsingPOST_6
2019-05-28 17:01:47 -Generating unique operation named: updateUsingGET_5
2019-05-28 17:01:47 -Generating unique operation named: updateUsingHEAD_5
2019-05-28 17:01:47 -Generating unique operation named: updateUsingPOST_7
2019-05-28 17:01:47 -Generating unique operation named: updateUsingPUT_5
2019-05-28 17:01:47 -Generating unique operation named: updateUsingPATCH_5
2019-05-28 17:01:47 -Generating unique operation named: updateUsingDELETE_5
2019-05-28 17:01:47 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-28 17:01:47 -Generating unique operation named: updateUsingTRACE_5
2019-05-28 17:01:47 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-28 17:01:47 -Generating unique operation named: addUsingGET_7
2019-05-28 17:01:47 -Generating unique operation named: editUsingGET_8
2019-05-28 17:01:48 -Generating unique operation named: listUsingGET_8
2019-05-28 17:01:48 -Generating unique operation named: removeUsingPOST_14
2019-05-28 17:01:48 -Generating unique operation named: removeUsingPOST_15
2019-05-28 17:01:48 -Generating unique operation named: saveUsingPOST_7
2019-05-28 17:01:48 -Generating unique operation named: updateUsingGET_6
2019-05-28 17:01:48 -Generating unique operation named: updateUsingHEAD_6
2019-05-28 17:01:48 -Generating unique operation named: updateUsingPOST_8
2019-05-28 17:01:48 -Generating unique operation named: updateUsingPUT_6
2019-05-28 17:01:48 -Generating unique operation named: updateUsingPATCH_6
2019-05-28 17:01:48 -Generating unique operation named: updateUsingDELETE_6
2019-05-28 17:01:48 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-28 17:01:48 -Generating unique operation named: updateUsingTRACE_6
2019-05-28 17:01:48 -Generating unique operation named: addUsingGET_8
2019-05-28 17:01:48 -Generating unique operation named: editUsingGET_9
2019-05-28 17:01:48 -Generating unique operation named: listUsingGET_9
2019-05-28 17:01:48 -Generating unique operation named: removeUsingPOST_16
2019-05-28 17:01:48 -Generating unique operation named: removeUsingPOST_17
2019-05-28 17:01:48 -Generating unique operation named: saveUsingPOST_8
2019-05-28 17:01:48 -Generating unique operation named: updateUsingGET_7
2019-05-28 17:01:48 -Generating unique operation named: updateUsingHEAD_7
2019-05-28 17:01:48 -Generating unique operation named: updateUsingPOST_9
2019-05-28 17:01:48 -Generating unique operation named: updateUsingPUT_7
2019-05-28 17:01:48 -Generating unique operation named: updateUsingPATCH_7
2019-05-28 17:01:48 -Generating unique operation named: updateUsingDELETE_7
2019-05-28 17:01:48 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-28 17:01:48 -Generating unique operation named: updateUsingTRACE_7
2019-05-28 17:01:48 -Generating unique operation named: addUsingGET_9
2019-05-28 17:01:48 -Generating unique operation named: editUsingGET_10
2019-05-28 17:01:48 -Generating unique operation named: infoUsingGET_1
2019-05-28 17:01:48 -Generating unique operation named: infoUsingHEAD_1
2019-05-28 17:01:48 -Generating unique operation named: infoUsingPOST_1
2019-05-28 17:01:48 -Generating unique operation named: infoUsingPUT_1
2019-05-28 17:01:48 -Generating unique operation named: infoUsingPATCH_1
2019-05-28 17:01:48 -Generating unique operation named: infoUsingDELETE_1
2019-05-28 17:01:48 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-28 17:01:48 -Generating unique operation named: infoUsingTRACE_1
2019-05-28 17:01:48 -Generating unique operation named: listUsingGET_10
2019-05-28 17:01:48 -Generating unique operation named: removeUsingPOST_18
2019-05-28 17:01:48 -Generating unique operation named: removeUsingPOST_19
2019-05-28 17:01:48 -Generating unique operation named: saveUsingPOST_9
2019-05-28 17:01:48 -Generating unique operation named: updateUsingPOST_10
2019-05-28 17:01:48 -Generating unique operation named: listUsingGET_11
2019-05-28 17:01:48 -Generating unique operation named: removeUsingPOST_20
2019-05-28 17:01:48 -Generating unique operation named: welcomeUsingGET_1
2019-05-28 17:01:48 -Generating unique operation named: addUsingGET_10
2019-05-28 17:01:48 -Generating unique operation named: editUsingGET_11
2019-05-28 17:01:48 -Generating unique operation named: listUsingGET_12
2019-05-28 17:01:48 -Generating unique operation named: removeUsingPOST_21
2019-05-28 17:01:48 -Generating unique operation named: saveUsingPOST_10
2019-05-28 17:01:48 -Generating unique operation named: treeUsingGET_1
2019-05-28 17:01:48 -Generating unique operation named: treeUsingGET_2
2019-05-28 17:01:48 -Generating unique operation named: updateUsingPOST_11
2019-05-28 17:01:48 -Generating unique operation named: addUsingGET_11
2019-05-28 17:01:48 -Generating unique operation named: editUsingGET_12
2019-05-28 17:01:48 -Generating unique operation named: listUsingGET_13
2019-05-28 17:01:48 -Generating unique operation named: removeUsingPOST_22
2019-05-28 17:01:48 -Generating unique operation named: removeUsingPOST_23
2019-05-28 17:01:48 -Generating unique operation named: updateUsingPOST_12
2019-05-28 17:01:48 -Generating unique operation named: addUsingGET_12
2019-05-28 17:01:48 -Generating unique operation named: editUsingGET_13
2019-05-28 17:01:48 -Generating unique operation named: listUsingGET_14
2019-05-28 17:01:48 -Generating unique operation named: removeUsingPOST_24
2019-05-28 17:01:48 -Generating unique operation named: removeUsingPOST_25
2019-05-28 17:01:48 -Generating unique operation named: saveUsingPOST_11
2019-05-28 17:01:48 -Generating unique operation named: updateUsingGET_8
2019-05-28 17:01:48 -Generating unique operation named: updateUsingHEAD_8
2019-05-28 17:01:48 -Generating unique operation named: updateUsingPOST_13
2019-05-28 17:01:48 -Generating unique operation named: updateUsingPUT_8
2019-05-28 17:01:48 -Generating unique operation named: updateUsingPATCH_8
2019-05-28 17:01:48 -Generating unique operation named: updateUsingDELETE_8
2019-05-28 17:01:48 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-28 17:01:48 -Generating unique operation named: updateUsingTRACE_8
2019-05-28 17:01:48 -Generating unique operation named: addUsingGET_13
2019-05-28 17:01:48 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-28 17:01:48 -Generating unique operation named: editUsingGET_14
2019-05-28 17:01:48 -Generating unique operation named: listUsingGET_15
2019-05-28 17:01:48 -Generating unique operation named: printEditUsingGET_1
2019-05-28 17:01:48 -Generating unique operation named: removeUsingPOST_26
2019-05-28 17:01:48 -Generating unique operation named: saveUsingPOST_12
2019-05-28 17:01:48 -Generating unique operation named: updateUsingGET_9
2019-05-28 17:01:48 -Generating unique operation named: updateUsingHEAD_9
2019-05-28 17:01:48 -Generating unique operation named: updateUsingPOST_14
2019-05-28 17:01:48 -Generating unique operation named: updateUsingPUT_9
2019-05-28 17:01:48 -Generating unique operation named: updateUsingPATCH_9
2019-05-28 17:01:48 -Generating unique operation named: updateUsingDELETE_9
2019-05-28 17:01:48 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-28 17:01:48 -Generating unique operation named: updateUsingTRACE_9
2019-05-28 17:01:48 -Generating unique operation named: addUsingGET_14
2019-05-28 17:01:49 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-28 17:01:49 -Generating unique operation named: editUsingGET_15
2019-05-28 17:01:49 -Generating unique operation named: listUsingGET_16
2019-05-28 17:01:49 -Generating unique operation named: saveUsingPOST_13
2019-05-28 17:01:49 -Generating unique operation named: saveUsingPOST_14
2019-05-28 17:01:49 -Generating unique operation named: updateUsingPOST_15
2019-05-28 17:01:49 -Generating unique operation named: listUsingGET_17
2019-05-28 17:01:49 -Generating unique operation named: listUsingHEAD_1
2019-05-28 17:01:49 -Generating unique operation named: listUsingPOST_1
2019-05-28 17:01:49 -Generating unique operation named: listUsingPUT_1
2019-05-28 17:01:49 -Generating unique operation named: listUsingPATCH_1
2019-05-28 17:01:49 -Generating unique operation named: listUsingDELETE_1
2019-05-28 17:01:49 -Generating unique operation named: listUsingOPTIONS_1
2019-05-28 17:01:49 -Generating unique operation named: listUsingTRACE_1
2019-05-28 17:01:49 -Generating unique operation named: countDDUsingGET_1
2019-05-28 17:01:49 -Generating unique operation named: exportDDUsingGET_1
2019-05-28 17:01:49 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-28 17:01:49 -Generating unique operation named: addUsingGET_15
2019-05-28 17:01:49 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-28 17:01:49 -Generating unique operation named: editUsingGET_16
2019-05-28 17:01:49 -Generating unique operation named: listUsingGET_18
2019-05-28 17:01:49 -Generating unique operation named: removeUsingPOST_27
2019-05-28 17:01:49 -Generating unique operation named: saveUsingPOST_15
2019-05-28 17:01:49 -Generating unique operation named: treeUsingGET_3
2019-05-28 17:01:49 -Generating unique operation named: treeViewUsingGET_1
2019-05-28 17:01:49 -Generating unique operation named: updateUsingPOST_16
2019-05-28 17:01:49 -Generating unique operation named: addUsingGET_16
2019-05-28 17:01:49 -Generating unique operation named: editUsingGET_17
2019-05-28 17:01:49 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-28 17:01:49 -Generating unique operation named: listUsingGET_19
2019-05-28 17:01:49 -Generating unique operation named: removeUsingPOST_28
2019-05-28 17:01:49 -Generating unique operation named: removeUsingPOST_29
2019-05-28 17:01:49 -Generating unique operation named: saveUsingPOST_16
2019-05-28 17:01:49 -Generating unique operation named: updateUsingGET_10
2019-05-28 17:01:49 -Generating unique operation named: updateUsingHEAD_10
2019-05-28 17:01:49 -Generating unique operation named: updateUsingPOST_17
2019-05-28 17:01:49 -Generating unique operation named: updateUsingPUT_10
2019-05-28 17:01:49 -Generating unique operation named: updateUsingPATCH_10
2019-05-28 17:01:49 -Generating unique operation named: updateUsingDELETE_10
2019-05-28 17:01:49 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-28 17:01:49 -Generating unique operation named: updateUsingTRACE_10
2019-05-28 17:01:49 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-28 17:01:49 -Generating unique operation named: addUsingGET_17
2019-05-28 17:01:49 -Generating unique operation named: editUsingGET_18
2019-05-28 17:01:49 -Generating unique operation named: listUsingGET_20
2019-05-28 17:01:49 -Generating unique operation named: removeUsingPOST_30
2019-05-28 17:01:49 -Generating unique operation named: removeUsingPOST_31
2019-05-28 17:01:49 -Generating unique operation named: saveUsingPOST_17
2019-05-28 17:01:49 -Generating unique operation named: updateUsingGET_11
2019-05-28 17:01:49 -Generating unique operation named: updateUsingHEAD_11
2019-05-28 17:01:49 -Generating unique operation named: updateUsingPOST_18
2019-05-28 17:01:49 -Generating unique operation named: updateUsingPUT_11
2019-05-28 17:01:49 -Generating unique operation named: updateUsingPATCH_11
2019-05-28 17:01:49 -Generating unique operation named: updateUsingDELETE_11
2019-05-28 17:01:49 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-28 17:01:49 -Generating unique operation named: updateUsingTRACE_11
2019-05-28 17:01:49 -Generating unique operation named: addUsingGET_18
2019-05-28 17:01:49 -Generating unique operation named: editUsingGET_19
2019-05-28 17:01:49 -Generating unique operation named: listUsingGET_21
2019-05-28 17:01:49 -Generating unique operation named: removeUsingPOST_32
2019-05-28 17:01:49 -Generating unique operation named: removeUsingPOST_33
2019-05-28 17:01:49 -Generating unique operation named: saveUsingPOST_18
2019-05-28 17:01:49 -Generating unique operation named: updateUsingGET_12
2019-05-28 17:01:49 -Generating unique operation named: updateUsingHEAD_12
2019-05-28 17:01:49 -Generating unique operation named: updateUsingPOST_19
2019-05-28 17:01:49 -Generating unique operation named: updateUsingPUT_12
2019-05-28 17:01:49 -Generating unique operation named: updateUsingPATCH_12
2019-05-28 17:01:49 -Generating unique operation named: updateUsingDELETE_12
2019-05-28 17:01:49 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-28 17:01:49 -Generating unique operation named: updateUsingTRACE_12
2019-05-28 17:01:49 -Starting Quartz Scheduler now
2019-05-28 17:01:49 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-28 17:01:49 -Starting...
2019-05-28 17:01:49 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-28 17:01:49 -Started.
2019-05-28 17:01:49 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-28 17:01:49 -Using a shared selector for servlet write/read
2019-05-28 17:01:50 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-28 17:01:50 -Started BootdoApplication in 30.42 seconds (JVM running for 31.772)
2019-05-28 17:01:50 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-28 17:01:50 -==> Parameters: 
2019-05-28 17:01:50 -<==      Total: 1
2019-05-28 17:01:59 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-28 17:01:59 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-28 17:01:59 -FrameworkServlet 'dispatcherServlet': initialization completed in 59 ms
2019-05-28 17:01:59 -Enabling session validation scheduler...
2019-05-28 17:01:59 -请求地址 : http://localhost:8081/login;JSESSIONID=889dd2f6-7015-4e0a-b1a5-df3890a1cd8b
2019-05-28 17:01:59 -HTTP METHOD : GET
2019-05-28 17:01:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 17:01:59 -参数 : [{}]
2019-05-28 17:01:59 -耗时 : 9
2019-05-28 17:01:59 -返回值 : login
2019-05-28 17:02:01 -请求地址 : http://localhost:8081/getVerify
2019-05-28 17:02:01 -HTTP METHOD : GET
2019-05-28 17:02:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-28 17:02:01 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@751be448, org.apache.shiro.web.servlet.ShiroHttpServletResponse@71247e33]
2019-05-28 17:02:02 -7989
2019-05-28 17:02:02 -耗时 : 745
2019-05-28 17:02:02 -返回值 : null
2019-05-28 17:02:06 -请求地址 : http://localhost:8081/login
2019-05-28 17:02:06 -HTTP METHOD : POST
2019-05-28 17:02:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-28 17:02:06 -参数 : [admin, 111111, 7989, org.apache.shiro.web.servlet.ShiroHttpServletRequest@57d965b8]
2019-05-28 17:02:06 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-28 17:02:06 -==> Parameters: admin(String)
2019-05-28 17:02:06 -<==      Total: 1
2019-05-28 17:02:06 -耗时 : 155
2019-05-28 17:02:06 -返回值 : {msg=操作成功, code=0}
2019-05-28 17:02:06 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-28 17:02:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 17:02:06 -==> Parameters: 1(Long), admin(String), 登录(String), 155(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-28 17:02:06.933(Timestamp)
2019-05-28 17:02:06 -请求地址 : http://localhost:8081/index
2019-05-28 17:02:06 -HTTP METHOD : GET
2019-05-28 17:02:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 17:02:06 -参数 : [{}]
2019-05-28 17:02:07 -<==    Updates: 1
2019-05-28 17:02:07 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 17:02:07 -==> Parameters: 1(Long)
2019-05-28 17:02:07 -<==      Total: 50
2019-05-28 17:02:07 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 17:02:07 -==> Parameters: 138(Long)
2019-05-28 17:02:07 -<==      Total: 1
2019-05-28 17:02:07 -耗时 : 256
2019-05-28 17:02:07 -返回值 : index_v1
2019-05-28 17:02:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 17:02:07 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 256(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 17:02:07.317(Timestamp)
2019-05-28 17:02:07 -<==    Updates: 1
2019-05-28 17:02:07 -请求地址 : http://localhost:8081/main
2019-05-28 17:02:07 -HTTP METHOD : GET
2019-05-28 17:02:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 17:02:07 -参数 : []
2019-05-28 17:02:07 -耗时 : 1
2019-05-28 17:02:07 -返回值 : main
2019-05-28 17:02:07 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 17:02:07 -HTTP METHOD : GET
2019-05-28 17:02:07 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 17:02:07 -参数 : []
2019-05-28 17:02:07 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 17:02:07 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 17:02:07 -<==      Total: 0
2019-05-28 17:02:07 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 17:02:07 -==> Parameters: 1(Long), 0(String)
2019-05-28 17:02:07 -<==      Total: 1
2019-05-28 17:02:07 -耗时 : 107
2019-05-28 17:02:07 -返回值 : com.bootdo.common.utils.PageUtils@55d1809
2019-05-28 17:02:07 -请求地址 : http://localhost:8081/main
2019-05-28 17:02:07 -HTTP METHOD : GET
2019-05-28 17:02:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 17:02:07 -参数 : []
2019-05-28 17:02:07 -耗时 : 0
2019-05-28 17:02:07 -返回值 : main
2019-05-28 17:02:21 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 17:02:21 -==> Parameters: 1(Long)
2019-05-28 17:02:21 -<==      Total: 94
2019-05-28 17:02:21 -请求地址 : http://localhost:8081/heat/heat
2019-05-28 17:02:21 -HTTP METHOD : GET
2019-05-28 17:02:21 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-05-28 17:02:21 -参数 : []
2019-05-28 17:02:21 -耗时 : 1
2019-05-28 17:02:21 -返回值 : heat/heat/heat
2019-05-28 17:02:21 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-28 17:02:21 -HTTP METHOD : GET
2019-05-28 17:02:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:02:21 -参数 : [heatType]
2019-05-28 17:02:21 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:02:21 -HTTP METHOD : GET
2019-05-28 17:02:21 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:02:21 -参数 : [userType]
2019-05-28 17:02:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:02:21 -==> Parameters: userType(String)
2019-05-28 17:02:21 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:02:21 -==> Parameters: heatType(String)
2019-05-28 17:02:22 -<==      Total: 4
2019-05-28 17:02:22 -耗时 : 151
2019-05-28 17:02:22 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:02:22 -<==      Total: 4
2019-05-28 17:02:22 -耗时 : 282
2019-05-28 17:02:22 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:02:22 -请求地址 : http://localhost:8081/heat/heat/list
2019-05-28 17:02:22 -HTTP METHOD : GET
2019-05-28 17:02:22 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-05-28 17:02:22 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-28 17:02:22 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-05-28 17:02:22 -==> Parameters: 0(Integer), 10(Integer)
2019-05-28 17:02:22 -<==      Total: 10
2019-05-28 17:02:22 -==>  Preparing: select count(*) from heat 
2019-05-28 17:02:22 -==> Parameters: 
2019-05-28 17:02:22 -<==      Total: 1
2019-05-28 17:02:22 -耗时 : 499
2019-05-28 17:02:22 -返回值 : com.bootdo.common.utils.PageUtils@f996d4d
2019-05-28 17:02:23 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-05-28 17:02:23 -HTTP METHOD : GET
2019-05-28 17:02:23 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-05-28 17:02:23 -参数 : []
2019-05-28 17:02:23 -耗时 : 1
2019-05-28 17:02:23 -返回值 : heat/heatUpLoad/heatUpLoad
2019-05-28 17:02:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 8]
2019-05-28 17:02:58 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 17:02:58 -HTTP METHOD : GET
2019-05-28 17:02:58 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 17:02:58 -参数 : []
2019-05-28 17:02:58 -耗时 : 1
2019-05-28 17:02:58 -返回值 : system/dept/deptTree
2019-05-28 17:02:59 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 17:02:59 -HTTP METHOD : GET
2019-05-28 17:02:59 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 17:02:59 -参数 : []
2019-05-28 17:02:59 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 17:02:59 -==> Parameters: 
2019-05-28 17:02:59 -<==      Total: 3
2019-05-28 17:02:59 -耗时 : 24
2019-05-28 17:02:59 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 17:03:01 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 17:03:01 -HTTP METHOD : POST
2019-05-28 17:03:01 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 17:03:01 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4c0ac8ca, 2019-01, 2]
2019-05-28 17:03:02 -耗时 : 940
2019-05-28 17:03:02 -返回值 : 第4行，用户暖费为空，请认真编写
2019-05-28 17:06:22 -Starting BootdoApplication on PC-201905091110 with PID 36960 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-28 17:06:22 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-28 17:06:22 -The following profiles are active: dev
2019-05-28 17:06:22 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e8f7922: startup date [Tue May 28 17:06:22 CST 2019]; root of context hierarchy
2019-05-28 17:06:26 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-28 17:06:29 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$47d62188] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:06:29 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$3a2f502f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:06:30 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:06:30 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:06:30 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:06:30 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-28 17:06:30 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-28 17:06:30 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:06:30 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:06:30 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:06:31 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 17:06:31 -Tomcat initialized with port(s): 8081 (http)
2019-05-28 17:06:32 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-28 17:06:32 -Starting service [Tomcat]
2019-05-28 17:06:32 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-28 17:06:32 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-28 17:06:32 -Initializing Spring embedded WebApplicationContext
2019-05-28 17:06:32 -Root WebApplicationContext: initialization completed in 9549 ms
2019-05-28 17:06:33 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-28 17:06:33 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-28 17:06:33 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-28 17:06:33 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-28 17:06:33 -Filter xssFilter was not registered (disabled)
2019-05-28 17:06:33 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-28 17:06:33 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-28 17:06:33 -Servlet statViewServlet mapped to [/druid/*]
2019-05-28 17:06:33 -Servlet dispatcherServlet mapped to [/]
2019-05-28 17:06:36 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e8f7922: startup date [Tue May 28 17:06:22 CST 2019]; root of context hierarchy
2019-05-28 17:06:37 -Using default implementation for ThreadExecutor
2019-05-28 17:06:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-28 17:06:37 -Quartz Scheduler v.2.2.1 created.
2019-05-28 17:06:37 -RAMJobStore initialized.
2019-05-28 17:06:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-28 17:06:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-28 17:06:37 -Quartz scheduler version: 2.2.1
2019-05-28 17:06:37 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@60fbc34d
2019-05-28 17:06:38 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-28 17:06:38 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-28 17:06:41 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-28 17:06:41 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 17:06:41 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-28 17:06:41 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 17:06:41 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-28 17:06:41 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-28 17:06:41 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 17:06:41 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-28 17:06:41 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-28 17:06:41 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 17:06:41 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-28 17:06:41 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 17:06:41 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-28 17:06:41 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 17:06:41 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 17:06:41 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-28 17:06:41 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-28 17:06:41 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 17:06:41 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 17:06:41 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-28 17:06:41 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 17:06:41 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-28 17:06:41 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-28 17:06:41 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 17:06:41 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-28 17:06:41 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-28 17:06:41 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-28 17:06:41 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-28 17:06:41 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-28 17:06:41 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-28 17:06:41 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-28 17:06:41 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-28 17:06:41 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-28 17:06:41 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-28 17:06:41 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-28 17:06:41 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-28 17:06:41 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-28 17:06:41 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 17:06:41 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-28 17:06:41 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 17:06:41 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-28 17:06:41 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-28 17:06:41 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-28 17:06:41 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-28 17:06:41 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-28 17:06:41 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-28 17:06:41 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-28 17:06:41 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-28 17:06:41 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-28 17:06:41 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 17:06:41 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 17:06:41 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-28 17:06:41 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-28 17:06:41 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 17:06:41 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-28 17:06:41 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-28 17:06:41 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-28 17:06:41 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-28 17:06:41 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-28 17:06:41 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-28 17:06:41 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 17:06:41 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 17:06:41 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-28 17:06:41 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-28 17:06:41 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-28 17:06:41 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-28 17:06:41 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-28 17:06:41 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-28 17:06:41 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 17:06:41 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-28 17:06:41 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-28 17:06:41 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 17:06:41 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 17:06:41 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-28 17:06:41 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-28 17:06:41 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-28 17:06:41 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 17:06:41 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 17:06:41 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 17:06:41 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-28 17:06:41 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 17:06:41 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-28 17:06:41 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 17:06:41 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 17:06:41 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-28 17:06:41 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-28 17:06:41 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-28 17:06:41 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-28 17:06:41 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-28 17:06:41 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-28 17:06:41 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 17:06:41 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-28 17:06:41 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-28 17:06:41 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-28 17:06:41 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-28 17:06:41 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-28 17:06:41 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-28 17:06:41 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-28 17:06:41 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-28 17:06:41 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-28 17:06:41 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-28 17:06:41 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-28 17:06:41 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-28 17:06:41 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-28 17:06:41 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-28 17:06:41 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-28 17:06:41 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-28 17:06:41 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-28 17:06:41 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-28 17:06:41 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-28 17:06:41 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-28 17:06:41 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 17:06:41 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-28 17:06:41 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-28 17:06:41 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-28 17:06:41 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-28 17:06:41 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-28 17:06:41 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-28 17:06:41 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-28 17:06:41 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-28 17:06:41 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-28 17:06:41 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-28 17:06:41 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-28 17:06:41 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-28 17:06:41 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-28 17:06:41 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-28 17:06:41 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-28 17:06:41 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-28 17:06:41 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 17:06:41 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 17:06:41 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 17:06:41 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-28 17:06:41 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-28 17:06:41 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-28 17:06:41 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-28 17:06:41 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-28 17:06:41 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-28 17:06:41 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-28 17:06:41 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 17:06:41 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-28 17:06:41 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-28 17:06:41 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-28 17:06:41 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 17:06:41 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 17:06:41 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 17:06:41 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-28 17:06:41 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 17:06:41 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 17:06:41 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 17:06:41 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-28 17:06:41 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-28 17:06:41 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 17:06:41 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-28 17:06:41 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-28 17:06:41 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-28 17:06:42 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-28 17:06:42 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-28 17:06:42 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-28 17:06:43 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 17:06:43 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e8f7922: startup date [Tue May 28 17:06:22 CST 2019]; root of context hierarchy
2019-05-28 17:06:43 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 17:06:43 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 17:06:43 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 17:06:43 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-28 17:06:44 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-28 17:06:46 -Registering beans for JMX exposure on startup
2019-05-28 17:06:46 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-28 17:06:46 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-28 17:06:46 -Starting beans in phase 2147483647
2019-05-28 17:06:46 -Context refreshed
2019-05-28 17:06:46 -Found 1 custom documentation plugin(s)
2019-05-28 17:06:46 -Scanning for api listing references
2019-05-28 17:06:47 -Generating unique operation named: getCountDUsingPOST_1
2019-05-28 17:06:47 -Generating unique operation named: removeUsingPOST_1
2019-05-28 17:06:47 -Generating unique operation named: addUsingGET_1
2019-05-28 17:06:47 -Generating unique operation named: editUsingGET_1
2019-05-28 17:06:47 -Generating unique operation named: listUsingGET_1
2019-05-28 17:06:47 -Generating unique operation named: removeUsingPOST_2
2019-05-28 17:06:47 -Generating unique operation named: removeUsingPOST_3
2019-05-28 17:06:47 -Generating unique operation named: saveUsingPOST_1
2019-05-28 17:06:47 -Generating unique operation named: updateUsingGET_1
2019-05-28 17:06:47 -Generating unique operation named: updateUsingHEAD_1
2019-05-28 17:06:47 -Generating unique operation named: updateUsingPOST_1
2019-05-28 17:06:47 -Generating unique operation named: updateUsingPUT_1
2019-05-28 17:06:47 -Generating unique operation named: updateUsingPATCH_1
2019-05-28 17:06:47 -Generating unique operation named: updateUsingDELETE_1
2019-05-28 17:06:47 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-28 17:06:47 -Generating unique operation named: updateUsingTRACE_1
2019-05-28 17:06:47 -Generating unique operation named: addUsingGET_2
2019-05-28 17:06:47 -Generating unique operation named: editUsingGET_2
2019-05-28 17:06:47 -Generating unique operation named: listUsingGET_2
2019-05-28 17:06:47 -Generating unique operation named: removeUsingPOST_4
2019-05-28 17:06:47 -Generating unique operation named: removeUsingPOST_5
2019-05-28 17:06:47 -Generating unique operation named: saveUsingPOST_2
2019-05-28 17:06:47 -Generating unique operation named: updateUsingPOST_2
2019-05-28 17:06:47 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-28 17:06:47 -Generating unique operation named: addUsingGET_3
2019-05-28 17:06:47 -Generating unique operation named: editUsingGET_3
2019-05-28 17:06:47 -Generating unique operation named: listUsingGET_3
2019-05-28 17:06:47 -Generating unique operation named: removeUsingPOST_6
2019-05-28 17:06:47 -Generating unique operation named: removeUsingPOST_7
2019-05-28 17:06:47 -Generating unique operation named: saveUsingPOST_3
2019-05-28 17:06:47 -Generating unique operation named: updateUsingGET_2
2019-05-28 17:06:47 -Generating unique operation named: updateUsingHEAD_2
2019-05-28 17:06:47 -Generating unique operation named: updateUsingPOST_3
2019-05-28 17:06:47 -Generating unique operation named: updateUsingPUT_2
2019-05-28 17:06:47 -Generating unique operation named: updateUsingPATCH_2
2019-05-28 17:06:47 -Generating unique operation named: updateUsingDELETE_2
2019-05-28 17:06:47 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-28 17:06:47 -Generating unique operation named: updateUsingTRACE_2
2019-05-28 17:06:47 -Generating unique operation named: addUsingGET_4
2019-05-28 17:06:47 -Generating unique operation named: editUsingGET_4
2019-05-28 17:06:47 -Generating unique operation named: listUsingGET_4
2019-05-28 17:06:47 -Generating unique operation named: removeUsingPOST_8
2019-05-28 17:06:47 -Generating unique operation named: removeUsingPOST_9
2019-05-28 17:06:47 -Generating unique operation named: saveUsingPOST_4
2019-05-28 17:06:47 -Generating unique operation named: updateUsingGET_3
2019-05-28 17:06:47 -Generating unique operation named: updateUsingHEAD_3
2019-05-28 17:06:47 -Generating unique operation named: updateUsingPOST_4
2019-05-28 17:06:47 -Generating unique operation named: updateUsingPUT_3
2019-05-28 17:06:47 -Generating unique operation named: updateUsingPATCH_3
2019-05-28 17:06:47 -Generating unique operation named: updateUsingDELETE_3
2019-05-28 17:06:47 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-28 17:06:47 -Generating unique operation named: updateUsingTRACE_3
2019-05-28 17:06:47 -Generating unique operation named: ElecUsingGET_1
2019-05-28 17:06:47 -Generating unique operation named: addUsingGET_5
2019-05-28 17:06:47 -Generating unique operation named: editUsingGET_5
2019-05-28 17:06:48 -Generating unique operation named: listUsingGET_5
2019-05-28 17:06:48 -Generating unique operation named: removeUsingPOST_10
2019-05-28 17:06:48 -Generating unique operation named: removeUsingPOST_11
2019-05-28 17:06:48 -Generating unique operation named: saveUsingPOST_5
2019-05-28 17:06:48 -Generating unique operation named: updateUsingGET_4
2019-05-28 17:06:48 -Generating unique operation named: updateUsingHEAD_4
2019-05-28 17:06:48 -Generating unique operation named: updateUsingPOST_5
2019-05-28 17:06:48 -Generating unique operation named: updateUsingPUT_4
2019-05-28 17:06:48 -Generating unique operation named: updateUsingPATCH_4
2019-05-28 17:06:48 -Generating unique operation named: updateUsingDELETE_4
2019-05-28 17:06:48 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-28 17:06:48 -Generating unique operation named: updateUsingTRACE_4
2019-05-28 17:06:48 -Generating unique operation named: editUsingGET_6
2019-05-28 17:06:48 -Generating unique operation named: listUsingGET_6
2019-05-28 17:06:48 -Generating unique operation named: updateUsingPOST_6
2019-05-28 17:06:48 -Generating unique operation named: addUsingGET_6
2019-05-28 17:06:48 -Generating unique operation named: editUsingGET_7
2019-05-28 17:06:48 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-28 17:06:48 -Generating unique operation named: listUsingGET_7
2019-05-28 17:06:48 -Generating unique operation named: removeUsingPOST_12
2019-05-28 17:06:48 -Generating unique operation named: removeUsingPOST_13
2019-05-28 17:06:48 -Generating unique operation named: saveUsingPOST_6
2019-05-28 17:06:48 -Generating unique operation named: updateUsingGET_5
2019-05-28 17:06:48 -Generating unique operation named: updateUsingHEAD_5
2019-05-28 17:06:48 -Generating unique operation named: updateUsingPOST_7
2019-05-28 17:06:48 -Generating unique operation named: updateUsingPUT_5
2019-05-28 17:06:48 -Generating unique operation named: updateUsingPATCH_5
2019-05-28 17:06:48 -Generating unique operation named: updateUsingDELETE_5
2019-05-28 17:06:48 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-28 17:06:48 -Generating unique operation named: updateUsingTRACE_5
2019-05-28 17:06:48 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-28 17:06:48 -Generating unique operation named: addUsingGET_7
2019-05-28 17:06:48 -Generating unique operation named: editUsingGET_8
2019-05-28 17:06:48 -Generating unique operation named: listUsingGET_8
2019-05-28 17:06:48 -Generating unique operation named: removeUsingPOST_14
2019-05-28 17:06:48 -Generating unique operation named: removeUsingPOST_15
2019-05-28 17:06:48 -Generating unique operation named: saveUsingPOST_7
2019-05-28 17:06:48 -Generating unique operation named: updateUsingGET_6
2019-05-28 17:06:48 -Generating unique operation named: updateUsingHEAD_6
2019-05-28 17:06:48 -Generating unique operation named: updateUsingPOST_8
2019-05-28 17:06:48 -Generating unique operation named: updateUsingPUT_6
2019-05-28 17:06:48 -Generating unique operation named: updateUsingPATCH_6
2019-05-28 17:06:48 -Generating unique operation named: updateUsingDELETE_6
2019-05-28 17:06:48 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-28 17:06:48 -Generating unique operation named: updateUsingTRACE_6
2019-05-28 17:06:48 -Generating unique operation named: addUsingGET_8
2019-05-28 17:06:48 -Generating unique operation named: editUsingGET_9
2019-05-28 17:06:48 -Generating unique operation named: listUsingGET_9
2019-05-28 17:06:48 -Generating unique operation named: removeUsingPOST_16
2019-05-28 17:06:48 -Generating unique operation named: removeUsingPOST_17
2019-05-28 17:06:48 -Generating unique operation named: saveUsingPOST_8
2019-05-28 17:06:48 -Generating unique operation named: updateUsingGET_7
2019-05-28 17:06:48 -Generating unique operation named: updateUsingHEAD_7
2019-05-28 17:06:48 -Generating unique operation named: updateUsingPOST_9
2019-05-28 17:06:48 -Generating unique operation named: updateUsingPUT_7
2019-05-28 17:06:48 -Generating unique operation named: updateUsingPATCH_7
2019-05-28 17:06:48 -Generating unique operation named: updateUsingDELETE_7
2019-05-28 17:06:48 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-28 17:06:48 -Generating unique operation named: updateUsingTRACE_7
2019-05-28 17:06:48 -Generating unique operation named: addUsingGET_9
2019-05-28 17:06:48 -Generating unique operation named: editUsingGET_10
2019-05-28 17:06:48 -Generating unique operation named: infoUsingGET_1
2019-05-28 17:06:48 -Generating unique operation named: infoUsingHEAD_1
2019-05-28 17:06:48 -Generating unique operation named: infoUsingPOST_1
2019-05-28 17:06:48 -Generating unique operation named: infoUsingPUT_1
2019-05-28 17:06:48 -Generating unique operation named: infoUsingPATCH_1
2019-05-28 17:06:48 -Generating unique operation named: infoUsingDELETE_1
2019-05-28 17:06:48 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-28 17:06:48 -Generating unique operation named: infoUsingTRACE_1
2019-05-28 17:06:48 -Generating unique operation named: listUsingGET_10
2019-05-28 17:06:48 -Generating unique operation named: removeUsingPOST_18
2019-05-28 17:06:48 -Generating unique operation named: removeUsingPOST_19
2019-05-28 17:06:48 -Generating unique operation named: saveUsingPOST_9
2019-05-28 17:06:48 -Generating unique operation named: updateUsingPOST_10
2019-05-28 17:06:48 -Generating unique operation named: listUsingGET_11
2019-05-28 17:06:48 -Generating unique operation named: removeUsingPOST_20
2019-05-28 17:06:48 -Generating unique operation named: welcomeUsingGET_1
2019-05-28 17:06:48 -Generating unique operation named: addUsingGET_10
2019-05-28 17:06:48 -Generating unique operation named: editUsingGET_11
2019-05-28 17:06:48 -Generating unique operation named: listUsingGET_12
2019-05-28 17:06:49 -Generating unique operation named: removeUsingPOST_21
2019-05-28 17:06:49 -Generating unique operation named: saveUsingPOST_10
2019-05-28 17:06:49 -Generating unique operation named: treeUsingGET_1
2019-05-28 17:06:49 -Generating unique operation named: treeUsingGET_2
2019-05-28 17:06:49 -Generating unique operation named: updateUsingPOST_11
2019-05-28 17:06:49 -Generating unique operation named: addUsingGET_11
2019-05-28 17:06:49 -Generating unique operation named: editUsingGET_12
2019-05-28 17:06:49 -Generating unique operation named: listUsingGET_13
2019-05-28 17:06:49 -Generating unique operation named: removeUsingPOST_22
2019-05-28 17:06:49 -Generating unique operation named: removeUsingPOST_23
2019-05-28 17:06:49 -Generating unique operation named: updateUsingPOST_12
2019-05-28 17:06:49 -Generating unique operation named: addUsingGET_12
2019-05-28 17:06:49 -Generating unique operation named: editUsingGET_13
2019-05-28 17:06:49 -Generating unique operation named: listUsingGET_14
2019-05-28 17:06:49 -Generating unique operation named: removeUsingPOST_24
2019-05-28 17:06:49 -Generating unique operation named: removeUsingPOST_25
2019-05-28 17:06:49 -Generating unique operation named: saveUsingPOST_11
2019-05-28 17:06:49 -Generating unique operation named: updateUsingGET_8
2019-05-28 17:06:49 -Generating unique operation named: updateUsingHEAD_8
2019-05-28 17:06:49 -Generating unique operation named: updateUsingPOST_13
2019-05-28 17:06:49 -Generating unique operation named: updateUsingPUT_8
2019-05-28 17:06:49 -Generating unique operation named: updateUsingPATCH_8
2019-05-28 17:06:49 -Generating unique operation named: updateUsingDELETE_8
2019-05-28 17:06:49 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-28 17:06:49 -Generating unique operation named: updateUsingTRACE_8
2019-05-28 17:06:49 -Generating unique operation named: addUsingGET_13
2019-05-28 17:06:49 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-28 17:06:49 -Generating unique operation named: editUsingGET_14
2019-05-28 17:06:49 -Generating unique operation named: listUsingGET_15
2019-05-28 17:06:49 -Generating unique operation named: printEditUsingGET_1
2019-05-28 17:06:49 -Generating unique operation named: removeUsingPOST_26
2019-05-28 17:06:49 -Generating unique operation named: saveUsingPOST_12
2019-05-28 17:06:49 -Generating unique operation named: updateUsingGET_9
2019-05-28 17:06:49 -Generating unique operation named: updateUsingHEAD_9
2019-05-28 17:06:49 -Generating unique operation named: updateUsingPOST_14
2019-05-28 17:06:49 -Generating unique operation named: updateUsingPUT_9
2019-05-28 17:06:49 -Generating unique operation named: updateUsingPATCH_9
2019-05-28 17:06:49 -Generating unique operation named: updateUsingDELETE_9
2019-05-28 17:06:49 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-28 17:06:49 -Generating unique operation named: updateUsingTRACE_9
2019-05-28 17:06:49 -Generating unique operation named: addUsingGET_14
2019-05-28 17:06:49 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-28 17:06:49 -Generating unique operation named: editUsingGET_15
2019-05-28 17:06:49 -Generating unique operation named: listUsingGET_16
2019-05-28 17:06:49 -Generating unique operation named: saveUsingPOST_13
2019-05-28 17:06:49 -Generating unique operation named: saveUsingPOST_14
2019-05-28 17:06:49 -Generating unique operation named: updateUsingPOST_15
2019-05-28 17:06:49 -Generating unique operation named: listUsingGET_17
2019-05-28 17:06:49 -Generating unique operation named: listUsingHEAD_1
2019-05-28 17:06:49 -Generating unique operation named: listUsingPOST_1
2019-05-28 17:06:49 -Generating unique operation named: listUsingPUT_1
2019-05-28 17:06:49 -Generating unique operation named: listUsingPATCH_1
2019-05-28 17:06:49 -Generating unique operation named: listUsingDELETE_1
2019-05-28 17:06:49 -Generating unique operation named: listUsingOPTIONS_1
2019-05-28 17:06:49 -Generating unique operation named: listUsingTRACE_1
2019-05-28 17:06:49 -Generating unique operation named: countDDUsingGET_1
2019-05-28 17:06:49 -Generating unique operation named: exportDDUsingGET_1
2019-05-28 17:06:49 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-28 17:06:49 -Generating unique operation named: addUsingGET_15
2019-05-28 17:06:49 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-28 17:06:49 -Generating unique operation named: editUsingGET_16
2019-05-28 17:06:49 -Generating unique operation named: listUsingGET_18
2019-05-28 17:06:49 -Generating unique operation named: removeUsingPOST_27
2019-05-28 17:06:49 -Generating unique operation named: saveUsingPOST_15
2019-05-28 17:06:49 -Generating unique operation named: treeUsingGET_3
2019-05-28 17:06:49 -Generating unique operation named: treeViewUsingGET_1
2019-05-28 17:06:49 -Generating unique operation named: updateUsingPOST_16
2019-05-28 17:06:49 -Generating unique operation named: addUsingGET_16
2019-05-28 17:06:49 -Generating unique operation named: editUsingGET_17
2019-05-28 17:06:49 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-28 17:06:49 -Generating unique operation named: listUsingGET_19
2019-05-28 17:06:49 -Generating unique operation named: removeUsingPOST_28
2019-05-28 17:06:49 -Generating unique operation named: removeUsingPOST_29
2019-05-28 17:06:49 -Generating unique operation named: saveUsingPOST_16
2019-05-28 17:06:49 -Generating unique operation named: updateUsingGET_10
2019-05-28 17:06:49 -Generating unique operation named: updateUsingHEAD_10
2019-05-28 17:06:49 -Generating unique operation named: updateUsingPOST_17
2019-05-28 17:06:49 -Generating unique operation named: updateUsingPUT_10
2019-05-28 17:06:49 -Generating unique operation named: updateUsingPATCH_10
2019-05-28 17:06:49 -Generating unique operation named: updateUsingDELETE_10
2019-05-28 17:06:49 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-28 17:06:49 -Generating unique operation named: updateUsingTRACE_10
2019-05-28 17:06:49 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-28 17:06:49 -Generating unique operation named: addUsingGET_17
2019-05-28 17:06:49 -Generating unique operation named: editUsingGET_18
2019-05-28 17:06:49 -Generating unique operation named: listUsingGET_20
2019-05-28 17:06:49 -Generating unique operation named: removeUsingPOST_30
2019-05-28 17:06:49 -Generating unique operation named: removeUsingPOST_31
2019-05-28 17:06:49 -Generating unique operation named: saveUsingPOST_17
2019-05-28 17:06:49 -Generating unique operation named: updateUsingGET_11
2019-05-28 17:06:49 -Generating unique operation named: updateUsingHEAD_11
2019-05-28 17:06:49 -Generating unique operation named: updateUsingPOST_18
2019-05-28 17:06:50 -Generating unique operation named: updateUsingPUT_11
2019-05-28 17:06:50 -Generating unique operation named: updateUsingPATCH_11
2019-05-28 17:06:50 -Generating unique operation named: updateUsingDELETE_11
2019-05-28 17:06:50 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-28 17:06:50 -Generating unique operation named: updateUsingTRACE_11
2019-05-28 17:06:50 -Generating unique operation named: addUsingGET_18
2019-05-28 17:06:50 -Generating unique operation named: editUsingGET_19
2019-05-28 17:06:50 -Generating unique operation named: listUsingGET_21
2019-05-28 17:06:50 -Generating unique operation named: removeUsingPOST_32
2019-05-28 17:06:50 -Generating unique operation named: removeUsingPOST_33
2019-05-28 17:06:50 -Generating unique operation named: saveUsingPOST_18
2019-05-28 17:06:50 -Generating unique operation named: updateUsingGET_12
2019-05-28 17:06:50 -Generating unique operation named: updateUsingHEAD_12
2019-05-28 17:06:50 -Generating unique operation named: updateUsingPOST_19
2019-05-28 17:06:50 -Generating unique operation named: updateUsingPUT_12
2019-05-28 17:06:50 -Generating unique operation named: updateUsingPATCH_12
2019-05-28 17:06:50 -Generating unique operation named: updateUsingDELETE_12
2019-05-28 17:06:50 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-28 17:06:50 -Generating unique operation named: updateUsingTRACE_12
2019-05-28 17:06:50 -Starting Quartz Scheduler now
2019-05-28 17:06:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-28 17:06:50 -Starting...
2019-05-28 17:06:50 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-28 17:06:50 -Started.
2019-05-28 17:06:50 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-28 17:06:50 -Using a shared selector for servlet write/read
2019-05-28 17:06:50 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-28 17:06:50 -Started BootdoApplication in 29.499 seconds (JVM running for 30.874)
2019-05-28 17:06:50 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-28 17:06:50 -==> Parameters: 
2019-05-28 17:06:50 -<==      Total: 1
2019-05-28 17:06:56 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-28 17:06:56 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-28 17:06:56 -FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
2019-05-28 17:06:56 -Enabling session validation scheduler...
2019-05-28 17:06:56 -请求地址 : http://localhost:8081/login;JSESSIONID=338f578d-887a-4d9f-9a75-b18dde873742
2019-05-28 17:06:56 -HTTP METHOD : GET
2019-05-28 17:06:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 17:06:56 -参数 : [{}]
2019-05-28 17:06:56 -耗时 : 6
2019-05-28 17:06:56 -返回值 : login
2019-05-28 17:06:57 -请求地址 : http://localhost:8081/getVerify
2019-05-28 17:06:57 -HTTP METHOD : GET
2019-05-28 17:06:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-28 17:06:57 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@56d9d3c5, org.apache.shiro.web.servlet.ShiroHttpServletResponse@581e376e]
2019-05-28 17:06:57 -3000
2019-05-28 17:06:57 -耗时 : 469
2019-05-28 17:06:57 -返回值 : null
2019-05-28 17:07:01 -请求地址 : http://localhost:8081/login
2019-05-28 17:07:01 -HTTP METHOD : POST
2019-05-28 17:07:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-28 17:07:01 -参数 : [admin, 111111, 3000, org.apache.shiro.web.servlet.ShiroHttpServletRequest@1dafedc5]
2019-05-28 17:07:01 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-28 17:07:01 -==> Parameters: admin(String)
2019-05-28 17:07:01 -<==      Total: 1
2019-05-28 17:07:01 -耗时 : 184
2019-05-28 17:07:01 -返回值 : {msg=操作成功, code=0}
2019-05-28 17:07:01 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-28 17:07:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 17:07:01 -==> Parameters: 1(Long), admin(String), 登录(String), 184(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-28 17:07:01.478(Timestamp)
2019-05-28 17:07:01 -请求地址 : http://localhost:8081/index
2019-05-28 17:07:01 -HTTP METHOD : GET
2019-05-28 17:07:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 17:07:01 -参数 : [{}]
2019-05-28 17:07:01 -<==    Updates: 1
2019-05-28 17:07:01 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 17:07:01 -==> Parameters: 1(Long)
2019-05-28 17:07:01 -<==      Total: 50
2019-05-28 17:07:01 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 17:07:01 -==> Parameters: 138(Long)
2019-05-28 17:07:01 -<==      Total: 1
2019-05-28 17:07:01 -耗时 : 196
2019-05-28 17:07:01 -返回值 : index_v1
2019-05-28 17:07:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 17:07:01 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 197(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 17:07:01.825(Timestamp)
2019-05-28 17:07:01 -<==    Updates: 1
2019-05-28 17:07:01 -请求地址 : http://localhost:8081/main
2019-05-28 17:07:01 -HTTP METHOD : GET
2019-05-28 17:07:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 17:07:01 -参数 : []
2019-05-28 17:07:01 -耗时 : 1
2019-05-28 17:07:01 -返回值 : main
2019-05-28 17:07:02 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 17:07:02 -HTTP METHOD : GET
2019-05-28 17:07:02 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 17:07:02 -参数 : []
2019-05-28 17:07:02 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 17:07:02 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 17:07:02 -<==      Total: 0
2019-05-28 17:07:02 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 17:07:02 -==> Parameters: 1(Long), 0(String)
2019-05-28 17:07:02 -<==      Total: 1
2019-05-28 17:07:02 -耗时 : 53
2019-05-28 17:07:02 -返回值 : com.bootdo.common.utils.PageUtils@57081426
2019-05-28 17:07:02 -请求地址 : http://localhost:8081/main
2019-05-28 17:07:02 -HTTP METHOD : GET
2019-05-28 17:07:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 17:07:02 -参数 : []
2019-05-28 17:07:02 -耗时 : 4
2019-05-28 17:07:02 -返回值 : main
2019-05-28 17:07:08 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 17:07:08 -==> Parameters: 1(Long)
2019-05-28 17:07:08 -<==      Total: 94
2019-05-28 17:07:08 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-28 17:07:08 -HTTP METHOD : GET
2019-05-28 17:07:08 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-28 17:07:08 -参数 : []
2019-05-28 17:07:08 -耗时 : 0
2019-05-28 17:07:08 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-28 17:07:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 17:07:25 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 17:07:25.424(Timestamp)
2019-05-28 17:07:25 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:199)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 17:07:25 -<==    Updates: 1
2019-05-28 17:07:36 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 17:07:36 -HTTP METHOD : GET
2019-05-28 17:07:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 17:07:36 -参数 : []
2019-05-28 17:07:36 -耗时 : 0
2019-05-28 17:07:36 -返回值 : system/dept/deptTree
2019-05-28 17:07:36 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 17:07:36 -HTTP METHOD : GET
2019-05-28 17:07:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 17:07:36 -参数 : []
2019-05-28 17:07:36 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 17:07:36 -==> Parameters: 
2019-05-28 17:07:36 -<==      Total: 3
2019-05-28 17:07:36 -耗时 : 27
2019-05-28 17:07:36 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 17:07:38 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:199)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 17:07:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 17:07:38 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 17:07:38.255(Timestamp)
2019-05-28 17:07:38 -<==    Updates: 1
2019-05-28 17:07:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 10]
2019-05-28 17:10:31 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:199)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 17:10:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 17:10:31 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 17:10:31.737(Timestamp)
2019-05-28 17:10:31 -<==    Updates: 1
2019-05-28 17:10:33 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:199)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 17:10:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 17:10:33 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 17:10:33.329(Timestamp)
2019-05-28 17:10:33 -<==    Updates: 1
2019-05-28 17:10:39 -Required request part 'excelFile' is not present
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:199)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:112)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 17:10:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 17:10:39 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'excelFile' is not present(String), null, 2019-05-28 17:10:39.929(Timestamp)
2019-05-28 17:10:40 -<==    Updates: 1
2019-05-28 17:24:13 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 17:24:13 -==> Parameters: 1(Long)
2019-05-28 17:24:13 -<==      Total: 94
2019-05-28 17:24:13 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 17:24:13 -HTTP METHOD : GET
2019-05-28 17:24:13 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 17:24:13 -参数 : []
2019-05-28 17:24:13 -耗时 : 28
2019-05-28 17:24:13 -返回值 : charts/tableElecYY
2019-05-28 17:24:14 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:24:14 -HTTP METHOD : GET
2019-05-28 17:24:14 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:24:14 -参数 : [userType]
2019-05-28 17:24:14 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:24:14 -==> Parameters: userType(String)
2019-05-28 17:24:14 -<==      Total: 4
2019-05-28 17:24:14 -耗时 : 73
2019-05-28 17:24:14 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:24:15 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 17:24:15 -HTTP METHOD : GET
2019-05-28 17:24:15 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 17:24:15 -参数 : []
2019-05-28 17:24:15 -耗时 : 15
2019-05-28 17:24:15 -返回值 : charts/tableWaterYY
2019-05-28 17:24:15 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:24:15 -HTTP METHOD : GET
2019-05-28 17:24:15 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:24:15 -参数 : [userType]
2019-05-28 17:24:15 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:24:15 -==> Parameters: userType(String)
2019-05-28 17:24:15 -<==      Total: 4
2019-05-28 17:24:15 -耗时 : 7
2019-05-28 17:24:15 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:24:16 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 17:24:16 -HTTP METHOD : GET
2019-05-28 17:24:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 17:24:16 -参数 : []
2019-05-28 17:24:16 -耗时 : 1
2019-05-28 17:24:16 -返回值 : system/dept/deptTree
2019-05-28 17:24:16 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 17:24:16 -HTTP METHOD : GET
2019-05-28 17:24:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 17:24:16 -参数 : []
2019-05-28 17:24:16 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 17:24:16 -==> Parameters: 
2019-05-28 17:24:16 -<==      Total: 3
2019-05-28 17:24:16 -耗时 : 5
2019-05-28 17:24:16 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 17:24:23 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-28 17:24:23 -HTTP METHOD : POST
2019-05-28 17:24:23 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 17:24:23 -参数 : [com.bootdo.water.vo.WaterVo@11c89af7, com.bootdo.moneyLog.vo.WaterLogVo@78fccd71]
2019-05-28 17:24:23 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:23 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:24 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 17:24:24 -<==      Total: 1
2019-05-28 17:24:24 -==>  Preparing: select m_water,s1_water,s2_water,s3_water,water_org from water_price 
2019-05-28 17:24:24 -==> Parameters: 
2019-05-28 17:24:24 -<==      Total: 2
2019-05-28 17:24:24 -耗时 : 867
2019-05-28 17:24:24 -返回值 : {S3TotalhuNew=1, S2PreWaterCountYYOld=0, S1OweWaterCountYYNew=1, S2PreWaterCountYYNew=2, S3WaterCostYYSum=12, S1OweWaterSumYYNew=-11, type=2, S3PreWaterSumYYNew=0, TotalPreyuNew=31, MWaterLogYYSum=249, S1OweWaterCountYYOld=0, S1OweWaterSumYYOld=0, TotalCostyu=56, S3PreWaterSumYYOld=0, MPreWaterCountYYOld=0, S1WaterPrice=11, S1TotalyuOld=0, TotalPreyuOld=0, S2WaterLogYYCount=2, S3TotalhuOld=0, MPreWaterCountYYNew=2, TotalOwehuNew=2, S2WaterLogYYSum=120, TotalCosthu=8, S1WaterLogYYCount=2, S3WaterLogYYSum=0, S2OweWaterSumYYOld=0, TotalLogyu=270, MPreWaterSumYYOld=0, S2TotalhuNew=2, MTotalyuOld=0, MPreWaterSumYYNew=31, MWaterPrice=1, S1WaterCostYYCount=2, S3PreWaterCountYYNew=1, MTotalhuNew=3, MTotalyuNew=16, S2WaterCostYYSum=24, TotalLoghu=23, S3PreWaterCountYYOld=0, S2TotalhuOld=0, S2TotalyuOld=0, S2OweWaterSumYYNew=0, TotalOweyuOld=0, S3OweWaterCountYYOld=0, S3WaterCostYYCount=2, S2TotalyuNew=0, S3WaterLogYYCount=0, S1TotalhuNew=1, MTotalhuOld=0, S3OweWaterSumYYOld=0, S1TotalhuOld=0, S1WaterCostYYSum=20, S2PreWaterSumYYNew=0, TotalPrehuNew=2, MOweWaterSumYYNew=-15, S3OweWaterSumYYNew=0, S2PreWaterSumYYOld=0, TotalOweyuNew=-26, MWaterCostYYCount=6, S3TotalyuOld=0, MWaterLogYYCount=21, S3OweWaterCountYYNew=0, S3TotalyuNew=0, TotalPrehuOld=0, MWaterCostYYSum=36, S1PreWaterCountYYNew=0, S1WaterLogYYSum=21, TotalOwehuOld=0, PriceTotal=12, S2OweWaterCountYYNew=0, S1PreWaterCountYYOld=0, S2WaterCostYYCount=4, MOweWaterSumYYOld=0, S1TotalyuNew=-11, MOweWaterCountYYNew=1, MOweWaterCountYYOld=0, S1PreWaterSumYYNew=0, TotalAllhuNew=4, TotalAllyuNew=5, TotalAllhuOld=0, S2OweWaterCountYYOld=0, S1PreWaterSumYYOld=0, TotalAllyuOld=0}
2019-05-28 17:24:39 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 17:24:39 -HTTP METHOD : GET
2019-05-28 17:24:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 17:24:39 -参数 : []
2019-05-28 17:24:39 -耗时 : 0
2019-05-28 17:24:39 -返回值 : system/dept/deptTree
2019-05-28 17:24:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 17:24:39 -HTTP METHOD : GET
2019-05-28 17:24:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 17:24:39 -参数 : []
2019-05-28 17:24:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 17:24:39 -==> Parameters: 
2019-05-28 17:24:39 -<==      Total: 3
2019-05-28 17:24:39 -耗时 : 5
2019-05-28 17:24:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 17:24:41 -请求地址 : http://localhost:8081/charts/tableWaterYY/tableWaterYY
2019-05-28 17:24:41 -HTTP METHOD : POST
2019-05-28 17:24:41 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 17:24:41 -参数 : [com.bootdo.water.vo.WaterVo@170e68d1, com.bootdo.moneyLog.vo.WaterLogVo@172927e4]
2019-05-28 17:24:41 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(*) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(*) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and `create_time` = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(ID) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_cost),0) from water WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(ID) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_money),0) from water_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(ID) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE `water_sum` >= 0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select COUNT(ID) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select ifnull(SUM(water_sum),0) from water WHERE water_sum <0 and create_time = (select MAX(create_time) from water where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and water_type = ? and user_org = ? 
2019-05-28 17:24:41 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 17:24:41 -<==      Total: 1
2019-05-28 17:24:41 -==>  Preparing: select m_water,s1_water,s2_water,s3_water,water_org from water_price 
2019-05-28 17:24:41 -==> Parameters: 
2019-05-28 17:24:41 -<==      Total: 2
2019-05-28 17:24:41 -耗时 : 127
2019-05-28 17:24:41 -返回值 : {S3TotalhuNew=0, S2PreWaterCountYYOld=0, S1OweWaterCountYYNew=0, S2PreWaterCountYYNew=0, S3WaterCostYYSum=0, S1OweWaterSumYYNew=0, type=3, S3PreWaterSumYYNew=0, TotalPreyuNew=0, MWaterLogYYSum=0, S1OweWaterCountYYOld=0, S1OweWaterSumYYOld=0, TotalCostyu=0, S3PreWaterSumYYOld=0, MPreWaterCountYYOld=0, S1WaterPrice=10, S1TotalyuOld=0, TotalPreyuOld=0, S2WaterLogYYCount=0, S3TotalhuOld=0, MPreWaterCountYYNew=0, TotalOwehuNew=0, S2WaterLogYYSum=0, TotalCosthu=0, S1WaterLogYYCount=0, S3WaterLogYYSum=0, S2OweWaterSumYYOld=0, TotalLogyu=0, MPreWaterSumYYOld=0, S2TotalhuNew=0, MTotalyuOld=0, MPreWaterSumYYNew=0, MWaterPrice=5, S1WaterCostYYCount=0, S3PreWaterCountYYNew=0, MTotalhuNew=0, MTotalyuNew=0, S2WaterCostYYSum=0, TotalLoghu=0, S2WaterPrice=20, S3PreWaterCountYYOld=0, S2TotalhuOld=0, S2TotalyuOld=0, S2OweWaterSumYYNew=0, TotalOweyuOld=0, S3OweWaterCountYYOld=0, S3WaterCostYYCount=0, S2TotalyuNew=0, S3WaterLogYYCount=0, S1TotalhuNew=0, MTotalhuOld=0, S3OweWaterSumYYOld=0, S1TotalhuOld=0, S1WaterCostYYSum=0, S2PreWaterSumYYNew=0, TotalPrehuNew=0, MOweWaterSumYYNew=0, S3OweWaterSumYYNew=0, S2PreWaterSumYYOld=0, TotalOweyuNew=0, MWaterCostYYCount=0, S3TotalyuOld=0, S3WaterPrice=30, MWaterLogYYCount=0, S3OweWaterCountYYNew=0, S3TotalyuNew=0, TotalPrehuOld=0, MWaterCostYYSum=0, S1PreWaterCountYYNew=0, S1WaterLogYYSum=0, TotalOwehuOld=0, PriceTotal=65, S2OweWaterCountYYNew=0, S1PreWaterCountYYOld=0, S2WaterCostYYCount=0, MOweWaterSumYYOld=0, S1TotalyuNew=0, MOweWaterCountYYNew=0, MOweWaterCountYYOld=0, S1PreWaterSumYYNew=0, TotalAllhuNew=0, TotalAllyuNew=0, TotalAllhuOld=0, S2OweWaterCountYYOld=0, S1PreWaterSumYYOld=0, TotalAllyuOld=0}
2019-05-28 17:24:50 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 17:24:50 -HTTP METHOD : GET
2019-05-28 17:24:50 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 17:24:50 -参数 : []
2019-05-28 17:24:50 -耗时 : 13
2019-05-28 17:24:50 -返回值 : charts/tableHeatYY
2019-05-28 17:24:50 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:24:50 -HTTP METHOD : GET
2019-05-28 17:24:50 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:24:50 -参数 : [userType]
2019-05-28 17:24:50 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:24:50 -==> Parameters: userType(String)
2019-05-28 17:24:50 -<==      Total: 4
2019-05-28 17:24:50 -耗时 : 6
2019-05-28 17:24:50 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:24:50 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 17:24:50 -HTTP METHOD : GET
2019-05-28 17:24:50 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 17:24:50 -参数 : []
2019-05-28 17:24:50 -耗时 : 1
2019-05-28 17:24:50 -返回值 : charts/tableWaterYY
2019-05-28 17:24:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:24:51 -HTTP METHOD : GET
2019-05-28 17:24:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:24:51 -参数 : [userType]
2019-05-28 17:24:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:24:51 -==> Parameters: userType(String)
2019-05-28 17:24:51 -<==      Total: 4
2019-05-28 17:24:51 -耗时 : 8
2019-05-28 17:24:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:24:51 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 17:24:51 -HTTP METHOD : GET
2019-05-28 17:24:51 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 17:24:51 -参数 : []
2019-05-28 17:24:51 -耗时 : 0
2019-05-28 17:24:51 -返回值 : charts/tableHeatYY
2019-05-28 17:24:51 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:24:51 -HTTP METHOD : GET
2019-05-28 17:24:51 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:24:51 -参数 : [userType]
2019-05-28 17:24:51 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:24:51 -==> Parameters: userType(String)
2019-05-28 17:24:51 -<==      Total: 4
2019-05-28 17:24:51 -耗时 : 4
2019-05-28 17:24:51 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:24:52 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 17:24:52 -HTTP METHOD : GET
2019-05-28 17:24:52 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 17:24:52 -参数 : []
2019-05-28 17:24:52 -耗时 : 1
2019-05-28 17:24:52 -返回值 : charts/tableElecYY
2019-05-28 17:24:52 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:24:52 -HTTP METHOD : GET
2019-05-28 17:24:52 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:24:52 -参数 : [userType]
2019-05-28 17:24:52 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:24:52 -==> Parameters: userType(String)
2019-05-28 17:24:52 -<==      Total: 4
2019-05-28 17:24:52 -耗时 : 5
2019-05-28 17:24:52 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:24:52 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 17:24:52 -HTTP METHOD : GET
2019-05-28 17:24:52 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 17:24:52 -参数 : []
2019-05-28 17:24:52 -耗时 : 3
2019-05-28 17:24:52 -返回值 : charts/tableHeatYY
2019-05-28 17:24:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:24:53 -HTTP METHOD : GET
2019-05-28 17:24:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:24:53 -参数 : [userType]
2019-05-28 17:24:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:24:53 -==> Parameters: userType(String)
2019-05-28 17:24:53 -<==      Total: 4
2019-05-28 17:24:53 -耗时 : 6
2019-05-28 17:24:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:24:53 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 17:24:53 -HTTP METHOD : GET
2019-05-28 17:24:53 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 17:24:53 -参数 : []
2019-05-28 17:24:53 -耗时 : 0
2019-05-28 17:24:53 -返回值 : charts/tableWaterYY
2019-05-28 17:24:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:24:53 -HTTP METHOD : GET
2019-05-28 17:24:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:24:53 -参数 : [userType]
2019-05-28 17:24:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:24:53 -==> Parameters: userType(String)
2019-05-28 17:24:53 -<==      Total: 4
2019-05-28 17:24:53 -耗时 : 5
2019-05-28 17:24:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:24:53 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 17:24:53 -HTTP METHOD : GET
2019-05-28 17:24:53 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 17:24:53 -参数 : []
2019-05-28 17:24:53 -耗时 : 0
2019-05-28 17:24:53 -返回值 : charts/tableHeatYY
2019-05-28 17:24:53 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:24:53 -HTTP METHOD : GET
2019-05-28 17:24:53 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:24:53 -参数 : [userType]
2019-05-28 17:24:53 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:24:53 -==> Parameters: userType(String)
2019-05-28 17:24:53 -<==      Total: 4
2019-05-28 17:24:53 -耗时 : 5
2019-05-28 17:24:53 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:24:54 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 17:24:54 -HTTP METHOD : GET
2019-05-28 17:24:54 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 17:24:54 -参数 : []
2019-05-28 17:24:54 -耗时 : 0
2019-05-28 17:24:54 -返回值 : charts/tableWaterYY
2019-05-28 17:24:54 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:24:54 -HTTP METHOD : GET
2019-05-28 17:24:54 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:24:54 -参数 : [userType]
2019-05-28 17:24:54 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:24:54 -==> Parameters: userType(String)
2019-05-28 17:24:54 -<==      Total: 4
2019-05-28 17:24:54 -耗时 : 8
2019-05-28 17:24:54 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:24:55 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 17:24:55 -HTTP METHOD : GET
2019-05-28 17:24:55 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 17:24:55 -参数 : []
2019-05-28 17:24:55 -耗时 : 0
2019-05-28 17:24:55 -返回值 : charts/tableHeatYY
2019-05-28 17:24:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:24:55 -HTTP METHOD : GET
2019-05-28 17:24:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:24:55 -参数 : [userType]
2019-05-28 17:24:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:24:55 -==> Parameters: userType(String)
2019-05-28 17:24:55 -<==      Total: 4
2019-05-28 17:24:55 -耗时 : 6
2019-05-28 17:24:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:24:55 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 17:24:55 -HTTP METHOD : GET
2019-05-28 17:24:55 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 17:24:55 -参数 : []
2019-05-28 17:24:55 -耗时 : 0
2019-05-28 17:24:55 -返回值 : charts/tableElecYY
2019-05-28 17:24:55 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:24:55 -HTTP METHOD : GET
2019-05-28 17:24:55 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:24:55 -参数 : [userType]
2019-05-28 17:24:55 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:24:55 -==> Parameters: userType(String)
2019-05-28 17:24:55 -<==      Total: 4
2019-05-28 17:24:55 -耗时 : 6
2019-05-28 17:24:55 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:24:56 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 17:24:56 -HTTP METHOD : GET
2019-05-28 17:24:56 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 17:24:56 -参数 : []
2019-05-28 17:24:56 -耗时 : 0
2019-05-28 17:24:56 -返回值 : charts/tableHeatYY
2019-05-28 17:24:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:24:56 -HTTP METHOD : GET
2019-05-28 17:24:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:24:56 -参数 : [userType]
2019-05-28 17:24:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:24:56 -==> Parameters: userType(String)
2019-05-28 17:24:56 -<==      Total: 4
2019-05-28 17:24:56 -耗时 : 5
2019-05-28 17:24:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:24:56 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 17:24:56 -HTTP METHOD : GET
2019-05-28 17:24:56 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 17:24:56 -参数 : []
2019-05-28 17:24:56 -耗时 : 0
2019-05-28 17:24:56 -返回值 : charts/tableWaterYY
2019-05-28 17:24:56 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:24:56 -HTTP METHOD : GET
2019-05-28 17:24:56 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:24:56 -参数 : [userType]
2019-05-28 17:24:56 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:24:56 -==> Parameters: userType(String)
2019-05-28 17:24:56 -<==      Total: 4
2019-05-28 17:24:56 -耗时 : 4
2019-05-28 17:24:56 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:24:57 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 17:24:57 -HTTP METHOD : GET
2019-05-28 17:24:57 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 17:24:57 -参数 : []
2019-05-28 17:24:57 -耗时 : 0
2019-05-28 17:24:57 -返回值 : charts/tableHeatYY
2019-05-28 17:24:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:24:57 -HTTP METHOD : GET
2019-05-28 17:24:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:24:57 -参数 : [userType]
2019-05-28 17:24:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:24:57 -==> Parameters: userType(String)
2019-05-28 17:24:57 -<==      Total: 4
2019-05-28 17:24:57 -耗时 : 5
2019-05-28 17:24:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:24:57 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 17:24:57 -HTTP METHOD : GET
2019-05-28 17:24:57 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 17:24:57 -参数 : []
2019-05-28 17:24:57 -耗时 : 0
2019-05-28 17:24:57 -返回值 : charts/tableElecYY
2019-05-28 17:24:57 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:24:57 -HTTP METHOD : GET
2019-05-28 17:24:57 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:24:57 -参数 : [userType]
2019-05-28 17:24:57 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:24:57 -==> Parameters: userType(String)
2019-05-28 17:24:57 -<==      Total: 4
2019-05-28 17:24:57 -耗时 : 3
2019-05-28 17:24:57 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:25:02 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 17:25:02 -HTTP METHOD : GET
2019-05-28 17:25:02 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 17:25:02 -参数 : []
2019-05-28 17:25:02 -耗时 : 0
2019-05-28 17:25:02 -返回值 : charts/tableHeatYY
2019-05-28 17:25:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:25:03 -HTTP METHOD : GET
2019-05-28 17:25:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:25:03 -参数 : [userType]
2019-05-28 17:25:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:25:03 -==> Parameters: userType(String)
2019-05-28 17:25:03 -<==      Total: 4
2019-05-28 17:25:03 -耗时 : 4
2019-05-28 17:25:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:25:03 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 17:25:03 -HTTP METHOD : GET
2019-05-28 17:25:03 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 17:25:03 -参数 : []
2019-05-28 17:25:03 -耗时 : 1
2019-05-28 17:25:03 -返回值 : charts/tableWaterYY
2019-05-28 17:25:03 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:25:03 -HTTP METHOD : GET
2019-05-28 17:25:03 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:25:03 -参数 : [userType]
2019-05-28 17:25:03 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:25:03 -==> Parameters: userType(String)
2019-05-28 17:25:03 -<==      Total: 4
2019-05-28 17:25:03 -耗时 : 5
2019-05-28 17:25:03 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:25:03 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 17:25:03 -HTTP METHOD : GET
2019-05-28 17:25:03 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 17:25:03 -参数 : []
2019-05-28 17:25:03 -耗时 : 1
2019-05-28 17:25:03 -返回值 : charts/tableHeatYY
2019-05-28 17:25:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:25:04 -HTTP METHOD : GET
2019-05-28 17:25:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:25:04 -参数 : [userType]
2019-05-28 17:25:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:25:04 -==> Parameters: userType(String)
2019-05-28 17:25:04 -<==      Total: 4
2019-05-28 17:25:04 -耗时 : 5
2019-05-28 17:25:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:25:04 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 17:25:04 -HTTP METHOD : GET
2019-05-28 17:25:04 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 17:25:04 -参数 : []
2019-05-28 17:25:04 -耗时 : 1
2019-05-28 17:25:04 -返回值 : charts/tableElecYY
2019-05-28 17:25:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:25:04 -HTTP METHOD : GET
2019-05-28 17:25:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:25:04 -参数 : [userType]
2019-05-28 17:25:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:25:04 -==> Parameters: userType(String)
2019-05-28 17:25:04 -<==      Total: 4
2019-05-28 17:25:04 -耗时 : 4
2019-05-28 17:25:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:25:05 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 17:25:05 -HTTP METHOD : GET
2019-05-28 17:25:05 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 17:25:05 -参数 : []
2019-05-28 17:25:05 -耗时 : 0
2019-05-28 17:25:05 -返回值 : charts/tableHeatYY
2019-05-28 17:25:05 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:25:05 -HTTP METHOD : GET
2019-05-28 17:25:05 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:25:05 -参数 : [userType]
2019-05-28 17:25:05 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:25:05 -==> Parameters: userType(String)
2019-05-28 17:25:05 -<==      Total: 4
2019-05-28 17:25:05 -耗时 : 4
2019-05-28 17:25:05 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:25:06 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 17:25:06 -HTTP METHOD : GET
2019-05-28 17:25:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 17:25:06 -参数 : []
2019-05-28 17:25:06 -耗时 : 1
2019-05-28 17:25:06 -返回值 : system/dept/deptTree
2019-05-28 17:25:06 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 17:25:06 -HTTP METHOD : GET
2019-05-28 17:25:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 17:25:06 -参数 : []
2019-05-28 17:25:06 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 17:25:06 -==> Parameters: 
2019-05-28 17:25:06 -<==      Total: 3
2019-05-28 17:25:06 -耗时 : 3
2019-05-28 17:25:06 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 17:25:16 -请求地址 : http://localhost:8081/charts/tableHeatYY/tableHeatYY
2019-05-28 17:25:16 -HTTP METHOD : POST
2019-05-28 17:25:16 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 17:25:16 -参数 : [com.bootdo.heat.vo.HeatVo@2833be77, com.bootdo.moneyLog.vo.HeatLogVo@7f06f84f]
2019-05-28 17:25:16 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(*) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(*) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and `create_time` = ? and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_area),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(ID) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_cost),0) from heat WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(ID) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_money),0) from heat_log WHERE `create_time` LIKE CONCAT('%',?,'%') and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(ID) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE `heat_sum` >= 0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select COUNT(ID) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select ifnull(SUM(heat_sum),0) from heat WHERE heat_sum <0 and create_time = (select MAX(create_time) from heat where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and heat_type = ? and user_org = ? 
2019-05-28 17:25:16 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 17:25:16 -<==      Total: 1
2019-05-28 17:25:16 -==>  Preparing: select m_heat,s_heat,gm_heat,gs_heat,heat_org from heat_price 
2019-05-28 17:25:16 -==> Parameters: 
2019-05-28 17:25:16 -<==      Total: 2
2019-05-28 17:25:16 -耗时 : 576
2019-05-28 17:25:16 -返回值 : {STotalyuOld=-10.00, GSOweHeatCountYYOld=0, MPreHeatSumYYNew=0.00, GMPreHeatCountYYNew=1, GSPreHeatSumYYNew=0.00, STotalyuNew=0.00, GSOweHeatCountYYNew=0, type=2, MHeatCostYYSum=402.00, SPreHeatCountYYOld=0, TotalPreyuNew=0.00, GSHeatAreaYY=1.00, SHeatCostYYCount=3, GMHeatCostYYCount=2, GMOweHeatSumYYNew=0.00, GSTotalhuOld=1, TotalCostyu=408.00, MHeatPrice=3.50, SHeatPrice=4.80, GMHeatPrice=3.50, SPreHeatCountYYNew=1, TotalPreyuOld=10.00, TotalOwehuNew=1, TotalCosthu=12, STotalhuOld=1, MOweHeatSumYYNew=-172.35, GSOweHeatSumYYOld=0.00, TotalLogyu=247.00, STotalhuNew=1, MTotalyuOld=0.00, MHeatLogYYCount=8, GSTotalhuNew=0, GSTotalyuOld=10.00, MOweHeatSumYYOld=0.00, GMOweHeatSumYYOld=0.00, GMHeatLogYYSum=80.00, GSOweHeatSumYYNew=0.00, MTotalhuNew=3, MTotalyuNew=-172.35, GSTotalyuNew=0.00, GSHeatPrice=4.80, MOweHeatCountYYOld=0, MHeatLogYYSum=126.00, TotalLoghu=11, GMHeatAreaYY=2.00, MOweHeatCountYYNew=1, TotalOweyuOld=-10.00, MPreHeatCountYYOld=0, MHeatCostYYCount=6, SOweHeatCountYYOld=1, GMTotalhuNew=1, SHeatLogYYSum=40.00, SHeatLogYYCount=1, SOweHeatSumYYOld=-10.00, MPreHeatCountYYNew=2, MTotalhuOld=0, GMTotalhuOld=0, GSHeatCostYYCount=1, GSPreHeatCountYYNew=0, TotalPrehuNew=4, SOweHeatSumYYNew=0.00, SPreHeatSumYYNew=0.00, GMPreHeatSumYYNew=0.00, GSPreHeatCountYYOld=1, TotalOweyuNew=-172.35, SOweHeatCountYYNew=0, GSHeatLogYYCount=1, MHeatAreaYY=302.75, GMPreHeatSumYYOld=0.00, TotalPrehuOld=1, GSHeatCostYYSum=1.00, SPreHeatSumYYOld=0.00, GMHeatCostYYSum=2.00, SHeatAreaYY=3.50, GMTotalyuNew=0.00, TotalOwehuOld=1, PriceTotal=16.60, GSHeatLogYYSum=1.00, AreaTotalYY=309.25, GMTotalyuOld=0.00, GMOweHeatCountYYOld=0, GMOweHeatCountYYNew=0, GMHeatLogYYCount=1, TotalAllhuNew=5, TotalAllyuNew=-172.35, GMPreHeatCountYYOld=0, MPreHeatSumYYOld=0.00, SHeatCostYYSum=3.00, GSPreHeatSumYYOld=10.00, TotalAllhuOld=2, TotalAllyuOld=0.00}
2019-05-28 17:25:25 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 17:25:25 -HTTP METHOD : GET
2019-05-28 17:25:25 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 17:25:25 -参数 : []
2019-05-28 17:25:25 -耗时 : 1
2019-05-28 17:25:25 -返回值 : charts/tableWaterYY
2019-05-28 17:25:25 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:25:25 -HTTP METHOD : GET
2019-05-28 17:25:25 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:25:25 -参数 : [userType]
2019-05-28 17:25:25 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:25:25 -==> Parameters: userType(String)
2019-05-28 17:25:25 -<==      Total: 4
2019-05-28 17:25:25 -耗时 : 5
2019-05-28 17:25:25 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:25:26 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 17:25:26 -HTTP METHOD : GET
2019-05-28 17:25:26 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 17:25:26 -参数 : []
2019-05-28 17:25:26 -耗时 : 1
2019-05-28 17:25:26 -返回值 : charts/tableHeatYY
2019-05-28 17:25:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:25:26 -HTTP METHOD : GET
2019-05-28 17:25:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:25:26 -参数 : [userType]
2019-05-28 17:25:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:25:26 -==> Parameters: userType(String)
2019-05-28 17:25:26 -<==      Total: 4
2019-05-28 17:25:26 -耗时 : 9
2019-05-28 17:25:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:25:26 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 17:25:26 -HTTP METHOD : GET
2019-05-28 17:25:26 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 17:25:26 -参数 : []
2019-05-28 17:25:26 -耗时 : 1
2019-05-28 17:25:26 -返回值 : charts/tableElecYY
2019-05-28 17:25:26 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:25:26 -HTTP METHOD : GET
2019-05-28 17:25:26 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:25:26 -参数 : [userType]
2019-05-28 17:25:26 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:25:26 -==> Parameters: userType(String)
2019-05-28 17:25:26 -<==      Total: 4
2019-05-28 17:25:26 -耗时 : 4
2019-05-28 17:25:26 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:25:27 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 17:25:27 -HTTP METHOD : GET
2019-05-28 17:25:27 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 17:25:27 -参数 : []
2019-05-28 17:25:27 -耗时 : 0
2019-05-28 17:25:27 -返回值 : charts/tableHeatYY
2019-05-28 17:25:27 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:25:27 -HTTP METHOD : GET
2019-05-28 17:25:27 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:25:27 -参数 : [userType]
2019-05-28 17:25:27 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:25:27 -==> Parameters: userType(String)
2019-05-28 17:25:27 -<==      Total: 4
2019-05-28 17:25:27 -耗时 : 4
2019-05-28 17:25:27 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:25:27 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 17:25:27 -HTTP METHOD : GET
2019-05-28 17:25:27 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 17:25:27 -参数 : []
2019-05-28 17:25:27 -耗时 : 0
2019-05-28 17:25:27 -返回值 : charts/tableWaterYY
2019-05-28 17:25:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:25:28 -HTTP METHOD : GET
2019-05-28 17:25:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:25:28 -参数 : [userType]
2019-05-28 17:25:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:25:28 -==> Parameters: userType(String)
2019-05-28 17:25:28 -<==      Total: 4
2019-05-28 17:25:28 -耗时 : 4
2019-05-28 17:25:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:25:28 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 17:25:28 -HTTP METHOD : GET
2019-05-28 17:25:28 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 17:25:28 -参数 : []
2019-05-28 17:25:28 -耗时 : 1
2019-05-28 17:25:28 -返回值 : charts/tableHeatYY
2019-05-28 17:25:28 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:25:28 -HTTP METHOD : GET
2019-05-28 17:25:28 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:25:28 -参数 : [userType]
2019-05-28 17:25:28 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:25:28 -==> Parameters: userType(String)
2019-05-28 17:25:28 -<==      Total: 4
2019-05-28 17:25:28 -耗时 : 4
2019-05-28 17:25:28 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:25:28 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 17:25:28 -HTTP METHOD : GET
2019-05-28 17:25:28 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 17:25:28 -参数 : []
2019-05-28 17:25:28 -耗时 : 0
2019-05-28 17:25:28 -返回值 : charts/tableElecYY
2019-05-28 17:25:29 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:25:29 -HTTP METHOD : GET
2019-05-28 17:25:29 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:25:29 -参数 : [userType]
2019-05-28 17:25:29 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:25:29 -==> Parameters: userType(String)
2019-05-28 17:25:29 -<==      Total: 4
2019-05-28 17:25:29 -耗时 : 4
2019-05-28 17:25:29 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:25:29 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 17:25:29 -HTTP METHOD : GET
2019-05-28 17:25:29 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 17:25:29 -参数 : []
2019-05-28 17:25:29 -耗时 : 0
2019-05-28 17:25:29 -返回值 : charts/tableHeatYY
2019-05-28 17:25:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:25:30 -HTTP METHOD : GET
2019-05-28 17:25:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:25:30 -参数 : [userType]
2019-05-28 17:25:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:25:30 -==> Parameters: userType(String)
2019-05-28 17:25:30 -<==      Total: 4
2019-05-28 17:25:30 -耗时 : 3
2019-05-28 17:25:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:25:30 -请求地址 : http://localhost:8081/charts/tableWaterYY
2019-05-28 17:25:30 -HTTP METHOD : GET
2019-05-28 17:25:30 -CLASS_METHOD : com.bootdo.charts.controller.tableWaterYYController.tableWaterYY
2019-05-28 17:25:30 -参数 : []
2019-05-28 17:25:30 -耗时 : 0
2019-05-28 17:25:30 -返回值 : charts/tableWaterYY
2019-05-28 17:25:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:25:30 -HTTP METHOD : GET
2019-05-28 17:25:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:25:30 -参数 : [userType]
2019-05-28 17:25:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:25:30 -==> Parameters: userType(String)
2019-05-28 17:25:30 -<==      Total: 4
2019-05-28 17:25:30 -耗时 : 4
2019-05-28 17:25:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:25:30 -请求地址 : http://localhost:8081/charts/tableHeatYY
2019-05-28 17:25:30 -HTTP METHOD : GET
2019-05-28 17:25:30 -CLASS_METHOD : com.bootdo.charts.controller.tableHeatYYController.tableHeatYY
2019-05-28 17:25:30 -参数 : []
2019-05-28 17:25:30 -耗时 : 0
2019-05-28 17:25:30 -返回值 : charts/tableHeatYY
2019-05-28 17:25:30 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:25:30 -HTTP METHOD : GET
2019-05-28 17:25:30 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:25:30 -参数 : [userType]
2019-05-28 17:25:30 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:25:30 -==> Parameters: userType(String)
2019-05-28 17:25:30 -<==      Total: 4
2019-05-28 17:25:30 -耗时 : 4
2019-05-28 17:25:30 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:25:31 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 17:25:31 -HTTP METHOD : GET
2019-05-28 17:25:31 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 17:25:31 -参数 : []
2019-05-28 17:25:31 -耗时 : 1
2019-05-28 17:25:31 -返回值 : charts/tableElecYY
2019-05-28 17:25:31 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 17:25:31 -HTTP METHOD : GET
2019-05-28 17:25:31 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 17:25:31 -参数 : [userType]
2019-05-28 17:25:31 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 17:25:31 -==> Parameters: userType(String)
2019-05-28 17:25:31 -<==      Total: 4
2019-05-28 17:25:31 -耗时 : 3
2019-05-28 17:25:31 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 17:37:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 443]
2019-05-28 18:06:56 -Validating all active sessions...
2019-05-28 18:06:56 -Finished session validation.  [1] sessions were stopped.
2019-05-28 18:07:42 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 876]
2019-05-28 18:31:51 -Starting BootdoApplication on PC-201905091110 with PID 14580 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-28 18:31:51 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-28 18:31:51 -The following profiles are active: dev
2019-05-28 18:31:51 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1252b961: startup date [Tue May 28 18:31:51 CST 2019]; root of context hierarchy
2019-05-28 18:31:55 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-28 18:32:02 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b36df0d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:32:02 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a5c71f79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:32:03 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:32:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:32:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:32:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-28 18:32:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-28 18:32:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:32:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:32:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:32:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:32:05 -Tomcat initialized with port(s): 8081 (http)
2019-05-28 18:32:05 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-28 18:32:05 -Starting service [Tomcat]
2019-05-28 18:32:05 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-28 18:32:05 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-28 18:32:06 -Initializing Spring embedded WebApplicationContext
2019-05-28 18:32:06 -Root WebApplicationContext: initialization completed in 14326 ms
2019-05-28 18:32:06 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-28 18:32:06 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-28 18:32:06 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-28 18:32:06 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-28 18:32:06 -Filter xssFilter was not registered (disabled)
2019-05-28 18:32:06 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-28 18:32:06 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-28 18:32:06 -Servlet statViewServlet mapped to [/druid/*]
2019-05-28 18:32:06 -Servlet dispatcherServlet mapped to [/]
2019-05-28 18:32:11 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1252b961: startup date [Tue May 28 18:31:51 CST 2019]; root of context hierarchy
2019-05-28 18:32:11 -Using default implementation for ThreadExecutor
2019-05-28 18:32:11 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-28 18:32:11 -Quartz Scheduler v.2.2.1 created.
2019-05-28 18:32:11 -RAMJobStore initialized.
2019-05-28 18:32:11 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-28 18:32:11 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-28 18:32:11 -Quartz scheduler version: 2.2.1
2019-05-28 18:32:11 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3c17794e
2019-05-28 18:32:12 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-28 18:32:12 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-28 18:32:15 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-28 18:32:15 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:32:15 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:15 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:15 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:32:15 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-28 18:32:15 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-28 18:32:15 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:15 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-28 18:32:15 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-28 18:32:15 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:32:15 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:15 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:15 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-28 18:32:15 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:32:15 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:32:15 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-28 18:32:15 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:15 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:15 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-28 18:32:15 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 18:32:15 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 18:32:15 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-28 18:32:15 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:15 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:32:15 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-28 18:32:15 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:15 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:32:15 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-28 18:32:15 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:15 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 18:32:15 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-28 18:32:15 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:15 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:15 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-28 18:32:15 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 18:32:15 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-28 18:32:15 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-28 18:32:15 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-28 18:32:15 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-28 18:32:15 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:15 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-28 18:32:15 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-28 18:32:15 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-28 18:32:15 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-28 18:32:15 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:15 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-28 18:32:15 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-28 18:32:15 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-28 18:32:15 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-28 18:32:15 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-28 18:32:15 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:15 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-28 18:32:15 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-28 18:32:15 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:15 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-28 18:32:15 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-28 18:32:15 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:15 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-28 18:32:15 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 18:32:15 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-28 18:32:15 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 18:32:15 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-28 18:32:15 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-28 18:32:15 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-28 18:32:15 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-28 18:32:15 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-28 18:32:15 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:15 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-28 18:32:15 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-28 18:32:15 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:15 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-28 18:32:15 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-28 18:32:15 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-28 18:32:15 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-28 18:32:15 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:15 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-28 18:32:15 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-28 18:32:15 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-28 18:32:15 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:15 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:15 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-28 18:32:15 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-28 18:32:15 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-28 18:32:15 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 18:32:15 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 18:32:15 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-28 18:32:15 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:15 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-28 18:32:15 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:15 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 18:32:15 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:15 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-28 18:32:15 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-28 18:32:15 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-28 18:32:15 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-28 18:32:15 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-28 18:32:15 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:15 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-28 18:32:15 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:15 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-28 18:32:16 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-28 18:32:16 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 18:32:16 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:16 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 18:32:16 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-28 18:32:16 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-28 18:32:16 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-28 18:32:16 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-28 18:32:16 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:16 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-28 18:32:16 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:16 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-28 18:32:16 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 18:32:16 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:16 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-28 18:32:16 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-28 18:32:16 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-28 18:32:16 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-28 18:32:16 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 18:32:16 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:16 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 18:32:16 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-28 18:32:16 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-28 18:32:16 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-28 18:32:16 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:16 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 18:32:16 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 18:32:16 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 18:32:16 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-28 18:32:16 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 18:32:16 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-28 18:32:16 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-28 18:32:16 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-28 18:32:16 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 18:32:16 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 18:32:16 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:16 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-28 18:32:16 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-28 18:32:16 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-28 18:32:16 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-28 18:32:16 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-28 18:32:16 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-28 18:32:16 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-28 18:32:16 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-28 18:32:16 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-28 18:32:16 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-28 18:32:16 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 18:32:16 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-28 18:32:16 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-28 18:32:16 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-28 18:32:16 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-28 18:32:16 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-28 18:32:16 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:16 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-28 18:32:16 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-28 18:32:16 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-28 18:32:16 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-28 18:32:16 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:16 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-28 18:32:16 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-28 18:32:16 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-28 18:32:16 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:16 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-28 18:32:16 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-28 18:32:16 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-28 18:32:16 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-28 18:32:16 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-28 18:32:16 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:16 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-28 18:32:16 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-28 18:32:16 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-28 18:32:16 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-28 18:32:16 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-28 18:32:16 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-28 18:32:16 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-28 18:32:16 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-28 18:32:16 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-28 18:32:16 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-28 18:32:16 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:16 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 18:32:16 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-28 18:32:16 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-28 18:32:16 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-28 18:32:16 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:16 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-28 18:32:16 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-28 18:32:16 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-28 18:32:16 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 18:32:16 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-28 18:32:16 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-28 18:32:16 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-28 18:32:16 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-28 18:32:16 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-28 18:32:16 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-28 18:32:16 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-28 18:32:16 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-28 18:32:16 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-28 18:32:16 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-28 18:32:16 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-28 18:32:16 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:16 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-28 18:32:16 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-28 18:32:16 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:16 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-28 18:32:16 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-28 18:32:16 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-28 18:32:16 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 18:32:16 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-28 18:32:16 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 18:32:16 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 18:32:16 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-28 18:32:16 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 18:32:16 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-28 18:32:16 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-28 18:32:16 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-28 18:32:16 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-28 18:32:16 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-28 18:32:16 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:16 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-28 18:32:16 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:16 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-28 18:32:16 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 18:32:16 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:16 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-28 18:32:16 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-28 18:32:16 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-28 18:32:16 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-28 18:32:16 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 18:32:16 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:32:16 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 18:32:16 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-28 18:32:16 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:32:16 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-28 18:32:16 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-28 18:32:16 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 18:32:16 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:32:16 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 18:32:16 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-28 18:32:16 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-28 18:32:16 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-28 18:32:17 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-28 18:32:17 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-28 18:32:17 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-28 18:32:17 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 18:32:18 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1252b961: startup date [Tue May 28 18:31:51 CST 2019]; root of context hierarchy
2019-05-28 18:32:18 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 18:32:18 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 18:32:18 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 18:32:18 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-28 18:32:18 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-28 18:32:20 -Registering beans for JMX exposure on startup
2019-05-28 18:32:20 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-28 18:32:20 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-28 18:32:20 -Starting beans in phase 2147483647
2019-05-28 18:32:20 -Context refreshed
2019-05-28 18:32:21 -Found 1 custom documentation plugin(s)
2019-05-28 18:32:21 -Scanning for api listing references
2019-05-28 18:32:21 -Generating unique operation named: getCountDUsingPOST_1
2019-05-28 18:32:21 -Generating unique operation named: removeUsingPOST_1
2019-05-28 18:32:21 -Generating unique operation named: addUsingGET_1
2019-05-28 18:32:21 -Generating unique operation named: editUsingGET_1
2019-05-28 18:32:21 -Generating unique operation named: listUsingGET_1
2019-05-28 18:32:21 -Generating unique operation named: removeUsingPOST_2
2019-05-28 18:32:21 -Generating unique operation named: removeUsingPOST_3
2019-05-28 18:32:21 -Generating unique operation named: saveUsingPOST_1
2019-05-28 18:32:21 -Generating unique operation named: updateUsingGET_1
2019-05-28 18:32:21 -Generating unique operation named: updateUsingHEAD_1
2019-05-28 18:32:21 -Generating unique operation named: updateUsingPOST_1
2019-05-28 18:32:21 -Generating unique operation named: updateUsingPUT_1
2019-05-28 18:32:21 -Generating unique operation named: updateUsingPATCH_1
2019-05-28 18:32:21 -Generating unique operation named: updateUsingDELETE_1
2019-05-28 18:32:21 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-28 18:32:22 -Generating unique operation named: updateUsingTRACE_1
2019-05-28 18:32:22 -Generating unique operation named: addUsingGET_2
2019-05-28 18:32:22 -Generating unique operation named: editUsingGET_2
2019-05-28 18:32:22 -Generating unique operation named: listUsingGET_2
2019-05-28 18:32:22 -Generating unique operation named: removeUsingPOST_4
2019-05-28 18:32:22 -Generating unique operation named: removeUsingPOST_5
2019-05-28 18:32:22 -Generating unique operation named: saveUsingPOST_2
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPOST_2
2019-05-28 18:32:22 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-28 18:32:22 -Generating unique operation named: addUsingGET_3
2019-05-28 18:32:22 -Generating unique operation named: editUsingGET_3
2019-05-28 18:32:22 -Generating unique operation named: listUsingGET_3
2019-05-28 18:32:22 -Generating unique operation named: removeUsingPOST_6
2019-05-28 18:32:22 -Generating unique operation named: removeUsingPOST_7
2019-05-28 18:32:22 -Generating unique operation named: saveUsingPOST_3
2019-05-28 18:32:22 -Generating unique operation named: updateUsingGET_2
2019-05-28 18:32:22 -Generating unique operation named: updateUsingHEAD_2
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPOST_3
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPUT_2
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPATCH_2
2019-05-28 18:32:22 -Generating unique operation named: updateUsingDELETE_2
2019-05-28 18:32:22 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-28 18:32:22 -Generating unique operation named: updateUsingTRACE_2
2019-05-28 18:32:22 -Generating unique operation named: addUsingGET_4
2019-05-28 18:32:22 -Generating unique operation named: editUsingGET_4
2019-05-28 18:32:22 -Generating unique operation named: listUsingGET_4
2019-05-28 18:32:22 -Generating unique operation named: removeUsingPOST_8
2019-05-28 18:32:22 -Generating unique operation named: removeUsingPOST_9
2019-05-28 18:32:22 -Generating unique operation named: saveUsingPOST_4
2019-05-28 18:32:22 -Generating unique operation named: updateUsingGET_3
2019-05-28 18:32:22 -Generating unique operation named: updateUsingHEAD_3
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPOST_4
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPUT_3
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPATCH_3
2019-05-28 18:32:22 -Generating unique operation named: updateUsingDELETE_3
2019-05-28 18:32:22 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-28 18:32:22 -Generating unique operation named: updateUsingTRACE_3
2019-05-28 18:32:22 -Generating unique operation named: ElecUsingGET_1
2019-05-28 18:32:22 -Generating unique operation named: addUsingGET_5
2019-05-28 18:32:22 -Generating unique operation named: editUsingGET_5
2019-05-28 18:32:22 -Generating unique operation named: listUsingGET_5
2019-05-28 18:32:22 -Generating unique operation named: removeUsingPOST_10
2019-05-28 18:32:22 -Generating unique operation named: removeUsingPOST_11
2019-05-28 18:32:22 -Generating unique operation named: saveUsingPOST_5
2019-05-28 18:32:22 -Generating unique operation named: updateUsingGET_4
2019-05-28 18:32:22 -Generating unique operation named: updateUsingHEAD_4
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPOST_5
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPUT_4
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPATCH_4
2019-05-28 18:32:22 -Generating unique operation named: updateUsingDELETE_4
2019-05-28 18:32:22 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-28 18:32:22 -Generating unique operation named: updateUsingTRACE_4
2019-05-28 18:32:22 -Generating unique operation named: editUsingGET_6
2019-05-28 18:32:22 -Generating unique operation named: listUsingGET_6
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPOST_6
2019-05-28 18:32:22 -Generating unique operation named: addUsingGET_6
2019-05-28 18:32:22 -Generating unique operation named: editUsingGET_7
2019-05-28 18:32:22 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-28 18:32:22 -Generating unique operation named: listUsingGET_7
2019-05-28 18:32:22 -Generating unique operation named: removeUsingPOST_12
2019-05-28 18:32:22 -Generating unique operation named: removeUsingPOST_13
2019-05-28 18:32:22 -Generating unique operation named: saveUsingPOST_6
2019-05-28 18:32:22 -Generating unique operation named: updateUsingGET_5
2019-05-28 18:32:22 -Generating unique operation named: updateUsingHEAD_5
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPOST_7
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPUT_5
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPATCH_5
2019-05-28 18:32:22 -Generating unique operation named: updateUsingDELETE_5
2019-05-28 18:32:22 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-28 18:32:22 -Generating unique operation named: updateUsingTRACE_5
2019-05-28 18:32:22 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-28 18:32:22 -Generating unique operation named: addUsingGET_7
2019-05-28 18:32:22 -Generating unique operation named: editUsingGET_8
2019-05-28 18:32:22 -Generating unique operation named: listUsingGET_8
2019-05-28 18:32:22 -Generating unique operation named: removeUsingPOST_14
2019-05-28 18:32:22 -Generating unique operation named: removeUsingPOST_15
2019-05-28 18:32:22 -Generating unique operation named: saveUsingPOST_7
2019-05-28 18:32:22 -Generating unique operation named: updateUsingGET_6
2019-05-28 18:32:22 -Generating unique operation named: updateUsingHEAD_6
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPOST_8
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPUT_6
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPATCH_6
2019-05-28 18:32:22 -Generating unique operation named: updateUsingDELETE_6
2019-05-28 18:32:22 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-28 18:32:22 -Generating unique operation named: updateUsingTRACE_6
2019-05-28 18:32:22 -Generating unique operation named: addUsingGET_8
2019-05-28 18:32:22 -Generating unique operation named: editUsingGET_9
2019-05-28 18:32:22 -Generating unique operation named: listUsingGET_9
2019-05-28 18:32:22 -Generating unique operation named: removeUsingPOST_16
2019-05-28 18:32:22 -Generating unique operation named: removeUsingPOST_17
2019-05-28 18:32:22 -Generating unique operation named: saveUsingPOST_8
2019-05-28 18:32:22 -Generating unique operation named: updateUsingGET_7
2019-05-28 18:32:22 -Generating unique operation named: updateUsingHEAD_7
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPOST_9
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPUT_7
2019-05-28 18:32:22 -Generating unique operation named: updateUsingPATCH_7
2019-05-28 18:32:22 -Generating unique operation named: updateUsingDELETE_7
2019-05-28 18:32:22 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-28 18:32:22 -Generating unique operation named: updateUsingTRACE_7
2019-05-28 18:32:22 -Generating unique operation named: addUsingGET_9
2019-05-28 18:32:22 -Generating unique operation named: editUsingGET_10
2019-05-28 18:32:22 -Generating unique operation named: infoUsingGET_1
2019-05-28 18:32:22 -Generating unique operation named: infoUsingHEAD_1
2019-05-28 18:32:22 -Generating unique operation named: infoUsingPOST_1
2019-05-28 18:32:22 -Generating unique operation named: infoUsingPUT_1
2019-05-28 18:32:22 -Generating unique operation named: infoUsingPATCH_1
2019-05-28 18:32:22 -Generating unique operation named: infoUsingDELETE_1
2019-05-28 18:32:22 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-28 18:32:22 -Generating unique operation named: infoUsingTRACE_1
2019-05-28 18:32:22 -Generating unique operation named: listUsingGET_10
2019-05-28 18:32:22 -Generating unique operation named: removeUsingPOST_18
2019-05-28 18:32:23 -Generating unique operation named: removeUsingPOST_19
2019-05-28 18:32:23 -Generating unique operation named: saveUsingPOST_9
2019-05-28 18:32:23 -Generating unique operation named: updateUsingPOST_10
2019-05-28 18:32:23 -Generating unique operation named: listUsingGET_11
2019-05-28 18:32:23 -Generating unique operation named: removeUsingPOST_20
2019-05-28 18:32:23 -Generating unique operation named: welcomeUsingGET_1
2019-05-28 18:32:23 -Generating unique operation named: addUsingGET_10
2019-05-28 18:32:23 -Generating unique operation named: editUsingGET_11
2019-05-28 18:32:23 -Generating unique operation named: listUsingGET_12
2019-05-28 18:32:23 -Generating unique operation named: removeUsingPOST_21
2019-05-28 18:32:23 -Generating unique operation named: saveUsingPOST_10
2019-05-28 18:32:23 -Generating unique operation named: treeUsingGET_1
2019-05-28 18:32:23 -Generating unique operation named: treeUsingGET_2
2019-05-28 18:32:23 -Generating unique operation named: updateUsingPOST_11
2019-05-28 18:32:23 -Generating unique operation named: addUsingGET_11
2019-05-28 18:32:23 -Generating unique operation named: editUsingGET_12
2019-05-28 18:32:23 -Generating unique operation named: listUsingGET_13
2019-05-28 18:32:23 -Generating unique operation named: removeUsingPOST_22
2019-05-28 18:32:23 -Generating unique operation named: removeUsingPOST_23
2019-05-28 18:32:23 -Generating unique operation named: updateUsingPOST_12
2019-05-28 18:32:23 -Generating unique operation named: addUsingGET_12
2019-05-28 18:32:23 -Generating unique operation named: editUsingGET_13
2019-05-28 18:32:23 -Generating unique operation named: listUsingGET_14
2019-05-28 18:32:23 -Generating unique operation named: removeUsingPOST_24
2019-05-28 18:32:23 -Generating unique operation named: removeUsingPOST_25
2019-05-28 18:32:23 -Generating unique operation named: saveUsingPOST_11
2019-05-28 18:32:23 -Generating unique operation named: updateUsingGET_8
2019-05-28 18:32:23 -Generating unique operation named: updateUsingHEAD_8
2019-05-28 18:32:23 -Generating unique operation named: updateUsingPOST_13
2019-05-28 18:32:23 -Generating unique operation named: updateUsingPUT_8
2019-05-28 18:32:23 -Generating unique operation named: updateUsingPATCH_8
2019-05-28 18:32:23 -Generating unique operation named: updateUsingDELETE_8
2019-05-28 18:32:23 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-28 18:32:23 -Generating unique operation named: updateUsingTRACE_8
2019-05-28 18:32:23 -Generating unique operation named: addUsingGET_13
2019-05-28 18:32:23 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-28 18:32:23 -Generating unique operation named: editUsingGET_14
2019-05-28 18:32:23 -Generating unique operation named: listUsingGET_15
2019-05-28 18:32:23 -Generating unique operation named: printEditUsingGET_1
2019-05-28 18:32:23 -Generating unique operation named: removeUsingPOST_26
2019-05-28 18:32:23 -Generating unique operation named: saveUsingPOST_12
2019-05-28 18:32:23 -Generating unique operation named: updateUsingGET_9
2019-05-28 18:32:23 -Generating unique operation named: updateUsingHEAD_9
2019-05-28 18:32:23 -Generating unique operation named: updateUsingPOST_14
2019-05-28 18:32:23 -Generating unique operation named: updateUsingPUT_9
2019-05-28 18:32:23 -Generating unique operation named: updateUsingPATCH_9
2019-05-28 18:32:23 -Generating unique operation named: updateUsingDELETE_9
2019-05-28 18:32:23 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-28 18:32:23 -Generating unique operation named: updateUsingTRACE_9
2019-05-28 18:32:23 -Generating unique operation named: addUsingGET_14
2019-05-28 18:32:23 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-28 18:32:23 -Generating unique operation named: editUsingGET_15
2019-05-28 18:32:23 -Generating unique operation named: listUsingGET_16
2019-05-28 18:32:23 -Generating unique operation named: saveUsingPOST_13
2019-05-28 18:32:23 -Generating unique operation named: saveUsingPOST_14
2019-05-28 18:32:23 -Generating unique operation named: updateUsingPOST_15
2019-05-28 18:32:23 -Generating unique operation named: listUsingGET_17
2019-05-28 18:32:23 -Generating unique operation named: listUsingHEAD_1
2019-05-28 18:32:23 -Generating unique operation named: listUsingPOST_1
2019-05-28 18:32:23 -Generating unique operation named: listUsingPUT_1
2019-05-28 18:32:23 -Generating unique operation named: listUsingPATCH_1
2019-05-28 18:32:23 -Generating unique operation named: listUsingDELETE_1
2019-05-28 18:32:23 -Generating unique operation named: listUsingOPTIONS_1
2019-05-28 18:32:23 -Generating unique operation named: listUsingTRACE_1
2019-05-28 18:32:23 -Generating unique operation named: countDDUsingGET_1
2019-05-28 18:32:23 -Generating unique operation named: exportDDUsingGET_1
2019-05-28 18:32:23 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-28 18:32:23 -Generating unique operation named: addUsingGET_15
2019-05-28 18:32:24 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-28 18:32:24 -Generating unique operation named: editUsingGET_16
2019-05-28 18:32:24 -Generating unique operation named: listUsingGET_18
2019-05-28 18:32:24 -Generating unique operation named: removeUsingPOST_27
2019-05-28 18:32:24 -Generating unique operation named: saveUsingPOST_15
2019-05-28 18:32:24 -Generating unique operation named: treeUsingGET_3
2019-05-28 18:32:24 -Generating unique operation named: treeViewUsingGET_1
2019-05-28 18:32:24 -Generating unique operation named: updateUsingPOST_16
2019-05-28 18:32:24 -Generating unique operation named: addUsingGET_16
2019-05-28 18:32:24 -Generating unique operation named: editUsingGET_17
2019-05-28 18:32:24 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-28 18:32:24 -Generating unique operation named: listUsingGET_19
2019-05-28 18:32:24 -Generating unique operation named: removeUsingPOST_28
2019-05-28 18:32:24 -Generating unique operation named: removeUsingPOST_29
2019-05-28 18:32:24 -Generating unique operation named: saveUsingPOST_16
2019-05-28 18:32:24 -Generating unique operation named: updateUsingGET_10
2019-05-28 18:32:24 -Generating unique operation named: updateUsingHEAD_10
2019-05-28 18:32:24 -Generating unique operation named: updateUsingPOST_17
2019-05-28 18:32:24 -Generating unique operation named: updateUsingPUT_10
2019-05-28 18:32:24 -Generating unique operation named: updateUsingPATCH_10
2019-05-28 18:32:24 -Generating unique operation named: updateUsingDELETE_10
2019-05-28 18:32:24 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-28 18:32:24 -Generating unique operation named: updateUsingTRACE_10
2019-05-28 18:32:24 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-28 18:32:24 -Generating unique operation named: addUsingGET_17
2019-05-28 18:32:24 -Generating unique operation named: editUsingGET_18
2019-05-28 18:32:24 -Generating unique operation named: listUsingGET_20
2019-05-28 18:32:24 -Generating unique operation named: removeUsingPOST_30
2019-05-28 18:32:24 -Generating unique operation named: removeUsingPOST_31
2019-05-28 18:32:24 -Generating unique operation named: saveUsingPOST_17
2019-05-28 18:32:24 -Generating unique operation named: updateUsingGET_11
2019-05-28 18:32:24 -Generating unique operation named: updateUsingHEAD_11
2019-05-28 18:32:24 -Generating unique operation named: updateUsingPOST_18
2019-05-28 18:32:24 -Generating unique operation named: updateUsingPUT_11
2019-05-28 18:32:24 -Generating unique operation named: updateUsingPATCH_11
2019-05-28 18:32:24 -Generating unique operation named: updateUsingDELETE_11
2019-05-28 18:32:24 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-28 18:32:24 -Generating unique operation named: updateUsingTRACE_11
2019-05-28 18:32:24 -Generating unique operation named: addUsingGET_18
2019-05-28 18:32:24 -Generating unique operation named: editUsingGET_19
2019-05-28 18:32:24 -Generating unique operation named: listUsingGET_21
2019-05-28 18:32:24 -Generating unique operation named: removeUsingPOST_32
2019-05-28 18:32:24 -Generating unique operation named: removeUsingPOST_33
2019-05-28 18:32:24 -Generating unique operation named: saveUsingPOST_18
2019-05-28 18:32:24 -Generating unique operation named: updateUsingGET_12
2019-05-28 18:32:24 -Generating unique operation named: updateUsingHEAD_12
2019-05-28 18:32:24 -Generating unique operation named: updateUsingPOST_19
2019-05-28 18:32:24 -Generating unique operation named: updateUsingPUT_12
2019-05-28 18:32:24 -Generating unique operation named: updateUsingPATCH_12
2019-05-28 18:32:24 -Generating unique operation named: updateUsingDELETE_12
2019-05-28 18:32:24 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-28 18:32:24 -Generating unique operation named: updateUsingTRACE_12
2019-05-28 18:32:24 -Starting Quartz Scheduler now
2019-05-28 18:32:24 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-28 18:32:24 -Starting...
2019-05-28 18:32:24 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-28 18:32:24 -Started.
2019-05-28 18:32:24 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-28 18:32:24 -Using a shared selector for servlet write/read
2019-05-28 18:32:24 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-28 18:32:24 -Started BootdoApplication in 34.92 seconds (JVM running for 36.33)
2019-05-28 18:32:24 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-28 18:32:25 -==> Parameters: 
2019-05-28 18:32:25 -<==      Total: 1
2019-05-28 18:32:41 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-28 18:32:41 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-28 18:32:41 -FrameworkServlet 'dispatcherServlet': initialization completed in 68 ms
2019-05-28 18:32:41 -Enabling session validation scheduler...
2019-05-28 18:32:42 -请求地址 : http://localhost:8081/login;JSESSIONID=3902b2dc-b8c6-4373-afa9-d921adbc649c
2019-05-28 18:32:42 -HTTP METHOD : GET
2019-05-28 18:32:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 18:32:42 -参数 : [{}]
2019-05-28 18:32:42 -耗时 : 7
2019-05-28 18:32:42 -返回值 : login
2019-05-28 18:32:44 -请求地址 : http://localhost:8081/getVerify
2019-05-28 18:32:44 -HTTP METHOD : GET
2019-05-28 18:32:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-28 18:32:44 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@5964f0ac, org.apache.shiro.web.servlet.ShiroHttpServletResponse@55b891b9]
2019-05-28 18:32:58 -2373
2019-05-28 18:32:59 -耗时 : 14736
2019-05-28 18:32:59 -返回值 : null
2019-05-28 18:32:59 -请求地址 : http://localhost:8081/login
2019-05-28 18:32:59 -HTTP METHOD : GET
2019-05-28 18:32:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 18:32:59 -参数 : [{}]
2019-05-28 18:32:59 -耗时 : 1
2019-05-28 18:32:59 -返回值 : login
2019-05-28 18:33:03 -请求地址 : http://localhost:8081/login
2019-05-28 18:33:03 -HTTP METHOD : POST
2019-05-28 18:33:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-28 18:33:03 -参数 : [admin, 111111, 2373, org.apache.shiro.web.servlet.ShiroHttpServletRequest@9271885]
2019-05-28 18:33:04 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-28 18:33:04 -==> Parameters: admin(String)
2019-05-28 18:33:04 -<==      Total: 1
2019-05-28 18:33:04 -耗时 : 289
2019-05-28 18:33:04 -返回值 : {msg=操作成功, code=0}
2019-05-28 18:33:04 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-28 18:33:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 18:33:04 -==> Parameters: 1(Long), admin(String), 登录(String), 289(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-28 18:33:04.382(Timestamp)
2019-05-28 18:33:04 -<==    Updates: 1
2019-05-28 18:33:04 -请求地址 : http://localhost:8081/index
2019-05-28 18:33:04 -HTTP METHOD : GET
2019-05-28 18:33:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 18:33:04 -参数 : [{}]
2019-05-28 18:33:04 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 18:33:04 -==> Parameters: 1(Long)
2019-05-28 18:33:05 -<==      Total: 50
2019-05-28 18:33:05 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 18:33:05 -==> Parameters: 138(Long)
2019-05-28 18:33:05 -<==      Total: 1
2019-05-28 18:33:05 -耗时 : 420
2019-05-28 18:33:05 -返回值 : index_v1
2019-05-28 18:33:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 18:33:05 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 420(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 18:33:05.324(Timestamp)
2019-05-28 18:33:05 -<==    Updates: 1
2019-05-28 18:33:05 -请求地址 : http://localhost:8081/main
2019-05-28 18:33:05 -HTTP METHOD : GET
2019-05-28 18:33:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 18:33:05 -参数 : []
2019-05-28 18:33:05 -耗时 : 1
2019-05-28 18:33:05 -返回值 : main
2019-05-28 18:33:06 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 18:33:06 -HTTP METHOD : GET
2019-05-28 18:33:06 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 18:33:06 -参数 : []
2019-05-28 18:33:06 -请求地址 : http://localhost:8081/main
2019-05-28 18:33:06 -HTTP METHOD : GET
2019-05-28 18:33:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 18:33:06 -参数 : []
2019-05-28 18:33:06 -耗时 : 3
2019-05-28 18:33:06 -返回值 : main
2019-05-28 18:33:06 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 18:33:06 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 18:33:06 -<==      Total: 0
2019-05-28 18:33:06 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 18:33:06 -==> Parameters: 1(Long), 0(String)
2019-05-28 18:33:06 -<==      Total: 1
2019-05-28 18:33:06 -耗时 : 172
2019-05-28 18:33:06 -返回值 : com.bootdo.common.utils.PageUtils@128786dd
2019-05-28 18:33:17 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 3]
2019-05-28 18:34:12 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 18:34:12 -==> Parameters: 1(Long)
2019-05-28 18:34:12 -<==      Total: 94
2019-05-28 18:34:12 -请求地址 : http://localhost:8081/charts/tableElecYY
2019-05-28 18:34:12 -HTTP METHOD : GET
2019-05-28 18:34:12 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 18:34:12 -参数 : []
2019-05-28 18:34:12 -耗时 : 9
2019-05-28 18:34:12 -返回值 : charts/tableElecYY
2019-05-28 18:34:18 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 18:34:18 -HTTP METHOD : GET
2019-05-28 18:34:18 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 18:34:18 -参数 : [userType]
2019-05-28 18:34:18 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 18:34:18 -==> Parameters: userType(String)
2019-05-28 18:34:18 -<==      Total: 4
2019-05-28 18:34:18 -耗时 : 72
2019-05-28 18:34:18 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 18:34:19 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 18:34:19 -HTTP METHOD : GET
2019-05-28 18:34:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 18:34:19 -参数 : []
2019-05-28 18:34:19 -耗时 : 1
2019-05-28 18:34:19 -返回值 : system/dept/deptTree
2019-05-28 18:34:19 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 18:34:19 -HTTP METHOD : GET
2019-05-28 18:34:19 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 18:34:19 -参数 : []
2019-05-28 18:34:19 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 18:34:19 -==> Parameters: 
2019-05-28 18:34:19 -<==      Total: 3
2019-05-28 18:34:19 -耗时 : 40
2019-05-28 18:34:19 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 18:34:21 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-28 18:34:21 -HTTP METHOD : POST
2019-05-28 18:34:21 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 18:34:21 -参数 : [com.bootdo.elec.vo.ElecVo@4b6c412b, com.bootdo.moneyLog.vo.ElecLogVo@487af926]
2019-05-28 18:34:21 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2018-12(String), 1(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2019(String), 1(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2018-12(String), 2(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2019(String), 2(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:21 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:21 -==> Parameters: 2018-12(String), 3(String), 2(String)
2019-05-28 18:34:21 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 3(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 4(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 4(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 5(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 5(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 6(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 6(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 7(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 7(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 8(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 8(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 9(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 9(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 10(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 10(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2018-12(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:22 -==> Parameters: 2019(String), 11(String), 2(String)
2019-05-28 18:34:22 -<==      Total: 1
2019-05-28 18:34:22 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-28 18:34:22 -==> Parameters: 
2019-05-28 18:34:22 -<==      Total: 2
2019-05-28 18:34:22 -耗时 : 949
2019-05-28 18:34:22 -返回值 : {WGOweElecSumYYNew=0.00, G1OweElecCountYYNew=0, G3TotalyuNew=0.00, MMPreElecSumYYNew=0.00, MMOweElecCountYYNew=0, TotalPreyuNew=0.00, WGTotalyuNew=0.00, TotalCostyu=3.00, SElecPrice=2.600, WSElecPrice=0.810, WGTotalhuOld=0, WMPreElecSumYYOld=0.00, SElecLogYYSum=40.00, G3TotalhuOld=0, G1PreElecSumYYOld=0.00, TotalOwehuNew=0, TotalCosthu=2, MSTotalyuOld=0.00, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=1, MTotalyuOld=0.00, G2PreElecSumYYNew=0.00, G1OweElecSumYYNew=0.00, ZElecPrice=0.970, G1ElecLogYYCount=0, MMTotalhuNew=0, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0.00, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0.00, SElecLogYYCount=2, ZTotalyuOld=0.00, G3PreElecSumYYNew=0.00, ZElecLogYYSum=0.00, WSPreElecCountYYNew=0, WGElecPrice=0.970, WMTotalyuOld=0.00, WSElecLogYYCount=0, WSTotalhuNew=0, MOweElecSumYYOld=0.00, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=0, G1ElecPrice=0.970, G2OweElecSumYYNew=0.00, WSOweElecSumYYOld=0.00, MSPreElecSumYYOld=0.00, G3OweElecCountYYOld=0, SElecCostYYCount=1, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0.00, MElecLogYYCount=2, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=20.00, G2TotalyuNew=0.00, G2TotalhuOld=0, MMOweElecSumYYNew=0.00, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0.00, ZTotalyuNew=0.00, WGElecLogYYCount=0, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0.00, ZElecAmountYY=0, STotalyuNew=0.00, SOweElecCountYYNew=0, MMTotalyuNew=0.00, WGTotalyuOld=0.00, MSElecCostYYSum=0.00, TotalPreyuOld=0.00, G3TotalyuOld=0.00, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=0.00, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=0, G3ElecAmountYY=0, WSOweElecSumYYNew=0.00, G2ElecCostYYCount=0, MPreElecSumYYOld=0.00, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0.00, G3PreElecSumYYOld=0.00, MMPreElecSumYYOld=0.00, MTotalhuNew=1, MTotalyuNew=0.00, G2OweElecCountYYNew=0, G1TotalyuNew=0.00, G3ElecPrice=0.400, WMOweElecSumYYOld=0.00, SPreElecCountYYNew=1, ZTotalhuOld=0, G3ElecCostYYCount=0, WSElecLogYYSum=0.00, G2OweElecSumYYOld=0.00, WGElecAmountYY=0, ZElecCostYYSum=0.00, WMElecAmountYY=0, MElecCostYYCount=1, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0.00, MOweElecCountYYNew=0, TotalOweyuNew=0.00, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=0.00, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0.00, G2TotalyuOld=0.00, TotalAllyuNew=0.00, TotalAllhuOld=0, STotalyuOld=0.00, SElecCostYYSum=2.00, MPreElecCountYYNew=1, SOweElecSumYYNew=0.00, WMElecCostYYSum=0.00, G3ElecCostYYSum=0.00, MMTotalyuOld=0.00, MMElecCostYYSum=0.00, type=2, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0.00, WSTotalyuOld=0.00, G1ElecCostYYCount=0, WMElecCostYYCount=0, ZOweElecSumYYNew=0.00, MElecPrice=1.800, WGElecCostYYCount=0, TotalLogyu=60.00, ZTotalhuNew=0, WMElecPrice=0.465, MPreElecSumYYNew=0.00, G2ElecLogYYSum=0.00, G1ElecLogYYSum=0.00, G3ElecLogYYSum=0.00, TotalLoghu=4, SPreElecCountYYOld=0, TotalOweyuOld=0.00, MSOweElecSumYYOld=0.00, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0.00, ZPreElecSumYYNew=0.00, G2ElecCostYYSum=0.00, MTotalhuOld=0, G1TotalyuOld=0.00, TotalPrehuNew=2, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=0, SPreElecSumYYNew=0.00, MMElecLogYYCount=0, PriceTotal=10.725, ZPreElecCountYYNew=0, WMTotalhuNew=0, WGTotalhuNew=0, MElecAmountYY=0, TotalAllhuNew=2, G1ElecCostYYSum=0.00, MMElecCostYYCount=0, WGOweElecSumYYOld=0.00, WSElecCostYYSum=0.00, G3PreElecCountYYOld=0, G2TotalhuNew=0, G3OweElecSumYYNew=0.00, G1PreElecSumYYNew=0.00, SElecAmountYY=0, WGElecCostYYSum=0.00, MElecCostYYSum=1.00, WGPreElecSumYYNew=0.00, G2PreElecSumYYOld=0.00, G2ElecAmountYY=0, G2ElecPrice=0.465, MSElecAmountYY=0, WSTotalyuNew=0.00, G1TotalhuNew=0, G1OweElecSumYYOld=0.00, MMElecPrice=0.465, MMElecLogYYSum=0.00, MSOweElecSumYYNew=0.00, WMTotalyuNew=0.00, WSPreElecSumYYOld=0.00, MSElecLogYYSum=0.00, ZPreElecSumYYOld=0.00, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=0.00, MSElecPrice=0.810, WMPreElecCountYYNew=0, MMPreElecCountYYNew=0, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=0, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0.00, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=0, SPreElecSumYYOld=0.00, G3ElecLogYYCount=0}
2019-05-28 18:34:45 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 18:34:45 -HTTP METHOD : GET
2019-05-28 18:34:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 18:34:45 -参数 : []
2019-05-28 18:34:45 -耗时 : 1
2019-05-28 18:34:45 -返回值 : system/dept/deptTree
2019-05-28 18:34:45 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 18:34:45 -HTTP METHOD : GET
2019-05-28 18:34:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 18:34:45 -参数 : []
2019-05-28 18:34:45 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 18:34:45 -==> Parameters: 
2019-05-28 18:34:45 -<==      Total: 3
2019-05-28 18:34:45 -耗时 : 4
2019-05-28 18:34:45 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 18:34:46 -请求地址 : http://localhost:8081/charts/tableElecYY/tableElecYY
2019-05-28 18:34:47 -HTTP METHOD : POST
2019-05-28 18:34:47 -CLASS_METHOD : com.bootdo.charts.controller.tableElecYYController.tableElecYY
2019-05-28 18:34:47 -参数 : [com.bootdo.elec.vo.ElecVo@3505090c, com.bootdo.moneyLog.vo.ElecLogVo@31d7cde]
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 1(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 1(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 2(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 2(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 3(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 3(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 4(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 4(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 5(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 5(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 5(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 5(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 5(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 6(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 6(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 6(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 6(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 6(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 7(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 7(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 7(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 7(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 7(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 8(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 8(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 8(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 8(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 8(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 9(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 9(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 9(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 9(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 9(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 10(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 10(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 10(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 10(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 10(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(*) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and `create_time` = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2018-12(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_cost),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_money),0) from elec_log WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE `elec_sum` >= 0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select COUNT(ID) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_sum),0) from elec WHERE elec_sum <0 and create_time = (select MAX(create_time) from elec where DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ?) and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select ifnull(SUM(elec_amount),0) from elec WHERE DATE_FORMAT(CONCAT(create_time,'-01'),'%Y') = ? and elec_type = ? and user_org = ? 
2019-05-28 18:34:47 -==> Parameters: 2019(String), 11(String), 3(String)
2019-05-28 18:34:47 -<==      Total: 1
2019-05-28 18:34:47 -==>  Preparing: select m_elec,s_elec,g1_elec,g2_elec,g3_elec,wm_elec,ws_elec,wg_elec,mm_elec,ms_elec,z_elec,elec_org from elec_price 
2019-05-28 18:34:47 -==> Parameters: 
2019-05-28 18:34:47 -<==      Total: 2
2019-05-28 18:34:47 -耗时 : 358
2019-05-28 18:34:47 -返回值 : {WGOweElecSumYYNew=0.00, G1OweElecCountYYNew=0, G3TotalyuNew=0.00, MMPreElecSumYYNew=0.00, MMOweElecCountYYNew=0, TotalPreyuNew=0.00, WGTotalyuNew=0.00, TotalCostyu=0.00, SElecPrice=0.791, WGTotalhuOld=0, WMPreElecSumYYOld=0.00, SElecLogYYSum=0.00, G3TotalhuOld=0, G1PreElecSumYYOld=0.00, TotalOwehuNew=0, TotalCosthu=0, MSTotalyuOld=0.00, WSOweElecCountYYNew=0, ZOweElecCountYYOld=0, STotalhuNew=0, MTotalyuOld=0.00, G2PreElecSumYYNew=0.00, G1OweElecSumYYNew=0.00, G1ElecLogYYCount=0, MMTotalhuNew=0, G2OweElecCountYYOld=0, WMOweElecSumYYNew=0.00, G2PreElecCountYYOld=0, WGPreElecSumYYOld=0.00, SElecLogYYCount=0, ZTotalyuOld=0.00, G3PreElecSumYYNew=0.00, ZElecLogYYSum=0.00, WSPreElecCountYYNew=0, WMTotalyuOld=0.00, WSElecLogYYCount=0, WSTotalhuNew=0, MOweElecSumYYOld=0.00, ZElecCostYYCount=0, MOweElecCountYYOld=0, AmountTotalYY=0, G1ElecPrice=0.970, G2OweElecSumYYNew=0.00, WSOweElecSumYYOld=0.00, MSPreElecSumYYOld=0.00, G3OweElecCountYYOld=0, SElecCostYYCount=0, MSPreElecCountYYOld=0, ZOweElecSumYYOld=0.00, MElecLogYYCount=0, G1PreElecCountYYOld=0, MMPreElecCountYYOld=0, MElecLogYYSum=0.00, G2TotalyuNew=0.00, G2TotalhuOld=0, MMOweElecSumYYNew=0.00, WGOweElecCountYYNew=0, WGPreElecCountYYOld=0, TotalAllyuOld=0.00, ZTotalyuNew=0.00, WGElecLogYYCount=0, MMOweElecCountYYOld=0, WSPreElecCountYYOld=0, MSTotalhuOld=0, SOweElecSumYYOld=0.00, ZElecAmountYY=0, STotalyuNew=0.00, SOweElecCountYYNew=0, MMTotalyuNew=0.00, WGTotalyuOld=0.00, MSElecCostYYSum=0.00, TotalPreyuOld=0.00, G3TotalyuOld=0.00, G1OweElecCountYYOld=0, MPreElecCountYYOld=0, WMPreElecSumYYNew=0.00, WMOweElecCountYYOld=0, G1ElecAmountYY=0, STotalhuOld=0, G2PreElecCountYYNew=0, G3ElecAmountYY=0, WSOweElecSumYYNew=0.00, G2ElecCostYYCount=0, MPreElecSumYYOld=0.00, MMTotalhuOld=0, WSOweElecCountYYOld=0, MSTotalyuNew=0.00, G3PreElecSumYYOld=0.00, MMPreElecSumYYOld=0.00, MTotalhuNew=0, MTotalyuNew=0.00, G2OweElecCountYYNew=0, G1TotalyuNew=0.00, WMOweElecSumYYOld=0.00, SPreElecCountYYNew=0, ZTotalhuOld=0, G3ElecCostYYCount=0, WSElecLogYYSum=0.00, G2OweElecSumYYOld=0.00, WGElecAmountYY=0, ZElecCostYYSum=0.00, WMElecAmountYY=0, MElecCostYYCount=0, G1TotalhuOld=0, MSElecCostYYCount=0, MSPreElecSumYYNew=0.00, MOweElecCountYYNew=0, TotalOweyuNew=0.00, MSOweElecCountYYOld=0, TotalPrehuOld=0, WGElecLogYYSum=0.00, TotalOwehuOld=0, WGOweElecCountYYOld=0, WSElecAmountYY=0, WMElecLogYYSum=0.00, G2TotalyuOld=0.00, TotalAllyuNew=0.00, TotalAllhuOld=0, STotalyuOld=0.00, SElecCostYYSum=0.00, MPreElecCountYYNew=0, SOweElecSumYYNew=0.00, WMElecCostYYSum=0.00, G3ElecCostYYSum=0.00, MMTotalyuOld=0.00, MMElecCostYYSum=0.00, type=3, SOweElecCountYYOld=0, MSTotalhuNew=0, G3PreElecCountYYNew=0, G3OweElecSumYYOld=0.00, WSTotalyuOld=0.00, G1ElecCostYYCount=0, WMElecCostYYCount=0, ZOweElecSumYYNew=0.00, MElecPrice=0.465, WGElecCostYYCount=0, TotalLogyu=0.00, ZTotalhuNew=0, MPreElecSumYYNew=0.00, G2ElecLogYYSum=0.00, G1ElecLogYYSum=0.00, G3ElecLogYYSum=0.00, TotalLoghu=0, SPreElecCountYYOld=0, TotalOweyuOld=0.00, MSOweElecSumYYOld=0.00, WSElecCostYYCount=0, MSOweElecCountYYNew=0, WSPreElecSumYYNew=0.00, ZPreElecSumYYNew=0.00, G2ElecCostYYSum=0.00, MTotalhuOld=0, G1TotalyuOld=0.00, TotalPrehuNew=0, WMOweElecCountYYNew=0, WMPreElecCountYYOld=0, G3TotalhuNew=0, SPreElecSumYYNew=0.00, MMElecLogYYCount=0, PriceTotal=2.226, ZPreElecCountYYNew=0, WMTotalhuNew=0, WGTotalhuNew=0, MElecAmountYY=0, TotalAllhuNew=0, G1ElecCostYYSum=0.00, MMElecCostYYCount=0, WGOweElecSumYYOld=0.00, WSElecCostYYSum=0.00, G3PreElecCountYYOld=0, G2TotalhuNew=0, G3OweElecSumYYNew=0.00, G1PreElecSumYYNew=0.00, SElecAmountYY=0, WGElecCostYYSum=0.00, MElecCostYYSum=0.00, WGPreElecSumYYNew=0.00, G2PreElecSumYYOld=0.00, G2ElecAmountYY=0, MSElecAmountYY=0, WSTotalyuNew=0.00, G1TotalhuNew=0, G1OweElecSumYYOld=0.00, MMElecLogYYSum=0.00, MSOweElecSumYYNew=0.00, WMTotalyuNew=0.00, WSPreElecSumYYOld=0.00, MSElecLogYYSum=0.00, ZPreElecSumYYOld=0.00, MSElecLogYYCount=0, ZPreElecCountYYOld=0, MOweElecSumYYNew=0.00, WMPreElecCountYYNew=0, MMPreElecCountYYNew=0, WSTotalhuOld=0, G2ElecLogYYCount=0, ZOweElecCountYYNew=0, WMElecLogYYCount=0, WMTotalhuOld=0, WGPreElecCountYYNew=0, G3OweElecCountYYNew=0, MSPreElecCountYYNew=0, MMOweElecSumYYOld=0.00, ZElecLogYYCount=0, MMElecAmountYY=0, G1PreElecCountYYNew=0, SPreElecSumYYOld=0.00, G3ElecLogYYCount=0}
2019-05-28 18:35:32 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-28 18:35:32 -HTTP METHOD : GET
2019-05-28 18:35:32 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-28 18:35:32 -参数 : []
2019-05-28 18:35:32 -耗时 : 1
2019-05-28 18:35:32 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-28 18:35:43 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 18:35:43 -HTTP METHOD : GET
2019-05-28 18:35:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 18:35:43 -参数 : []
2019-05-28 18:35:43 -耗时 : 1
2019-05-28 18:35:43 -返回值 : system/dept/deptTree
2019-05-28 18:35:43 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 18:35:43 -HTTP METHOD : GET
2019-05-28 18:35:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 18:35:43 -参数 : []
2019-05-28 18:35:43 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 18:35:43 -==> Parameters: 
2019-05-28 18:35:43 -<==      Total: 3
2019-05-28 18:35:43 -耗时 : 4
2019-05-28 18:35:43 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 18:35:44 -请求地址 : http://localhost:8081/elec/elecUpLoad/importElecExcel
2019-05-28 18:35:44 -HTTP METHOD : POST
2019-05-28 18:35:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.importElecExcel
2019-05-28 18:35:44 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@28f71b0f, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@1e3e1a8e]
2019-05-28 18:36:52 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE USER_ID = ? 
2019-05-28 18:36:52 -==> Parameters: 1-0001(String)
2019-05-28 18:36:52 -<==      Total: 1
2019-05-28 18:36:52 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_AREA,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-05-28 18:36:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 18:36:52 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'userArea' in 'class com.bootdo.elec.domain.ElecDO'(String), null, 2019-05-28 18:36:52.552(Timestamp)
2019-05-28 18:36:52 -nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'userArea' in 'class com.bootdo.elec.domain.ElecDO'
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'userArea' in 'class com.bootdo.elec.domain.ElecDO'
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy125.createElecNextMonth(Unknown Source)
	at com.bootdo.elec.service.impl.ElecUpLoadServiceImpl.createElecNextMonth(ElecUpLoadServiceImpl.java:28)
	at com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(ElecUpLoadController.java:128)
	at com.bootdo.elec.controller.ElecUpLoadController$$FastClassBySpringCGLIB$$4a82566f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor142.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecUpLoadController$$EnhancerBySpringCGLIB$$68d26928.importElecExcel(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.reflection.ReflectionException: There is no getter for property named 'userArea' in 'class com.bootdo.elec.domain.ElecDO'
	at org.apache.ibatis.reflection.Reflector.getGetInvoker(Reflector.java:421)
	at org.apache.ibatis.reflection.MetaClass.getGetInvoker(MetaClass.java:164)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.getBeanProperty(BeanWrapper.java:162)
	at org.apache.ibatis.reflection.wrapper.BeanWrapper.get(BeanWrapper.java:49)
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:79)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 99 common frames omitted
2019-05-28 18:36:52 -<==    Updates: 1
2019-05-28 18:42:24 -Starting BootdoApplication on PC-201905091110 with PID 19420 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-28 18:42:24 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-28 18:42:24 -The following profiles are active: dev
2019-05-28 18:42:25 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@79da1ec0: startup date [Tue May 28 18:42:25 CST 2019]; root of context hierarchy
2019-05-28 18:42:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-28 18:42:36 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$22afc0f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:42:36 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$1508ef9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:42:37 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:42:38 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:42:39 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:42:39 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-28 18:42:39 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-28 18:42:39 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:42:39 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:42:39 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:42:39 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:42:40 -Tomcat initialized with port(s): 8081 (http)
2019-05-28 18:42:40 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-28 18:42:41 -Starting service [Tomcat]
2019-05-28 18:42:41 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-28 18:42:41 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-28 18:42:41 -Initializing Spring embedded WebApplicationContext
2019-05-28 18:42:41 -Root WebApplicationContext: initialization completed in 16271 ms
2019-05-28 18:42:42 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-28 18:42:42 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-28 18:42:42 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-28 18:42:42 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-28 18:42:42 -Filter xssFilter was not registered (disabled)
2019-05-28 18:42:42 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-28 18:42:42 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-28 18:42:42 -Servlet statViewServlet mapped to [/druid/*]
2019-05-28 18:42:42 -Servlet dispatcherServlet mapped to [/]
2019-05-28 18:42:48 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@79da1ec0: startup date [Tue May 28 18:42:25 CST 2019]; root of context hierarchy
2019-05-28 18:42:48 -Using default implementation for ThreadExecutor
2019-05-28 18:42:49 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-28 18:42:49 -Quartz Scheduler v.2.2.1 created.
2019-05-28 18:42:49 -RAMJobStore initialized.
2019-05-28 18:42:49 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-28 18:42:49 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-28 18:42:49 -Quartz scheduler version: 2.2.1
2019-05-28 18:42:49 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1b10f60e
2019-05-28 18:42:50 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-28 18:42:50 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-28 18:42:53 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-28 18:42:53 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:42:53 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:42:53 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-28 18:42:53 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-28 18:42:53 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-28 18:42:53 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-28 18:42:53 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:42:53 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:42:53 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-28 18:42:53 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-28 18:42:53 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:42:53 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 18:42:53 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-28 18:42:53 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-28 18:42:53 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 18:42:53 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:42:53 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-28 18:42:53 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-28 18:42:53 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:42:53 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 18:42:53 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-28 18:42:53 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-28 18:42:53 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 18:42:53 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-28 18:42:53 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-28 18:42:53 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-28 18:42:53 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-28 18:42:53 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:53 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-28 18:42:53 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-28 18:42:53 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-28 18:42:53 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:53 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-28 18:42:53 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-28 18:42:53 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-28 18:42:53 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-28 18:42:53 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-28 18:42:53 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-28 18:42:53 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:53 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-28 18:42:53 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-28 18:42:53 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:53 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-28 18:42:53 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-28 18:42:53 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:53 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-28 18:42:53 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 18:42:53 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-28 18:42:53 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-28 18:42:53 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 18:42:53 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-28 18:42:53 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-28 18:42:53 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-28 18:42:53 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-28 18:42:53 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:53 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-28 18:42:53 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-28 18:42:53 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:53 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-28 18:42:53 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-28 18:42:53 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-28 18:42:53 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-28 18:42:53 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:53 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-28 18:42:53 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-28 18:42:53 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-28 18:42:53 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-28 18:42:53 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-28 18:42:53 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-28 18:42:53 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 18:42:53 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 18:42:53 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-28 18:42:53 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:53 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-28 18:42:53 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 18:42:53 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-28 18:42:53 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-28 18:42:53 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-28 18:42:53 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-28 18:42:53 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-28 18:42:53 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:53 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-28 18:42:53 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:53 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-28 18:42:53 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-28 18:42:53 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 18:42:53 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 18:42:53 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-28 18:42:53 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-28 18:42:53 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-28 18:42:53 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-28 18:42:53 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:53 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-28 18:42:53 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-28 18:42:53 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-28 18:42:53 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 18:42:53 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-28 18:42:53 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-28 18:42:53 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-28 18:42:53 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-28 18:42:53 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 18:42:53 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:53 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 18:42:53 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-28 18:42:53 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:53 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 18:42:53 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-28 18:42:53 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-28 18:42:53 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:53 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-28 18:42:53 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 18:42:53 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 18:42:53 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 18:42:53 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-28 18:42:53 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-28 18:42:53 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-28 18:42:53 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 18:42:53 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 18:42:53 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-28 18:42:53 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-28 18:42:53 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:53 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:53 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-28 18:42:53 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-28 18:42:53 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-28 18:42:53 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 18:42:54 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:54 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 18:42:54 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-28 18:42:54 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 18:42:54 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-28 18:42:54 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-28 18:42:54 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-28 18:42:54 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 18:42:54 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:54 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 18:42:54 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-28 18:42:54 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 18:42:54 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-28 18:42:54 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-28 18:42:54 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-28 18:42:54 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 18:42:54 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:54 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 18:42:54 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 18:42:54 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-28 18:42:54 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-28 18:42:54 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-28 18:42:54 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-28 18:42:54 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-28 18:42:54 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:54 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-28 18:42:54 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-28 18:42:54 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-28 18:42:54 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:54 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-28 18:42:54 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-28 18:42:54 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-28 18:42:54 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-28 18:42:54 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:54 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-28 18:42:54 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-28 18:42:54 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-28 18:42:54 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:54 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-28 18:42:54 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-28 18:42:54 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-28 18:42:54 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-28 18:42:54 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-28 18:42:54 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-28 18:42:54 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-28 18:42:54 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-28 18:42:54 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-28 18:42:54 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-28 18:42:54 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-28 18:42:54 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-28 18:42:54 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:54 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 18:42:54 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-28 18:42:54 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-28 18:42:54 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-28 18:42:54 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:54 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-28 18:42:54 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-28 18:42:54 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-28 18:42:54 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 18:42:54 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-28 18:42:54 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-28 18:42:54 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-28 18:42:54 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-28 18:42:54 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-28 18:42:54 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-28 18:42:54 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-28 18:42:54 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-28 18:42:54 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-28 18:42:54 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-28 18:42:54 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-28 18:42:54 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:54 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-28 18:42:54 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-28 18:42:54 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:54 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-28 18:42:54 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-28 18:42:54 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-28 18:42:54 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-28 18:42:54 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 18:42:54 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 18:42:54 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 18:42:54 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-28 18:42:54 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 18:42:54 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-28 18:42:54 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-28 18:42:54 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-28 18:42:54 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-28 18:42:54 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-28 18:42:54 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:54 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-28 18:42:54 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-28 18:42:54 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:54 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 18:42:54 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-28 18:42:54 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:54 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-28 18:42:54 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-28 18:42:54 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-28 18:42:54 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 18:42:54 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:42:54 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 18:42:54 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-28 18:42:54 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:42:54 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-28 18:42:54 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:42:54 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 18:42:54 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-28 18:42:54 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 18:42:54 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-28 18:42:54 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-28 18:42:54 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-28 18:42:54 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-28 18:42:55 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-28 18:42:55 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-28 18:42:56 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 18:42:56 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@79da1ec0: startup date [Tue May 28 18:42:25 CST 2019]; root of context hierarchy
2019-05-28 18:42:56 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 18:42:56 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 18:42:56 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 18:42:57 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-28 18:42:57 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-28 18:42:59 -Registering beans for JMX exposure on startup
2019-05-28 18:42:59 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-28 18:43:00 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-28 18:43:00 -Starting beans in phase 2147483647
2019-05-28 18:43:00 -Context refreshed
2019-05-28 18:43:00 -Found 1 custom documentation plugin(s)
2019-05-28 18:43:00 -Scanning for api listing references
2019-05-28 18:43:00 -Generating unique operation named: getCountDUsingPOST_1
2019-05-28 18:43:01 -Generating unique operation named: removeUsingPOST_1
2019-05-28 18:43:01 -Generating unique operation named: addUsingGET_1
2019-05-28 18:43:01 -Generating unique operation named: editUsingGET_1
2019-05-28 18:43:01 -Generating unique operation named: listUsingGET_1
2019-05-28 18:43:01 -Generating unique operation named: removeUsingPOST_2
2019-05-28 18:43:01 -Generating unique operation named: removeUsingPOST_3
2019-05-28 18:43:01 -Generating unique operation named: saveUsingPOST_1
2019-05-28 18:43:01 -Generating unique operation named: updateUsingGET_1
2019-05-28 18:43:01 -Generating unique operation named: updateUsingHEAD_1
2019-05-28 18:43:01 -Generating unique operation named: updateUsingPOST_1
2019-05-28 18:43:01 -Generating unique operation named: updateUsingPUT_1
2019-05-28 18:43:01 -Generating unique operation named: updateUsingPATCH_1
2019-05-28 18:43:01 -Generating unique operation named: updateUsingDELETE_1
2019-05-28 18:43:01 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-28 18:43:01 -Generating unique operation named: updateUsingTRACE_1
2019-05-28 18:43:01 -Generating unique operation named: addUsingGET_2
2019-05-28 18:43:01 -Generating unique operation named: editUsingGET_2
2019-05-28 18:43:01 -Generating unique operation named: listUsingGET_2
2019-05-28 18:43:01 -Generating unique operation named: removeUsingPOST_4
2019-05-28 18:43:01 -Generating unique operation named: removeUsingPOST_5
2019-05-28 18:43:01 -Generating unique operation named: saveUsingPOST_2
2019-05-28 18:43:01 -Generating unique operation named: updateUsingPOST_2
2019-05-28 18:43:01 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-28 18:43:01 -Generating unique operation named: addUsingGET_3
2019-05-28 18:43:01 -Generating unique operation named: editUsingGET_3
2019-05-28 18:43:01 -Generating unique operation named: listUsingGET_3
2019-05-28 18:43:01 -Generating unique operation named: removeUsingPOST_6
2019-05-28 18:43:01 -Generating unique operation named: removeUsingPOST_7
2019-05-28 18:43:01 -Generating unique operation named: saveUsingPOST_3
2019-05-28 18:43:02 -Generating unique operation named: updateUsingGET_2
2019-05-28 18:43:02 -Generating unique operation named: updateUsingHEAD_2
2019-05-28 18:43:02 -Generating unique operation named: updateUsingPOST_3
2019-05-28 18:43:02 -Generating unique operation named: updateUsingPUT_2
2019-05-28 18:43:02 -Generating unique operation named: updateUsingPATCH_2
2019-05-28 18:43:02 -Generating unique operation named: updateUsingDELETE_2
2019-05-28 18:43:02 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-28 18:43:02 -Generating unique operation named: updateUsingTRACE_2
2019-05-28 18:43:02 -Generating unique operation named: addUsingGET_4
2019-05-28 18:43:02 -Generating unique operation named: editUsingGET_4
2019-05-28 18:43:02 -Generating unique operation named: listUsingGET_4
2019-05-28 18:43:02 -Generating unique operation named: removeUsingPOST_8
2019-05-28 18:43:02 -Generating unique operation named: removeUsingPOST_9
2019-05-28 18:43:02 -Generating unique operation named: saveUsingPOST_4
2019-05-28 18:43:02 -Generating unique operation named: updateUsingGET_3
2019-05-28 18:43:02 -Generating unique operation named: updateUsingHEAD_3
2019-05-28 18:43:02 -Generating unique operation named: updateUsingPOST_4
2019-05-28 18:43:02 -Generating unique operation named: updateUsingPUT_3
2019-05-28 18:43:02 -Generating unique operation named: updateUsingPATCH_3
2019-05-28 18:43:02 -Generating unique operation named: updateUsingDELETE_3
2019-05-28 18:43:02 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-28 18:43:02 -Generating unique operation named: updateUsingTRACE_3
2019-05-28 18:43:02 -Generating unique operation named: ElecUsingGET_1
2019-05-28 18:43:02 -Generating unique operation named: addUsingGET_5
2019-05-28 18:43:02 -Generating unique operation named: editUsingGET_5
2019-05-28 18:43:02 -Generating unique operation named: listUsingGET_5
2019-05-28 18:43:02 -Generating unique operation named: removeUsingPOST_10
2019-05-28 18:43:02 -Generating unique operation named: removeUsingPOST_11
2019-05-28 18:43:02 -Generating unique operation named: saveUsingPOST_5
2019-05-28 18:43:02 -Generating unique operation named: updateUsingGET_4
2019-05-28 18:43:02 -Generating unique operation named: updateUsingHEAD_4
2019-05-28 18:43:02 -Generating unique operation named: updateUsingPOST_5
2019-05-28 18:43:02 -Generating unique operation named: updateUsingPUT_4
2019-05-28 18:43:02 -Generating unique operation named: updateUsingPATCH_4
2019-05-28 18:43:02 -Generating unique operation named: updateUsingDELETE_4
2019-05-28 18:43:02 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-28 18:43:02 -Generating unique operation named: updateUsingTRACE_4
2019-05-28 18:43:02 -Generating unique operation named: editUsingGET_6
2019-05-28 18:43:02 -Generating unique operation named: listUsingGET_6
2019-05-28 18:43:02 -Generating unique operation named: updateUsingPOST_6
2019-05-28 18:43:02 -Generating unique operation named: addUsingGET_6
2019-05-28 18:43:02 -Generating unique operation named: editUsingGET_7
2019-05-28 18:43:02 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-28 18:43:02 -Generating unique operation named: listUsingGET_7
2019-05-28 18:43:02 -Generating unique operation named: removeUsingPOST_12
2019-05-28 18:43:02 -Generating unique operation named: removeUsingPOST_13
2019-05-28 18:43:02 -Generating unique operation named: saveUsingPOST_6
2019-05-28 18:43:02 -Generating unique operation named: updateUsingGET_5
2019-05-28 18:43:02 -Generating unique operation named: updateUsingHEAD_5
2019-05-28 18:43:02 -Generating unique operation named: updateUsingPOST_7
2019-05-28 18:43:02 -Generating unique operation named: updateUsingPUT_5
2019-05-28 18:43:02 -Generating unique operation named: updateUsingPATCH_5
2019-05-28 18:43:02 -Generating unique operation named: updateUsingDELETE_5
2019-05-28 18:43:02 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-28 18:43:02 -Generating unique operation named: updateUsingTRACE_5
2019-05-28 18:43:02 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-28 18:43:02 -Generating unique operation named: addUsingGET_7
2019-05-28 18:43:02 -Generating unique operation named: editUsingGET_8
2019-05-28 18:43:02 -Generating unique operation named: listUsingGET_8
2019-05-28 18:43:02 -Generating unique operation named: removeUsingPOST_14
2019-05-28 18:43:02 -Generating unique operation named: removeUsingPOST_15
2019-05-28 18:43:02 -Generating unique operation named: saveUsingPOST_7
2019-05-28 18:43:02 -Generating unique operation named: updateUsingGET_6
2019-05-28 18:43:02 -Generating unique operation named: updateUsingHEAD_6
2019-05-28 18:43:03 -Generating unique operation named: updateUsingPOST_8
2019-05-28 18:43:03 -Generating unique operation named: updateUsingPUT_6
2019-05-28 18:43:03 -Generating unique operation named: updateUsingPATCH_6
2019-05-28 18:43:03 -Generating unique operation named: updateUsingDELETE_6
2019-05-28 18:43:03 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-28 18:43:03 -Generating unique operation named: updateUsingTRACE_6
2019-05-28 18:43:03 -Generating unique operation named: addUsingGET_8
2019-05-28 18:43:03 -Generating unique operation named: editUsingGET_9
2019-05-28 18:43:03 -Generating unique operation named: listUsingGET_9
2019-05-28 18:43:03 -Generating unique operation named: removeUsingPOST_16
2019-05-28 18:43:03 -Generating unique operation named: removeUsingPOST_17
2019-05-28 18:43:03 -Generating unique operation named: saveUsingPOST_8
2019-05-28 18:43:03 -Generating unique operation named: updateUsingGET_7
2019-05-28 18:43:03 -Generating unique operation named: updateUsingHEAD_7
2019-05-28 18:43:03 -Generating unique operation named: updateUsingPOST_9
2019-05-28 18:43:03 -Generating unique operation named: updateUsingPUT_7
2019-05-28 18:43:03 -Generating unique operation named: updateUsingPATCH_7
2019-05-28 18:43:03 -Generating unique operation named: updateUsingDELETE_7
2019-05-28 18:43:03 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-28 18:43:03 -Generating unique operation named: updateUsingTRACE_7
2019-05-28 18:43:03 -Generating unique operation named: addUsingGET_9
2019-05-28 18:43:03 -Generating unique operation named: editUsingGET_10
2019-05-28 18:43:03 -Generating unique operation named: infoUsingGET_1
2019-05-28 18:43:03 -Generating unique operation named: infoUsingHEAD_1
2019-05-28 18:43:03 -Generating unique operation named: infoUsingPOST_1
2019-05-28 18:43:03 -Generating unique operation named: infoUsingPUT_1
2019-05-28 18:43:03 -Generating unique operation named: infoUsingPATCH_1
2019-05-28 18:43:03 -Generating unique operation named: infoUsingDELETE_1
2019-05-28 18:43:03 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-28 18:43:03 -Generating unique operation named: infoUsingTRACE_1
2019-05-28 18:43:03 -Generating unique operation named: listUsingGET_10
2019-05-28 18:43:03 -Generating unique operation named: removeUsingPOST_18
2019-05-28 18:43:03 -Generating unique operation named: removeUsingPOST_19
2019-05-28 18:43:03 -Generating unique operation named: saveUsingPOST_9
2019-05-28 18:43:03 -Generating unique operation named: updateUsingPOST_10
2019-05-28 18:43:03 -Generating unique operation named: listUsingGET_11
2019-05-28 18:43:03 -Generating unique operation named: removeUsingPOST_20
2019-05-28 18:43:03 -Generating unique operation named: welcomeUsingGET_1
2019-05-28 18:43:03 -Generating unique operation named: addUsingGET_10
2019-05-28 18:43:03 -Generating unique operation named: editUsingGET_11
2019-05-28 18:43:03 -Generating unique operation named: listUsingGET_12
2019-05-28 18:43:03 -Generating unique operation named: removeUsingPOST_21
2019-05-28 18:43:03 -Generating unique operation named: saveUsingPOST_10
2019-05-28 18:43:03 -Generating unique operation named: treeUsingGET_1
2019-05-28 18:43:03 -Generating unique operation named: treeUsingGET_2
2019-05-28 18:43:04 -Generating unique operation named: updateUsingPOST_11
2019-05-28 18:43:04 -Generating unique operation named: addUsingGET_11
2019-05-28 18:43:04 -Generating unique operation named: editUsingGET_12
2019-05-28 18:43:04 -Generating unique operation named: listUsingGET_13
2019-05-28 18:43:04 -Generating unique operation named: removeUsingPOST_22
2019-05-28 18:43:04 -Generating unique operation named: removeUsingPOST_23
2019-05-28 18:43:04 -Generating unique operation named: updateUsingPOST_12
2019-05-28 18:43:04 -Generating unique operation named: addUsingGET_12
2019-05-28 18:43:04 -Generating unique operation named: editUsingGET_13
2019-05-28 18:43:04 -Generating unique operation named: listUsingGET_14
2019-05-28 18:43:04 -Generating unique operation named: removeUsingPOST_24
2019-05-28 18:43:04 -Generating unique operation named: removeUsingPOST_25
2019-05-28 18:43:04 -Generating unique operation named: saveUsingPOST_11
2019-05-28 18:43:04 -Generating unique operation named: updateUsingGET_8
2019-05-28 18:43:04 -Generating unique operation named: updateUsingHEAD_8
2019-05-28 18:43:04 -Generating unique operation named: updateUsingPOST_13
2019-05-28 18:43:04 -Generating unique operation named: updateUsingPUT_8
2019-05-28 18:43:04 -Generating unique operation named: updateUsingPATCH_8
2019-05-28 18:43:04 -Generating unique operation named: updateUsingDELETE_8
2019-05-28 18:43:04 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-28 18:43:04 -Generating unique operation named: updateUsingTRACE_8
2019-05-28 18:43:04 -Generating unique operation named: addUsingGET_13
2019-05-28 18:43:04 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-28 18:43:04 -Generating unique operation named: editUsingGET_14
2019-05-28 18:43:04 -Generating unique operation named: listUsingGET_15
2019-05-28 18:43:04 -Generating unique operation named: printEditUsingGET_1
2019-05-28 18:43:04 -Generating unique operation named: removeUsingPOST_26
2019-05-28 18:43:04 -Generating unique operation named: saveUsingPOST_12
2019-05-28 18:43:04 -Generating unique operation named: updateUsingGET_9
2019-05-28 18:43:04 -Generating unique operation named: updateUsingHEAD_9
2019-05-28 18:43:04 -Generating unique operation named: updateUsingPOST_14
2019-05-28 18:43:04 -Generating unique operation named: updateUsingPUT_9
2019-05-28 18:43:04 -Generating unique operation named: updateUsingPATCH_9
2019-05-28 18:43:04 -Generating unique operation named: updateUsingDELETE_9
2019-05-28 18:43:04 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-28 18:43:04 -Generating unique operation named: updateUsingTRACE_9
2019-05-28 18:43:04 -Generating unique operation named: addUsingGET_14
2019-05-28 18:43:04 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-28 18:43:04 -Generating unique operation named: editUsingGET_15
2019-05-28 18:43:04 -Generating unique operation named: listUsingGET_16
2019-05-28 18:43:04 -Generating unique operation named: saveUsingPOST_13
2019-05-28 18:43:04 -Generating unique operation named: saveUsingPOST_14
2019-05-28 18:43:04 -Generating unique operation named: updateUsingPOST_15
2019-05-28 18:43:04 -Generating unique operation named: listUsingGET_17
2019-05-28 18:43:04 -Generating unique operation named: listUsingHEAD_1
2019-05-28 18:43:04 -Generating unique operation named: listUsingPOST_1
2019-05-28 18:43:04 -Generating unique operation named: listUsingPUT_1
2019-05-28 18:43:04 -Generating unique operation named: listUsingPATCH_1
2019-05-28 18:43:04 -Generating unique operation named: listUsingDELETE_1
2019-05-28 18:43:04 -Generating unique operation named: listUsingOPTIONS_1
2019-05-28 18:43:04 -Generating unique operation named: listUsingTRACE_1
2019-05-28 18:43:04 -Generating unique operation named: countDDUsingGET_1
2019-05-28 18:43:04 -Generating unique operation named: exportDDUsingGET_1
2019-05-28 18:43:04 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-28 18:43:04 -Generating unique operation named: addUsingGET_15
2019-05-28 18:43:04 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-28 18:43:04 -Generating unique operation named: editUsingGET_16
2019-05-28 18:43:04 -Generating unique operation named: listUsingGET_18
2019-05-28 18:43:04 -Generating unique operation named: removeUsingPOST_27
2019-05-28 18:43:04 -Generating unique operation named: saveUsingPOST_15
2019-05-28 18:43:04 -Generating unique operation named: treeUsingGET_3
2019-05-28 18:43:04 -Generating unique operation named: treeViewUsingGET_1
2019-05-28 18:43:04 -Generating unique operation named: updateUsingPOST_16
2019-05-28 18:43:05 -Generating unique operation named: addUsingGET_16
2019-05-28 18:43:05 -Generating unique operation named: editUsingGET_17
2019-05-28 18:43:05 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-28 18:43:05 -Generating unique operation named: listUsingGET_19
2019-05-28 18:43:05 -Generating unique operation named: removeUsingPOST_28
2019-05-28 18:43:05 -Generating unique operation named: removeUsingPOST_29
2019-05-28 18:43:05 -Generating unique operation named: saveUsingPOST_16
2019-05-28 18:43:05 -Generating unique operation named: updateUsingGET_10
2019-05-28 18:43:05 -Generating unique operation named: updateUsingHEAD_10
2019-05-28 18:43:05 -Generating unique operation named: updateUsingPOST_17
2019-05-28 18:43:05 -Generating unique operation named: updateUsingPUT_10
2019-05-28 18:43:05 -Generating unique operation named: updateUsingPATCH_10
2019-05-28 18:43:05 -Generating unique operation named: updateUsingDELETE_10
2019-05-28 18:43:05 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-28 18:43:05 -Generating unique operation named: updateUsingTRACE_10
2019-05-28 18:43:05 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-28 18:43:05 -Generating unique operation named: addUsingGET_17
2019-05-28 18:43:05 -Generating unique operation named: editUsingGET_18
2019-05-28 18:43:05 -Generating unique operation named: listUsingGET_20
2019-05-28 18:43:05 -Generating unique operation named: removeUsingPOST_30
2019-05-28 18:43:05 -Generating unique operation named: removeUsingPOST_31
2019-05-28 18:43:05 -Generating unique operation named: saveUsingPOST_17
2019-05-28 18:43:05 -Generating unique operation named: updateUsingGET_11
2019-05-28 18:43:05 -Generating unique operation named: updateUsingHEAD_11
2019-05-28 18:43:05 -Generating unique operation named: updateUsingPOST_18
2019-05-28 18:43:05 -Generating unique operation named: updateUsingPUT_11
2019-05-28 18:43:05 -Generating unique operation named: updateUsingPATCH_11
2019-05-28 18:43:05 -Generating unique operation named: updateUsingDELETE_11
2019-05-28 18:43:05 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-28 18:43:05 -Generating unique operation named: updateUsingTRACE_11
2019-05-28 18:43:05 -Generating unique operation named: addUsingGET_18
2019-05-28 18:43:05 -Generating unique operation named: editUsingGET_19
2019-05-28 18:43:05 -Generating unique operation named: listUsingGET_21
2019-05-28 18:43:05 -Generating unique operation named: removeUsingPOST_32
2019-05-28 18:43:05 -Generating unique operation named: removeUsingPOST_33
2019-05-28 18:43:05 -Generating unique operation named: saveUsingPOST_18
2019-05-28 18:43:05 -Generating unique operation named: updateUsingGET_12
2019-05-28 18:43:05 -Generating unique operation named: updateUsingHEAD_12
2019-05-28 18:43:05 -Generating unique operation named: updateUsingPOST_19
2019-05-28 18:43:05 -Generating unique operation named: updateUsingPUT_12
2019-05-28 18:43:05 -Generating unique operation named: updateUsingPATCH_12
2019-05-28 18:43:05 -Generating unique operation named: updateUsingDELETE_12
2019-05-28 18:43:05 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-28 18:43:05 -Generating unique operation named: updateUsingTRACE_12
2019-05-28 18:43:05 -Starting Quartz Scheduler now
2019-05-28 18:43:05 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-28 18:43:05 -Starting...
2019-05-28 18:43:05 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-28 18:43:05 -Started.
2019-05-28 18:43:05 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-28 18:43:05 -Using a shared selector for servlet write/read
2019-05-28 18:43:05 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-28 18:43:05 -Started BootdoApplication in 44.182 seconds (JVM running for 45.876)
2019-05-28 18:43:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-28 18:43:06 -==> Parameters: 
2019-05-28 18:43:06 -<==      Total: 1
2019-05-28 18:43:13 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-28 18:43:13 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-28 18:43:13 -FrameworkServlet 'dispatcherServlet': initialization completed in 62 ms
2019-05-28 18:43:13 -Enabling session validation scheduler...
2019-05-28 18:43:13 -请求地址 : http://localhost:8081/login;JSESSIONID=ffd7fbde-eb0a-4859-97e1-d9d91ea99324
2019-05-28 18:43:13 -HTTP METHOD : GET
2019-05-28 18:43:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 18:43:13 -参数 : [{}]
2019-05-28 18:43:13 -耗时 : 4
2019-05-28 18:43:13 -返回值 : login
2019-05-28 18:43:15 -请求地址 : http://localhost:8081/getVerify
2019-05-28 18:43:15 -HTTP METHOD : GET
2019-05-28 18:43:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-28 18:43:15 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@10a36e77, org.apache.shiro.web.servlet.ShiroHttpServletResponse@51c11285]
2019-05-28 18:43:22 -5399
2019-05-28 18:43:23 -耗时 : 8352
2019-05-28 18:43:23 -返回值 : null
2019-05-28 18:43:28 -请求地址 : http://localhost:8081/login
2019-05-28 18:43:28 -HTTP METHOD : POST
2019-05-28 18:43:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-28 18:43:28 -参数 : [admin, 111111, 5399, org.apache.shiro.web.servlet.ShiroHttpServletRequest@3dee1294]
2019-05-28 18:43:28 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-28 18:43:28 -==> Parameters: admin(String)
2019-05-28 18:43:28 -<==      Total: 1
2019-05-28 18:43:28 -耗时 : 232
2019-05-28 18:43:28 -返回值 : {msg=操作成功, code=0}
2019-05-28 18:43:28 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-28 18:43:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 18:43:28 -==> Parameters: 1(Long), admin(String), 登录(String), 232(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-28 18:43:28.611(Timestamp)
2019-05-28 18:43:29 -<==    Updates: 1
2019-05-28 18:43:29 -请求地址 : http://localhost:8081/index
2019-05-28 18:43:29 -HTTP METHOD : GET
2019-05-28 18:43:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 18:43:29 -参数 : [{}]
2019-05-28 18:43:29 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 18:43:29 -==> Parameters: 1(Long)
2019-05-28 18:43:29 -<==      Total: 50
2019-05-28 18:43:29 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 18:43:29 -==> Parameters: 138(Long)
2019-05-28 18:43:29 -<==      Total: 1
2019-05-28 18:43:29 -耗时 : 403
2019-05-28 18:43:29 -返回值 : index_v1
2019-05-28 18:43:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 18:43:30 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 406(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 18:43:30.132(Timestamp)
2019-05-28 18:43:30 -<==    Updates: 1
2019-05-28 18:43:30 -请求地址 : http://localhost:8081/main
2019-05-28 18:43:30 -HTTP METHOD : GET
2019-05-28 18:43:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 18:43:30 -参数 : []
2019-05-28 18:43:30 -耗时 : 1
2019-05-28 18:43:30 -返回值 : main
2019-05-28 18:43:30 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 18:43:30 -HTTP METHOD : GET
2019-05-28 18:43:30 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 18:43:30 -参数 : []
2019-05-28 18:43:30 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 18:43:30 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 18:43:30 -<==      Total: 0
2019-05-28 18:43:30 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 18:43:30 -==> Parameters: 1(Long), 0(String)
2019-05-28 18:43:30 -<==      Total: 1
2019-05-28 18:43:30 -耗时 : 89
2019-05-28 18:43:30 -返回值 : com.bootdo.common.utils.PageUtils@f1bad9a
2019-05-28 18:43:30 -请求地址 : http://localhost:8081/main
2019-05-28 18:43:30 -HTTP METHOD : GET
2019-05-28 18:43:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 18:43:30 -参数 : []
2019-05-28 18:43:30 -耗时 : 0
2019-05-28 18:43:30 -返回值 : main
2019-05-28 18:43:44 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 18:43:44 -==> Parameters: 1(Long)
2019-05-28 18:43:44 -<==      Total: 94
2019-05-28 18:43:44 -请求地址 : http://localhost:8081/elec/elec
2019-05-28 18:43:44 -HTTP METHOD : GET
2019-05-28 18:43:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.Elec
2019-05-28 18:43:44 -参数 : []
2019-05-28 18:43:44 -耗时 : 0
2019-05-28 18:43:44 -返回值 : elec/elec/elec
2019-05-28 18:43:45 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 18:43:45 -HTTP METHOD : GET
2019-05-28 18:43:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 18:43:45 -参数 : [userType]
2019-05-28 18:43:45 -请求地址 : http://localhost:8081/common/dict/list/elecType
2019-05-28 18:43:45 -HTTP METHOD : GET
2019-05-28 18:43:45 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 18:43:45 -参数 : [elecType]
2019-05-28 18:43:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 18:43:45 -==> Parameters: userType(String)
2019-05-28 18:43:45 -<==      Total: 4
2019-05-28 18:43:45 -耗时 : 206
2019-05-28 18:43:45 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 18:43:45 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 18:43:45 -==> Parameters: elecType(String)
2019-05-28 18:43:45 -<==      Total: 11
2019-05-28 18:43:45 -耗时 : 231
2019-05-28 18:43:45 -返回值 : [DictDO{id=180, name='矿民用', value='1', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=179, name='矿商业', value='2', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=178, name='矿工业1', value='3', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=177, name='矿工业2', value='4', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=176, name='矿工业3', value='5', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=175, name='乌民用', value='6', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=174, name='乌商用', value='7', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=173, name='乌工业', value='8', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=172, name='煤民用', value='9', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=171, name='煤商业', value='10', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=170, name='政府用电', value='11', type='elecType', description='电费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 18:43:45 -请求地址 : http://localhost:8081/elec/elecInto
2019-05-28 18:43:45 -HTTP METHOD : GET
2019-05-28 18:43:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecIntoController.ElecInto
2019-05-28 18:43:45 -参数 : []
2019-05-28 18:43:45 -耗时 : 0
2019-05-28 18:43:45 -返回值 : elec/elecInto/elecInto
2019-05-28 18:43:45 -请求地址 : http://localhost:8081/elec/elec/list
2019-05-28 18:43:45 -HTTP METHOD : GET
2019-05-28 18:43:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecController.list
2019-05-28 18:43:45 -参数 : [{limit=10, offset=0, userType=, elecType=, userOrg=, userId=, createTime=, queryType=1}, com.bootdo.elec.domain.ElecDO@268a472]
2019-05-28 18:43:45 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName, `user_tell`,`user_state`,`wages_id`,`elec_type`,`elec_price`,`start`,`end`,`hu`,`elec_amount`,`elec_cost`,`elec_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from elec order by id asc limit ?, ? 
2019-05-28 18:43:45 -==> Parameters: 0(Integer), 10(Integer)
2019-05-28 18:43:45 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-28 18:43:45 -HTTP METHOD : GET
2019-05-28 18:43:45 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-28 18:43:45 -参数 : []
2019-05-28 18:43:45 -耗时 : 0
2019-05-28 18:43:45 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-28 18:43:46 -<==      Total: 2
2019-05-28 18:43:46 -==>  Preparing: select count(*) from elec 
2019-05-28 18:43:46 -==> Parameters: 
2019-05-28 18:43:46 -<==      Total: 1
2019-05-28 18:43:46 -耗时 : 394
2019-05-28 18:43:46 -返回值 : com.bootdo.common.utils.PageUtils@261400db
2019-05-28 18:43:55 -WebSocketSession[1 current WS(0)-HttpStream(1)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 8, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannelpool size = 2, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 5]
2019-05-28 18:44:11 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 18:44:11 -HTTP METHOD : GET
2019-05-28 18:44:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 18:44:11 -参数 : []
2019-05-28 18:44:11 -耗时 : 0
2019-05-28 18:44:11 -返回值 : system/dept/deptTree
2019-05-28 18:44:11 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 18:44:11 -HTTP METHOD : GET
2019-05-28 18:44:11 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 18:44:11 -参数 : []
2019-05-28 18:44:12 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 18:44:12 -==> Parameters: 
2019-05-28 18:44:12 -<==      Total: 3
2019-05-28 18:44:12 -耗时 : 22
2019-05-28 18:44:12 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 18:44:13 -请求地址 : http://localhost:8081/elec/elecUpLoad/importElecExcel
2019-05-28 18:44:13 -HTTP METHOD : POST
2019-05-28 18:44:13 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.importElecExcel
2019-05-28 18:44:13 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3435ca05, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@1d55d0]
2019-05-28 18:44:22 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE USER_ID = ? 
2019-05-28 18:44:22 -==> Parameters: 1-0001(String)
2019-05-28 18:44:22 -<==      Total: 1
2019-05-28 18:44:22 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-05-28 18:44:22 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 1(String), 1(String), 1(String), 0.465(BigDecimal), 50(String), 100(String), 50(BigDecimal), 1(Integer), 23.250(BigDecimal), -23.250(BigDecimal), 2019-3(String), 1(Long), 2019-05-27 22:28:06.0(Timestamp), 1(Long), null
2019-05-28 18:44:22 -<==    Updates: 1
2019-05-28 18:44:22 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE USER_ID = ? 
2019-05-28 18:44:22 -==> Parameters: 1-0004(String)
2019-05-28 18:44:22 -<==      Total: 1
2019-05-28 18:44:22 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-05-28 18:44:22 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1(String), 1(String), 1(String), 2(String), 0.789(BigDecimal), 60(String), 100(String), 80(BigDecimal), 2(Integer), 63.120(BigDecimal), -63.120(BigDecimal), 2019-3(String), 1(Long), 2019-05-27 22:30:38.0(Timestamp), 1(Long), null
2019-05-28 18:44:23 -<==    Updates: 1
2019-05-28 18:44:23 -耗时 : 9075
2019-05-28 18:44:23 -返回值 : {result=success}
2019-05-28 18:55:06 -Starting BootdoApplication on PC-201905091110 with PID 14744 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-28 18:55:06 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-28 18:55:06 -The following profiles are active: dev
2019-05-28 18:55:06 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62435e70: startup date [Tue May 28 18:55:06 CST 2019]; root of context hierarchy
2019-05-28 18:55:10 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-28 18:55:13 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b970e440] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:55:13 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$abca12e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:55:14 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:55:15 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:55:15 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:55:15 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-28 18:55:15 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-28 18:55:15 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:55:15 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:55:15 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:55:15 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 18:55:16 -Tomcat initialized with port(s): 8081 (http)
2019-05-28 18:55:16 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-28 18:55:17 -Starting service [Tomcat]
2019-05-28 18:55:17 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-28 18:55:17 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-28 18:55:17 -Initializing Spring embedded WebApplicationContext
2019-05-28 18:55:17 -Root WebApplicationContext: initialization completed in 11250 ms
2019-05-28 18:55:18 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-28 18:55:18 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-28 18:55:18 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-28 18:55:18 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-28 18:55:18 -Filter xssFilter was not registered (disabled)
2019-05-28 18:55:18 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-28 18:55:18 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-28 18:55:18 -Servlet statViewServlet mapped to [/druid/*]
2019-05-28 18:55:18 -Servlet dispatcherServlet mapped to [/]
2019-05-28 18:55:22 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62435e70: startup date [Tue May 28 18:55:06 CST 2019]; root of context hierarchy
2019-05-28 18:55:23 -Using default implementation for ThreadExecutor
2019-05-28 18:55:23 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-28 18:55:23 -Quartz Scheduler v.2.2.1 created.
2019-05-28 18:55:23 -RAMJobStore initialized.
2019-05-28 18:55:23 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-28 18:55:23 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-28 18:55:23 -Quartz scheduler version: 2.2.1
2019-05-28 18:55:23 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@337cb81d
2019-05-28 18:55:24 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-28 18:55:24 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-28 18:55:27 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:55:27 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-28 18:55:27 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-28 18:55:27 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:55:27 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-28 18:55:27 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-28 18:55:27 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-28 18:55:27 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:55:27 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-28 18:55:27 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:55:27 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-28 18:55:27 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:55:27 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-28 18:55:27 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 18:55:27 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 18:55:27 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-28 18:55:27 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:55:27 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-28 18:55:27 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 18:55:27 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-28 18:55:27 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 18:55:27 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-28 18:55:27 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 18:55:27 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-28 18:55:27 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-28 18:55:27 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-28 18:55:27 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-28 18:55:27 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-28 18:55:27 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-28 18:55:27 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-28 18:55:27 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-28 18:55:27 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-28 18:55:27 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-28 18:55:27 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-28 18:55:27 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-28 18:55:27 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-28 18:55:27 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-28 18:55:27 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 18:55:27 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-28 18:55:27 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 18:55:27 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-28 18:55:27 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-28 18:55:27 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-28 18:55:27 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-28 18:55:27 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-28 18:55:27 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-28 18:55:27 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-28 18:55:27 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-28 18:55:27 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-28 18:55:27 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 18:55:27 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 18:55:27 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-28 18:55:27 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-28 18:55:27 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 18:55:27 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-28 18:55:27 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-28 18:55:27 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-28 18:55:27 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-28 18:55:27 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-28 18:55:27 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-28 18:55:27 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 18:55:27 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 18:55:27 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-28 18:55:27 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-28 18:55:27 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-28 18:55:27 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-28 18:55:27 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-28 18:55:27 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-28 18:55:27 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 18:55:27 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-28 18:55:27 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-28 18:55:27 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 18:55:27 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 18:55:27 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-28 18:55:27 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 18:55:27 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-28 18:55:27 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-28 18:55:27 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 18:55:27 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 18:55:27 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-28 18:55:27 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 18:55:27 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-28 18:55:27 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 18:55:27 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 18:55:27 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-28 18:55:27 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-28 18:55:27 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-28 18:55:27 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-28 18:55:27 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-28 18:55:27 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-28 18:55:27 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 18:55:27 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-28 18:55:27 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-28 18:55:27 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-28 18:55:27 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-28 18:55:27 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-28 18:55:27 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-28 18:55:27 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-28 18:55:27 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-28 18:55:27 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-28 18:55:27 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-28 18:55:27 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-28 18:55:27 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-28 18:55:27 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-28 18:55:27 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-28 18:55:27 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-28 18:55:27 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-28 18:55:27 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-28 18:55:27 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-28 18:55:27 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-28 18:55:27 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-28 18:55:27 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 18:55:27 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-28 18:55:27 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-28 18:55:27 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-28 18:55:27 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-28 18:55:27 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-28 18:55:27 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-28 18:55:27 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-28 18:55:27 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-28 18:55:27 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-28 18:55:27 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-28 18:55:27 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-28 18:55:27 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-28 18:55:27 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-28 18:55:27 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-28 18:55:27 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-28 18:55:27 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-28 18:55:27 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 18:55:27 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 18:55:27 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-28 18:55:27 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 18:55:27 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-28 18:55:27 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-28 18:55:27 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-28 18:55:27 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-28 18:55:27 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-28 18:55:27 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 18:55:27 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-28 18:55:27 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-28 18:55:27 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-28 18:55:27 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-28 18:55:27 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 18:55:27 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 18:55:27 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 18:55:27 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-28 18:55:27 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 18:55:27 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 18:55:27 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 18:55:27 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-28 18:55:27 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-28 18:55:27 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 18:55:27 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-28 18:55:27 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-28 18:55:27 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-28 18:55:28 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-28 18:55:28 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-28 18:55:28 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-28 18:55:29 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 18:55:29 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@62435e70: startup date [Tue May 28 18:55:06 CST 2019]; root of context hierarchy
2019-05-28 18:55:29 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 18:55:29 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 18:55:29 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 18:55:29 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-28 18:55:29 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-28 18:55:32 -Registering beans for JMX exposure on startup
2019-05-28 18:55:32 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-28 18:55:32 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-28 18:55:32 -Starting beans in phase 2147483647
2019-05-28 18:55:32 -Context refreshed
2019-05-28 18:55:32 -Found 1 custom documentation plugin(s)
2019-05-28 18:55:32 -Scanning for api listing references
2019-05-28 18:55:32 -Generating unique operation named: getCountDUsingPOST_1
2019-05-28 18:55:32 -Generating unique operation named: removeUsingPOST_1
2019-05-28 18:55:33 -Generating unique operation named: addUsingGET_1
2019-05-28 18:55:33 -Generating unique operation named: editUsingGET_1
2019-05-28 18:55:33 -Generating unique operation named: listUsingGET_1
2019-05-28 18:55:33 -Generating unique operation named: removeUsingPOST_2
2019-05-28 18:55:33 -Generating unique operation named: removeUsingPOST_3
2019-05-28 18:55:33 -Generating unique operation named: saveUsingPOST_1
2019-05-28 18:55:33 -Generating unique operation named: updateUsingGET_1
2019-05-28 18:55:33 -Generating unique operation named: updateUsingHEAD_1
2019-05-28 18:55:33 -Generating unique operation named: updateUsingPOST_1
2019-05-28 18:55:33 -Generating unique operation named: updateUsingPUT_1
2019-05-28 18:55:33 -Generating unique operation named: updateUsingPATCH_1
2019-05-28 18:55:33 -Generating unique operation named: updateUsingDELETE_1
2019-05-28 18:55:33 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-28 18:55:33 -Generating unique operation named: updateUsingTRACE_1
2019-05-28 18:55:33 -Generating unique operation named: addUsingGET_2
2019-05-28 18:55:33 -Generating unique operation named: editUsingGET_2
2019-05-28 18:55:33 -Generating unique operation named: listUsingGET_2
2019-05-28 18:55:33 -Generating unique operation named: removeUsingPOST_4
2019-05-28 18:55:33 -Generating unique operation named: removeUsingPOST_5
2019-05-28 18:55:33 -Generating unique operation named: saveUsingPOST_2
2019-05-28 18:55:33 -Generating unique operation named: updateUsingPOST_2
2019-05-28 18:55:33 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-28 18:55:33 -Generating unique operation named: addUsingGET_3
2019-05-28 18:55:33 -Generating unique operation named: editUsingGET_3
2019-05-28 18:55:33 -Generating unique operation named: listUsingGET_3
2019-05-28 18:55:33 -Generating unique operation named: removeUsingPOST_6
2019-05-28 18:55:33 -Generating unique operation named: removeUsingPOST_7
2019-05-28 18:55:33 -Generating unique operation named: saveUsingPOST_3
2019-05-28 18:55:33 -Generating unique operation named: updateUsingGET_2
2019-05-28 18:55:33 -Generating unique operation named: updateUsingHEAD_2
2019-05-28 18:55:33 -Generating unique operation named: updateUsingPOST_3
2019-05-28 18:55:33 -Generating unique operation named: updateUsingPUT_2
2019-05-28 18:55:33 -Generating unique operation named: updateUsingPATCH_2
2019-05-28 18:55:33 -Generating unique operation named: updateUsingDELETE_2
2019-05-28 18:55:33 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-28 18:55:33 -Generating unique operation named: updateUsingTRACE_2
2019-05-28 18:55:33 -Generating unique operation named: addUsingGET_4
2019-05-28 18:55:33 -Generating unique operation named: editUsingGET_4
2019-05-28 18:55:33 -Generating unique operation named: listUsingGET_4
2019-05-28 18:55:33 -Generating unique operation named: removeUsingPOST_8
2019-05-28 18:55:33 -Generating unique operation named: removeUsingPOST_9
2019-05-28 18:55:33 -Generating unique operation named: saveUsingPOST_4
2019-05-28 18:55:33 -Generating unique operation named: updateUsingGET_3
2019-05-28 18:55:33 -Generating unique operation named: updateUsingHEAD_3
2019-05-28 18:55:33 -Generating unique operation named: updateUsingPOST_4
2019-05-28 18:55:33 -Generating unique operation named: updateUsingPUT_3
2019-05-28 18:55:33 -Generating unique operation named: updateUsingPATCH_3
2019-05-28 18:55:33 -Generating unique operation named: updateUsingDELETE_3
2019-05-28 18:55:33 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-28 18:55:33 -Generating unique operation named: updateUsingTRACE_3
2019-05-28 18:55:33 -Generating unique operation named: ElecUsingGET_1
2019-05-28 18:55:33 -Generating unique operation named: addUsingGET_5
2019-05-28 18:55:33 -Generating unique operation named: editUsingGET_5
2019-05-28 18:55:33 -Generating unique operation named: listUsingGET_5
2019-05-28 18:55:33 -Generating unique operation named: removeUsingPOST_10
2019-05-28 18:55:33 -Generating unique operation named: removeUsingPOST_11
2019-05-28 18:55:33 -Generating unique operation named: saveUsingPOST_5
2019-05-28 18:55:33 -Generating unique operation named: updateUsingGET_4
2019-05-28 18:55:33 -Generating unique operation named: updateUsingHEAD_4
2019-05-28 18:55:33 -Generating unique operation named: updateUsingPOST_5
2019-05-28 18:55:33 -Generating unique operation named: updateUsingPUT_4
2019-05-28 18:55:33 -Generating unique operation named: updateUsingPATCH_4
2019-05-28 18:55:33 -Generating unique operation named: updateUsingDELETE_4
2019-05-28 18:55:33 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-28 18:55:33 -Generating unique operation named: updateUsingTRACE_4
2019-05-28 18:55:33 -Generating unique operation named: editUsingGET_6
2019-05-28 18:55:33 -Generating unique operation named: listUsingGET_6
2019-05-28 18:55:33 -Generating unique operation named: updateUsingPOST_6
2019-05-28 18:55:33 -Generating unique operation named: addUsingGET_6
2019-05-28 18:55:33 -Generating unique operation named: editUsingGET_7
2019-05-28 18:55:34 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-28 18:55:34 -Generating unique operation named: listUsingGET_7
2019-05-28 18:55:34 -Generating unique operation named: removeUsingPOST_12
2019-05-28 18:55:34 -Generating unique operation named: removeUsingPOST_13
2019-05-28 18:55:34 -Generating unique operation named: saveUsingPOST_6
2019-05-28 18:55:34 -Generating unique operation named: updateUsingGET_5
2019-05-28 18:55:34 -Generating unique operation named: updateUsingHEAD_5
2019-05-28 18:55:34 -Generating unique operation named: updateUsingPOST_7
2019-05-28 18:55:34 -Generating unique operation named: updateUsingPUT_5
2019-05-28 18:55:34 -Generating unique operation named: updateUsingPATCH_5
2019-05-28 18:55:34 -Generating unique operation named: updateUsingDELETE_5
2019-05-28 18:55:34 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-28 18:55:34 -Generating unique operation named: updateUsingTRACE_5
2019-05-28 18:55:34 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-28 18:55:34 -Generating unique operation named: addUsingGET_7
2019-05-28 18:55:34 -Generating unique operation named: editUsingGET_8
2019-05-28 18:55:34 -Generating unique operation named: listUsingGET_8
2019-05-28 18:55:34 -Generating unique operation named: removeUsingPOST_14
2019-05-28 18:55:34 -Generating unique operation named: removeUsingPOST_15
2019-05-28 18:55:34 -Generating unique operation named: saveUsingPOST_7
2019-05-28 18:55:34 -Generating unique operation named: updateUsingGET_6
2019-05-28 18:55:34 -Generating unique operation named: updateUsingHEAD_6
2019-05-28 18:55:34 -Generating unique operation named: updateUsingPOST_8
2019-05-28 18:55:34 -Generating unique operation named: updateUsingPUT_6
2019-05-28 18:55:34 -Generating unique operation named: updateUsingPATCH_6
2019-05-28 18:55:34 -Generating unique operation named: updateUsingDELETE_6
2019-05-28 18:55:34 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-28 18:55:34 -Generating unique operation named: updateUsingTRACE_6
2019-05-28 18:55:34 -Generating unique operation named: addUsingGET_8
2019-05-28 18:55:34 -Generating unique operation named: editUsingGET_9
2019-05-28 18:55:34 -Generating unique operation named: listUsingGET_9
2019-05-28 18:55:34 -Generating unique operation named: removeUsingPOST_16
2019-05-28 18:55:34 -Generating unique operation named: removeUsingPOST_17
2019-05-28 18:55:34 -Generating unique operation named: saveUsingPOST_8
2019-05-28 18:55:34 -Generating unique operation named: updateUsingGET_7
2019-05-28 18:55:34 -Generating unique operation named: updateUsingHEAD_7
2019-05-28 18:55:34 -Generating unique operation named: updateUsingPOST_9
2019-05-28 18:55:34 -Generating unique operation named: updateUsingPUT_7
2019-05-28 18:55:34 -Generating unique operation named: updateUsingPATCH_7
2019-05-28 18:55:34 -Generating unique operation named: updateUsingDELETE_7
2019-05-28 18:55:34 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-28 18:55:34 -Generating unique operation named: updateUsingTRACE_7
2019-05-28 18:55:34 -Generating unique operation named: addUsingGET_9
2019-05-28 18:55:34 -Generating unique operation named: editUsingGET_10
2019-05-28 18:55:34 -Generating unique operation named: infoUsingGET_1
2019-05-28 18:55:34 -Generating unique operation named: infoUsingHEAD_1
2019-05-28 18:55:34 -Generating unique operation named: infoUsingPOST_1
2019-05-28 18:55:34 -Generating unique operation named: infoUsingPUT_1
2019-05-28 18:55:34 -Generating unique operation named: infoUsingPATCH_1
2019-05-28 18:55:34 -Generating unique operation named: infoUsingDELETE_1
2019-05-28 18:55:34 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-28 18:55:34 -Generating unique operation named: infoUsingTRACE_1
2019-05-28 18:55:34 -Generating unique operation named: listUsingGET_10
2019-05-28 18:55:34 -Generating unique operation named: removeUsingPOST_18
2019-05-28 18:55:34 -Generating unique operation named: removeUsingPOST_19
2019-05-28 18:55:34 -Generating unique operation named: saveUsingPOST_9
2019-05-28 18:55:34 -Generating unique operation named: updateUsingPOST_10
2019-05-28 18:55:34 -Generating unique operation named: listUsingGET_11
2019-05-28 18:55:34 -Generating unique operation named: removeUsingPOST_20
2019-05-28 18:55:34 -Generating unique operation named: welcomeUsingGET_1
2019-05-28 18:55:34 -Generating unique operation named: addUsingGET_10
2019-05-28 18:55:34 -Generating unique operation named: editUsingGET_11
2019-05-28 18:55:34 -Generating unique operation named: listUsingGET_12
2019-05-28 18:55:34 -Generating unique operation named: removeUsingPOST_21
2019-05-28 18:55:34 -Generating unique operation named: saveUsingPOST_10
2019-05-28 18:55:34 -Generating unique operation named: treeUsingGET_1
2019-05-28 18:55:34 -Generating unique operation named: treeUsingGET_2
2019-05-28 18:55:34 -Generating unique operation named: updateUsingPOST_11
2019-05-28 18:55:34 -Generating unique operation named: addUsingGET_11
2019-05-28 18:55:34 -Generating unique operation named: editUsingGET_12
2019-05-28 18:55:34 -Generating unique operation named: listUsingGET_13
2019-05-28 18:55:34 -Generating unique operation named: removeUsingPOST_22
2019-05-28 18:55:34 -Generating unique operation named: removeUsingPOST_23
2019-05-28 18:55:34 -Generating unique operation named: updateUsingPOST_12
2019-05-28 18:55:34 -Generating unique operation named: addUsingGET_12
2019-05-28 18:55:34 -Generating unique operation named: editUsingGET_13
2019-05-28 18:55:34 -Generating unique operation named: listUsingGET_14
2019-05-28 18:55:34 -Generating unique operation named: removeUsingPOST_24
2019-05-28 18:55:34 -Generating unique operation named: removeUsingPOST_25
2019-05-28 18:55:34 -Generating unique operation named: saveUsingPOST_11
2019-05-28 18:55:34 -Generating unique operation named: updateUsingGET_8
2019-05-28 18:55:34 -Generating unique operation named: updateUsingHEAD_8
2019-05-28 18:55:34 -Generating unique operation named: updateUsingPOST_13
2019-05-28 18:55:34 -Generating unique operation named: updateUsingPUT_8
2019-05-28 18:55:34 -Generating unique operation named: updateUsingPATCH_8
2019-05-28 18:55:34 -Generating unique operation named: updateUsingDELETE_8
2019-05-28 18:55:34 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-28 18:55:34 -Generating unique operation named: updateUsingTRACE_8
2019-05-28 18:55:34 -Generating unique operation named: addUsingGET_13
2019-05-28 18:55:34 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-28 18:55:34 -Generating unique operation named: editUsingGET_14
2019-05-28 18:55:35 -Generating unique operation named: listUsingGET_15
2019-05-28 18:55:35 -Generating unique operation named: printEditUsingGET_1
2019-05-28 18:55:35 -Generating unique operation named: removeUsingPOST_26
2019-05-28 18:55:35 -Generating unique operation named: saveUsingPOST_12
2019-05-28 18:55:35 -Generating unique operation named: updateUsingGET_9
2019-05-28 18:55:35 -Generating unique operation named: updateUsingHEAD_9
2019-05-28 18:55:35 -Generating unique operation named: updateUsingPOST_14
2019-05-28 18:55:35 -Generating unique operation named: updateUsingPUT_9
2019-05-28 18:55:35 -Generating unique operation named: updateUsingPATCH_9
2019-05-28 18:55:35 -Generating unique operation named: updateUsingDELETE_9
2019-05-28 18:55:35 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-28 18:55:35 -Generating unique operation named: updateUsingTRACE_9
2019-05-28 18:55:35 -Generating unique operation named: addUsingGET_14
2019-05-28 18:55:35 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-28 18:55:35 -Generating unique operation named: editUsingGET_15
2019-05-28 18:55:35 -Generating unique operation named: listUsingGET_16
2019-05-28 18:55:35 -Generating unique operation named: saveUsingPOST_13
2019-05-28 18:55:35 -Generating unique operation named: saveUsingPOST_14
2019-05-28 18:55:35 -Generating unique operation named: updateUsingPOST_15
2019-05-28 18:55:35 -Generating unique operation named: listUsingGET_17
2019-05-28 18:55:35 -Generating unique operation named: listUsingHEAD_1
2019-05-28 18:55:35 -Generating unique operation named: listUsingPOST_1
2019-05-28 18:55:35 -Generating unique operation named: listUsingPUT_1
2019-05-28 18:55:35 -Generating unique operation named: listUsingPATCH_1
2019-05-28 18:55:35 -Generating unique operation named: listUsingDELETE_1
2019-05-28 18:55:35 -Generating unique operation named: listUsingOPTIONS_1
2019-05-28 18:55:35 -Generating unique operation named: listUsingTRACE_1
2019-05-28 18:55:35 -Generating unique operation named: countDDUsingGET_1
2019-05-28 18:55:35 -Generating unique operation named: exportDDUsingGET_1
2019-05-28 18:55:35 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-28 18:55:35 -Generating unique operation named: addUsingGET_15
2019-05-28 18:55:35 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-28 18:55:35 -Generating unique operation named: editUsingGET_16
2019-05-28 18:55:35 -Generating unique operation named: listUsingGET_18
2019-05-28 18:55:35 -Generating unique operation named: removeUsingPOST_27
2019-05-28 18:55:35 -Generating unique operation named: saveUsingPOST_15
2019-05-28 18:55:35 -Generating unique operation named: treeUsingGET_3
2019-05-28 18:55:35 -Generating unique operation named: treeViewUsingGET_1
2019-05-28 18:55:35 -Generating unique operation named: updateUsingPOST_16
2019-05-28 18:55:35 -Generating unique operation named: addUsingGET_16
2019-05-28 18:55:35 -Generating unique operation named: editUsingGET_17
2019-05-28 18:55:35 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-28 18:55:36 -Generating unique operation named: listUsingGET_19
2019-05-28 18:55:36 -Generating unique operation named: removeUsingPOST_28
2019-05-28 18:55:36 -Generating unique operation named: removeUsingPOST_29
2019-05-28 18:55:36 -Generating unique operation named: saveUsingPOST_16
2019-05-28 18:55:36 -Generating unique operation named: updateUsingGET_10
2019-05-28 18:55:36 -Generating unique operation named: updateUsingHEAD_10
2019-05-28 18:55:36 -Generating unique operation named: updateUsingPOST_17
2019-05-28 18:55:36 -Generating unique operation named: updateUsingPUT_10
2019-05-28 18:55:36 -Generating unique operation named: updateUsingPATCH_10
2019-05-28 18:55:36 -Generating unique operation named: updateUsingDELETE_10
2019-05-28 18:55:36 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-28 18:55:36 -Generating unique operation named: updateUsingTRACE_10
2019-05-28 18:55:36 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-28 18:55:36 -Generating unique operation named: addUsingGET_17
2019-05-28 18:55:36 -Generating unique operation named: editUsingGET_18
2019-05-28 18:55:36 -Generating unique operation named: listUsingGET_20
2019-05-28 18:55:36 -Generating unique operation named: removeUsingPOST_30
2019-05-28 18:55:36 -Generating unique operation named: removeUsingPOST_31
2019-05-28 18:55:36 -Generating unique operation named: saveUsingPOST_17
2019-05-28 18:55:36 -Generating unique operation named: updateUsingGET_11
2019-05-28 18:55:36 -Generating unique operation named: updateUsingHEAD_11
2019-05-28 18:55:36 -Generating unique operation named: updateUsingPOST_18
2019-05-28 18:55:36 -Generating unique operation named: updateUsingPUT_11
2019-05-28 18:55:36 -Generating unique operation named: updateUsingPATCH_11
2019-05-28 18:55:36 -Generating unique operation named: updateUsingDELETE_11
2019-05-28 18:55:36 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-28 18:55:36 -Generating unique operation named: updateUsingTRACE_11
2019-05-28 18:55:36 -Generating unique operation named: addUsingGET_18
2019-05-28 18:55:36 -Generating unique operation named: editUsingGET_19
2019-05-28 18:55:36 -Generating unique operation named: listUsingGET_21
2019-05-28 18:55:36 -Generating unique operation named: removeUsingPOST_32
2019-05-28 18:55:36 -Generating unique operation named: removeUsingPOST_33
2019-05-28 18:55:36 -Generating unique operation named: saveUsingPOST_18
2019-05-28 18:55:36 -Generating unique operation named: updateUsingGET_12
2019-05-28 18:55:36 -Generating unique operation named: updateUsingHEAD_12
2019-05-28 18:55:36 -Generating unique operation named: updateUsingPOST_19
2019-05-28 18:55:36 -Generating unique operation named: updateUsingPUT_12
2019-05-28 18:55:36 -Generating unique operation named: updateUsingPATCH_12
2019-05-28 18:55:36 -Generating unique operation named: updateUsingDELETE_12
2019-05-28 18:55:36 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-28 18:55:36 -Generating unique operation named: updateUsingTRACE_12
2019-05-28 18:55:36 -Starting Quartz Scheduler now
2019-05-28 18:55:36 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-28 18:55:36 -Starting...
2019-05-28 18:55:36 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-28 18:55:36 -Started.
2019-05-28 18:55:36 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-28 18:55:36 -Using a shared selector for servlet write/read
2019-05-28 18:55:36 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-28 18:55:36 -Started BootdoApplication in 32.746 seconds (JVM running for 34.244)
2019-05-28 18:55:36 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-28 18:55:37 -==> Parameters: 
2019-05-28 18:55:37 -<==      Total: 1
2019-05-28 18:56:09 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-28 18:56:09 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-28 18:56:09 -FrameworkServlet 'dispatcherServlet': initialization completed in 93 ms
2019-05-28 18:56:09 -Enabling session validation scheduler...
2019-05-28 18:56:09 -请求地址 : http://localhost:8081/login;JSESSIONID=615ac9ee-b941-48f0-a79f-5ac2289c6e08
2019-05-28 18:56:09 -HTTP METHOD : GET
2019-05-28 18:56:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 18:56:09 -参数 : [{}]
2019-05-28 18:56:09 -耗时 : 6
2019-05-28 18:56:09 -返回值 : login
2019-05-28 18:56:12 -请求地址 : http://localhost:8081/getVerify
2019-05-28 18:56:12 -HTTP METHOD : GET
2019-05-28 18:56:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-28 18:56:12 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@2d0a7e98, org.apache.shiro.web.servlet.ShiroHttpServletResponse@109cd024]
2019-05-28 18:56:28 -3980
2019-05-28 18:56:28 -耗时 : 16266
2019-05-28 18:56:28 -返回值 : null
2019-05-28 18:56:28 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-28 18:56:49 -请求地址 : http://localhost:8081/login
2019-05-28 18:56:49 -HTTP METHOD : POST
2019-05-28 18:56:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-28 18:56:49 -参数 : [admin, 111111, 3980, org.apache.shiro.web.servlet.ShiroHttpServletRequest@5d946fd0]
2019-05-28 18:56:49 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-28 18:56:49 -==> Parameters: admin(String)
2019-05-28 18:56:49 -<==      Total: 1
2019-05-28 18:56:49 -耗时 : 241
2019-05-28 18:56:49 -返回值 : {msg=操作成功, code=0}
2019-05-28 18:56:50 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-28 18:56:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 18:56:50 -==> Parameters: 1(Long), admin(String), 登录(String), 241(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-28 18:56:50.129(Timestamp)
2019-05-28 18:56:50 -请求地址 : http://localhost:8081/index
2019-05-28 18:56:50 -HTTP METHOD : GET
2019-05-28 18:56:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 18:56:50 -参数 : [{}]
2019-05-28 18:56:50 -<==    Updates: 1
2019-05-28 18:56:50 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 18:56:50 -==> Parameters: 1(Long)
2019-05-28 18:56:50 -<==      Total: 50
2019-05-28 18:56:50 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 18:56:50 -==> Parameters: 138(Long)
2019-05-28 18:56:50 -<==      Total: 1
2019-05-28 18:56:50 -耗时 : 354
2019-05-28 18:56:50 -返回值 : index_v1
2019-05-28 18:56:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 18:56:51 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 354(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 18:56:51.025(Timestamp)
2019-05-28 18:56:51 -<==    Updates: 1
2019-05-28 18:56:51 -请求地址 : http://localhost:8081/main
2019-05-28 18:56:51 -HTTP METHOD : GET
2019-05-28 18:56:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 18:56:51 -参数 : []
2019-05-28 18:56:51 -耗时 : 1
2019-05-28 18:56:51 -返回值 : main
2019-05-28 18:56:52 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 18:56:52 -HTTP METHOD : GET
2019-05-28 18:56:52 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 18:56:52 -参数 : []
2019-05-28 18:56:52 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 18:56:52 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 18:56:52 -<==      Total: 0
2019-05-28 18:56:52 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 18:56:52 -==> Parameters: 1(Long), 0(String)
2019-05-28 18:56:52 -<==      Total: 1
2019-05-28 18:56:52 -耗时 : 217
2019-05-28 18:56:52 -返回值 : com.bootdo.common.utils.PageUtils@70391429
2019-05-28 18:56:52 -请求地址 : http://localhost:8081/main
2019-05-28 18:56:52 -HTTP METHOD : GET
2019-05-28 18:56:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 18:56:52 -参数 : []
2019-05-28 18:56:52 -耗时 : 1
2019-05-28 18:56:52 -返回值 : main
2019-05-28 18:57:28 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 18:57:28 -==> Parameters: 1(Long)
2019-05-28 18:57:28 -<==      Total: 94
2019-05-28 18:57:28 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-28 18:57:28 -HTTP METHOD : GET
2019-05-28 18:57:28 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-28 18:57:28 -参数 : []
2019-05-28 18:57:28 -耗时 : 0
2019-05-28 18:57:28 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-28 18:57:42 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 18:57:42 -HTTP METHOD : GET
2019-05-28 18:57:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 18:57:42 -参数 : []
2019-05-28 18:57:42 -耗时 : 1
2019-05-28 18:57:42 -返回值 : system/dept/deptTree
2019-05-28 18:57:42 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 18:57:42 -HTTP METHOD : GET
2019-05-28 18:57:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 18:57:42 -参数 : []
2019-05-28 18:57:42 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 18:57:42 -==> Parameters: 
2019-05-28 18:57:42 -<==      Total: 3
2019-05-28 18:57:42 -耗时 : 44
2019-05-28 18:57:42 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 18:57:44 -请求地址 : http://localhost:8081/elec/elecUpLoad/importElecExcel
2019-05-28 18:57:44 -HTTP METHOD : POST
2019-05-28 18:57:44 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.importElecExcel
2019-05-28 18:57:44 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@60554901, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@3cce60fa]
2019-05-28 18:57:50 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE USER_ID = ? 
2019-05-28 18:57:50 -==> Parameters: 1-0001(String)
2019-05-28 18:57:51 -<==      Total: 2
2019-05-28 18:57:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 18:57:51 -==> Parameters: 1(Long), admin(String), error(String), null, http://localhost:8081/elec/elecUpLoad/importElecExcel(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2(String), null, 2019-05-28 18:57:51.056(Timestamp)
2019-05-28 18:57:51 -nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy101.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:167)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:82)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy125.getElecByUserId(Unknown Source)
	at com.bootdo.elec.service.impl.ElecUpLoadServiceImpl.getElecByUserId(ElecUpLoadServiceImpl.java:23)
	at com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(ElecUpLoadController.java:101)
	at com.bootdo.elec.controller.ElecUpLoadController$$FastClassBySpringCGLIB$$4a82566f.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.bootdo.elec.controller.ElecUpLoadController$$EnhancerBySpringCGLIB$$8876f940.importElecExcel(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 2
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 100 common frames omitted
2019-05-28 18:57:51 -<==    Updates: 1
2019-05-28 18:59:22 -请求地址 : http://localhost:8081/index
2019-05-28 18:59:22 -HTTP METHOD : GET
2019-05-28 18:59:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 18:59:22 -参数 : [{}]
2019-05-28 18:59:22 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 18:59:22 -==> Parameters: 1(Long)
2019-05-28 18:59:22 -<==      Total: 50
2019-05-28 18:59:22 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 18:59:22 -==> Parameters: 138(Long)
2019-05-28 18:59:22 -<==      Total: 1
2019-05-28 18:59:22 -耗时 : 37
2019-05-28 18:59:22 -返回值 : index_v1
2019-05-28 18:59:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 18:59:22 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 38(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 18:59:22.09(Timestamp)
2019-05-28 18:59:22 -<==    Updates: 1
2019-05-28 18:59:22 -请求地址 : http://localhost:8081/main
2019-05-28 18:59:22 -HTTP METHOD : GET
2019-05-28 18:59:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 18:59:22 -参数 : []
2019-05-28 18:59:22 -耗时 : 1
2019-05-28 18:59:22 -返回值 : main
2019-05-28 18:59:22 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 18:59:22 -HTTP METHOD : GET
2019-05-28 18:59:22 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 18:59:22 -参数 : []
2019-05-28 18:59:22 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 18:59:22 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 18:59:22 -<==      Total: 0
2019-05-28 18:59:22 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 18:59:22 -==> Parameters: 1(Long), 0(String)
2019-05-28 18:59:22 -<==      Total: 1
2019-05-28 18:59:22 -耗时 : 10
2019-05-28 18:59:22 -返回值 : com.bootdo.common.utils.PageUtils@454f6d3d
2019-05-28 18:59:22 -请求地址 : http://localhost:8081/main
2019-05-28 18:59:22 -HTTP METHOD : GET
2019-05-28 18:59:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 18:59:22 -参数 : []
2019-05-28 18:59:22 -耗时 : 0
2019-05-28 18:59:22 -返回值 : main
2019-05-28 18:59:29 -请求地址 : http://localhost:8081/elec/elecUpLoad
2019-05-28 18:59:29 -HTTP METHOD : GET
2019-05-28 18:59:29 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.Elec
2019-05-28 18:59:29 -参数 : []
2019-05-28 18:59:29 -耗时 : 1
2019-05-28 18:59:29 -返回值 : elec/elecUpLoad/elecUpLoad
2019-05-28 18:59:39 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 18:59:39 -HTTP METHOD : GET
2019-05-28 18:59:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 18:59:39 -参数 : []
2019-05-28 18:59:39 -耗时 : 1
2019-05-28 18:59:39 -返回值 : system/dept/deptTree
2019-05-28 18:59:39 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 18:59:39 -HTTP METHOD : GET
2019-05-28 18:59:39 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 18:59:39 -参数 : []
2019-05-28 18:59:39 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 18:59:39 -==> Parameters: 
2019-05-28 18:59:39 -<==      Total: 3
2019-05-28 18:59:39 -耗时 : 5
2019-05-28 18:59:39 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 18:59:41 -请求地址 : http://localhost:8081/elec/elecUpLoad/importElecExcel
2019-05-28 18:59:41 -HTTP METHOD : POST
2019-05-28 18:59:41 -CLASS_METHOD : com.bootdo.elec.controller.ElecUpLoadController.importElecExcel
2019-05-28 18:59:41 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@65b232c1, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@79a8b6d2]
2019-05-28 18:59:44 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE USER_ID = ? 
2019-05-28 18:59:44 -==> Parameters: 1-0001(String)
2019-05-28 18:59:44 -<==      Total: 1
2019-05-28 18:59:44 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-05-28 18:59:44 -==> Parameters: 1-0001(String), 李文英(String), B(String), 2(String), 1(String), 1(String), 1(String), 1(String), 0.465(BigDecimal), 50(String), 100(String), 50(BigDecimal), 1(Integer), 23.250(BigDecimal), -23.250(BigDecimal), 2019-03(String), 1(Long), 2019-05-27 22:28:06.0(Timestamp), 1(Long), null
2019-05-28 18:59:44 -<==    Updates: 1
2019-05-28 18:59:44 -==>  Preparing: SELECT `id`, `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `elec_type`, `elec_price`, `start`, `end`, `hu`, `elec_amount`, `elec_cost`, `elec_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` FROM ELEC WHERE USER_ID = ? 
2019-05-28 18:59:44 -==> Parameters: 1-0004(String)
2019-05-28 18:59:44 -<==      Total: 1
2019-05-28 18:59:44 -==>  Preparing: INSERT INTO ELEC (USER_ID,USER_NAME,USER_TYPE,USER_ORG,USER_TELL,USER_STATE,WAGES_ID,ELEC_TYPE, ELEC_PRICE, START,END,ELEC_AMOUNT,HU, ELEC_COST,ELEC_SUM,CREATE_TIME,CREATE_BY,UPDATE_TIME,UPDATE_BY,REMARK) VALUES(?,?,?,?,?,?,?,?,?, ?,?,?,?,?,?,?,?,?,?,?) 
2019-05-28 18:59:44 -==> Parameters: 1-0004(String), 姜海龙(String), B(String), 2(String), 1(String), 1(String), 1(String), 2(String), 0.789(BigDecimal), 60(String), 100(String), 80(BigDecimal), 2(Integer), 63.120(BigDecimal), -63.120(BigDecimal), 2019-03(String), 1(Long), 2019-05-27 22:30:38.0(Timestamp), 1(Long), null
2019-05-28 18:59:44 -<==    Updates: 1
2019-05-28 18:59:44 -耗时 : 3471
2019-05-28 18:59:44 -返回值 : {result=success}
2019-05-28 18:59:51 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 19:03:21 -请求地址 : http://localhost:8081/index
2019-05-28 19:03:21 -HTTP METHOD : GET
2019-05-28 19:03:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 19:03:21 -参数 : [{}]
2019-05-28 19:03:21 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 19:03:21 -==> Parameters: 1(Long)
2019-05-28 19:03:21 -<==      Total: 50
2019-05-28 19:03:21 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 19:03:21 -==> Parameters: 138(Long)
2019-05-28 19:03:21 -<==      Total: 1
2019-05-28 19:03:21 -耗时 : 48
2019-05-28 19:03:21 -返回值 : index_v1
2019-05-28 19:03:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 19:03:21 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 48(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 19:03:21.262(Timestamp)
2019-05-28 19:03:21 -请求地址 : http://localhost:8081/main
2019-05-28 19:03:21 -HTTP METHOD : GET
2019-05-28 19:03:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 19:03:21 -参数 : []
2019-05-28 19:03:21 -耗时 : 0
2019-05-28 19:03:21 -返回值 : main
2019-05-28 19:03:21 -<==    Updates: 1
2019-05-28 19:03:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 19:03:21 -HTTP METHOD : GET
2019-05-28 19:03:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 19:03:21 -参数 : []
2019-05-28 19:03:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 19:03:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 19:03:21 -<==      Total: 0
2019-05-28 19:03:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 19:03:21 -==> Parameters: 1(Long), 0(String)
2019-05-28 19:03:21 -<==      Total: 1
2019-05-28 19:03:21 -耗时 : 6
2019-05-28 19:03:21 -返回值 : com.bootdo.common.utils.PageUtils@60657ab9
2019-05-28 19:03:21 -请求地址 : http://localhost:8081/main
2019-05-28 19:03:21 -HTTP METHOD : GET
2019-05-28 19:03:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 19:03:21 -参数 : []
2019-05-28 19:03:21 -耗时 : 1
2019-05-28 19:03:21 -返回值 : main
2019-05-28 19:04:46 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-05-28 19:04:46 -HTTP METHOD : GET
2019-05-28 19:04:46 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-05-28 19:04:46 -参数 : []
2019-05-28 19:04:46 -耗时 : 0
2019-05-28 19:04:46 -返回值 : heat/heatUpLoad/heatUpLoad
2019-05-28 19:05:07 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 19:05:07 -HTTP METHOD : GET
2019-05-28 19:05:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 19:05:07 -参数 : []
2019-05-28 19:05:07 -耗时 : 0
2019-05-28 19:05:07 -返回值 : system/dept/deptTree
2019-05-28 19:05:07 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 19:05:07 -HTTP METHOD : GET
2019-05-28 19:05:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 19:05:07 -参数 : []
2019-05-28 19:05:07 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 19:05:07 -==> Parameters: 
2019-05-28 19:05:07 -<==      Total: 3
2019-05-28 19:05:07 -耗时 : 4
2019-05-28 19:05:07 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 19:05:10 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 19:05:10 -HTTP METHOD : POST
2019-05-28 19:05:10 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 19:05:10 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@78ee061, 2019-01, 2]
2019-05-28 19:05:10 -耗时 : 213
2019-05-28 19:05:10 -返回值 : 第4行，用户暖费为空，请认真编写
2019-05-28 19:26:28 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 3 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 39], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 7], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 1, completed tasks = 407]
2019-05-28 20:57:14 -Starting BootdoApplication on PC-201905091110 with PID 34756 (D:\eclipse2018-work\bootdo\target\classes started by Administrator in D:\eclipse2018-work\bootdo)
2019-05-28 20:57:14 -Running with Spring Boot v2.0.3.RELEASE, Spring v5.0.7.RELEASE
2019-05-28 20:57:14 -The following profiles are active: dev
2019-05-28 20:57:15 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75e01201: startup date [Tue May 28 20:57:15 CST 2019]; root of context hierarchy
2019-05-28 20:57:31 -Multiple Spring Data modules found, entering strict repository configuration mode!
2019-05-28 20:57:34 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$82f55ad4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 20:57:34 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$754e897b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 20:57:36 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 20:57:36 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 20:57:36 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 20:57:36 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-05-28 20:57:36 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-05-28 20:57:36 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 20:57:36 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 20:57:36 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 20:57:37 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-05-28 20:57:38 -Tomcat initialized with port(s): 8081 (http)
2019-05-28 20:57:38 -Initializing ProtocolHandler ["http-nio-8081"]
2019-05-28 20:57:38 -Starting service [Tomcat]
2019-05-28 20:57:38 -Starting Servlet Engine: Apache Tomcat/8.5.31
2019-05-28 20:57:38 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\Java\JDK\jdk1.8.0_102\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Java\JDK\jdk1.8.0_102\jre\bin;D:/Java/JRE/bin/server;D:/Java/JRE/bin;D:/Java/JRE/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;%JAVA_HOME\bin%;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;;C:\Users\Administrator\Desktop;;.]
2019-05-28 20:57:39 -Initializing Spring embedded WebApplicationContext
2019-05-28 20:57:39 -Root WebApplicationContext: initialization completed in 23782 ms
2019-05-28 20:57:40 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-05-28 20:57:40 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-05-28 20:57:40 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-05-28 20:57:40 -Mapping filter: 'requestContextFilter' to: [/*]
2019-05-28 20:57:40 -Filter xssFilter was not registered (disabled)
2019-05-28 20:57:40 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-05-28 20:57:40 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-05-28 20:57:40 -Servlet statViewServlet mapped to [/druid/*]
2019-05-28 20:57:40 -Servlet dispatcherServlet mapped to [/]
2019-05-28 20:57:45 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75e01201: startup date [Tue May 28 20:57:15 CST 2019]; root of context hierarchy
2019-05-28 20:57:46 -Using default implementation for ThreadExecutor
2019-05-28 20:57:46 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-05-28 20:57:46 -Quartz Scheduler v.2.2.1 created.
2019-05-28 20:57:46 -RAMJobStore initialized.
2019-05-28 20:57:46 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-05-28 20:57:46 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-05-28 20:57:46 -Quartz scheduler version: 2.2.1
2019-05-28 20:57:46 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@684a802a
2019-05-28 20:57:47 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-05-28 20:57:47 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-05-28 20:57:51 -Mapped "{[/charts/countDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countDDController.countDD()
2019-05-28 20:57:51 -Mapped "{[/charts/countDD/getCountDD],methods=[POST]}" onto public com.bootdo.charts.vo.CountDayVo com.bootdo.charts.controller.countDDController.getCountD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 20:57:51 -Mapped "{[/charts/countDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.countDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/charts/countMM/getCountMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countMMController.getCountMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 20:57:51 -Mapped "{[/charts/countMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.countMMController.countMM()
2019-05-28 20:57:51 -Mapped "{[/charts/countMM/exportMM],methods=[GET]}" onto public void com.bootdo.charts.controller.countMMController.exportMM(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/charts/countOwe/getCountOwe],methods=[POST]}" onto public com.bootdo.charts.vo.CountOweVo com.bootdo.charts.controller.countOweController.getCountD(com.bootdo.elec.vo.ElecVo,com.bootdo.water.vo.WaterVo,com.bootdo.heat.vo.HeatVo)
2019-05-28 20:57:51 -Mapped "{[/charts/countOwe],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countOweController.countOwe()
2019-05-28 20:57:51 -Mapped "{[/charts/countOwe/exportOwe],methods=[GET]}" onto public void com.bootdo.charts.controller.countOweController.exportOwe(com.bootdo.elec.vo.ElecVo,com.bootdo.heat.vo.HeatVo,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/charts/countRun],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countRunController.countRun()
2019-05-28 20:57:51 -Mapped "{[/charts/countRun/getCountRun],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countRunController.getCountRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 20:57:51 -Mapped "{[/charts/countRun/exportRun],methods=[GET]}" onto public void com.bootdo.charts.controller.countRunController.exportRun(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/charts/countYY],methods=[GET]}" onto java.lang.String com.bootdo.charts.controller.countYYController.countYY()
2019-05-28 20:57:51 -Mapped "{[/charts/countYY/getCountYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.countYYController.getCountYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 20:57:51 -Mapped "{[/charts/countYY/exportYY],methods=[GET]}" onto public void com.bootdo.charts.controller.countYYController.exportYY(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/charts/tableDD],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableDDController.countDD()
2019-05-28 20:57:51 -Mapped "{[/charts/tableDD/getTableDD],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableDDController.getTableDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.WaterLogVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 20:57:51 -Mapped "{[/charts/tableDD/exportDD],methods=[GET]}" onto public void com.bootdo.charts.controller.tableDDController.exportDD(com.bootdo.moneyLog.vo.ElecLogVo,com.bootdo.moneyLog.vo.HeatLogVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/charts/tableElecMM/tableElecMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecMMController.tableElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 20:57:51 -Mapped "{[/charts/tableElecMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecMMController.tableElecMM()
2019-05-28 20:57:51 -Mapped "{[/charts/tableElecMM/exportElecMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecMMController.exportElecMM(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/charts/tableElecYY/tableElecYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableElecYYController.tableElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo)
2019-05-28 20:57:51 -Mapped "{[/charts/tableElecYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableElecYYController.tableElecYY()
2019-05-28 20:57:51 -Mapped "{[/charts/tableElecYY/exportElecYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableElecYYController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/charts/tableHeatMM/tableHeatMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatMMController.tableHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 20:57:51 -Mapped "{[/charts/tableHeatMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatMMController.tableHeatMM()
2019-05-28 20:57:51 -Mapped "{[/charts/tableHeatMM/exportHeatMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatMMController.exportHeatMM(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/charts/tableHeatYY/exportHeatYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableHeatYYController.exportHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/charts/tableHeatYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableHeatYYController.tableHeatYY()
2019-05-28 20:57:51 -Mapped "{[/charts/tableHeatYY/tableHeatYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableHeatYYController.tableHeatYY(com.bootdo.heat.vo.HeatVo,com.bootdo.moneyLog.vo.HeatLogVo)
2019-05-28 20:57:51 -Mapped "{[/charts/tableWaterMM/exportWaterMM],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterMMController.exportWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/charts/tableWaterMM],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterMMController.tableWaterMM()
2019-05-28 20:57:51 -Mapped "{[/charts/tableWaterMM/tableWaterMM],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterMMController.tableWaterMM(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 20:57:51 -Mapped "{[/charts/tableWaterYY/exportWaterYY],methods=[GET]}" onto public void com.bootdo.charts.controller.tableWaterYYController.exportWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/charts/tableWaterYY],methods=[GET]}" onto public java.lang.String com.bootdo.charts.controller.tableWaterYYController.tableWaterYY()
2019-05-28 20:57:51 -Mapped "{[/charts/tableWaterYY/tableWaterYY],methods=[POST]}" onto public java.util.Map com.bootdo.charts.controller.tableWaterYYController.tableWaterYY(com.bootdo.water.vo.WaterVo,com.bootdo.moneyLog.vo.WaterLogVo)
2019-05-28 20:57:51 -Mapped "{[/common/dict/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.add()
2019-05-28 20:57:51 -Mapped "{[/common/dict/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/common/dict/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.remove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/common/dict/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.update(com.bootdo.common.domain.DictDO)
2019-05-28 20:57:51 -Mapped "{[/common/dict/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.DictController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/common/dict/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.DictController.save(com.bootdo.common.domain.DictDO)
2019-05-28 20:57:51 -Mapped "{[/common/dict/list/{type}],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listByType(java.lang.String)
2019-05-28 20:57:51 -Mapped "{[/common/dict/add/{type}/{description}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.addD(org.springframework.ui.Model,java.lang.String,java.lang.String)
2019-05-28 20:57:51 -Mapped "{[/common/dict/type],methods=[GET]}" onto public java.util.List<com.bootdo.common.domain.DictDO> com.bootdo.common.controller.DictController.listType()
2019-05-28 20:57:51 -Mapped "{[/common/dict],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.dict()
2019-05-28 20:57:51 -Mapped "{[/common/dict/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.DictController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-05-28 20:57:51 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-05-28 20:57:51 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-05-28 20:57:51 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-05-28 20:57:51 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-05-28 20:57:51 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-05-28 20:57:51 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 20:57:51 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-05-28 20:57:51 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-05-28 20:57:51 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-05-28 20:57:51 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-05-28 20:57:51 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-05-28 20:57:51 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-05-28 20:57:51 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-05-28 20:57:51 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-05-28 20:57:51 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/common/long],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LongController.Long()
2019-05-28 20:57:51 -Mapped "{[/common/time],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.TimeController.Time()
2019-05-28 20:57:51 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/elec/elec/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.add()
2019-05-28 20:57:51 -Mapped "{[/elec/elec/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/elec/elec/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.remove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/elec/elec/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 20:57:51 -Mapped "{[/elec/elec/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 20:57:51 -Mapped "{[/elec/elec/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecController.save(com.bootdo.elec.domain.ElecDO)
2019-05-28 20:57:51 -Mapped "{[/elec/elec],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.Elec()
2019-05-28 20:57:51 -Mapped "{[/elec/elec/exprotElec],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/elec/elec/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/elec/elecInto/exprotElecIntoExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecIntoController.exprotExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/elec/elecInto],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecIntoController.ElecInto()
2019-05-28 20:57:51 -Mapped "{[/elec/elecInto/importElecIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.elec.controller.ElecIntoController.importElecIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 20:57:51 -Mapped "{[/elec/elecPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.add()
2019-05-28 20:57:51 -Mapped "{[/elec/elecPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/elec/elecPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.remove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/elec/elecPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.update(com.bootdo.elec.domain.ElecPriceDO)
2019-05-28 20:57:51 -Mapped "{[/elec/elecPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.elec.controller.ElecPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/elec/elecPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.elec.controller.ElecPriceController.save(com.bootdo.elec.domain.ElecPriceDO,com.bootdo.elec.domain.ElecDO)
2019-05-28 20:57:51 -Mapped "{[/elec/elecPrice],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.ElecPrice()
2019-05-28 20:57:51 -Mapped "{[/elec/elecPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/elec/elecUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.elec.controller.ElecUpLoadController.Elec()
2019-05-28 20:57:51 -Mapped "{[/elec/elecUpLoad/importElecExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importElecExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 20:57:51 -Mapped "{[/elec/elecUpLoad/exprotElecExcel],methods=[GET]}" onto public void com.bootdo.elec.controller.ElecUpLoadController.exprotElecExcel(com.bootdo.elec.vo.ElecVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/elec/elecUpLoad/importUserExcel],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> com.bootdo.elec.controller.ElecUpLoadController.importUserExcel(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-05-28 20:57:51 -Mapped "{[/heat/heat/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.add()
2019-05-28 20:57:51 -Mapped "{[/heat/heat/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer)
2019-05-28 20:57:51 -Mapped "{[/heat/heat/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.remove(java.lang.Integer[])
2019-05-28 20:57:51 -Mapped "{[/heat/heat/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.update(com.bootdo.heat.domain.HeatDO)
2019-05-28 20:57:51 -Mapped "{[/heat/heat/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/heat/heat/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatController.save(com.bootdo.heat.domain.HeatDO)
2019-05-28 20:57:51 -Mapped "{[/heat/heat/exprotHeat],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/heat/heat],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.Heat()
2019-05-28 20:57:51 -Mapped "{[/heat/heat/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatController.edit(java.lang.Integer,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/heat/heatInto/exprotHeatIntoExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatIntoController.exprotExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/heat/heatInto],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatIntoController.HeatInto()
2019-05-28 20:57:51 -Mapped "{[/heat/heatInto/importHeatIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatIntoController.importHeatIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 20:57:51 -Mapped "{[/heat/heatPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.add()
2019-05-28 20:57:51 -Mapped "{[/heat/heatPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/heat/heatPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.remove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/heat/heatPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.update(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 20:57:51 -Mapped "{[/heat/heatPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.heat.controller.HeatPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/heat/heatPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.heat.controller.HeatPriceController.save(com.bootdo.heat.domain.HeatPriceDO)
2019-05-28 20:57:51 -Mapped "{[/heat/heatPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/heat/heatPrice],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatPriceController.HeatPrice()
2019-05-28 20:57:51 -Mapped "{[/heat/heatUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad()
2019-05-28 20:57:51 -Mapped "{[/heat/heatUpLoad/createHeatExcel],methods=[POST]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.createHeatExcel(com.bootdo.heat.domain.HeatDO) throws java.lang.Exception
2019-05-28 20:57:51 -Mapped "{[/heat/heatUpLoad/exprotHeatExcel],methods=[GET]}" onto public void com.bootdo.heat.controller.HeatUpLoadController.exprotHeatExcel(com.bootdo.heat.vo.HeatVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/heat/heatUpLoad/importHeatExcel]}" onto public java.lang.String com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 20:57:51 -Mapped "{[/moneyList/moneyList],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.MoneyList()
2019-05-28 20:57:51 -Mapped "{[/moneyList/moneyList/queryAllUser],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.queryAllUser(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 20:57:51 -Mapped "{[/moneyList/moneyList/moneyPrint/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/moneyList/moneyList/updateMoney],methods=[POST]}" onto public java.lang.Long com.bootdo.moneyList.controller.MoneyListController.updateMoney(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 20:57:51 -Mapped "{[/moneyList/moneyList/queryAllUserName],methods=[POST]}" onto public java.util.List<com.bootdo.moneyList.damain.MoneyListDO> com.bootdo.moneyList.controller.MoneyListController.getAllUserName(com.bootdo.moneyList.damain.MoneyListDO)
2019-05-28 20:57:51 -Mapped "{[/moneyList/moneyWZ/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.add()
2019-05-28 20:57:51 -Mapped "{[/moneyList/moneyWZ/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/moneyList/moneyWZ/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.remove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/moneyList/moneyWZ/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.update(com.bootdo.elec.domain.ElecDO)
2019-05-28 20:57:51 -Mapped "{[/moneyList/moneyWZ/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyList.controller.MoneyListWZController.list(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.elec.domain.ElecDO)
2019-05-28 20:57:51 -Mapped "{[/moneyList/moneyWZ/batchMoney],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyList.controller.MoneyListWZController.batchMoney(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/moneyList/moneyWZ],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.MoneyWZ()
2019-05-28 20:57:51 -Mapped "{[/moneyList/moneyWZ/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyList.controller.MoneyListWZController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/moneyList/moneyWZ/exprotWZ],methods=[GET]}" onto public void com.bootdo.moneyList.controller.MoneyListWZController.exportElecYY(com.bootdo.elec.vo.ElecVo,com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/elecLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.add()
2019-05-28 20:57:51 -Mapped "{[/moneyLog/elecLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/elecLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.remove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/moneyLog/elecLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/elecLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.ElecLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/elecLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.ElecLogController.save(com.bootdo.moneyLog.domain.ElecLogDO)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/elecLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.moneyLog()
2019-05-28 20:57:51 -Mapped "{[/moneyLog/elecLog/exprotElecLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.ElecLogController.exprotElecLog(com.bootdo.moneyLog.vo.ElecLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/elecLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.ElecLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/heatLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.add()
2019-05-28 20:57:51 -Mapped "{[/moneyLog/heatLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/heatLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.remove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/moneyLog/heatLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/heatLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.HeatLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/heatLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.HeatLogController.save(com.bootdo.moneyLog.domain.HeatLogDO)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/heatLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.HeatLog()
2019-05-28 20:57:51 -Mapped "{[/moneyLog/heatLog/exprotHeatLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.HeatLogController.exprotHeatLog(com.bootdo.moneyLog.vo.HeatLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/heatLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.HeatLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/waterLog/add],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.add()
2019-05-28 20:57:51 -Mapped "{[/moneyLog/waterLog/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/waterLog/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.remove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/moneyLog/waterLog/update]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.update(java.util.Map<java.lang.String, java.lang.Object>,com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/waterLog/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.moneyLog.controller.WaterLogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/waterLog/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.moneyLog.controller.WaterLogController.save(com.bootdo.moneyLog.domain.WaterLogDO)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/waterLog/exprotWaterLog],methods=[GET]}" onto public void com.bootdo.moneyLog.controller.WaterLogController.exprotWaterLog(com.bootdo.moneyLog.vo.WaterLogVo,javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
2019-05-28 20:57:51 -Mapped "{[/moneyLog/waterLog],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.WaterLog()
2019-05-28 20:57:51 -Mapped "{[/moneyLog/waterLog/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.moneyLog.controller.WaterLogController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/oa/notify/add],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.add()
2019-05-28 20:57:51 -Mapped "{[/oa/notify/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/oa/notify/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.remove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/oa/notify/update]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.update(com.bootdo.oa.domain.NotifyDO)
2019-05-28 20:57:51 -Mapped "{[/oa/notify/read/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.read(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/oa/notify/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/oa/notify/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.oa.controller.NotifyController.save(com.bootdo.oa.domain.NotifyDO)
2019-05-28 20:57:51 -Mapped "{[/oa/notify/message],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.message()
2019-05-28 20:57:51 -Mapped "{[/oa/notify/selfNotify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.selefNotify()
2019-05-28 20:57:51 -Mapped "{[/oa/notify],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.oaNotify()
2019-05-28 20:57:51 -Mapped "{[/oa/notify/selfList],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.oa.controller.NotifyController.selfList(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/oa/notify/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.oa.controller.NotifyController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/print/print/add],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.add()
2019-05-28 20:57:51 -Mapped "{[/print/print/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.remove(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/print/print/update]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.update(com.bootdo.print.domain.PrintDO)
2019-05-28 20:57:51 -Mapped "{[/print/print/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.print.controller.PrintController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/print/print/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.save(java.lang.String,com.bootdo.print.domain.PrintDO)
2019-05-28 20:57:51 -Mapped "{[/print/print/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.print.controller.PrintController.batchRemove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/print/print],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.Print()
2019-05-28 20:57:51 -Mapped "{[/print/print/printEdit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printEdit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/print/print/printMoney],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.printMoney()
2019-05-28 20:57:51 -Mapped "{[/print/print/exprotPrint],methods=[GET]}" onto public void com.bootdo.print.controller.PrintController.exprotPrint(com.bootdo.print.vo.PrintVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/print/print/batchPrint],methods=[POST]}" onto public java.util.List<com.bootdo.print.vo.PrintVo> com.bootdo.print.controller.PrintController.batchPrint(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/print/print/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.print.controller.PrintController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/system/sysDept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-05-28 20:57:51 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public java.util.List<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.list()
2019-05-28 20:57:51 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-05-28 20:57:51 -Mapped "{[/system/sysDept/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.DeptController.tree()
2019-05-28 20:57:51 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.dept()
2019-05-28 20:57:51 -Mapped "{[/system/sysDept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.treeView()
2019-05-28 20:57:51 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-05-28 20:57:51 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login(org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-05-28 20:57:51 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 20:57:51 -Mapped "{[/getVerify],methods=[GET]}" onto public void com.bootdo.system.controller.LoginController.getVerify(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-05-28 20:57:51 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-05-28 20:57:51 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-05-28 20:57:51 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-05-28 20:57:51 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-05-28 20:57:51 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-05-28 20:57:51 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-05-28 20:57:51 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-05-28 20:57:51 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-05-28 20:57:51 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-05-28 20:57:51 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-05-28 20:57:51 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-05-28 20:57:51 -Mapped "{[/sys/user/exit],methods=[POST]}" onto boolean com.bootdo.system.controller.UserController.exit(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add(org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/sys/user/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/sys/user/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-05-28 20:57:51 -Mapped "{[/sys/user/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/sys/user/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-05-28 20:57:51 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.batchRemove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/sys/user/tree],methods=[GET]}" onto public com.bootdo.common.domain.Tree<com.bootdo.system.domain.DeptDO> com.bootdo.system.controller.UserController.tree()
2019-05-28 20:57:51 -Mapped "{[/sys/user/treeView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.treeView()
2019-05-28 20:57:51 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 20:57:51 -Mapped "{[/sys/user/resetPwd/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.resetPwd(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/sys/user/uploadImg],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.uploadImg(org.springframework.web.multipart.MultipartFile,java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 20:57:51 -Mapped "{[/sys/user/updatePeronal],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.updatePeronal(com.bootdo.system.domain.UserDO)
2019-05-28 20:57:51 -Mapped "{[/sys/user/personal],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.personal(org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/sys/user/adminResetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminResetPwd(com.bootdo.system.vo.UserVO)
2019-05-28 20:57:51 -Mapped "{[/sys/user/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(org.springframework.ui.Model,java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.user(org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/file/downImport/{importType}],methods=[GET]}" onto public void com.bootdo.temple.controller.TempletController.downImport(javax.servlet.http.HttpServletResponse,java.lang.String)
2019-05-28 20:57:51 -Mapped "{[/water/water/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.add()
2019-05-28 20:57:51 -Mapped "{[/water/water/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/water/water/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.remove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/water/water/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.update(com.bootdo.water.domain.WaterDO)
2019-05-28 20:57:51 -Mapped "{[/water/water/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/water/water/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterController.save(com.bootdo.water.domain.WaterDO)
2019-05-28 20:57:51 -Mapped "{[/water/water/exprotWater],methods=[GET]}" onto public void com.bootdo.water.controller.WaterController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/water/water],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.Water()
2019-05-28 20:57:51 -Mapped "{[/water/water/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/water/waterInto/exprotWaterIntoExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterIntoController.exprotExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/water/waterInto/importWaterIntoExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterIntoController.importWaterIntoExcel(org.springframework.web.multipart.MultipartFile,com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2019-05-28 20:57:51 -Mapped "{[/water/waterInto],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterIntoController.WaterInto()
2019-05-28 20:57:51 -Mapped "{[/water/waterPrice/add],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.add()
2019-05-28 20:57:51 -Mapped "{[/water/waterPrice/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long)
2019-05-28 20:57:51 -Mapped "{[/water/waterPrice/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.remove(java.lang.Long[])
2019-05-28 20:57:51 -Mapped "{[/water/waterPrice/update]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.update(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 20:57:51 -Mapped "{[/water/waterPrice/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.water.controller.WaterPriceController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-05-28 20:57:51 -Mapped "{[/water/waterPrice/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.water.controller.WaterPriceController.save(com.bootdo.water.domain.WaterPriceDO)
2019-05-28 20:57:51 -Mapped "{[/water/waterPrice],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.WaterPrice()
2019-05-28 20:57:51 -Mapped "{[/water/waterPrice/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterPriceController.edit(java.lang.Long,org.springframework.ui.Model)
2019-05-28 20:57:51 -Mapped "{[/water/waterUpLoad/importWaterExcel]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.importWaterExcel(org.springframework.web.multipart.MultipartFile,java.lang.String,java.lang.String)
2019-05-28 20:57:51 -Mapped "{[/water/waterUpLoad],methods=[GET]}" onto java.lang.String com.bootdo.water.controller.WaterUpLoadController.WaterUpLoad()
2019-05-28 20:57:51 -Mapped "{[/water/waterUpLoad/createWaterExcel],methods=[POST]}" onto public java.lang.String com.bootdo.water.controller.WaterUpLoadController.createWaterExcel(com.bootdo.water.domain.WaterDO) throws java.lang.Exception
2019-05-28 20:57:51 -Mapped "{[/water/waterUpLoad/exprotWaterExcel],methods=[GET]}" onto public void com.bootdo.water.controller.WaterUpLoadController.exprotWaterExcel(com.bootdo.water.vo.WaterVo,javax.servlet.http.HttpServletResponse)
2019-05-28 20:57:51 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-05-28 20:57:51 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-05-28 20:57:51 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-05-28 20:57:51 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-05-28 20:57:52 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-05-28 20:57:52 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-05-28 20:57:52 -Initializing ExecutorService  'brokerChannelExecutor'
2019-05-28 20:57:53 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 20:57:53 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75e01201: startup date [Tue May 28 20:57:15 CST 2019]; root of context hierarchy
2019-05-28 20:57:54 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 20:57:54 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 20:57:54 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-05-28 20:57:54 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-05-28 20:57:54 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-05-28 20:57:58 -Registering beans for JMX exposure on startup
2019-05-28 20:57:58 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-05-28 20:57:58 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-05-28 20:57:58 -Starting beans in phase 2147483647
2019-05-28 20:57:58 -Context refreshed
2019-05-28 20:57:58 -Found 1 custom documentation plugin(s)
2019-05-28 20:57:58 -Scanning for api listing references
2019-05-28 20:57:58 -Generating unique operation named: getCountDUsingPOST_1
2019-05-28 20:57:59 -Generating unique operation named: removeUsingPOST_1
2019-05-28 20:57:59 -Generating unique operation named: addUsingGET_1
2019-05-28 20:57:59 -Generating unique operation named: editUsingGET_1
2019-05-28 20:57:59 -Generating unique operation named: listUsingGET_1
2019-05-28 20:57:59 -Generating unique operation named: removeUsingPOST_2
2019-05-28 20:57:59 -Generating unique operation named: removeUsingPOST_3
2019-05-28 20:57:59 -Generating unique operation named: saveUsingPOST_1
2019-05-28 20:57:59 -Generating unique operation named: updateUsingGET_1
2019-05-28 20:57:59 -Generating unique operation named: updateUsingHEAD_1
2019-05-28 20:57:59 -Generating unique operation named: updateUsingPOST_1
2019-05-28 20:57:59 -Generating unique operation named: updateUsingPUT_1
2019-05-28 20:57:59 -Generating unique operation named: updateUsingPATCH_1
2019-05-28 20:57:59 -Generating unique operation named: updateUsingDELETE_1
2019-05-28 20:57:59 -Generating unique operation named: updateUsingOPTIONS_1
2019-05-28 20:57:59 -Generating unique operation named: updateUsingTRACE_1
2019-05-28 20:57:59 -Generating unique operation named: addUsingGET_2
2019-05-28 20:57:59 -Generating unique operation named: editUsingGET_2
2019-05-28 20:57:59 -Generating unique operation named: listUsingGET_2
2019-05-28 20:57:59 -Generating unique operation named: removeUsingPOST_4
2019-05-28 20:57:59 -Generating unique operation named: removeUsingPOST_5
2019-05-28 20:57:59 -Generating unique operation named: saveUsingPOST_2
2019-05-28 20:57:59 -Generating unique operation named: updateUsingPOST_2
2019-05-28 20:57:59 -Generating unique operation named: exprotExcelUsingGET_1
2019-05-28 20:57:59 -Generating unique operation named: addUsingGET_3
2019-05-28 20:57:59 -Generating unique operation named: editUsingGET_3
2019-05-28 20:57:59 -Generating unique operation named: listUsingGET_3
2019-05-28 20:57:59 -Generating unique operation named: removeUsingPOST_6
2019-05-28 20:57:59 -Generating unique operation named: removeUsingPOST_7
2019-05-28 20:57:59 -Generating unique operation named: saveUsingPOST_3
2019-05-28 20:57:59 -Generating unique operation named: updateUsingGET_2
2019-05-28 20:57:59 -Generating unique operation named: updateUsingHEAD_2
2019-05-28 20:57:59 -Generating unique operation named: updateUsingPOST_3
2019-05-28 20:57:59 -Generating unique operation named: updateUsingPUT_2
2019-05-28 20:57:59 -Generating unique operation named: updateUsingPATCH_2
2019-05-28 20:57:59 -Generating unique operation named: updateUsingDELETE_2
2019-05-28 20:57:59 -Generating unique operation named: updateUsingOPTIONS_2
2019-05-28 20:57:59 -Generating unique operation named: updateUsingTRACE_2
2019-05-28 20:57:59 -Generating unique operation named: addUsingGET_4
2019-05-28 20:57:59 -Generating unique operation named: editUsingGET_4
2019-05-28 20:57:59 -Generating unique operation named: listUsingGET_4
2019-05-28 20:57:59 -Generating unique operation named: removeUsingPOST_8
2019-05-28 20:57:59 -Generating unique operation named: removeUsingPOST_9
2019-05-28 20:57:59 -Generating unique operation named: saveUsingPOST_4
2019-05-28 20:57:59 -Generating unique operation named: updateUsingGET_3
2019-05-28 20:57:59 -Generating unique operation named: updateUsingHEAD_3
2019-05-28 20:57:59 -Generating unique operation named: updateUsingPOST_4
2019-05-28 20:57:59 -Generating unique operation named: updateUsingPUT_3
2019-05-28 20:57:59 -Generating unique operation named: updateUsingPATCH_3
2019-05-28 20:57:59 -Generating unique operation named: updateUsingDELETE_3
2019-05-28 20:57:59 -Generating unique operation named: updateUsingOPTIONS_3
2019-05-28 20:57:59 -Generating unique operation named: updateUsingTRACE_3
2019-05-28 20:57:59 -Generating unique operation named: ElecUsingGET_1
2019-05-28 20:57:59 -Generating unique operation named: addUsingGET_5
2019-05-28 20:57:59 -Generating unique operation named: editUsingGET_5
2019-05-28 20:57:59 -Generating unique operation named: listUsingGET_5
2019-05-28 20:57:59 -Generating unique operation named: removeUsingPOST_10
2019-05-28 20:57:59 -Generating unique operation named: removeUsingPOST_11
2019-05-28 20:57:59 -Generating unique operation named: saveUsingPOST_5
2019-05-28 20:57:59 -Generating unique operation named: updateUsingGET_4
2019-05-28 20:57:59 -Generating unique operation named: updateUsingHEAD_4
2019-05-28 20:57:59 -Generating unique operation named: updateUsingPOST_5
2019-05-28 20:57:59 -Generating unique operation named: updateUsingPUT_4
2019-05-28 20:57:59 -Generating unique operation named: updateUsingPATCH_4
2019-05-28 20:57:59 -Generating unique operation named: updateUsingDELETE_4
2019-05-28 20:57:59 -Generating unique operation named: updateUsingOPTIONS_4
2019-05-28 20:57:59 -Generating unique operation named: updateUsingTRACE_4
2019-05-28 20:58:00 -Generating unique operation named: editUsingGET_6
2019-05-28 20:58:00 -Generating unique operation named: listUsingGET_6
2019-05-28 20:58:00 -Generating unique operation named: updateUsingPOST_6
2019-05-28 20:58:00 -Generating unique operation named: addUsingGET_6
2019-05-28 20:58:00 -Generating unique operation named: editUsingGET_7
2019-05-28 20:58:00 -Generating unique operation named: exprotExcelUsingGET_2
2019-05-28 20:58:00 -Generating unique operation named: listUsingGET_7
2019-05-28 20:58:00 -Generating unique operation named: removeUsingPOST_12
2019-05-28 20:58:00 -Generating unique operation named: removeUsingPOST_13
2019-05-28 20:58:00 -Generating unique operation named: saveUsingPOST_6
2019-05-28 20:58:00 -Generating unique operation named: updateUsingGET_5
2019-05-28 20:58:00 -Generating unique operation named: updateUsingHEAD_5
2019-05-28 20:58:00 -Generating unique operation named: updateUsingPOST_7
2019-05-28 20:58:00 -Generating unique operation named: updateUsingPUT_5
2019-05-28 20:58:00 -Generating unique operation named: updateUsingPATCH_5
2019-05-28 20:58:00 -Generating unique operation named: updateUsingDELETE_5
2019-05-28 20:58:00 -Generating unique operation named: updateUsingOPTIONS_5
2019-05-28 20:58:00 -Generating unique operation named: updateUsingTRACE_5
2019-05-28 20:58:00 -Generating unique operation named: exprotExcelUsingGET_3
2019-05-28 20:58:00 -Generating unique operation named: addUsingGET_7
2019-05-28 20:58:00 -Generating unique operation named: editUsingGET_8
2019-05-28 20:58:00 -Generating unique operation named: listUsingGET_8
2019-05-28 20:58:00 -Generating unique operation named: removeUsingPOST_14
2019-05-28 20:58:00 -Generating unique operation named: removeUsingPOST_15
2019-05-28 20:58:00 -Generating unique operation named: saveUsingPOST_7
2019-05-28 20:58:00 -Generating unique operation named: updateUsingGET_6
2019-05-28 20:58:00 -Generating unique operation named: updateUsingHEAD_6
2019-05-28 20:58:00 -Generating unique operation named: updateUsingPOST_8
2019-05-28 20:58:00 -Generating unique operation named: updateUsingPUT_6
2019-05-28 20:58:00 -Generating unique operation named: updateUsingPATCH_6
2019-05-28 20:58:00 -Generating unique operation named: updateUsingDELETE_6
2019-05-28 20:58:00 -Generating unique operation named: updateUsingOPTIONS_6
2019-05-28 20:58:00 -Generating unique operation named: updateUsingTRACE_6
2019-05-28 20:58:00 -Generating unique operation named: addUsingGET_8
2019-05-28 20:58:00 -Generating unique operation named: editUsingGET_9
2019-05-28 20:58:00 -Generating unique operation named: listUsingGET_9
2019-05-28 20:58:00 -Generating unique operation named: removeUsingPOST_16
2019-05-28 20:58:00 -Generating unique operation named: removeUsingPOST_17
2019-05-28 20:58:00 -Generating unique operation named: saveUsingPOST_8
2019-05-28 20:58:00 -Generating unique operation named: updateUsingGET_7
2019-05-28 20:58:00 -Generating unique operation named: updateUsingHEAD_7
2019-05-28 20:58:00 -Generating unique operation named: updateUsingPOST_9
2019-05-28 20:58:00 -Generating unique operation named: updateUsingPUT_7
2019-05-28 20:58:00 -Generating unique operation named: updateUsingPATCH_7
2019-05-28 20:58:00 -Generating unique operation named: updateUsingDELETE_7
2019-05-28 20:58:00 -Generating unique operation named: updateUsingOPTIONS_7
2019-05-28 20:58:00 -Generating unique operation named: updateUsingTRACE_7
2019-05-28 20:58:00 -Generating unique operation named: addUsingGET_9
2019-05-28 20:58:00 -Generating unique operation named: editUsingGET_10
2019-05-28 20:58:00 -Generating unique operation named: infoUsingGET_1
2019-05-28 20:58:00 -Generating unique operation named: infoUsingHEAD_1
2019-05-28 20:58:00 -Generating unique operation named: infoUsingPOST_1
2019-05-28 20:58:00 -Generating unique operation named: infoUsingPUT_1
2019-05-28 20:58:00 -Generating unique operation named: infoUsingPATCH_1
2019-05-28 20:58:00 -Generating unique operation named: infoUsingDELETE_1
2019-05-28 20:58:00 -Generating unique operation named: infoUsingOPTIONS_1
2019-05-28 20:58:00 -Generating unique operation named: infoUsingTRACE_1
2019-05-28 20:58:00 -Generating unique operation named: listUsingGET_10
2019-05-28 20:58:00 -Generating unique operation named: removeUsingPOST_18
2019-05-28 20:58:00 -Generating unique operation named: removeUsingPOST_19
2019-05-28 20:58:00 -Generating unique operation named: saveUsingPOST_9
2019-05-28 20:58:00 -Generating unique operation named: updateUsingPOST_10
2019-05-28 20:58:00 -Generating unique operation named: listUsingGET_11
2019-05-28 20:58:00 -Generating unique operation named: removeUsingPOST_20
2019-05-28 20:58:00 -Generating unique operation named: welcomeUsingGET_1
2019-05-28 20:58:00 -Generating unique operation named: addUsingGET_10
2019-05-28 20:58:00 -Generating unique operation named: editUsingGET_11
2019-05-28 20:58:00 -Generating unique operation named: listUsingGET_12
2019-05-28 20:58:00 -Generating unique operation named: removeUsingPOST_21
2019-05-28 20:58:00 -Generating unique operation named: saveUsingPOST_10
2019-05-28 20:58:00 -Generating unique operation named: treeUsingGET_1
2019-05-28 20:58:00 -Generating unique operation named: treeUsingGET_2
2019-05-28 20:58:00 -Generating unique operation named: updateUsingPOST_11
2019-05-28 20:58:01 -Generating unique operation named: addUsingGET_11
2019-05-28 20:58:01 -Generating unique operation named: editUsingGET_12
2019-05-28 20:58:01 -Generating unique operation named: listUsingGET_13
2019-05-28 20:58:01 -Generating unique operation named: removeUsingPOST_22
2019-05-28 20:58:01 -Generating unique operation named: removeUsingPOST_23
2019-05-28 20:58:01 -Generating unique operation named: updateUsingPOST_12
2019-05-28 20:58:01 -Generating unique operation named: addUsingGET_12
2019-05-28 20:58:01 -Generating unique operation named: editUsingGET_13
2019-05-28 20:58:01 -Generating unique operation named: listUsingGET_14
2019-05-28 20:58:01 -Generating unique operation named: removeUsingPOST_24
2019-05-28 20:58:01 -Generating unique operation named: removeUsingPOST_25
2019-05-28 20:58:01 -Generating unique operation named: saveUsingPOST_11
2019-05-28 20:58:01 -Generating unique operation named: updateUsingGET_8
2019-05-28 20:58:01 -Generating unique operation named: updateUsingHEAD_8
2019-05-28 20:58:01 -Generating unique operation named: updateUsingPOST_13
2019-05-28 20:58:01 -Generating unique operation named: updateUsingPUT_8
2019-05-28 20:58:01 -Generating unique operation named: updateUsingPATCH_8
2019-05-28 20:58:01 -Generating unique operation named: updateUsingDELETE_8
2019-05-28 20:58:01 -Generating unique operation named: updateUsingOPTIONS_8
2019-05-28 20:58:01 -Generating unique operation named: updateUsingTRACE_8
2019-05-28 20:58:01 -Generating unique operation named: addUsingGET_13
2019-05-28 20:58:01 -Generating unique operation named: batchRemoveUsingPOST_1
2019-05-28 20:58:01 -Generating unique operation named: editUsingGET_14
2019-05-28 20:58:01 -Generating unique operation named: listUsingGET_15
2019-05-28 20:58:01 -Generating unique operation named: printEditUsingGET_1
2019-05-28 20:58:01 -Generating unique operation named: removeUsingPOST_26
2019-05-28 20:58:01 -Generating unique operation named: saveUsingPOST_12
2019-05-28 20:58:01 -Generating unique operation named: updateUsingGET_9
2019-05-28 20:58:01 -Generating unique operation named: updateUsingHEAD_9
2019-05-28 20:58:01 -Generating unique operation named: updateUsingPOST_14
2019-05-28 20:58:01 -Generating unique operation named: updateUsingPUT_9
2019-05-28 20:58:01 -Generating unique operation named: updateUsingPATCH_9
2019-05-28 20:58:01 -Generating unique operation named: updateUsingDELETE_9
2019-05-28 20:58:01 -Generating unique operation named: updateUsingOPTIONS_9
2019-05-28 20:58:01 -Generating unique operation named: updateUsingTRACE_9
2019-05-28 20:58:01 -Generating unique operation named: addUsingGET_14
2019-05-28 20:58:01 -Generating unique operation named: batchRemoveUsingPOST_2
2019-05-28 20:58:01 -Generating unique operation named: editUsingGET_15
2019-05-28 20:58:01 -Generating unique operation named: listUsingGET_16
2019-05-28 20:58:01 -Generating unique operation named: saveUsingPOST_13
2019-05-28 20:58:01 -Generating unique operation named: saveUsingPOST_14
2019-05-28 20:58:01 -Generating unique operation named: updateUsingPOST_15
2019-05-28 20:58:01 -Generating unique operation named: listUsingGET_17
2019-05-28 20:58:01 -Generating unique operation named: listUsingHEAD_1
2019-05-28 20:58:01 -Generating unique operation named: listUsingPOST_1
2019-05-28 20:58:01 -Generating unique operation named: listUsingPUT_1
2019-05-28 20:58:01 -Generating unique operation named: listUsingPATCH_1
2019-05-28 20:58:01 -Generating unique operation named: listUsingDELETE_1
2019-05-28 20:58:01 -Generating unique operation named: listUsingOPTIONS_1
2019-05-28 20:58:01 -Generating unique operation named: listUsingTRACE_1
2019-05-28 20:58:01 -Generating unique operation named: countDDUsingGET_1
2019-05-28 20:58:01 -Generating unique operation named: exportDDUsingGET_1
2019-05-28 20:58:01 -Generating unique operation named: exportElecYYUsingGET_1
2019-05-28 20:58:01 -Generating unique operation named: addUsingGET_15
2019-05-28 20:58:01 -Generating unique operation named: batchRemoveUsingPOST_3
2019-05-28 20:58:01 -Generating unique operation named: editUsingGET_16
2019-05-28 20:58:01 -Generating unique operation named: listUsingGET_18
2019-05-28 20:58:01 -Generating unique operation named: removeUsingPOST_27
2019-05-28 20:58:01 -Generating unique operation named: saveUsingPOST_15
2019-05-28 20:58:01 -Generating unique operation named: treeUsingGET_3
2019-05-28 20:58:01 -Generating unique operation named: treeViewUsingGET_1
2019-05-28 20:58:01 -Generating unique operation named: updateUsingPOST_16
2019-05-28 20:58:01 -Generating unique operation named: addUsingGET_16
2019-05-28 20:58:01 -Generating unique operation named: editUsingGET_17
2019-05-28 20:58:01 -Generating unique operation named: exprotExcelUsingGET_4
2019-05-28 20:58:01 -Generating unique operation named: listUsingGET_19
2019-05-28 20:58:01 -Generating unique operation named: removeUsingPOST_28
2019-05-28 20:58:01 -Generating unique operation named: removeUsingPOST_29
2019-05-28 20:58:01 -Generating unique operation named: saveUsingPOST_16
2019-05-28 20:58:01 -Generating unique operation named: updateUsingGET_10
2019-05-28 20:58:01 -Generating unique operation named: updateUsingHEAD_10
2019-05-28 20:58:01 -Generating unique operation named: updateUsingPOST_17
2019-05-28 20:58:01 -Generating unique operation named: updateUsingPUT_10
2019-05-28 20:58:01 -Generating unique operation named: updateUsingPATCH_10
2019-05-28 20:58:01 -Generating unique operation named: updateUsingDELETE_10
2019-05-28 20:58:01 -Generating unique operation named: updateUsingOPTIONS_10
2019-05-28 20:58:01 -Generating unique operation named: updateUsingTRACE_10
2019-05-28 20:58:01 -Generating unique operation named: exprotExcelUsingGET_5
2019-05-28 20:58:01 -Generating unique operation named: addUsingGET_17
2019-05-28 20:58:01 -Generating unique operation named: editUsingGET_18
2019-05-28 20:58:01 -Generating unique operation named: listUsingGET_20
2019-05-28 20:58:01 -Generating unique operation named: removeUsingPOST_30
2019-05-28 20:58:01 -Generating unique operation named: removeUsingPOST_31
2019-05-28 20:58:01 -Generating unique operation named: saveUsingPOST_17
2019-05-28 20:58:01 -Generating unique operation named: updateUsingGET_11
2019-05-28 20:58:02 -Generating unique operation named: updateUsingHEAD_11
2019-05-28 20:58:02 -Generating unique operation named: updateUsingPOST_18
2019-05-28 20:58:02 -Generating unique operation named: updateUsingPUT_11
2019-05-28 20:58:02 -Generating unique operation named: updateUsingPATCH_11
2019-05-28 20:58:02 -Generating unique operation named: updateUsingDELETE_11
2019-05-28 20:58:02 -Generating unique operation named: updateUsingOPTIONS_11
2019-05-28 20:58:02 -Generating unique operation named: updateUsingTRACE_11
2019-05-28 20:58:02 -Generating unique operation named: addUsingGET_18
2019-05-28 20:58:02 -Generating unique operation named: editUsingGET_19
2019-05-28 20:58:02 -Generating unique operation named: listUsingGET_21
2019-05-28 20:58:02 -Generating unique operation named: removeUsingPOST_32
2019-05-28 20:58:02 -Generating unique operation named: removeUsingPOST_33
2019-05-28 20:58:02 -Generating unique operation named: saveUsingPOST_18
2019-05-28 20:58:02 -Generating unique operation named: updateUsingGET_12
2019-05-28 20:58:02 -Generating unique operation named: updateUsingHEAD_12
2019-05-28 20:58:02 -Generating unique operation named: updateUsingPOST_19
2019-05-28 20:58:02 -Generating unique operation named: updateUsingPUT_12
2019-05-28 20:58:02 -Generating unique operation named: updateUsingPATCH_12
2019-05-28 20:58:02 -Generating unique operation named: updateUsingDELETE_12
2019-05-28 20:58:02 -Generating unique operation named: updateUsingOPTIONS_12
2019-05-28 20:58:02 -Generating unique operation named: updateUsingTRACE_12
2019-05-28 20:58:02 -Starting Quartz Scheduler now
2019-05-28 20:58:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-05-28 20:58:02 -Starting...
2019-05-28 20:58:02 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-05-28 20:58:02 -Started.
2019-05-28 20:58:02 -Starting ProtocolHandler ["http-nio-8081"]
2019-05-28 20:58:02 -Using a shared selector for servlet write/read
2019-05-28 20:58:02 -Tomcat started on port(s): 8081 (http) with context path ''
2019-05-28 20:58:02 -Started BootdoApplication in 52.771 seconds (JVM running for 55.066)
2019-05-28 20:58:02 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-05-28 20:58:03 -==> Parameters: 
2019-05-28 20:58:03 -<==      Total: 1
2019-05-28 20:58:52 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-05-28 21:00:51 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-05-28 21:00:51 -FrameworkServlet 'dispatcherServlet': initialization started
2019-05-28 21:00:52 -FrameworkServlet 'dispatcherServlet': initialization completed in 135 ms
2019-05-28 21:00:52 -Enabling session validation scheduler...
2019-05-28 21:00:52 -请求地址 : http://localhost:8081/login;JSESSIONID=d7a80d3d-69dd-4ad2-8bf6-7de569499cfe
2019-05-28 21:00:52 -HTTP METHOD : GET
2019-05-28 21:00:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 21:00:52 -参数 : [{}]
2019-05-28 21:00:52 -耗时 : 4
2019-05-28 21:00:52 -返回值 : login
2019-05-28 21:00:55 -请求地址 : http://localhost:8081/getVerify
2019-05-28 21:00:55 -HTTP METHOD : GET
2019-05-28 21:00:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.getVerify
2019-05-28 21:00:55 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@18d9ed5f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5ddb7020]
2019-05-28 21:01:01 -4337
2019-05-28 21:01:01 -耗时 : 5797
2019-05-28 21:01:01 -返回值 : null
2019-05-28 21:01:01 -请求地址 : http://localhost:8081/login
2019-05-28 21:01:01 -HTTP METHOD : GET
2019-05-28 21:01:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-05-28 21:01:01 -参数 : [{}]
2019-05-28 21:01:01 -耗时 : 0
2019-05-28 21:01:01 -返回值 : login
2019-05-28 21:01:15 -请求地址 : http://localhost:8081/login
2019-05-28 21:01:15 -HTTP METHOD : POST
2019-05-28 21:01:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-05-28 21:01:15 -参数 : [admin, 111111, 4337, org.apache.shiro.web.servlet.ShiroHttpServletRequest@c49767e]
2019-05-28 21:01:15 -==>  Preparing: select `user_id`,`username`,`name`,`password`,`dept_id`,`email`,`mobile`,`status`,`user_id_create`,`gmt_create`,`gmt_modified`,`sex`,`birth`,`pic_id`,`live_address`,`hobby`,`province`,`city`,`district` from sys_user WHERE username = ? order by user_id desc 
2019-05-28 21:01:15 -==> Parameters: admin(String)
2019-05-28 21:01:16 -<==      Total: 1
2019-05-28 21:01:16 -耗时 : 928
2019-05-28 21:01:16 -返回值 : {msg=操作成功, code=0}
2019-05-28 21:01:16 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-05-28 21:01:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 21:01:16 -==> Parameters: 1(Long), admin(String), 登录(String), 928(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-05-28 21:01:16.892(Timestamp)
2019-05-28 21:01:17 -请求地址 : http://localhost:8081/index
2019-05-28 21:01:17 -HTTP METHOD : GET
2019-05-28 21:01:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 21:01:17 -参数 : [{}]
2019-05-28 21:01:17 -<==    Updates: 1
2019-05-28 21:01:17 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 21:01:17 -==> Parameters: 1(Long)
2019-05-28 21:01:18 -<==      Total: 50
2019-05-28 21:01:18 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 21:01:18 -==> Parameters: 138(Long)
2019-05-28 21:01:18 -<==      Total: 1
2019-05-28 21:01:18 -耗时 : 1022
2019-05-28 21:01:18 -返回值 : index_v1
2019-05-28 21:01:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 21:01:18 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 1023(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 21:01:18.399(Timestamp)
2019-05-28 21:01:18 -<==    Updates: 1
2019-05-28 21:01:18 -请求地址 : http://localhost:8081/main
2019-05-28 21:01:18 -HTTP METHOD : GET
2019-05-28 21:01:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 21:01:18 -参数 : []
2019-05-28 21:01:18 -耗时 : 0
2019-05-28 21:01:18 -返回值 : main
2019-05-28 21:01:21 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 21:01:21 -HTTP METHOD : GET
2019-05-28 21:01:21 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 21:01:21 -参数 : []
2019-05-28 21:01:21 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 21:01:21 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 21:01:21 -请求地址 : http://localhost:8081/main
2019-05-28 21:01:21 -HTTP METHOD : GET
2019-05-28 21:01:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 21:01:21 -参数 : []
2019-05-28 21:01:21 -耗时 : 0
2019-05-28 21:01:21 -返回值 : main
2019-05-28 21:01:21 -<==      Total: 0
2019-05-28 21:01:21 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 21:01:21 -==> Parameters: 1(Long), 0(String)
2019-05-28 21:01:21 -<==      Total: 1
2019-05-28 21:01:21 -耗时 : 618
2019-05-28 21:01:21 -返回值 : com.bootdo.common.utils.PageUtils@30f5061d
2019-05-28 21:01:34 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 21:01:34 -==> Parameters: 1(Long)
2019-05-28 21:01:34 -<==      Total: 94
2019-05-28 21:01:34 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-05-28 21:01:34 -HTTP METHOD : GET
2019-05-28 21:01:34 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-05-28 21:01:34 -参数 : []
2019-05-28 21:01:34 -耗时 : 1
2019-05-28 21:01:34 -返回值 : heat/heatUpLoad/heatUpLoad
2019-05-28 21:09:03 -请求地址 : http://localhost:8081/index
2019-05-28 21:09:03 -HTTP METHOD : GET
2019-05-28 21:09:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 21:09:03 -参数 : [{}]
2019-05-28 21:09:03 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 21:09:03 -==> Parameters: 1(Long)
2019-05-28 21:09:03 -<==      Total: 50
2019-05-28 21:09:03 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 21:09:03 -==> Parameters: 138(Long)
2019-05-28 21:09:03 -<==      Total: 1
2019-05-28 21:09:03 -耗时 : 58
2019-05-28 21:09:03 -返回值 : index_v1
2019-05-28 21:09:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 21:09:03 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 58(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 21:09:03.409(Timestamp)
2019-05-28 21:09:03 -<==    Updates: 1
2019-05-28 21:09:03 -请求地址 : http://localhost:8081/main
2019-05-28 21:09:03 -HTTP METHOD : GET
2019-05-28 21:09:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 21:09:03 -参数 : []
2019-05-28 21:09:03 -耗时 : 1
2019-05-28 21:09:03 -返回值 : main
2019-05-28 21:09:03 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 21:09:03 -HTTP METHOD : GET
2019-05-28 21:09:03 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 21:09:03 -参数 : []
2019-05-28 21:09:03 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 21:09:03 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 21:09:03 -<==      Total: 0
2019-05-28 21:09:03 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 21:09:03 -==> Parameters: 1(Long), 0(String)
2019-05-28 21:09:04 -<==      Total: 1
2019-05-28 21:09:04 -耗时 : 34
2019-05-28 21:09:04 -返回值 : com.bootdo.common.utils.PageUtils@271eefc4
2019-05-28 21:09:04 -请求地址 : http://localhost:8081/main
2019-05-28 21:09:04 -HTTP METHOD : GET
2019-05-28 21:09:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 21:09:04 -参数 : []
2019-05-28 21:09:04 -耗时 : 1
2019-05-28 21:09:04 -返回值 : main
2019-05-28 21:09:22 -请求地址 : http://localhost:8081/heat/heat
2019-05-28 21:09:22 -HTTP METHOD : GET
2019-05-28 21:09:22 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-05-28 21:09:22 -参数 : []
2019-05-28 21:09:22 -耗时 : 1
2019-05-28 21:09:22 -返回值 : heat/heat/heat
2019-05-28 21:09:23 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-28 21:09:23 -HTTP METHOD : GET
2019-05-28 21:09:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 21:09:23 -参数 : [heatType]
2019-05-28 21:09:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 21:09:23 -==> Parameters: heatType(String)
2019-05-28 21:09:23 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 21:09:23 -HTTP METHOD : GET
2019-05-28 21:09:23 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 21:09:23 -参数 : [userType]
2019-05-28 21:09:23 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 21:09:23 -==> Parameters: userType(String)
2019-05-28 21:09:23 -请求地址 : http://localhost:8081/heat/heat/list
2019-05-28 21:09:23 -HTTP METHOD : GET
2019-05-28 21:09:23 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-05-28 21:09:23 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-28 21:09:23 -<==      Total: 4
2019-05-28 21:09:23 -耗时 : 205
2019-05-28 21:09:23 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 21:09:23 -<==      Total: 4
2019-05-28 21:09:23 -耗时 : 395
2019-05-28 21:09:23 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 21:09:23 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-05-28 21:09:23 -==> Parameters: 0(Integer), 10(Integer)
2019-05-28 21:09:23 -<==      Total: 10
2019-05-28 21:09:23 -==>  Preparing: select count(*) from heat 
2019-05-28 21:09:23 -==> Parameters: 
2019-05-28 21:09:23 -<==      Total: 1
2019-05-28 21:09:23 -耗时 : 580
2019-05-28 21:09:23 -返回值 : com.bootdo.common.utils.PageUtils@697c06ca
2019-05-28 21:09:24 -请求地址 : http://localhost:8081/heat/heatInto
2019-05-28 21:09:24 -HTTP METHOD : GET
2019-05-28 21:09:24 -CLASS_METHOD : com.bootdo.heat.controller.HeatIntoController.HeatInto
2019-05-28 21:09:24 -参数 : []
2019-05-28 21:09:24 -耗时 : 0
2019-05-28 21:09:24 -返回值 : heat/heatInto/heatInto
2019-05-28 21:09:25 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-05-28 21:09:25 -HTTP METHOD : GET
2019-05-28 21:09:25 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-05-28 21:09:25 -参数 : []
2019-05-28 21:09:25 -耗时 : 1
2019-05-28 21:09:25 -返回值 : heat/heatUpLoad/heatUpLoad
2019-05-28 21:09:38 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 21:09:38 -HTTP METHOD : GET
2019-05-28 21:09:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 21:09:38 -参数 : []
2019-05-28 21:09:38 -耗时 : 1
2019-05-28 21:09:38 -返回值 : system/dept/deptTree
2019-05-28 21:09:38 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 21:09:38 -HTTP METHOD : GET
2019-05-28 21:09:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 21:09:38 -参数 : []
2019-05-28 21:09:38 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 21:09:38 -==> Parameters: 
2019-05-28 21:09:38 -<==      Total: 3
2019-05-28 21:09:38 -耗时 : 31
2019-05-28 21:09:38 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 21:09:41 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 21:09:41 -HTTP METHOD : POST
2019-05-28 21:09:41 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 21:09:41 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@53ab57b9, 2019-01, 2]
2019-05-28 21:09:43 -Failed to invoke @ExceptionHandler method: public java.lang.Object com.bootdo.common.exception.BDExceptionHandler.handleException(java.lang.Exception,javax.servlet.http.HttpServletRequest)
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.bootdo.common.utils.ShiroUtils.getSubjct(ShiroUtils.java:20)
	at com.bootdo.common.utils.ShiroUtils.getUser(ShiroUtils.java:23)
	at com.bootdo.common.exception.BDExceptionHandler.handleException(BDExceptionHandler.java:75)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:404)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61)
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139)
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78)
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.AsyncContextImpl.setErrorState(AsyncContextImpl.java:424)
	at org.apache.catalina.connector.CoyoteAdapter.asyncDispatch(CoyoteAdapter.java:176)
	at org.apache.coyote.AbstractProcessor.dispatch(AbstractProcessor.java:232)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:53)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
2019-05-28 21:15:06 -耗时 : 325367
2019-05-28 21:15:06 -返回值 : 第4行，用户暖费为空，请认真编写
2019-05-28 21:22:34 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 21:22:34 -HTTP METHOD : POST
2019-05-28 21:22:34 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 21:22:34 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@701815f6, 2019-01, 2]
2019-05-28 21:22:37 -耗时 : 3050
2019-05-28 21:22:37 -返回值 : 第4行，用户暖费为空，请认真编写
2019-05-28 21:26:33 -请求地址 : http://localhost:8081/index
2019-05-28 21:26:33 -HTTP METHOD : GET
2019-05-28 21:26:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 21:26:33 -参数 : [{}]
2019-05-28 21:26:33 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 21:26:33 -==> Parameters: 1(Long)
2019-05-28 21:26:33 -<==      Total: 50
2019-05-28 21:26:33 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 21:26:33 -==> Parameters: 138(Long)
2019-05-28 21:26:33 -<==      Total: 1
2019-05-28 21:26:33 -耗时 : 209
2019-05-28 21:26:33 -返回值 : index_v1
2019-05-28 21:26:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 21:26:33 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 209(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 21:26:33.816(Timestamp)
2019-05-28 21:26:33 -请求地址 : http://localhost:8081/main
2019-05-28 21:26:33 -HTTP METHOD : GET
2019-05-28 21:26:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 21:26:33 -参数 : []
2019-05-28 21:26:33 -耗时 : 0
2019-05-28 21:26:33 -返回值 : main
2019-05-28 21:26:34 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 21:26:34 -HTTP METHOD : GET
2019-05-28 21:26:34 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 21:26:34 -参数 : []
2019-05-28 21:26:34 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 21:26:34 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 21:26:34 -<==    Updates: 1
2019-05-28 21:26:34 -<==      Total: 0
2019-05-28 21:26:34 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 21:26:34 -==> Parameters: 1(Long), 0(String)
2019-05-28 21:26:34 -<==      Total: 1
2019-05-28 21:26:34 -耗时 : 35
2019-05-28 21:26:34 -返回值 : com.bootdo.common.utils.PageUtils@244ba31e
2019-05-28 21:26:34 -请求地址 : http://localhost:8081/main
2019-05-28 21:26:34 -HTTP METHOD : GET
2019-05-28 21:26:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 21:26:34 -参数 : []
2019-05-28 21:26:34 -耗时 : 0
2019-05-28 21:26:34 -返回值 : main
2019-05-28 21:27:02 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 21:27:02 -==> Parameters: 1(Long)
2019-05-28 21:27:02 -<==      Total: 94
2019-05-28 21:27:02 -请求地址 : http://localhost:8081/heat/heat
2019-05-28 21:27:02 -HTTP METHOD : GET
2019-05-28 21:27:02 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-05-28 21:27:02 -参数 : []
2019-05-28 21:27:02 -耗时 : 1
2019-05-28 21:27:02 -返回值 : heat/heat/heat
2019-05-28 21:27:02 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-28 21:27:02 -HTTP METHOD : GET
2019-05-28 21:27:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 21:27:02 -参数 : [heatType]
2019-05-28 21:27:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 21:27:02 -==> Parameters: heatType(String)
2019-05-28 21:27:02 -<==      Total: 4
2019-05-28 21:27:02 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 21:27:02 -HTTP METHOD : GET
2019-05-28 21:27:02 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 21:27:02 -参数 : [userType]
2019-05-28 21:27:02 -耗时 : 12
2019-05-28 21:27:02 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 21:27:02 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 21:27:02 -==> Parameters: userType(String)
2019-05-28 21:27:02 -<==      Total: 4
2019-05-28 21:27:02 -耗时 : 13
2019-05-28 21:27:02 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 21:27:02 -请求地址 : http://localhost:8081/heat/heat/list
2019-05-28 21:27:02 -HTTP METHOD : GET
2019-05-28 21:27:02 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-05-28 21:27:02 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-28 21:27:02 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-05-28 21:27:02 -==> Parameters: 0(Integer), 10(Integer)
2019-05-28 21:27:02 -<==      Total: 10
2019-05-28 21:27:02 -==>  Preparing: select count(*) from heat 
2019-05-28 21:27:02 -==> Parameters: 
2019-05-28 21:27:02 -<==      Total: 1
2019-05-28 21:27:02 -耗时 : 148
2019-05-28 21:27:02 -返回值 : com.bootdo.common.utils.PageUtils@6dbb2aa4
2019-05-28 21:27:04 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-05-28 21:27:04 -HTTP METHOD : GET
2019-05-28 21:27:04 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-05-28 21:27:04 -参数 : []
2019-05-28 21:27:04 -耗时 : 0
2019-05-28 21:27:04 -返回值 : heat/heatUpLoad/heatUpLoad
2019-05-28 21:27:15 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 21:27:15 -HTTP METHOD : GET
2019-05-28 21:27:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 21:27:15 -参数 : []
2019-05-28 21:27:15 -耗时 : 4
2019-05-28 21:27:15 -返回值 : system/dept/deptTree
2019-05-28 21:27:15 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 21:27:15 -HTTP METHOD : GET
2019-05-28 21:27:15 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 21:27:15 -参数 : []
2019-05-28 21:27:15 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 21:27:15 -==> Parameters: 
2019-05-28 21:27:15 -<==      Total: 3
2019-05-28 21:27:15 -耗时 : 4
2019-05-28 21:27:15 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 21:27:16 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 21:27:16 -HTTP METHOD : POST
2019-05-28 21:27:16 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 21:27:16 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@402b8f30, 2019-01, 2]
2019-05-28 21:27:20 -耗时 : 3582
2019-05-28 21:27:20 -返回值 : 第4行，用户暖费为空，请认真编写
2019-05-28 21:28:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 1 transport error)], stompSubProtocol[processed CONNECT(3)-CONNECTED(3)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 36], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 6], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 398]
2019-05-28 21:29:57 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 21:29:57 -HTTP METHOD : POST
2019-05-28 21:29:57 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 21:29:57 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@3f0f9966, 2019-01, 2]
2019-05-28 21:33:02 -耗时 : 184763
2019-05-28 21:33:02 -返回值 : 第4行，用户暖费为空，请认真编写
2019-05-28 21:39:04 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 21:39:04 -HTTP METHOD : POST
2019-05-28 21:39:04 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 21:39:04 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2948cd1f, 2019-01, 2]
2019-05-28 21:39:06 -耗时 : 2334
2019-05-28 21:39:06 -返回值 : 第4行，用户暖费为空，请认真编写
2019-05-28 21:42:37 -请求地址 : http://localhost:8081/index
2019-05-28 21:42:37 -HTTP METHOD : GET
2019-05-28 21:42:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 21:42:37 -参数 : [{}]
2019-05-28 21:42:37 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 21:42:37 -==> Parameters: 1(Long)
2019-05-28 21:42:37 -<==      Total: 50
2019-05-28 21:42:37 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 21:42:37 -==> Parameters: 138(Long)
2019-05-28 21:42:37 -<==      Total: 1
2019-05-28 21:42:37 -耗时 : 296
2019-05-28 21:42:37 -返回值 : index_v1
2019-05-28 21:42:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 21:42:37 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 296(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 21:42:37.412(Timestamp)
2019-05-28 21:42:37 -<==    Updates: 1
2019-05-28 21:42:38 -请求地址 : http://localhost:8081/main
2019-05-28 21:42:38 -HTTP METHOD : GET
2019-05-28 21:42:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 21:42:38 -参数 : []
2019-05-28 21:42:38 -耗时 : 0
2019-05-28 21:42:38 -返回值 : main
2019-05-28 21:42:39 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 21:42:39 -HTTP METHOD : GET
2019-05-28 21:42:39 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 21:42:39 -参数 : []
2019-05-28 21:42:39 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 21:42:39 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 21:42:39 -<==      Total: 0
2019-05-28 21:42:39 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 21:42:39 -==> Parameters: 1(Long), 0(String)
2019-05-28 21:42:39 -<==      Total: 1
2019-05-28 21:42:39 -耗时 : 67
2019-05-28 21:42:39 -返回值 : com.bootdo.common.utils.PageUtils@5251453b
2019-05-28 21:42:39 -请求地址 : http://localhost:8081/main
2019-05-28 21:42:39 -HTTP METHOD : GET
2019-05-28 21:42:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 21:42:39 -参数 : []
2019-05-28 21:42:39 -耗时 : 4
2019-05-28 21:42:39 -返回值 : main
2019-05-28 21:43:03 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 21:43:03 -==> Parameters: 1(Long)
2019-05-28 21:43:03 -<==      Total: 94
2019-05-28 21:43:03 -请求地址 : http://localhost:8081/heat/heat
2019-05-28 21:43:03 -HTTP METHOD : GET
2019-05-28 21:43:03 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.Heat
2019-05-28 21:43:03 -参数 : []
2019-05-28 21:43:03 -耗时 : 0
2019-05-28 21:43:03 -返回值 : heat/heat/heat
2019-05-28 21:43:04 -请求地址 : http://localhost:8081/common/dict/list/userType
2019-05-28 21:43:04 -请求地址 : http://localhost:8081/common/dict/list/heatType
2019-05-28 21:43:04 -HTTP METHOD : GET
2019-05-28 21:43:04 -HTTP METHOD : GET
2019-05-28 21:43:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 21:43:04 -CLASS_METHOD : com.bootdo.common.controller.DictController.listByType
2019-05-28 21:43:04 -参数 : [userType]
2019-05-28 21:43:04 -参数 : [heatType]
2019-05-28 21:43:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 21:43:04 -==> Parameters: heatType(String)
2019-05-28 21:43:04 -==>  Preparing: select `id`,`name`,`value`,`type`,`description`,`sort`,`parent_id`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from sys_dict WHERE type = ? order by id desc 
2019-05-28 21:43:04 -==> Parameters: userType(String)
2019-05-28 21:43:04 -<==      Total: 4
2019-05-28 21:43:04 -<==      Total: 4
2019-05-28 21:43:04 -耗时 : 5
2019-05-28 21:43:04 -耗时 : 5
2019-05-28 21:43:04 -返回值 : [DictDO{id=145, name='银行转账', value='D', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=144, name='微信支付', value='C', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=124, name='工资代扣', value='B', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=123, name='现金缴费', value='A', type='userType', description='用户方式', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 21:43:04 -返回值 : [DictDO{id=184, name='民用暖', value='1', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=183, name='商业暖', value='2', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=182, name='工业民', value='3', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}, DictDO{id=181, name='工业商', value='4', type='heatType', description='暖费类型', sort=null, parentId=null, createBy=null, createDate=null, updateBy=null, updateDate=null, remarks='', delFlag='null'}]
2019-05-28 21:43:04 -请求地址 : http://localhost:8081/heat/heat/list
2019-05-28 21:43:04 -HTTP METHOD : GET
2019-05-28 21:43:04 -CLASS_METHOD : com.bootdo.heat.controller.HeatController.list
2019-05-28 21:43:04 -参数 : [{limit=10, offset=0, userType=, heatType=, userOrg=, userId=, createTime=, queryType=1}]
2019-05-28 21:43:04 -==>  Preparing: select `id`,`user_id`,`user_name`,`user_type`,`user_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `user_org`) AS userOrgName,`user_tell`,`user_state`,`wages_id`,`heat_type`,`heat_price`,`heat_area`,`heat_cost`,`heat_sum`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat order by id asc limit ?, ? 
2019-05-28 21:43:04 -==> Parameters: 0(Integer), 10(Integer)
2019-05-28 21:43:04 -<==      Total: 10
2019-05-28 21:43:04 -==>  Preparing: select count(*) from heat 
2019-05-28 21:43:04 -==> Parameters: 
2019-05-28 21:43:04 -<==      Total: 1
2019-05-28 21:43:04 -耗时 : 19
2019-05-28 21:43:04 -返回值 : com.bootdo.common.utils.PageUtils@1975bde8
2019-05-28 21:43:05 -请求地址 : http://localhost:8081/heat/heatInto
2019-05-28 21:43:05 -HTTP METHOD : GET
2019-05-28 21:43:05 -CLASS_METHOD : com.bootdo.heat.controller.HeatIntoController.HeatInto
2019-05-28 21:43:05 -参数 : []
2019-05-28 21:43:05 -耗时 : 1
2019-05-28 21:43:05 -返回值 : heat/heatInto/heatInto
2019-05-28 21:43:06 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-05-28 21:43:06 -HTTP METHOD : GET
2019-05-28 21:43:06 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-05-28 21:43:06 -参数 : []
2019-05-28 21:43:06 -耗时 : 3
2019-05-28 21:43:06 -返回值 : heat/heatUpLoad/heatUpLoad
2019-05-28 21:43:21 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 21:43:21 -HTTP METHOD : GET
2019-05-28 21:43:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 21:43:21 -参数 : []
2019-05-28 21:43:21 -耗时 : 1
2019-05-28 21:43:21 -返回值 : system/dept/deptTree
2019-05-28 21:43:21 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 21:43:21 -HTTP METHOD : GET
2019-05-28 21:43:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 21:43:21 -参数 : []
2019-05-28 21:43:21 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 21:43:21 -==> Parameters: 
2019-05-28 21:43:21 -<==      Total: 3
2019-05-28 21:43:21 -耗时 : 6
2019-05-28 21:43:21 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 21:43:23 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 21:43:23 -HTTP METHOD : POST
2019-05-28 21:43:23 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 21:43:23 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@12f2f1b6, 2019-01, 2]
2019-05-28 21:51:45 -耗时 : 501884
2019-05-28 21:51:45 -返回值 : 第4行，用户暖费为空，请认真编写
2019-05-28 21:52:26 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 21:52:26 -HTTP METHOD : POST
2019-05-28 21:52:26 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 21:52:26 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5d9179a9, 2019-01, 2]
2019-05-28 21:53:24 -耗时 : 57871
2019-05-28 21:53:24 -返回值 : 第4行，用户暖费为空，请认真编写
2019-05-28 21:55:25 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 21:55:25 -HTTP METHOD : POST
2019-05-28 21:55:25 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 21:55:25 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4658a976, 2019-01, 2]
2019-05-28 21:57:26 -耗时 : 121844
2019-05-28 21:57:26 -返回值 : 第4行，用户暖费为空，请认真编写
2019-05-28 21:58:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 5 total, 0 closed abnormally (0 connect failure, 0 send limit, 1 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 48], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 830]
2019-05-28 22:00:10 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 22:00:10 -HTTP METHOD : POST
2019-05-28 22:00:10 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 22:00:10 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@c0c1961, 2019-01, 2]
2019-05-28 22:00:28 -耗时 : 18219
2019-05-28 22:00:28 -返回值 : 第3行，用户暖费为空，请认真编写
2019-05-28 22:00:47 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 22:00:47 -HTTP METHOD : POST
2019-05-28 22:00:47 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 22:00:47 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@278b88f9, 2019-01, 2]
2019-05-28 22:00:52 -Validating all active sessions...
2019-05-28 22:00:52 -Finished session validation.  No sessions were stopped.
2019-05-28 22:04:27 -耗时 : 219526
2019-05-28 22:04:27 -返回值 : 第3行，用户暖费为空，请认真编写
2019-05-28 22:04:31 -请求地址 : http://localhost:8081/index
2019-05-28 22:04:31 -HTTP METHOD : GET
2019-05-28 22:04:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-05-28 22:04:31 -参数 : [{}]
2019-05-28 22:04:31 -==>  Preparing: select distinct m.menu_id , parent_id, name, url, perms,`type`,icon,order_num,gmt_create, gmt_modified from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.type in(0,1) order by m.order_num 
2019-05-28 22:04:31 -==> Parameters: 1(Long)
2019-05-28 22:04:31 -<==      Total: 50
2019-05-28 22:04:31 -==>  Preparing: select `id`,`type`,`url`,`create_date` from sys_file where id = ? 
2019-05-28 22:04:31 -==> Parameters: 138(Long)
2019-05-28 22:04:31 -<==      Total: 1
2019-05-28 22:04:31 -耗时 : 30
2019-05-28 22:04:31 -返回值 : index_v1
2019-05-28 22:04:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 22:04:31 -==> Parameters: 1(Long), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), {"menus":[{"attributes":{"icon":"fa fa-money","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-money","url":"/moneyList/moneyList"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"102","parentId":"106","text":"现金缴费"},{"attributes":{"icon":"fa fa-book","url":"/moneyLog/elecLog"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"107","parentId":"106","text":"缴费记录"},{"attributes":{"icon":"fa fa-image","url":"/moneyList/moneyWZ"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"164","parentId":"106","text":"乌镇管理"}],"hasChildren":true,"hasParent":false,"id":"106","parentId":"0","text":"收费管理"},{"attributes":{"icon":"fa fa-lightbulb-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/elec/elec"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"121","parentId":"103","text":"电费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"elec/elecInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"122","parentId":"103","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"elec/elecUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"123","parentId":"103","text":"电表上传"},{"attributes":{"icon":"fa fa-cc","url":"/elec/elecPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"124","parentId":"103","text":"电价管理"}],"hasChildren":true,"hasParent":false,"id":"103","parentId":"0","text":"电费管理"},{"attributes":{"icon":"fa fa-tint","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/water/water"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"117","parentId":"105","text":"水费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"water/waterInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"118","parentId":"105","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"water/waterUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"119","parentId":"105","text":"水费生成"},{"attributes":{"icon":"fa fa-cc","url":"/water/waterPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"120","parentId":"105","text":"水价管理"}],"hasChildren":true,"hasParent":false,"id":"105","parentId":"0","text":"水费管理"},{"attributes":{"icon":"fa fa-fire","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-user-secret","url":"/heat/heat"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"113","parentId":"104","text":"暖费用户"},{"attributes":{"icon":"fa fa-file-excel-o","url":"heat/heatInto"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"114","parentId":"104","text":"工资代扣"},{"attributes":{"icon":"fa fa-cloud-upload","url":"heat/heatUpLoad"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"115","parentId":"104","text":"暖费生成"},{"attributes":{"icon":"","url":"/heat/heatPrice"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"116","parentId":"104","text":"暖价管理"}],"hasChildren":true,"hasParent":false,"id":"104","parentId":"0","text":"暖费管理"},{"attributes":{"icon":"fa fa-vcard-o","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-bomb","url":"/print/print"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"149","parentId":"108","text":"票据记录"}],"hasChildren":true,"hasParent":false,"id":"108","parentId":"0","text":"票据管理"},{"attributes":{"icon":"fa fa-bar-chart","url":""},"checked":false,"children":[{"attributes":{"icon":"fa fa-area-chart","url":"/chart/graph_echarts.html"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"98","parentId":"97","text":"百度chart"},{"attributes":{"icon":"fa fa-sun-o","url":"charts/countDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"109","parentId":"97","text":"日统计报表"},{"attributes":{"icon":"fa fa-calendar","url":"charts/tableDD"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"161","parentId":"97","text":"日统计表格"},{"attributes":{"icon":"fa fa-registered","url":"charts/countMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"110","parentId":"97","text":"月统计报表"},{"attributes":{"icon":"fa fa-building-o","url":"charts/tableElecMM"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"162","parentId":"97","text":"月统计表格"},{"attributes":{"icon":"fa fa-support","url":"charts/countYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"111","parentId":"97","text":"年统计报表"},{"attributes":{"icon":"fa fa-book","url":"charts/tableElecYY"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"163","parentId":"97","text":"年统计表格"},{"attributes":{"icon":"fa fa-money","url":"charts/countOwe"},"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"155","(String), 127.0.0.1(String), 2019-05-28 22:04:31.279(Timestamp)
2019-05-28 22:04:31 -<==    Updates: 1
2019-05-28 22:04:31 -请求地址 : http://localhost:8081/main
2019-05-28 22:04:31 -HTTP METHOD : GET
2019-05-28 22:04:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 22:04:31 -参数 : []
2019-05-28 22:04:31 -耗时 : 1
2019-05-28 22:04:31 -返回值 : main
2019-05-28 22:04:32 -请求地址 : http://localhost:8081/oa/notify/message
2019-05-28 22:04:32 -HTTP METHOD : GET
2019-05-28 22:04:32 -CLASS_METHOD : com.bootdo.oa.controller.NotifyController.message
2019-05-28 22:04:32 -参数 : []
2019-05-28 22:04:32 -==>  Preparing: select DISTINCT n.id ,`type`,`title`,`content`,`files`,r.is_read,`status`,`create_by`,`create_date`,`update_by`,`update_date`,`remarks`,`del_flag` from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id WHERE r.is_read = ? and r.user_id = ? order by is_read ASC, update_date DESC limit ?, ? 
2019-05-28 22:04:32 -==> Parameters: 0(String), 1(Long), 0(Integer), 3(Integer)
2019-05-28 22:04:32 -请求地址 : http://localhost:8081/main
2019-05-28 22:04:32 -HTTP METHOD : GET
2019-05-28 22:04:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-05-28 22:04:32 -参数 : []
2019-05-28 22:04:32 -耗时 : 1
2019-05-28 22:04:32 -返回值 : main
2019-05-28 22:04:32 -<==      Total: 0
2019-05-28 22:04:32 -==>  Preparing: select count(*) from oa_notify_record r right JOIN oa_notify n on r.notify_id = n.id where r.user_id =? and r.is_read = ? 
2019-05-28 22:04:32 -==> Parameters: 1(Long), 0(String)
2019-05-28 22:04:32 -<==      Total: 1
2019-05-28 22:04:32 -耗时 : 109
2019-05-28 22:04:32 -返回值 : com.bootdo.common.utils.PageUtils@42cce56c
2019-05-28 22:04:39 -==>  Preparing: select distinct m.perms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-05-28 22:04:39 -==> Parameters: 1(Long)
2019-05-28 22:04:39 -<==      Total: 94
2019-05-28 22:04:39 -请求地址 : http://localhost:8081/heat/heatUpLoad
2019-05-28 22:04:39 -HTTP METHOD : GET
2019-05-28 22:04:39 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.HeatUpLoad
2019-05-28 22:04:39 -参数 : []
2019-05-28 22:04:39 -耗时 : 0
2019-05-28 22:04:39 -返回值 : heat/heatUpLoad/heatUpLoad
2019-05-28 22:04:49 -请求地址 : http://localhost:8081/system/sysDept/treeView
2019-05-28 22:04:49 -HTTP METHOD : GET
2019-05-28 22:04:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.treeView
2019-05-28 22:04:49 -参数 : []
2019-05-28 22:04:49 -耗时 : 0
2019-05-28 22:04:49 -返回值 : system/dept/deptTree
2019-05-28 22:04:49 -请求地址 : http://localhost:8081/system/sysDept/tree
2019-05-28 22:04:49 -HTTP METHOD : GET
2019-05-28 22:04:49 -CLASS_METHOD : com.bootdo.system.controller.DeptController.tree
2019-05-28 22:04:49 -参数 : []
2019-05-28 22:04:49 -==>  Preparing: select `dept_id`,`parent_id`,`name`,`order_num`,`del_flag` from sys_dept order by dept_id desc 
2019-05-28 22:04:49 -==> Parameters: 
2019-05-28 22:04:49 -<==      Total: 3
2019-05-28 22:04:49 -耗时 : 16
2019-05-28 22:04:49 -返回值 : {"checked":false,"children":[{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"3","parentId":"1","state":{"opened":true},"text":"牙星"},{"checked":false,"children":[],"hasChildren":false,"hasParent":true,"id":"2","parentId":"1","state":{"opened":true},"text":"五九"}],"hasChildren":true,"hasParent":false,"id":"1","parentId":"0","state":{"opened":true},"text":"总公司"}
2019-05-28 22:04:51 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 22:04:51 -HTTP METHOD : POST
2019-05-28 22:04:51 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 22:04:51 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@5c757b81, 2019-01, 2]
2019-05-28 22:05:17 -耗时 : 25245
2019-05-28 22:05:17 -返回值 : 第3行，用户暖费为空，请认真编写
2019-05-28 22:05:41 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 22:05:41 -HTTP METHOD : POST
2019-05-28 22:05:41 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 22:05:41 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@595d9ab0, 2019-01, 2]
2019-05-28 22:06:48 -耗时 : 66532
2019-05-28 22:06:48 -返回值 : 第3行，用户暖费为空，请认真编写
2019-05-28 22:06:51 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 22:06:51 -HTTP METHOD : POST
2019-05-28 22:06:51 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 22:06:51 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4d45bfa9, 2019-01, 2]
2019-05-28 22:06:55 -耗时 : 4013
2019-05-28 22:06:55 -返回值 : success
2019-05-28 22:07:11 -请求地址 : http://localhost:8081/heat/heatPrice
2019-05-28 22:07:11 -HTTP METHOD : GET
2019-05-28 22:07:11 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.HeatPrice
2019-05-28 22:07:11 -参数 : []
2019-05-28 22:07:11 -耗时 : 0
2019-05-28 22:07:11 -返回值 : heat/heatPrice/heatPrice
2019-05-28 22:07:11 -请求地址 : http://localhost:8081/heat/heatPrice/list
2019-05-28 22:07:11 -HTTP METHOD : GET
2019-05-28 22:07:11 -CLASS_METHOD : com.bootdo.heat.controller.HeatPriceController.list
2019-05-28 22:07:11 -参数 : [{limit=10, offset=0}]
2019-05-28 22:07:11 -==>  Preparing: select `id`,`heat_org`,(SELECT t.`name` FROM sys_dept t WHERE t.`dept_id` = `heat_org`) AS heatOrgName,`m_heat`,`s_heat`,`gm_heat`,`gs_heat`,`create_time`,`create_by`,`update_time`,`update_by`,`remark` from heat_price order by id asc limit ?, ? 
2019-05-28 22:07:11 -==> Parameters: 0(Integer), 10(Integer)
2019-05-28 22:07:11 -<==      Total: 2
2019-05-28 22:07:11 -==>  Preparing: select count(*) from heat_price 
2019-05-28 22:07:11 -==> Parameters: 
2019-05-28 22:07:11 -<==      Total: 1
2019-05-28 22:07:11 -耗时 : 215
2019-05-28 22:07:11 -返回值 : com.bootdo.common.utils.PageUtils@67985eac
2019-05-28 22:07:29 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 22:07:29 -HTTP METHOD : POST
2019-05-28 22:07:29 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 22:07:29 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@53465af, 2019-01, 2]
2019-05-28 22:09:22 -耗时 : 113751
2019-05-28 22:09:22 -返回值 : success
2019-05-28 22:10:56 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 22:10:56 -HTTP METHOD : POST
2019-05-28 22:10:56 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 22:10:56 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7f629f62, 2019-01, 2]
2019-05-28 22:12:34 -耗时 : 98090
2019-05-28 22:12:34 -返回值 : 第4行，用户暖费为空，请认真编写
2019-05-28 22:12:39 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 22:12:39 -HTTP METHOD : POST
2019-05-28 22:12:39 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 22:12:39 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@63e26bbf, 2019-01, 2]
2019-05-28 22:12:49 -耗时 : 9919
2019-05-28 22:12:49 -返回值 : 第4行，用户暖费为空，请认真编写
2019-05-28 22:13:19 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 22:13:19 -HTTP METHOD : POST
2019-05-28 22:13:19 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 22:13:19 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@45990d06, 2019-01, 2]
2019-05-28 22:19:57 -耗时 : 397041
2019-05-28 22:19:57 -返回值 : 第4行，用户暖费为空，请认真编写
2019-05-28 22:20:00 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 22:20:00 -HTTP METHOD : POST
2019-05-28 22:20:00 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 22:20:00 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@43d75cf1, 2019-01, 2]
2019-05-28 22:25:15 -耗时 : 314694
2019-05-28 22:25:15 -返回值 : 第4行，用户暖费为空，请认真编写
2019-05-28 22:25:17 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 22:25:17 -HTTP METHOD : POST
2019-05-28 22:25:17 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 22:25:17 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@4f97484b, 2019-01, 2]
2019-05-28 22:26:56 -耗时 : 98794
2019-05-28 22:26:56 -返回值 : 第4行，用户暖费为空，请认真编写
2019-05-28 22:27:38 -请求地址 : http://localhost:8081/heat/heatUpLoad/importHeatExcel
2019-05-28 22:27:38 -HTTP METHOD : POST
2019-05-28 22:27:38 -CLASS_METHOD : com.bootdo.heat.controller.HeatUpLoadController.importHeatExcel
2019-05-28 22:27:38 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@2841e251, 2019-01, 2]
2019-05-28 22:28:52 -WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 6 total, 0 closed abnormally (0 connect failure, 0 send limit, 1 transport error)], stompSubProtocol[processed CONNECT(5)-CONNECTED(5)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 60], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 2, completed tasks = 1263]
2019-05-28 22:35:16 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 22:35:17 -==> Parameters: 1-0001(String), 张三(String), A(String), 2(String), 18888888888(String), 0(String), 0506789(String), 1(String), 4.8(BigDecimal), 66(BigDecimal), 217(BigDecimal), 333(BigDecimal), 2019-01(String), 1(Long), 2019-05-28 22:35:16.929(Timestamp), 1(Long), 特殊用户(String)
2019-05-28 22:35:17 -<==    Updates: 1
2019-05-28 22:35:17 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 22:35:17 -==> Parameters: 1-0002(String), 李四(String), B(String), 2(String), (String), 1(String), (String), 2(String), 3.5(BigDecimal), 60(BigDecimal), 211.96(BigDecimal), -211.96(BigDecimal), 2019-01(String), 1(Long), 2019-05-28 22:35:16.929(Timestamp), 1(Long), null
2019-05-28 22:35:17 -<==    Updates: 1
2019-05-28 22:35:17 -==>  Preparing: insert into heat ( `user_id`, `user_name`, `user_type`, `user_org`, `user_tell`, `user_state`, `wages_id`, `heat_type`, `heat_price`, `heat_area`, `heat_cost`, `heat_sum`, `create_time`, `create_by`, `update_time`, `update_by`, `remark` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-05-28 22:35:17 -==> Parameters: 1-0003(String), 王五(String), C(String), 2(String), (String), 1(String), (String), 3(String), 5(BigDecimal), 60.56(BigDecimal), 211.96(BigDecimal), -211.96(BigDecimal), 2019-01(String), 1(Long), 2019-05-28 22:35:16.929(Timestamp), 1(Long), null
2019-05-28 22:35:17 -<==    Updates: 1
2019-05-28 22:35:17 -耗时 : 458670
2019-05-28 22:35:17 -返回值 : success
